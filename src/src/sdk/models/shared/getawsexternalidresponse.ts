/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { AWSExternalID, AWSExternalID$ } from "./awsexternalid";
import * as z from "zod";

/**
 * The GetAWSExternalIDResponse message.
 */
export type GetAWSExternalIDResponse = {
    /**
     * The AWSExternalID message.
     */
    awsExternalID?: AWSExternalID | undefined;
};

/** @internal */
export namespace GetAWSExternalIDResponse$ {
    export type Inbound = {
        AWSExternalID?: AWSExternalID$.Inbound | undefined;
    };

    export const inboundSchema: z.ZodType<GetAWSExternalIDResponse, z.ZodTypeDef, Inbound> = z
        .object({
            AWSExternalID: AWSExternalID$.inboundSchema.optional(),
        })
        .transform((v) => {
            return {
                ...(v.AWSExternalID === undefined ? null : { awsExternalID: v.AWSExternalID }),
            };
        });

    export type Outbound = {
        AWSExternalID?: AWSExternalID$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetAWSExternalIDResponse> = z
        .object({
            awsExternalID: AWSExternalID$.outboundSchema.optional(),
        })
        .transform((v) => {
            return {
                ...(v.awsExternalID === undefined ? null : { AWSExternalID: v.awsExternalID }),
            };
        });
}
