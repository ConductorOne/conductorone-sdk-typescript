/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SessionSettings, SessionSettings$ } from "./sessionsettings";
import * as z from "zod";

/**
 * The UpdateSessionSettingsRequest message.
 */
export type UpdateSessionSettingsRequest = {
    /**
     * The SessionSettings message.
     */
    sessionSettings?: SessionSettings | undefined;
    updateMask?: string | null | undefined;
};

/** @internal */
export namespace UpdateSessionSettingsRequest$ {
    export type Inbound = {
        SessionSettings?: SessionSettings$.Inbound | undefined;
        updateMask?: string | null | undefined;
    };

    export const inboundSchema: z.ZodType<UpdateSessionSettingsRequest, z.ZodTypeDef, Inbound> = z
        .object({
            SessionSettings: SessionSettings$.inboundSchema.optional(),
            updateMask: z.nullable(z.string()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.SessionSettings === undefined
                    ? null
                    : { sessionSettings: v.SessionSettings }),
                ...(v.updateMask === undefined ? null : { updateMask: v.updateMask }),
            };
        });

    export type Outbound = {
        SessionSettings?: SessionSettings$.Outbound | undefined;
        updateMask?: string | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, UpdateSessionSettingsRequest> = z
        .object({
            sessionSettings: SessionSettings$.outboundSchema.optional(),
            updateMask: z.nullable(z.string()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.sessionSettings === undefined
                    ? null
                    : { SessionSettings: v.sessionSettings }),
                ...(v.updateMask === undefined ? null : { updateMask: v.updateMask }),
            };
        });
}
