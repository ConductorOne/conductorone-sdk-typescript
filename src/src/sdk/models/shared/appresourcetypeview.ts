/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { AppResourceType, AppResourceType$ } from "./appresourcetype";
import * as z from "zod";

/**
 * The AppResourceTypeView message.
 */
export type AppResourceTypeView = {
    /**
     * The AppResourceType is referenced by an app entitlement defining its resource types. Commonly things like Group or Role.
     */
    appResourceType?: AppResourceType | undefined;
    /**
     * JSONPATH expression indicating the location of the App object in the  array
     */
    appPath?: string | undefined;
};

/** @internal */
export namespace AppResourceTypeView$ {
    export type Inbound = {
        AppResourceType?: AppResourceType$.Inbound | undefined;
        appPath?: string | undefined;
    };

    export const inboundSchema: z.ZodType<AppResourceTypeView, z.ZodTypeDef, Inbound> = z
        .object({
            AppResourceType: AppResourceType$.inboundSchema.optional(),
            appPath: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.AppResourceType === undefined
                    ? null
                    : { appResourceType: v.AppResourceType }),
                ...(v.appPath === undefined ? null : { appPath: v.appPath }),
            };
        });

    export type Outbound = {
        AppResourceType?: AppResourceType$.Outbound | undefined;
        appPath?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, AppResourceTypeView> = z
        .object({
            appResourceType: AppResourceType$.outboundSchema.optional(),
            appPath: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.appResourceType === undefined
                    ? null
                    : { AppResourceType: v.appResourceType }),
                ...(v.appPath === undefined ? null : { appPath: v.appPath }),
            };
        });
}
