/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

/**
 * The severity field.
 */
export enum Severity {
    Unknown = "UNKNOWN",
    Hint = "HINT",
    Info = "INFO",
    Warning = "WARNING",
    Error = "ERROR",
}

/**
 * The Marker message.
 */
export type Marker = {
    /**
     * The endColumn field.
     */
    endColumn?: number | undefined;
    /**
     * The endLineNumber field.
     */
    endLineNumber?: number | undefined;
    /**
     * The message field.
     */
    message?: string | undefined;
    /**
     * The severity field.
     */
    severity?: Severity | undefined;
    /**
     * The startColumn field.
     */
    startColumn?: number | undefined;
    /**
     * The startLineNumber field.
     */
    startLineNumber?: number | undefined;
};

/** @internal */
export const Severity$ = z.nativeEnum(Severity);

/** @internal */
export namespace Marker$ {
    export type Inbound = {
        endColumn?: number | undefined;
        endLineNumber?: number | undefined;
        message?: string | undefined;
        severity?: Severity | undefined;
        startColumn?: number | undefined;
        startLineNumber?: number | undefined;
    };

    export const inboundSchema: z.ZodType<Marker, z.ZodTypeDef, Inbound> = z
        .object({
            endColumn: z.number().int().optional(),
            endLineNumber: z.number().int().optional(),
            message: z.string().optional(),
            severity: Severity$.optional(),
            startColumn: z.number().int().optional(),
            startLineNumber: z.number().int().optional(),
        })
        .transform((v) => {
            return {
                ...(v.endColumn === undefined ? null : { endColumn: v.endColumn }),
                ...(v.endLineNumber === undefined ? null : { endLineNumber: v.endLineNumber }),
                ...(v.message === undefined ? null : { message: v.message }),
                ...(v.severity === undefined ? null : { severity: v.severity }),
                ...(v.startColumn === undefined ? null : { startColumn: v.startColumn }),
                ...(v.startLineNumber === undefined
                    ? null
                    : { startLineNumber: v.startLineNumber }),
            };
        });

    export type Outbound = {
        endColumn?: number | undefined;
        endLineNumber?: number | undefined;
        message?: string | undefined;
        severity?: Severity | undefined;
        startColumn?: number | undefined;
        startLineNumber?: number | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, Marker> = z
        .object({
            endColumn: z.number().int().optional(),
            endLineNumber: z.number().int().optional(),
            message: z.string().optional(),
            severity: Severity$.optional(),
            startColumn: z.number().int().optional(),
            startLineNumber: z.number().int().optional(),
        })
        .transform((v) => {
            return {
                ...(v.endColumn === undefined ? null : { endColumn: v.endColumn }),
                ...(v.endLineNumber === undefined ? null : { endLineNumber: v.endLineNumber }),
                ...(v.message === undefined ? null : { message: v.message }),
                ...(v.severity === undefined ? null : { severity: v.severity }),
                ...(v.startColumn === undefined ? null : { startColumn: v.startColumn }),
                ...(v.startLineNumber === undefined
                    ? null
                    : { startLineNumber: v.startLineNumber }),
            };
        });
}
