/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

/**
 * The PersonalClientServiceCreateRequest message contains the fields for creating a new personal client.
 */
export type PersonalClientServiceCreateRequest = {
    /**
     * A list of CIDRs to restrict this credential to.
     */
    allowSourceCidr?: Array<string> | null | undefined;
    /**
     * The display name for the new personal client.
     */
    displayName?: string | undefined;
    expires?: string | undefined;
    /**
     * The list of roles to restrict the credential to.
     */
    scopedRoles?: Array<string> | null | undefined;
};

/** @internal */
export namespace PersonalClientServiceCreateRequest$ {
    export type Inbound = {
        allowSourceCidr?: Array<string> | null | undefined;
        displayName?: string | undefined;
        expires?: string | undefined;
        scopedRoles?: Array<string> | null | undefined;
    };

    export const inboundSchema: z.ZodType<
        PersonalClientServiceCreateRequest,
        z.ZodTypeDef,
        Inbound
    > = z
        .object({
            allowSourceCidr: z.nullable(z.array(z.string())).optional(),
            displayName: z.string().optional(),
            expires: z.string().optional(),
            scopedRoles: z.nullable(z.array(z.string())).optional(),
        })
        .transform((v) => {
            return {
                ...(v.allowSourceCidr === undefined
                    ? null
                    : { allowSourceCidr: v.allowSourceCidr }),
                ...(v.displayName === undefined ? null : { displayName: v.displayName }),
                ...(v.expires === undefined ? null : { expires: v.expires }),
                ...(v.scopedRoles === undefined ? null : { scopedRoles: v.scopedRoles }),
            };
        });

    export type Outbound = {
        allowSourceCidr?: Array<string> | null | undefined;
        displayName?: string | undefined;
        expires?: string | undefined;
        scopedRoles?: Array<string> | null | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        PersonalClientServiceCreateRequest
    > = z
        .object({
            allowSourceCidr: z.nullable(z.array(z.string())).optional(),
            displayName: z.string().optional(),
            expires: z.string().optional(),
            scopedRoles: z.nullable(z.array(z.string())).optional(),
        })
        .transform((v) => {
            return {
                ...(v.allowSourceCidr === undefined
                    ? null
                    : { allowSourceCidr: v.allowSourceCidr }),
                ...(v.displayName === undefined ? null : { displayName: v.displayName }),
                ...(v.expires === undefined ? null : { expires: v.expires }),
                ...(v.scopedRoles === undefined ? null : { scopedRoles: v.scopedRoles }),
            };
        });
}
