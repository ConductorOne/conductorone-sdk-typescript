/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

/**
 * This object references an app entitlement's ID and AppID.
 */
export type AppEntitlementReference = {
    /**
     * The ID of the Entitlement.
     */
    appEntitlementId?: string | undefined;
    /**
     * The ID of the App this entitlement belongs to.
     */
    appId?: string | undefined;
};

/** @internal */
export namespace AppEntitlementReference$ {
    export type Inbound = {
        appEntitlementId?: string | undefined;
        appId?: string | undefined;
    };

    export const inboundSchema: z.ZodType<AppEntitlementReference, z.ZodTypeDef, Inbound> = z
        .object({
            appEntitlementId: z.string().optional(),
            appId: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.appEntitlementId === undefined
                    ? null
                    : { appEntitlementId: v.appEntitlementId }),
                ...(v.appId === undefined ? null : { appId: v.appId }),
            };
        });

    export type Outbound = {
        appEntitlementId?: string | undefined;
        appId?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, AppEntitlementReference> = z
        .object({
            appEntitlementId: z.string().optional(),
            appId: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.appEntitlementId === undefined
                    ? null
                    : { appEntitlementId: v.appEntitlementId }),
                ...(v.appId === undefined ? null : { appId: v.appId }),
            };
        });
}
