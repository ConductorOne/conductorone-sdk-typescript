/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { AppResourceView, AppResourceView$ } from "./appresourceview";
import * as z from "zod";

/**
 * Contains an arbitrary serialized message along with a @type that describes the type of the serialized message.
 */
export type AppResourceServiceGetResponseExpanded = {
    /**
     * The type of the serialized message.
     */
    atType?: string | undefined;
    additionalProperties: Record<string, any>;
};

/**
 * The app resource service get response contains the app resource view and array of expanded items indicated by the request's expand mask.
 */
export type AppResourceServiceGetResponse = {
    /**
     * The app resource view returns an app resource with paths for items in the expand mask filled in when this response is returned and a request expand mask has "*" or "app_id" or "resource_type_id".
     */
    appResourceView?: AppResourceView | undefined;
    /**
     * List of serialized related objects.
     */
    expanded?: Array<AppResourceServiceGetResponseExpanded> | null | undefined;
};

/** @internal */
export namespace AppResourceServiceGetResponseExpanded$ {
    export type Inbound = {
        [additionalProperties: string]: unknown;

        "@type"?: string | undefined;
    };

    export const inboundSchema: z.ZodType<
        AppResourceServiceGetResponseExpanded,
        z.ZodTypeDef,
        Inbound
    > = z
        .object({
            "@type": z.string().optional(),
        })
        .catchall(z.any())
        .transform((v) => {
            const { "@type": atType, ...additionalProperties } = v;

            return {
                ...(v["@type"] === undefined ? null : { atType: v["@type"] }),
                additionalProperties,
            };
        });

    export type Outbound = {
        "@type"?: string | undefined;
        [additionalProperties: string]: unknown;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        AppResourceServiceGetResponseExpanded
    > = z
        .object({
            atType: z.string().optional(),
            additionalProperties: z.record(z.any()),
        })
        .transform((v) => {
            return {
                ...v.additionalProperties,
                ...(v.atType === undefined ? null : { "@type": v.atType }),
            };
        });
}

/** @internal */
export namespace AppResourceServiceGetResponse$ {
    export type Inbound = {
        AppResourceView?: AppResourceView$.Inbound | undefined;
        expanded?: Array<AppResourceServiceGetResponseExpanded$.Inbound> | null | undefined;
    };

    export const inboundSchema: z.ZodType<AppResourceServiceGetResponse, z.ZodTypeDef, Inbound> = z
        .object({
            AppResourceView: AppResourceView$.inboundSchema.optional(),
            expanded: z
                .nullable(
                    z.array(z.lazy(() => AppResourceServiceGetResponseExpanded$.inboundSchema))
                )
                .optional(),
        })
        .transform((v) => {
            return {
                ...(v.AppResourceView === undefined
                    ? null
                    : { appResourceView: v.AppResourceView }),
                ...(v.expanded === undefined ? null : { expanded: v.expanded }),
            };
        });

    export type Outbound = {
        AppResourceView?: AppResourceView$.Outbound | undefined;
        expanded?: Array<AppResourceServiceGetResponseExpanded$.Outbound> | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, AppResourceServiceGetResponse> =
        z
            .object({
                appResourceView: AppResourceView$.outboundSchema.optional(),
                expanded: z
                    .nullable(
                        z.array(z.lazy(() => AppResourceServiceGetResponseExpanded$.outboundSchema))
                    )
                    .optional(),
            })
            .transform((v) => {
                return {
                    ...(v.appResourceView === undefined
                        ? null
                        : { AppResourceView: v.appResourceView }),
                    ...(v.expanded === undefined ? null : { expanded: v.expanded }),
                };
            });
}
