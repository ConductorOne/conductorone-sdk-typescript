/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AppUserStatus } from "./appuserstatus";
import { Expose, Transform, Type } from "class-transformer";

/**
 *  The appplication user type. Type can be user, system or service.
 *
 * @remarks
 *
 */
export enum AppUserAppUserType {
    AppUserTypeUnspecified = "APP_USER_TYPE_UNSPECIFIED",
    AppUserTypeUser = "APP_USER_TYPE_USER",
    AppUserTypeServiceAccount = "APP_USER_TYPE_SERVICE_ACCOUNT",
    AppUserTypeSystemAccount = "APP_USER_TYPE_SYSTEM_ACCOUNT",
}

/**
 *  Application User that represents an account in the application.
 *
 * @remarks
 *
 */
export class AppUser extends SpeakeasyBase {
    /**
     *  The satus of the applicaiton user.
     *
     * @remarks
     *
     */
    @SpeakeasyMetadata()
    @Expose({ name: "status" })
    @Type(() => AppUserStatus)
    appUserStatus?: AppUserStatus;

    /**
     *  The ID of the application.
     *
     * @remarks
     *
     */
    @SpeakeasyMetadata()
    @Expose({ name: "appId" })
    appId?: string;

    /**
     *  The appplication user type. Type can be user, system or service.
     *
     * @remarks
     *
     */
    @SpeakeasyMetadata()
    @Expose({ name: "appUserType" })
    appUserType?: AppUserAppUserType;

    @SpeakeasyMetadata()
    @Expose({ name: "createdAt" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    createdAt?: Date;

    @SpeakeasyMetadata()
    @Expose({ name: "deletedAt" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    deletedAt?: Date;

    /**
     *  The display name of the application user.
     *
     * @remarks
     *
     */
    @SpeakeasyMetadata()
    @Expose({ name: "displayName" })
    displayName?: string;

    /**
     *  The email field of the application user.
     *
     * @remarks
     *
     */
    @SpeakeasyMetadata()
    @Expose({ name: "email" })
    email?: string;

    /**
     *  A unique idenditfier of the application user.
     *
     * @remarks
     *
     */
    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id?: string;

    /**
     *  The conductor one user ID of the account owner.
     *
     * @remarks
     *
     */
    @SpeakeasyMetadata()
    @Expose({ name: "identityUserId" })
    identityUserId?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "profile" })
    profile?: Record<string, any>;

    @SpeakeasyMetadata()
    @Expose({ name: "updatedAt" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    updatedAt?: Date;
}
