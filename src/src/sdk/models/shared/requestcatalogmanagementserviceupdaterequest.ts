/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { RequestCatalogExpandMask, RequestCatalogExpandMask$ } from "./requestcatalogexpandmask";
import { RequestCatalogInput, RequestCatalogInput$ } from "./requestcataloginput";
import * as z from "zod";

/**
 * Update a request catalog object by ID.
 */
export type RequestCatalogManagementServiceUpdateRequest = {
    /**
     * The RequestCatalog is used for managing which entitlements are requestable, and who can request them.
     */
    requestCatalog?: RequestCatalogInput | undefined;
    /**
     * The RequestCatalogExpandMask includes the paths in the catalog view to expand in the return value of this call.
     */
    requestCatalogExpandMask?: RequestCatalogExpandMask | undefined;
    updateMask?: string | null | undefined;
};

/** @internal */
export namespace RequestCatalogManagementServiceUpdateRequest$ {
    export type Inbound = {
        RequestCatalog?: RequestCatalogInput$.Inbound | undefined;
        RequestCatalogExpandMask?: RequestCatalogExpandMask$.Inbound | undefined;
        updateMask?: string | null | undefined;
    };

    export const inboundSchema: z.ZodType<
        RequestCatalogManagementServiceUpdateRequest,
        z.ZodTypeDef,
        Inbound
    > = z
        .object({
            RequestCatalog: RequestCatalogInput$.inboundSchema.optional(),
            RequestCatalogExpandMask: RequestCatalogExpandMask$.inboundSchema.optional(),
            updateMask: z.nullable(z.string()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.RequestCatalog === undefined ? null : { requestCatalog: v.RequestCatalog }),
                ...(v.RequestCatalogExpandMask === undefined
                    ? null
                    : { requestCatalogExpandMask: v.RequestCatalogExpandMask }),
                ...(v.updateMask === undefined ? null : { updateMask: v.updateMask }),
            };
        });

    export type Outbound = {
        RequestCatalog?: RequestCatalogInput$.Outbound | undefined;
        RequestCatalogExpandMask?: RequestCatalogExpandMask$.Outbound | undefined;
        updateMask?: string | null | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        RequestCatalogManagementServiceUpdateRequest
    > = z
        .object({
            requestCatalog: RequestCatalogInput$.outboundSchema.optional(),
            requestCatalogExpandMask: RequestCatalogExpandMask$.outboundSchema.optional(),
            updateMask: z.nullable(z.string()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.requestCatalog === undefined ? null : { RequestCatalog: v.requestCatalog }),
                ...(v.requestCatalogExpandMask === undefined
                    ? null
                    : { RequestCatalogExpandMask: v.requestCatalogExpandMask }),
                ...(v.updateMask === undefined ? null : { updateMask: v.updateMask }),
            };
        });
}
