/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { AppEntitlementExpandMask, AppEntitlementExpandMask$ } from "./appentitlementexpandmask";
import * as z from "zod";

/**
 * Search entitlements with this granted status for your signed in user.
 */
export enum GrantedStatus {
    Unspecified = "UNSPECIFIED",
    All = "ALL",
    Granted = "GRANTED",
    NotGranted = "NOT_GRANTED",
}

/**
 * The RequestCatalogSearchServiceSearchEntitlementsRequest searches entitlements, but only ones that are available to you through the open catalogs.
 */
export type RequestCatalogSearchServiceSearchEntitlementsRequest = {
    /**
     * The app entitlement expand mask allows the user to get additional information when getting responses containing app entitlement views.
     */
    appEntitlementExpandMask?: AppEntitlementExpandMask | undefined;
    /**
     * Search entitlements that belong to this app name (exact match).
     */
    appDisplayName?: string | undefined;
    /**
     * Search for entitlements with this alias (exact match).
     */
    entitlementAlias?: string | undefined;
    /**
     * Search entitlements with this granted status for your signed in user.
     */
    grantedStatus?: GrantedStatus | undefined;
    /**
     * Include deleted entitlements
     */
    includeDeleted?: boolean | undefined;
    /**
     * The pageSize where 0 <= pageSize <= 100. Values < 10 will be set to 10. A value of 0 returns the default page size (currently 25)
     */
    pageSize?: number | undefined;
    /**
     * The pageToken field.
     */
    pageToken?: string | undefined;
    /**
     * Fuzzy search the display name of resource types.
     */
    query?: string | undefined;
};

/** @internal */
export const GrantedStatus$ = z.nativeEnum(GrantedStatus);

/** @internal */
export namespace RequestCatalogSearchServiceSearchEntitlementsRequest$ {
    export type Inbound = {
        AppEntitlementExpandMask?: AppEntitlementExpandMask$.Inbound | undefined;
        appDisplayName?: string | undefined;
        entitlementAlias?: string | undefined;
        grantedStatus?: GrantedStatus | undefined;
        includeDeleted?: boolean | undefined;
        pageSize?: number | undefined;
        pageToken?: string | undefined;
        query?: string | undefined;
    };

    export const inboundSchema: z.ZodType<
        RequestCatalogSearchServiceSearchEntitlementsRequest,
        z.ZodTypeDef,
        Inbound
    > = z
        .object({
            AppEntitlementExpandMask: AppEntitlementExpandMask$.inboundSchema.optional(),
            appDisplayName: z.string().optional(),
            entitlementAlias: z.string().optional(),
            grantedStatus: GrantedStatus$.optional(),
            includeDeleted: z.boolean().optional(),
            pageSize: z.number().int().optional(),
            pageToken: z.string().optional(),
            query: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.AppEntitlementExpandMask === undefined
                    ? null
                    : { appEntitlementExpandMask: v.AppEntitlementExpandMask }),
                ...(v.appDisplayName === undefined ? null : { appDisplayName: v.appDisplayName }),
                ...(v.entitlementAlias === undefined
                    ? null
                    : { entitlementAlias: v.entitlementAlias }),
                ...(v.grantedStatus === undefined ? null : { grantedStatus: v.grantedStatus }),
                ...(v.includeDeleted === undefined ? null : { includeDeleted: v.includeDeleted }),
                ...(v.pageSize === undefined ? null : { pageSize: v.pageSize }),
                ...(v.pageToken === undefined ? null : { pageToken: v.pageToken }),
                ...(v.query === undefined ? null : { query: v.query }),
            };
        });

    export type Outbound = {
        AppEntitlementExpandMask?: AppEntitlementExpandMask$.Outbound | undefined;
        appDisplayName?: string | undefined;
        entitlementAlias?: string | undefined;
        grantedStatus?: GrantedStatus | undefined;
        includeDeleted?: boolean | undefined;
        pageSize?: number | undefined;
        pageToken?: string | undefined;
        query?: string | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        RequestCatalogSearchServiceSearchEntitlementsRequest
    > = z
        .object({
            appEntitlementExpandMask: AppEntitlementExpandMask$.outboundSchema.optional(),
            appDisplayName: z.string().optional(),
            entitlementAlias: z.string().optional(),
            grantedStatus: GrantedStatus$.optional(),
            includeDeleted: z.boolean().optional(),
            pageSize: z.number().int().optional(),
            pageToken: z.string().optional(),
            query: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.appEntitlementExpandMask === undefined
                    ? null
                    : { AppEntitlementExpandMask: v.appEntitlementExpandMask }),
                ...(v.appDisplayName === undefined ? null : { appDisplayName: v.appDisplayName }),
                ...(v.entitlementAlias === undefined
                    ? null
                    : { entitlementAlias: v.entitlementAlias }),
                ...(v.grantedStatus === undefined ? null : { grantedStatus: v.grantedStatus }),
                ...(v.includeDeleted === undefined ? null : { includeDeleted: v.includeDeleted }),
                ...(v.pageSize === undefined ? null : { pageSize: v.pageSize }),
                ...(v.pageToken === undefined ? null : { pageToken: v.pageToken }),
                ...(v.query === undefined ? null : { query: v.query }),
            };
        });
}
