/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { AppEntitlement, AppEntitlement$ } from "./appentitlement";
import * as z from "zod";

/**
 * The app entitlement view contains the serialized app entitlement and paths to objects referenced by the app entitlement.
 */
export type AppEntitlementView = {
    /**
     * The app entitlement represents one permission in a downstream App (SAAS) that can be granted. For example, GitHub Read vs GitHub Write.
     *
     * @remarks
     *
     * This message contains a oneof named max_grant_duration. Only a single field of the following list may be set at a time:
     *   - durationUnset
     *   - durationGrant
     *
     */
    appEntitlement?: AppEntitlement | undefined;
    /**
     * JSONPATH expression indicating the location of the App object in the  array.
     */
    appPath?: string | undefined;
    /**
     * JSONPATH expression indicating the location of the App Resource Type object in the expanded array.
     */
    appResourcePath?: string | undefined;
    /**
     * JSONPATH expression indicating the location of the App Resource object in the  array.
     */
    appResourceTypePath?: string | undefined;
};

/** @internal */
export namespace AppEntitlementView$ {
    export type Inbound = {
        AppEntitlement?: AppEntitlement$.Inbound | undefined;
        appPath?: string | undefined;
        appResourcePath?: string | undefined;
        appResourceTypePath?: string | undefined;
    };

    export const inboundSchema: z.ZodType<AppEntitlementView, z.ZodTypeDef, Inbound> = z
        .object({
            AppEntitlement: AppEntitlement$.inboundSchema.optional(),
            appPath: z.string().optional(),
            appResourcePath: z.string().optional(),
            appResourceTypePath: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.AppEntitlement === undefined ? null : { appEntitlement: v.AppEntitlement }),
                ...(v.appPath === undefined ? null : { appPath: v.appPath }),
                ...(v.appResourcePath === undefined
                    ? null
                    : { appResourcePath: v.appResourcePath }),
                ...(v.appResourceTypePath === undefined
                    ? null
                    : { appResourceTypePath: v.appResourceTypePath }),
            };
        });

    export type Outbound = {
        AppEntitlement?: AppEntitlement$.Outbound | undefined;
        appPath?: string | undefined;
        appResourcePath?: string | undefined;
        appResourceTypePath?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, AppEntitlementView> = z
        .object({
            appEntitlement: AppEntitlement$.outboundSchema.optional(),
            appPath: z.string().optional(),
            appResourcePath: z.string().optional(),
            appResourceTypePath: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.appEntitlement === undefined ? null : { AppEntitlement: v.appEntitlement }),
                ...(v.appPath === undefined ? null : { appPath: v.appPath }),
                ...(v.appResourcePath === undefined
                    ? null
                    : { appResourcePath: v.appResourcePath }),
                ...(v.appResourceTypePath === undefined
                    ? null
                    : { appResourceTypePath: v.appResourceTypePath }),
            };
        });
}
