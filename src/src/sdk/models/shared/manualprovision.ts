/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

/**
 * Manual provisioning indicates that a human must intervene for the provisioning of this step.
 */
export type ManualProvision = {
    /**
     * This field indicates a text body of instructions for the provisioner to indicate.
     */
    instructions?: string | undefined;
    /**
     * An array of users that are required to provision during this step.
     */
    userIds?: Array<string> | null | undefined;
};

/** @internal */
export namespace ManualProvision$ {
    export type Inbound = {
        instructions?: string | undefined;
        userIds?: Array<string> | null | undefined;
    };

    export const inboundSchema: z.ZodType<ManualProvision, z.ZodTypeDef, Inbound> = z
        .object({
            instructions: z.string().optional(),
            userIds: z.nullable(z.array(z.string())).optional(),
        })
        .transform((v) => {
            return {
                ...(v.instructions === undefined ? null : { instructions: v.instructions }),
                ...(v.userIds === undefined ? null : { userIds: v.userIds }),
            };
        });

    export type Outbound = {
        instructions?: string | undefined;
        userIds?: Array<string> | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, ManualProvision> = z
        .object({
            instructions: z.string().optional(),
            userIds: z.nullable(z.array(z.string())).optional(),
        })
        .transform((v) => {
            return {
                ...(v.instructions === undefined ? null : { instructions: v.instructions }),
                ...(v.userIds === undefined ? null : { userIds: v.userIds }),
            };
        });
}
