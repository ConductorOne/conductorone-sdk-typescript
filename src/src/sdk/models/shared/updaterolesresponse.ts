/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { Role, Role$ } from "./role";
import * as z from "zod";

/**
 * UpdateRolesResponse is the response message containing the updated role.
 */
export type UpdateRolesResponse = {
    /**
     * Role is a role that can be assigned to a user in ConductorOne.
     */
    role?: Role | undefined;
};

/** @internal */
export namespace UpdateRolesResponse$ {
    export type Inbound = {
        Role?: Role$.Inbound | undefined;
    };

    export const inboundSchema: z.ZodType<UpdateRolesResponse, z.ZodTypeDef, Inbound> = z
        .object({
            Role: Role$.inboundSchema.optional(),
        })
        .transform((v) => {
            return {
                ...(v.Role === undefined ? null : { role: v.Role }),
            };
        });

    export type Outbound = {
        Role?: Role$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, UpdateRolesResponse> = z
        .object({
            role: Role$.outboundSchema.optional(),
        })
        .transform((v) => {
            return {
                ...(v.role === undefined ? null : { Role: v.role }),
            };
        });
}
