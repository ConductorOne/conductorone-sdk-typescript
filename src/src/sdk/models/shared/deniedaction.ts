/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

/**
 * The denied action indicates that the c1.api.policy.v1.ApprovalInstance had an outcome of denied.
 */
export type DeniedAction = {
    deniedAt?: Date | undefined;
    /**
     * The UserID that denied this step.
     */
    userId?: string | undefined;
};

/** @internal */
export namespace DeniedAction$ {
    export type Inbound = {
        deniedAt?: string | undefined;
        userId?: string | undefined;
    };

    export const inboundSchema: z.ZodType<DeniedAction, z.ZodTypeDef, Inbound> = z
        .object({
            deniedAt: z
                .string()
                .datetime({ offset: true })
                .transform((v) => new Date(v))
                .optional(),
            userId: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.deniedAt === undefined ? null : { deniedAt: v.deniedAt }),
                ...(v.userId === undefined ? null : { userId: v.userId }),
            };
        });

    export type Outbound = {
        deniedAt?: string | undefined;
        userId?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, DeniedAction> = z
        .object({
            deniedAt: z
                .date()
                .transform((v) => v.toISOString())
                .optional(),
            userId: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.deniedAt === undefined ? null : { deniedAt: v.deniedAt }),
                ...(v.userId === undefined ? null : { userId: v.userId }),
            };
        });
}
