/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

/**
 * The CreateAttributeValueRequest message.
 */
export type CreateAttributeValueRequest = {
    /**
     * The attributeTypeId field.
     */
    attributeTypeId?: string | undefined;
    /**
     * The value field.
     */
    value?: string | undefined;
};

/** @internal */
export namespace CreateAttributeValueRequest$ {
    export type Inbound = {
        attributeTypeId?: string | undefined;
        value?: string | undefined;
    };

    export const inboundSchema: z.ZodType<CreateAttributeValueRequest, z.ZodTypeDef, Inbound> = z
        .object({
            attributeTypeId: z.string().optional(),
            value: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.attributeTypeId === undefined
                    ? null
                    : { attributeTypeId: v.attributeTypeId }),
                ...(v.value === undefined ? null : { value: v.value }),
            };
        });

    export type Outbound = {
        attributeTypeId?: string | undefined;
        value?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreateAttributeValueRequest> = z
        .object({
            attributeTypeId: z.string().optional(),
            value: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.attributeTypeId === undefined
                    ? null
                    : { attributeTypeId: v.attributeTypeId }),
                ...(v.value === undefined ? null : { value: v.value }),
            };
        });
}
