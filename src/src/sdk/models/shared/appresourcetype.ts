/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

/**
 * The AppResourceType is referenced by an app entitlement defining its resource types. Commonly things like Group or Role.
 */
export type AppResourceType = {
    /**
     * The ID of the app that is associated with the app resource type
     */
    appId?: string | undefined;
    createdAt?: Date | undefined;
    deletedAt?: Date | undefined;
    /**
     * The display name of the app resource type.
     */
    displayName?: string | undefined;
    /**
     * The unique ID for the app resource type.
     */
    id?: string | undefined;
    updatedAt?: Date | undefined;
};

/** @internal */
export namespace AppResourceType$ {
    export type Inbound = {
        appId?: string | undefined;
        createdAt?: string | undefined;
        deletedAt?: string | undefined;
        displayName?: string | undefined;
        id?: string | undefined;
        updatedAt?: string | undefined;
    };

    export const inboundSchema: z.ZodType<AppResourceType, z.ZodTypeDef, Inbound> = z
        .object({
            appId: z.string().optional(),
            createdAt: z
                .string()
                .datetime({ offset: true })
                .transform((v) => new Date(v))
                .optional(),
            deletedAt: z
                .string()
                .datetime({ offset: true })
                .transform((v) => new Date(v))
                .optional(),
            displayName: z.string().optional(),
            id: z.string().optional(),
            updatedAt: z
                .string()
                .datetime({ offset: true })
                .transform((v) => new Date(v))
                .optional(),
        })
        .transform((v) => {
            return {
                ...(v.appId === undefined ? null : { appId: v.appId }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.deletedAt === undefined ? null : { deletedAt: v.deletedAt }),
                ...(v.displayName === undefined ? null : { displayName: v.displayName }),
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
            };
        });

    export type Outbound = {
        appId?: string | undefined;
        createdAt?: string | undefined;
        deletedAt?: string | undefined;
        displayName?: string | undefined;
        id?: string | undefined;
        updatedAt?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, AppResourceType> = z
        .object({
            appId: z.string().optional(),
            createdAt: z
                .date()
                .transform((v) => v.toISOString())
                .optional(),
            deletedAt: z
                .date()
                .transform((v) => v.toISOString())
                .optional(),
            displayName: z.string().optional(),
            id: z.string().optional(),
            updatedAt: z
                .date()
                .transform((v) => v.toISOString())
                .optional(),
        })
        .transform((v) => {
            return {
                ...(v.appId === undefined ? null : { appId: v.appId }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.deletedAt === undefined ? null : { deletedAt: v.deletedAt }),
                ...(v.displayName === undefined ? null : { displayName: v.displayName }),
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
            };
        });
}
