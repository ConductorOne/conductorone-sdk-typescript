/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

/**
 * The application user status field.
 */
export enum Status {
    StatusUnspecified = "STATUS_UNSPECIFIED",
    StatusEnabled = "STATUS_ENABLED",
    StatusDisabled = "STATUS_DISABLED",
    StatusDeleted = "STATUS_DELETED",
}

/**
 * The satus of the applicaiton user.
 */
export type AppUserStatus = {
    /**
     * The details of applicaiton user status.
     */
    details?: string | undefined;
    /**
     * The application user status field.
     */
    status?: Status | undefined;
};

/** @internal */
export const Status$ = z.nativeEnum(Status);

/** @internal */
export namespace AppUserStatus$ {
    export type Inbound = {
        details?: string | undefined;
        status?: Status | undefined;
    };

    export const inboundSchema: z.ZodType<AppUserStatus, z.ZodTypeDef, Inbound> = z
        .object({
            details: z.string().optional(),
            status: Status$.optional(),
        })
        .transform((v) => {
            return {
                ...(v.details === undefined ? null : { details: v.details }),
                ...(v.status === undefined ? null : { status: v.status }),
            };
        });

    export type Outbound = {
        details?: string | undefined;
        status?: Status | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, AppUserStatus> = z
        .object({
            details: z.string().optional(),
            status: Status$.optional(),
        })
        .transform((v) => {
            return {
                ...(v.details === undefined ? null : { details: v.details }),
                ...(v.status === undefined ? null : { status: v.status }),
            };
        });
}
