/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

/**
 * The AppUsageControls object describes some peripheral configuration for an app.
 */
export type AppUsageControls = {
    /**
     * The app that this object belongs to.
     */
    appId?: string | undefined;
    /**
     * Whether or not to notify some if they have access to the app, but has not used it within a configurable amount of time.
     */
    notify?: boolean | undefined;
    /**
     * The duration in days after which we notify users of nonusage.
     */
    notifyAfterDays?: number | undefined;
    /**
     * Whether or not to revoke a grant if they have access to the app, but has not used it within a configurable amount of time.
     */
    revoke?: boolean | undefined;
    /**
     * The duration in days after which we revoke users that have not used that grant.
     */
    revokeAfterDays?: number | undefined;
};

/** @internal */
export namespace AppUsageControls$ {
    export type Inbound = {
        appId?: string | undefined;
        notify?: boolean | undefined;
        notifyAfterDays?: number | undefined;
        revoke?: boolean | undefined;
        revokeAfterDays?: number | undefined;
    };

    export const inboundSchema: z.ZodType<AppUsageControls, z.ZodTypeDef, Inbound> = z
        .object({
            appId: z.string().optional(),
            notify: z.boolean().optional(),
            notifyAfterDays: z.number().int().optional(),
            revoke: z.boolean().optional(),
            revokeAfterDays: z.number().int().optional(),
        })
        .transform((v) => {
            return {
                ...(v.appId === undefined ? null : { appId: v.appId }),
                ...(v.notify === undefined ? null : { notify: v.notify }),
                ...(v.notifyAfterDays === undefined
                    ? null
                    : { notifyAfterDays: v.notifyAfterDays }),
                ...(v.revoke === undefined ? null : { revoke: v.revoke }),
                ...(v.revokeAfterDays === undefined
                    ? null
                    : { revokeAfterDays: v.revokeAfterDays }),
            };
        });

    export type Outbound = {
        appId?: string | undefined;
        notify?: boolean | undefined;
        notifyAfterDays?: number | undefined;
        revoke?: boolean | undefined;
        revokeAfterDays?: number | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, AppUsageControls> = z
        .object({
            appId: z.string().optional(),
            notify: z.boolean().optional(),
            notifyAfterDays: z.number().int().optional(),
            revoke: z.boolean().optional(),
            revokeAfterDays: z.number().int().optional(),
        })
        .transform((v) => {
            return {
                ...(v.appId === undefined ? null : { appId: v.appId }),
                ...(v.notify === undefined ? null : { notify: v.notify }),
                ...(v.notifyAfterDays === undefined
                    ? null
                    : { notifyAfterDays: v.notifyAfterDays }),
                ...(v.revoke === undefined ? null : { revoke: v.revoke }),
                ...(v.revokeAfterDays === undefined
                    ? null
                    : { revokeAfterDays: v.revokeAfterDays }),
            };
        });
}
