/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ConnectorStatus } from "./connectorstatus";
import { OAuth2AuthorizedAs, OAuth2AuthorizedAsInput } from "./oauth2authorizedas";
import { Expose, Transform, Type } from "class-transformer";

/**
 * A Connector is used to sync objects into Apps
 */
export class ConnectorInput extends SpeakeasyBase {
    /**
     * The status field on the connector is used to track the status of the connectors sync, and when syncing last started, completed, or caused the connector to update.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "status" })
    @Type(() => ConnectorStatus)
    connectorStatus?: ConnectorStatus;

    /**
     * OAuth2AuthorizedAs tracks the user that OAuthed with the connector.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "oauthAuthorizedAs" })
    @Type(() => OAuth2AuthorizedAsInput)
    oAuth2AuthorizedAs?: OAuth2AuthorizedAsInput;

    /**
     * The id of the app the connector is associated with.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "appId" })
    appId?: string;

    /**
     * Contains an arbitrary serialized message along with a @type that describes the type of the serialized message.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "config" })
    config?: Record<string, any>;

    /**
     * The description of the connector.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "description" })
    description?: string;

    /**
     * The display name of the connector.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "displayName" })
    displayName?: string;

    /**
     * The id of the connector.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id?: string;

    /**
     * The userIds field is used to define the integration owners of the connector.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "userIds" })
    userIds?: string[];
}

/**
 * A Connector is used to sync objects into Apps
 */
export class Connector extends SpeakeasyBase {
    /**
     * The status field on the connector is used to track the status of the connectors sync, and when syncing last started, completed, or caused the connector to update.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "status" })
    @Type(() => ConnectorStatus)
    connectorStatus?: ConnectorStatus;

    /**
     * OAuth2AuthorizedAs tracks the user that OAuthed with the connector.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "oauthAuthorizedAs" })
    @Type(() => OAuth2AuthorizedAs)
    oAuth2AuthorizedAs?: OAuth2AuthorizedAs;

    /**
     * The id of the app the connector is associated with.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "appId" })
    appId?: string;

    /**
     * The catalogId describes which catalog entry this connector is an instance of. For example, every Okta connector will have the same catalogId indicating it is an Okta connector.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "catalogId" })
    catalogId?: string;

    /**
     * Contains an arbitrary serialized message along with a @type that describes the type of the serialized message.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "config" })
    config?: Record<string, any>;

    @SpeakeasyMetadata()
    @Expose({ name: "createdAt" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    createdAt?: Date;

    @SpeakeasyMetadata()
    @Expose({ name: "deletedAt" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    deletedAt?: Date;

    /**
     * The description of the connector.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "description" })
    description?: string;

    /**
     * The display name of the connector.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "displayName" })
    displayName?: string;

    /**
     * The downloadUrl for a spreadsheet if the connector was created from uploading a file.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "downloadUrl" })
    downloadUrl?: string;

    /**
     * The id of the connector.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "updatedAt" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    updatedAt?: Date;

    /**
     * The userIds field is used to define the integration owners of the connector.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "userIds" })
    userIds?: string[];
}
