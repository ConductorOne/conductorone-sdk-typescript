/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { WebhookSourceApprovalStep, WebhookSourceApprovalStep$ } from "./webhooksourceapprovalstep";
import {
    WebhookSourcePolicyPostAction,
    WebhookSourcePolicyPostAction$,
} from "./webhooksourcepolicypostaction";
import {
    WebhookSourceProvisionStep,
    WebhookSourceProvisionStep$,
} from "./webhooksourceprovisionstep";
import { WebhookSourceTest, WebhookSourceTest$ } from "./webhooksourcetest";
import * as z from "zod";

/**
 * The WebhookSource message.
 *
 * @remarks
 *
 * This message contains a oneof named source. Only a single field of the following list may be set at a time:
 *   - test
 *   - policyPostAction
 *   - approvalStep
 *   - provisionStep
 *
 */
export type WebhookSource = {
    /**
     * The WebhookSourceApprovalStep message.
     */
    webhookSourceApprovalStep?: WebhookSourceApprovalStep | null | undefined;
    /**
     * The WebhookSourcePolicyPostAction message.
     */
    webhookSourcePolicyPostAction?: WebhookSourcePolicyPostAction | null | undefined;
    /**
     * The WebhookSourceProvisionStep message.
     */
    webhookSourceProvisionStep?: WebhookSourceProvisionStep | null | undefined;
    /**
     * The WebhookSourceTest message.
     */
    webhookSourceTest?: WebhookSourceTest | null | undefined;
};

/** @internal */
export namespace WebhookSource$ {
    export type Inbound = {
        WebhookSourceApprovalStep?: WebhookSourceApprovalStep$.Inbound | null | undefined;
        WebhookSourcePolicyPostAction?: WebhookSourcePolicyPostAction$.Inbound | null | undefined;
        WebhookSourceProvisionStep?: WebhookSourceProvisionStep$.Inbound | null | undefined;
        WebhookSourceTest?: WebhookSourceTest$.Inbound | null | undefined;
    };

    export const inboundSchema: z.ZodType<WebhookSource, z.ZodTypeDef, Inbound> = z
        .object({
            WebhookSourceApprovalStep: z
                .nullable(WebhookSourceApprovalStep$.inboundSchema)
                .optional(),
            WebhookSourcePolicyPostAction: z
                .nullable(WebhookSourcePolicyPostAction$.inboundSchema)
                .optional(),
            WebhookSourceProvisionStep: z
                .nullable(WebhookSourceProvisionStep$.inboundSchema)
                .optional(),
            WebhookSourceTest: z.nullable(WebhookSourceTest$.inboundSchema).optional(),
        })
        .transform((v) => {
            return {
                ...(v.WebhookSourceApprovalStep === undefined
                    ? null
                    : { webhookSourceApprovalStep: v.WebhookSourceApprovalStep }),
                ...(v.WebhookSourcePolicyPostAction === undefined
                    ? null
                    : { webhookSourcePolicyPostAction: v.WebhookSourcePolicyPostAction }),
                ...(v.WebhookSourceProvisionStep === undefined
                    ? null
                    : { webhookSourceProvisionStep: v.WebhookSourceProvisionStep }),
                ...(v.WebhookSourceTest === undefined
                    ? null
                    : { webhookSourceTest: v.WebhookSourceTest }),
            };
        });

    export type Outbound = {
        WebhookSourceApprovalStep?: WebhookSourceApprovalStep$.Outbound | null | undefined;
        WebhookSourcePolicyPostAction?: WebhookSourcePolicyPostAction$.Outbound | null | undefined;
        WebhookSourceProvisionStep?: WebhookSourceProvisionStep$.Outbound | null | undefined;
        WebhookSourceTest?: WebhookSourceTest$.Outbound | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, WebhookSource> = z
        .object({
            webhookSourceApprovalStep: z
                .nullable(WebhookSourceApprovalStep$.outboundSchema)
                .optional(),
            webhookSourcePolicyPostAction: z
                .nullable(WebhookSourcePolicyPostAction$.outboundSchema)
                .optional(),
            webhookSourceProvisionStep: z
                .nullable(WebhookSourceProvisionStep$.outboundSchema)
                .optional(),
            webhookSourceTest: z.nullable(WebhookSourceTest$.outboundSchema).optional(),
        })
        .transform((v) => {
            return {
                ...(v.webhookSourceApprovalStep === undefined
                    ? null
                    : { WebhookSourceApprovalStep: v.webhookSourceApprovalStep }),
                ...(v.webhookSourcePolicyPostAction === undefined
                    ? null
                    : { WebhookSourcePolicyPostAction: v.webhookSourcePolicyPostAction }),
                ...(v.webhookSourceProvisionStep === undefined
                    ? null
                    : { WebhookSourceProvisionStep: v.webhookSourceProvisionStep }),
                ...(v.webhookSourceTest === undefined
                    ? null
                    : { WebhookSourceTest: v.webhookSourceTest }),
            };
        });
}
