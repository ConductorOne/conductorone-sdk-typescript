/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

/**
 * A FacetValue message contains count and value of the facet entry.
 */
export type FacetValue = {
    /**
     * The count of the values in this facet.
     */
    count?: string | undefined;
    /**
     * The name of this facet.
     */
    displayName?: string | undefined;
    /**
     * The icon for this facet.
     */
    iconUrl?: string | undefined;
    /**
     * The value of this facet.
     */
    value?: string | undefined;
};

/** @internal */
export namespace FacetValue$ {
    export type Inbound = {
        count?: string | undefined;
        displayName?: string | undefined;
        iconUrl?: string | undefined;
        value?: string | undefined;
    };

    export const inboundSchema: z.ZodType<FacetValue, z.ZodTypeDef, Inbound> = z
        .object({
            count: z.string().optional(),
            displayName: z.string().optional(),
            iconUrl: z.string().optional(),
            value: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.count === undefined ? null : { count: v.count }),
                ...(v.displayName === undefined ? null : { displayName: v.displayName }),
                ...(v.iconUrl === undefined ? null : { iconUrl: v.iconUrl }),
                ...(v.value === undefined ? null : { value: v.value }),
            };
        });

    export type Outbound = {
        count?: string | undefined;
        displayName?: string | undefined;
        iconUrl?: string | undefined;
        value?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, FacetValue> = z
        .object({
            count: z.string().optional(),
            displayName: z.string().optional(),
            iconUrl: z.string().optional(),
            value: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.count === undefined ? null : { count: v.count }),
                ...(v.displayName === undefined ? null : { displayName: v.displayName }),
                ...(v.iconUrl === undefined ? null : { iconUrl: v.iconUrl }),
                ...(v.value === undefined ? null : { value: v.value }),
            };
        });
}
