/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

/**
 * The outcome of a provision instance that is cancelled.
 */
export type CancelledAction = {
    cancelledAt?: Date | undefined;
    /**
     * The userID, usually the system, that cancells a provision instance.
     */
    cancelledByUserId?: string | undefined;
};

/** @internal */
export namespace CancelledAction$ {
    export type Inbound = {
        cancelledAt?: string | undefined;
        cancelledByUserId?: string | undefined;
    };

    export const inboundSchema: z.ZodType<CancelledAction, z.ZodTypeDef, Inbound> = z
        .object({
            cancelledAt: z
                .string()
                .datetime({ offset: true })
                .transform((v) => new Date(v))
                .optional(),
            cancelledByUserId: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.cancelledAt === undefined ? null : { cancelledAt: v.cancelledAt }),
                ...(v.cancelledByUserId === undefined
                    ? null
                    : { cancelledByUserId: v.cancelledByUserId }),
            };
        });

    export type Outbound = {
        cancelledAt?: string | undefined;
        cancelledByUserId?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CancelledAction> = z
        .object({
            cancelledAt: z
                .date()
                .transform((v) => v.toISOString())
                .optional(),
            cancelledByUserId: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.cancelledAt === undefined ? null : { cancelledAt: v.cancelledAt }),
                ...(v.cancelledByUserId === undefined
                    ? null
                    : { cancelledByUserId: v.cancelledByUserId }),
            };
        });
}
