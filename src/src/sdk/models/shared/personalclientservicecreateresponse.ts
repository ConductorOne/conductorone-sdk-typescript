/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { PersonalClient, PersonalClient$ } from "./personalclient";
import * as z from "zod";

/**
 * The PersonalClientServiceCreateResponse message contains the created personal client and client secret.
 */
export type PersonalClientServiceCreateResponse = {
    /**
     * The PersonalClient message contains information about a presonal client credential.
     */
    personalClient?: PersonalClient | undefined;
    /**
     * The client secret that corresponds to the personal client. Make sure to save this, because it cannot be returned or queried again.
     */
    clientSecret?: string | undefined;
};

/** @internal */
export namespace PersonalClientServiceCreateResponse$ {
    export type Inbound = {
        PersonalClient?: PersonalClient$.Inbound | undefined;
        clientSecret?: string | undefined;
    };

    export const inboundSchema: z.ZodType<
        PersonalClientServiceCreateResponse,
        z.ZodTypeDef,
        Inbound
    > = z
        .object({
            PersonalClient: PersonalClient$.inboundSchema.optional(),
            clientSecret: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.PersonalClient === undefined ? null : { personalClient: v.PersonalClient }),
                ...(v.clientSecret === undefined ? null : { clientSecret: v.clientSecret }),
            };
        });

    export type Outbound = {
        PersonalClient?: PersonalClient$.Outbound | undefined;
        clientSecret?: string | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        PersonalClientServiceCreateResponse
    > = z
        .object({
            personalClient: PersonalClient$.outboundSchema.optional(),
            clientSecret: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.personalClient === undefined ? null : { PersonalClient: v.personalClient }),
                ...(v.clientSecret === undefined ? null : { clientSecret: v.clientSecret }),
            };
        });
}
