/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

/**
 * This provision step indicates that a webhook should be called to provision this entitlement.
 */
export type WebhookProvision = {
    /**
     * The ID of the webhook to call for provisioning.
     */
    webhookId?: string | undefined;
};

/** @internal */
export namespace WebhookProvision$ {
    export type Inbound = {
        webhookId?: string | undefined;
    };

    export const inboundSchema: z.ZodType<WebhookProvision, z.ZodTypeDef, Inbound> = z
        .object({
            webhookId: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.webhookId === undefined ? null : { webhookId: v.webhookId }),
            };
        });

    export type Outbound = {
        webhookId?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, WebhookProvision> = z
        .object({
            webhookId: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.webhookId === undefined ? null : { webhookId: v.webhookId }),
            };
        });
}
