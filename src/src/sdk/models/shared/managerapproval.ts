/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * The manager approval object provides configuration options for approval when the target of the approval is the manager of the user in the task.
 */
export class ManagerApproval extends SpeakeasyBase {
    /**
     * Configuration to allow self approval if the target user is their own manager. This may occur if a service account has an identity user and manager specified as the same person.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "allowSelfApproval" })
    allowSelfApproval?: boolean;

    /**
     * The array of users determined to be the manager during processing time.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "assignedUserIds" })
    assignedUserIds?: string[];

    /**
     * Configuration to allow a fallback if no manager is found.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "fallback" })
    fallback?: boolean;

    /**
     * Configuration to specific which users to fallback to if fallback is enabled and no manager is found.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "fallbackUserIds" })
    fallbackUserIds?: string[];
}

/**
 * The manager approval object provides configuration options for approval when the target of the approval is the manager of the user in the task.
 */
export class ManagerApprovalInput extends SpeakeasyBase {}
