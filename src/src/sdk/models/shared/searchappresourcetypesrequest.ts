/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

/**
 * Search for app resources based on some filters.
 */
export type SearchAppResourceTypesRequest = {
    /**
     * A list of app IDs to restrict the search by.
     */
    appIds?: Array<string> | null | undefined;
    /**
     * A list of app user IDs to restrict the search by.
     */
    appUserIds?: Array<string> | null | undefined;
    /**
     * A list of resource type IDs to exclude from the search.
     */
    excludeResourceTypeIds?: Array<string> | null | undefined;
    /**
     * A list of resource type trait IDs to exclude from the search.
     */
    excludeResourceTypeTraitIds?: Array<string> | null | undefined;
    /**
     * The pageSize where 10 <= pageSize <= 100, default 25.
     */
    pageSize?: number | undefined;
    /**
     * The pageToken field.
     */
    pageToken?: string | undefined;
    /**
     * Fuzzy search the display name of resource types.
     */
    query?: string | undefined;
    /**
     * A list of resource type IDs to restrict the search by.
     */
    resourceTypeIds?: Array<string> | null | undefined;
    /**
     * A list of resource type trait IDs to restrict the search by.
     */
    resourceTypeTraitIds?: Array<string> | null | undefined;
};

/** @internal */
export namespace SearchAppResourceTypesRequest$ {
    export type Inbound = {
        appIds?: Array<string> | null | undefined;
        appUserIds?: Array<string> | null | undefined;
        excludeResourceTypeIds?: Array<string> | null | undefined;
        excludeResourceTypeTraitIds?: Array<string> | null | undefined;
        pageSize?: number | undefined;
        pageToken?: string | undefined;
        query?: string | undefined;
        resourceTypeIds?: Array<string> | null | undefined;
        resourceTypeTraitIds?: Array<string> | null | undefined;
    };

    export const inboundSchema: z.ZodType<SearchAppResourceTypesRequest, z.ZodTypeDef, Inbound> = z
        .object({
            appIds: z.nullable(z.array(z.string())).optional(),
            appUserIds: z.nullable(z.array(z.string())).optional(),
            excludeResourceTypeIds: z.nullable(z.array(z.string())).optional(),
            excludeResourceTypeTraitIds: z.nullable(z.array(z.string())).optional(),
            pageSize: z.number().int().optional(),
            pageToken: z.string().optional(),
            query: z.string().optional(),
            resourceTypeIds: z.nullable(z.array(z.string())).optional(),
            resourceTypeTraitIds: z.nullable(z.array(z.string())).optional(),
        })
        .transform((v) => {
            return {
                ...(v.appIds === undefined ? null : { appIds: v.appIds }),
                ...(v.appUserIds === undefined ? null : { appUserIds: v.appUserIds }),
                ...(v.excludeResourceTypeIds === undefined
                    ? null
                    : { excludeResourceTypeIds: v.excludeResourceTypeIds }),
                ...(v.excludeResourceTypeTraitIds === undefined
                    ? null
                    : { excludeResourceTypeTraitIds: v.excludeResourceTypeTraitIds }),
                ...(v.pageSize === undefined ? null : { pageSize: v.pageSize }),
                ...(v.pageToken === undefined ? null : { pageToken: v.pageToken }),
                ...(v.query === undefined ? null : { query: v.query }),
                ...(v.resourceTypeIds === undefined
                    ? null
                    : { resourceTypeIds: v.resourceTypeIds }),
                ...(v.resourceTypeTraitIds === undefined
                    ? null
                    : { resourceTypeTraitIds: v.resourceTypeTraitIds }),
            };
        });

    export type Outbound = {
        appIds?: Array<string> | null | undefined;
        appUserIds?: Array<string> | null | undefined;
        excludeResourceTypeIds?: Array<string> | null | undefined;
        excludeResourceTypeTraitIds?: Array<string> | null | undefined;
        pageSize?: number | undefined;
        pageToken?: string | undefined;
        query?: string | undefined;
        resourceTypeIds?: Array<string> | null | undefined;
        resourceTypeTraitIds?: Array<string> | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, SearchAppResourceTypesRequest> =
        z
            .object({
                appIds: z.nullable(z.array(z.string())).optional(),
                appUserIds: z.nullable(z.array(z.string())).optional(),
                excludeResourceTypeIds: z.nullable(z.array(z.string())).optional(),
                excludeResourceTypeTraitIds: z.nullable(z.array(z.string())).optional(),
                pageSize: z.number().int().optional(),
                pageToken: z.string().optional(),
                query: z.string().optional(),
                resourceTypeIds: z.nullable(z.array(z.string())).optional(),
                resourceTypeTraitIds: z.nullable(z.array(z.string())).optional(),
            })
            .transform((v) => {
                return {
                    ...(v.appIds === undefined ? null : { appIds: v.appIds }),
                    ...(v.appUserIds === undefined ? null : { appUserIds: v.appUserIds }),
                    ...(v.excludeResourceTypeIds === undefined
                        ? null
                        : { excludeResourceTypeIds: v.excludeResourceTypeIds }),
                    ...(v.excludeResourceTypeTraitIds === undefined
                        ? null
                        : { excludeResourceTypeTraitIds: v.excludeResourceTypeTraitIds }),
                    ...(v.pageSize === undefined ? null : { pageSize: v.pageSize }),
                    ...(v.pageToken === undefined ? null : { pageToken: v.pageToken }),
                    ...(v.query === undefined ? null : { query: v.query }),
                    ...(v.resourceTypeIds === undefined
                        ? null
                        : { resourceTypeIds: v.resourceTypeIds }),
                    ...(v.resourceTypeTraitIds === undefined
                        ? null
                        : { resourceTypeTraitIds: v.resourceTypeTraitIds }),
                };
            });
}
