/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { WebhookInstance, WebhookInstance$ } from "./webhookinstance";
import * as z from "zod";

/**
 * The WebhooksServiceTestResponse message.
 */
export type WebhooksServiceTestResponse = {
    /**
     * The WebhookInstance message.
     */
    webhookInstance?: WebhookInstance | undefined;
};

/** @internal */
export namespace WebhooksServiceTestResponse$ {
    export type Inbound = {
        WebhookInstance?: WebhookInstance$.Inbound | undefined;
    };

    export const inboundSchema: z.ZodType<WebhooksServiceTestResponse, z.ZodTypeDef, Inbound> = z
        .object({
            WebhookInstance: WebhookInstance$.inboundSchema.optional(),
        })
        .transform((v) => {
            return {
                ...(v.WebhookInstance === undefined
                    ? null
                    : { webhookInstance: v.WebhookInstance }),
            };
        });

    export type Outbound = {
        WebhookInstance?: WebhookInstance$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, WebhooksServiceTestResponse> = z
        .object({
            webhookInstance: WebhookInstance$.outboundSchema.optional(),
        })
        .transform((v) => {
            return {
                ...(v.webhookInstance === undefined
                    ? null
                    : { WebhookInstance: v.webhookInstance }),
            };
        });
}
