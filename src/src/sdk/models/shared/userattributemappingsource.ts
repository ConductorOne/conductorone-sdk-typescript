/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

/**
 * The UserAttributeMappingSource message.
 */
export type UserAttributeMappingSource = {
    /**
     * The appId field.
     */
    appId?: string | undefined;
    /**
     * The appUserId field.
     */
    appUserId?: string | undefined;
    /**
     * The appUserProfileAttributeKey field.
     */
    appUserProfileAttributeKey?: string | undefined;
    /**
     * The userAttributeMappingId field.
     */
    userAttributeMappingId?: string | undefined;
    /**
     * The value field.
     */
    value?: string | undefined;
};

/** @internal */
export namespace UserAttributeMappingSource$ {
    export type Inbound = {
        appId?: string | undefined;
        appUserId?: string | undefined;
        appUserProfileAttributeKey?: string | undefined;
        userAttributeMappingId?: string | undefined;
        value?: string | undefined;
    };

    export const inboundSchema: z.ZodType<UserAttributeMappingSource, z.ZodTypeDef, Inbound> = z
        .object({
            appId: z.string().optional(),
            appUserId: z.string().optional(),
            appUserProfileAttributeKey: z.string().optional(),
            userAttributeMappingId: z.string().optional(),
            value: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.appId === undefined ? null : { appId: v.appId }),
                ...(v.appUserId === undefined ? null : { appUserId: v.appUserId }),
                ...(v.appUserProfileAttributeKey === undefined
                    ? null
                    : { appUserProfileAttributeKey: v.appUserProfileAttributeKey }),
                ...(v.userAttributeMappingId === undefined
                    ? null
                    : { userAttributeMappingId: v.userAttributeMappingId }),
                ...(v.value === undefined ? null : { value: v.value }),
            };
        });

    export type Outbound = {
        appId?: string | undefined;
        appUserId?: string | undefined;
        appUserProfileAttributeKey?: string | undefined;
        userAttributeMappingId?: string | undefined;
        value?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, UserAttributeMappingSource> = z
        .object({
            appId: z.string().optional(),
            appUserId: z.string().optional(),
            appUserProfileAttributeKey: z.string().optional(),
            userAttributeMappingId: z.string().optional(),
            value: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.appId === undefined ? null : { appId: v.appId }),
                ...(v.appUserId === undefined ? null : { appUserId: v.appUserId }),
                ...(v.appUserProfileAttributeKey === undefined
                    ? null
                    : { appUserProfileAttributeKey: v.appUserProfileAttributeKey }),
                ...(v.userAttributeMappingId === undefined
                    ? null
                    : { userAttributeMappingId: v.userAttributeMappingId }),
                ...(v.value === undefined ? null : { value: v.value }),
            };
        });
}
