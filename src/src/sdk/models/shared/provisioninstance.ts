/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { CancelledAction } from "./cancelledaction";
import { CompletedAction } from "./completedaction";
import { ErroredAction } from "./erroredaction";
import { Provision } from "./provision";
import { ReassignedByErrorAction } from "./reassignedbyerroraction";
import { Expose, Type } from "class-transformer";

/**
 *  This property indicates the current state of this step.
 *
 * @remarks
 *
 */
export enum ProvisionInstanceState {
    ProvisionInstanceStateUnspecified = "PROVISION_INSTANCE_STATE_UNSPECIFIED",
    ProvisionInstanceStateInit = "PROVISION_INSTANCE_STATE_INIT",
    ProvisionInstanceStateCreateConnectorActionsForTarget = "PROVISION_INSTANCE_STATE_CREATE_CONNECTOR_ACTIONS_FOR_TARGET",
    ProvisionInstanceStateSendingNotifications = "PROVISION_INSTANCE_STATE_SENDING_NOTIFICATIONS",
    ProvisionInstanceStateWaiting = "PROVISION_INSTANCE_STATE_WAITING",
    ProvisionInstanceStateDone = "PROVISION_INSTANCE_STATE_DONE",
}

/**
 *  A provision instance describes the specific configuration of an executing provision policy step including actions taken and notification id.
 *
 * @remarks
 *
 *
 * This message contains a oneof named outcome. Only a single field of the following list may be set at a time:
 *   - completed
 *   - cancelled
 *   - errored
 *   - reassignedByError
 *
 */
export class ProvisionInstance extends SpeakeasyBase {
    /**
     *  The outcome of a provision instance that is cancelled.
     *
     * @remarks
     *
     */
    @SpeakeasyMetadata()
    @Expose({ name: "cancelled" })
    @Type(() => CancelledAction)
    cancelledAction?: CancelledAction;

    /**
     *  The outcome of a provision instance that has been completed succesfully.
     *
     * @remarks
     *
     */
    @SpeakeasyMetadata()
    @Expose({ name: "completed" })
    @Type(() => CompletedAction)
    completedAction?: CompletedAction;

    /**
     *  The outcome of a provision instance that has errored.
     *
     * @remarks
     *
     */
    @SpeakeasyMetadata()
    @Expose({ name: "errored" })
    @Type(() => ErroredAction)
    erroredAction?: ErroredAction;

    /**
     *  The provision step references a provision policy for this step.
     *
     * @remarks
     *
     */
    @SpeakeasyMetadata()
    @Expose({ name: "provision" })
    @Type(() => Provision)
    provision?: Provision;

    /**
     *  The ReassignedByErrorAction object describes the outcome of a policy step that has been reassigned because it had an error provisioning.
     *
     * @remarks
     *
     */
    @SpeakeasyMetadata()
    @Expose({ name: "reassignedByError" })
    @Type(() => ReassignedByErrorAction)
    reassignedByErrorAction?: ReassignedByErrorAction;

    /**
     *  This indicates the notification id for this step.
     *
     * @remarks
     *
     */
    @SpeakeasyMetadata()
    @Expose({ name: "notificationId" })
    notificationId?: string;

    /**
     *  This property indicates the current state of this step.
     *
     * @remarks
     *
     */
    @SpeakeasyMetadata()
    @Expose({ name: "state" })
    state?: ProvisionInstanceState;
}
