/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

/**
 * App owner approval provides the configuration for an approval step when the app owner is the target.
 */
export type AppOwnerApproval = {
    /**
     * Configuration that allows a user to self approve if they are an app owner during this approval step.
     */
    allowSelfApproval?: boolean | undefined;
};

/** @internal */
export namespace AppOwnerApproval$ {
    export type Inbound = {
        allowSelfApproval?: boolean | undefined;
    };

    export const inboundSchema: z.ZodType<AppOwnerApproval, z.ZodTypeDef, Inbound> = z
        .object({
            allowSelfApproval: z.boolean().optional(),
        })
        .transform((v) => {
            return {
                ...(v.allowSelfApproval === undefined
                    ? null
                    : { allowSelfApproval: v.allowSelfApproval }),
            };
        });

    export type Outbound = {
        allowSelfApproval?: boolean | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, AppOwnerApproval> = z
        .object({
            allowSelfApproval: z.boolean().optional(),
        })
        .transform((v) => {
            return {
                ...(v.allowSelfApproval === undefined
                    ? null
                    : { allowSelfApproval: v.allowSelfApproval }),
            };
        });
}
