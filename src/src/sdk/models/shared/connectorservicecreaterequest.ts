/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ConnectorExpandMask } from "./connectorexpandmask";
import { Expose, Type } from "class-transformer";

/**
 * The ConnectorServiceCreateRequest message.
 */
export class ConnectorServiceCreateRequest extends SpeakeasyBase {
    /**
     *  The ConnectorExpandMask is used to expand related objects on a connector.
     *
     * @remarks
     *
     */
    @SpeakeasyMetadata()
    @Expose({ name: "expandMask" })
    @Type(() => ConnectorExpandMask)
    connectorExpandMask?: ConnectorExpandMask;

    /**
     * The catalogId field.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "catalogId" })
    catalogId?: string;

    /**
     * Contains an arbitrary serialized message along with a @type that describes the type of the serialized message.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "config" })
    config?: Record<string, any>;

    /**
     * The description field.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "description" })
    description?: string;

    /**
     * The userIds field.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "userIds" })
    userIds?: string[];
}
