/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { RequestCatalog, RequestCatalog$ } from "./requestcatalog";
import * as z from "zod";

/**
 * The request catalog view contains the serialized request catalog and paths to objects referenced by the request catalog.
 */
export type RequestCatalogView = {
    /**
     * The RequestCatalog is used for managing which entitlements are requestable, and who can request them.
     */
    requestCatalog?: RequestCatalog | undefined;
    /**
     * JSONPATH expression indicating the location of the access entitlement objects, that the request catalog allows users to request, in the array.
     */
    accessEntitlementsPath?: string | undefined;
    /**
     * JSONPATH expression indicating the location of the App object in the array.
     */
    appPaths?: string | undefined;
    /**
     * JSONPATH expression indicating the location of the User object, that created the request catalog, in the array.
     */
    createdByUserPath?: string | undefined;
};

/** @internal */
export namespace RequestCatalogView$ {
    export type Inbound = {
        RequestCatalog?: RequestCatalog$.Inbound | undefined;
        accessEntitlementsPath?: string | undefined;
        appPaths?: string | undefined;
        createdByUserPath?: string | undefined;
    };

    export const inboundSchema: z.ZodType<RequestCatalogView, z.ZodTypeDef, Inbound> = z
        .object({
            RequestCatalog: RequestCatalog$.inboundSchema.optional(),
            accessEntitlementsPath: z.string().optional(),
            appPaths: z.string().optional(),
            createdByUserPath: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.RequestCatalog === undefined ? null : { requestCatalog: v.RequestCatalog }),
                ...(v.accessEntitlementsPath === undefined
                    ? null
                    : { accessEntitlementsPath: v.accessEntitlementsPath }),
                ...(v.appPaths === undefined ? null : { appPaths: v.appPaths }),
                ...(v.createdByUserPath === undefined
                    ? null
                    : { createdByUserPath: v.createdByUserPath }),
            };
        });

    export type Outbound = {
        RequestCatalog?: RequestCatalog$.Outbound | undefined;
        accessEntitlementsPath?: string | undefined;
        appPaths?: string | undefined;
        createdByUserPath?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, RequestCatalogView> = z
        .object({
            requestCatalog: RequestCatalog$.outboundSchema.optional(),
            accessEntitlementsPath: z.string().optional(),
            appPaths: z.string().optional(),
            createdByUserPath: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.requestCatalog === undefined ? null : { RequestCatalog: v.requestCatalog }),
                ...(v.accessEntitlementsPath === undefined
                    ? null
                    : { accessEntitlementsPath: v.accessEntitlementsPath }),
                ...(v.appPaths === undefined ? null : { appPaths: v.appPaths }),
                ...(v.createdByUserPath === undefined
                    ? null
                    : { createdByUserPath: v.createdByUserPath }),
            };
        });
}
