/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

/**
 * This policy step indicates that a ticket should have an approved outcome. This is a terminal approval state and is used to explicitly define the end of approval steps.
 *
 * @remarks
 *  The instance is just a marker for it being copied into an active policy.
 */
export type AcceptInstance = {
    /**
     * An optional message to include in the comments when a task is automatically accepted.
     */
    acceptMessage?: string | undefined;
};

/** @internal */
export namespace AcceptInstance$ {
    export type Inbound = {
        acceptMessage?: string | undefined;
    };

    export const inboundSchema: z.ZodType<AcceptInstance, z.ZodTypeDef, Inbound> = z
        .object({
            acceptMessage: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.acceptMessage === undefined ? null : { acceptMessage: v.acceptMessage }),
            };
        });

    export type Outbound = {
        acceptMessage?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, AcceptInstance> = z
        .object({
            acceptMessage: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.acceptMessage === undefined ? null : { acceptMessage: v.acceptMessage }),
            };
        });
}
