/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as shared from "../shared";
import * as z from "zod";

export type C1ApiAppV1AppEntitlementsListForAppResourceRequest = {
    appId: string;
    appResourceId: string;
    appResourceTypeId: string;
    pageSize?: number | undefined;
    pageToken?: string | undefined;
};

export type C1ApiAppV1AppEntitlementsListForAppResourceResponse = {
    /**
     * HTTP response content type for this operation
     */
    contentType: string;
    /**
     * The ListAppEntitlementsResponse message contains a list of results and a nextPageToken if applicable.
     */
    listAppEntitlementsResponse?: shared.ListAppEntitlementsResponse | undefined;
    /**
     * HTTP response status code for this operation
     */
    statusCode: number;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse: Response;
};

/** @internal */
export namespace C1ApiAppV1AppEntitlementsListForAppResourceRequest$ {
    export type Inbound = {
        app_id: string;
        app_resource_id: string;
        app_resource_type_id: string;
        page_size?: number | undefined;
        page_token?: string | undefined;
    };

    export const inboundSchema: z.ZodType<
        C1ApiAppV1AppEntitlementsListForAppResourceRequest,
        z.ZodTypeDef,
        Inbound
    > = z
        .object({
            app_id: z.string(),
            app_resource_id: z.string(),
            app_resource_type_id: z.string(),
            page_size: z.number().int().optional(),
            page_token: z.string().optional(),
        })
        .transform((v) => {
            return {
                appId: v.app_id,
                appResourceId: v.app_resource_id,
                appResourceTypeId: v.app_resource_type_id,
                ...(v.page_size === undefined ? null : { pageSize: v.page_size }),
                ...(v.page_token === undefined ? null : { pageToken: v.page_token }),
            };
        });

    export type Outbound = {
        app_id: string;
        app_resource_id: string;
        app_resource_type_id: string;
        page_size?: number | undefined;
        page_token?: string | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        C1ApiAppV1AppEntitlementsListForAppResourceRequest
    > = z
        .object({
            appId: z.string(),
            appResourceId: z.string(),
            appResourceTypeId: z.string(),
            pageSize: z.number().int().optional(),
            pageToken: z.string().optional(),
        })
        .transform((v) => {
            return {
                app_id: v.appId,
                app_resource_id: v.appResourceId,
                app_resource_type_id: v.appResourceTypeId,
                ...(v.pageSize === undefined ? null : { page_size: v.pageSize }),
                ...(v.pageToken === undefined ? null : { page_token: v.pageToken }),
            };
        });
}

/** @internal */
export namespace C1ApiAppV1AppEntitlementsListForAppResourceResponse$ {
    export type Inbound = {
        ContentType: string;
        ListAppEntitlementsResponse?: shared.ListAppEntitlementsResponse$.Inbound | undefined;
        StatusCode: number;
        RawResponse: Response;
    };

    export const inboundSchema: z.ZodType<
        C1ApiAppV1AppEntitlementsListForAppResourceResponse,
        z.ZodTypeDef,
        Inbound
    > = z
        .object({
            ContentType: z.string(),
            ListAppEntitlementsResponse:
                shared.ListAppEntitlementsResponse$.inboundSchema.optional(),
            StatusCode: z.number().int(),
            RawResponse: z.instanceof(Response),
        })
        .transform((v) => {
            return {
                contentType: v.ContentType,
                ...(v.ListAppEntitlementsResponse === undefined
                    ? null
                    : { listAppEntitlementsResponse: v.ListAppEntitlementsResponse }),
                statusCode: v.StatusCode,
                rawResponse: v.RawResponse,
            };
        });

    export type Outbound = {
        ContentType: string;
        ListAppEntitlementsResponse?: shared.ListAppEntitlementsResponse$.Outbound | undefined;
        StatusCode: number;
        RawResponse: never;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        C1ApiAppV1AppEntitlementsListForAppResourceResponse
    > = z
        .object({
            contentType: z.string(),
            listAppEntitlementsResponse:
                shared.ListAppEntitlementsResponse$.outboundSchema.optional(),
            statusCode: z.number().int(),
            rawResponse: z.instanceof(Response).transform(() => {
                throw new Error("Response cannot be serialized");
            }),
        })
        .transform((v) => {
            return {
                ContentType: v.contentType,
                ...(v.listAppEntitlementsResponse === undefined
                    ? null
                    : { ListAppEntitlementsResponse: v.listAppEntitlementsResponse }),
                StatusCode: v.statusCode,
                RawResponse: v.rawResponse,
            };
        });
}
