/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as shared from "../shared";
import * as z from "zod";

export type C1ApiIamV1RolesUpdateRequest = {
    updateRoleRequest?: shared.UpdateRoleRequest | undefined;
    roleId: string;
};

export type C1ApiIamV1RolesUpdateResponse = {
    /**
     * HTTP response content type for this operation
     */
    contentType: string;
    /**
     * HTTP response status code for this operation
     */
    statusCode: number;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse: Response;
    /**
     * UpdateRolesResponse is the response message containing the updated role.
     */
    updateRolesResponse?: shared.UpdateRolesResponse | undefined;
};

/** @internal */
export namespace C1ApiIamV1RolesUpdateRequest$ {
    export type Inbound = {
        UpdateRoleRequest?: shared.UpdateRoleRequest$.Inbound | undefined;
        role_id: string;
    };

    export const inboundSchema: z.ZodType<C1ApiIamV1RolesUpdateRequest, z.ZodTypeDef, Inbound> = z
        .object({
            UpdateRoleRequest: shared.UpdateRoleRequest$.inboundSchema.optional(),
            role_id: z.string(),
        })
        .transform((v) => {
            return {
                ...(v.UpdateRoleRequest === undefined
                    ? null
                    : { updateRoleRequest: v.UpdateRoleRequest }),
                roleId: v.role_id,
            };
        });

    export type Outbound = {
        UpdateRoleRequest?: shared.UpdateRoleRequest$.Outbound | undefined;
        role_id: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, C1ApiIamV1RolesUpdateRequest> = z
        .object({
            updateRoleRequest: shared.UpdateRoleRequest$.outboundSchema.optional(),
            roleId: z.string(),
        })
        .transform((v) => {
            return {
                ...(v.updateRoleRequest === undefined
                    ? null
                    : { UpdateRoleRequest: v.updateRoleRequest }),
                role_id: v.roleId,
            };
        });
}

/** @internal */
export namespace C1ApiIamV1RolesUpdateResponse$ {
    export type Inbound = {
        ContentType: string;
        StatusCode: number;
        RawResponse: Response;
        UpdateRolesResponse?: shared.UpdateRolesResponse$.Inbound | undefined;
    };

    export const inboundSchema: z.ZodType<C1ApiIamV1RolesUpdateResponse, z.ZodTypeDef, Inbound> = z
        .object({
            ContentType: z.string(),
            StatusCode: z.number().int(),
            RawResponse: z.instanceof(Response),
            UpdateRolesResponse: shared.UpdateRolesResponse$.inboundSchema.optional(),
        })
        .transform((v) => {
            return {
                contentType: v.ContentType,
                statusCode: v.StatusCode,
                rawResponse: v.RawResponse,
                ...(v.UpdateRolesResponse === undefined
                    ? null
                    : { updateRolesResponse: v.UpdateRolesResponse }),
            };
        });

    export type Outbound = {
        ContentType: string;
        StatusCode: number;
        RawResponse: never;
        UpdateRolesResponse?: shared.UpdateRolesResponse$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, C1ApiIamV1RolesUpdateResponse> =
        z
            .object({
                contentType: z.string(),
                statusCode: z.number().int(),
                rawResponse: z.instanceof(Response).transform(() => {
                    throw new Error("Response cannot be serialized");
                }),
                updateRolesResponse: shared.UpdateRolesResponse$.outboundSchema.optional(),
            })
            .transform((v) => {
                return {
                    ContentType: v.contentType,
                    StatusCode: v.statusCode,
                    RawResponse: v.rawResponse,
                    ...(v.updateRolesResponse === undefined
                        ? null
                        : { UpdateRolesResponse: v.updateRolesResponse }),
                };
            });
}
