/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as shared from "../shared";
import * as z from "zod";

export type C1ApiTaskV1TaskActionsServiceRestartRequest = {
    taskActionsServiceRestartRequest?: shared.TaskActionsServiceRestartRequest | undefined;
    taskId: string;
};

export type C1ApiTaskV1TaskActionsServiceRestartResponse = {
    /**
     * HTTP response content type for this operation
     */
    contentType: string;
    /**
     * HTTP response status code for this operation
     */
    statusCode: number;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse: Response;
    /**
     * Successful response
     */
    taskActionsServiceRestartResponse?: shared.TaskActionsServiceRestartResponse | undefined;
};

/** @internal */
export namespace C1ApiTaskV1TaskActionsServiceRestartRequest$ {
    export type Inbound = {
        TaskActionsServiceRestartRequest?:
            | shared.TaskActionsServiceRestartRequest$.Inbound
            | undefined;
        task_id: string;
    };

    export const inboundSchema: z.ZodType<
        C1ApiTaskV1TaskActionsServiceRestartRequest,
        z.ZodTypeDef,
        Inbound
    > = z
        .object({
            TaskActionsServiceRestartRequest:
                shared.TaskActionsServiceRestartRequest$.inboundSchema.optional(),
            task_id: z.string(),
        })
        .transform((v) => {
            return {
                ...(v.TaskActionsServiceRestartRequest === undefined
                    ? null
                    : { taskActionsServiceRestartRequest: v.TaskActionsServiceRestartRequest }),
                taskId: v.task_id,
            };
        });

    export type Outbound = {
        TaskActionsServiceRestartRequest?:
            | shared.TaskActionsServiceRestartRequest$.Outbound
            | undefined;
        task_id: string;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        C1ApiTaskV1TaskActionsServiceRestartRequest
    > = z
        .object({
            taskActionsServiceRestartRequest:
                shared.TaskActionsServiceRestartRequest$.outboundSchema.optional(),
            taskId: z.string(),
        })
        .transform((v) => {
            return {
                ...(v.taskActionsServiceRestartRequest === undefined
                    ? null
                    : { TaskActionsServiceRestartRequest: v.taskActionsServiceRestartRequest }),
                task_id: v.taskId,
            };
        });
}

/** @internal */
export namespace C1ApiTaskV1TaskActionsServiceRestartResponse$ {
    export type Inbound = {
        ContentType: string;
        StatusCode: number;
        RawResponse: Response;
        TaskActionsServiceRestartResponse?:
            | shared.TaskActionsServiceRestartResponse$.Inbound
            | undefined;
    };

    export const inboundSchema: z.ZodType<
        C1ApiTaskV1TaskActionsServiceRestartResponse,
        z.ZodTypeDef,
        Inbound
    > = z
        .object({
            ContentType: z.string(),
            StatusCode: z.number().int(),
            RawResponse: z.instanceof(Response),
            TaskActionsServiceRestartResponse:
                shared.TaskActionsServiceRestartResponse$.inboundSchema.optional(),
        })
        .transform((v) => {
            return {
                contentType: v.ContentType,
                statusCode: v.StatusCode,
                rawResponse: v.RawResponse,
                ...(v.TaskActionsServiceRestartResponse === undefined
                    ? null
                    : { taskActionsServiceRestartResponse: v.TaskActionsServiceRestartResponse }),
            };
        });

    export type Outbound = {
        ContentType: string;
        StatusCode: number;
        RawResponse: never;
        TaskActionsServiceRestartResponse?:
            | shared.TaskActionsServiceRestartResponse$.Outbound
            | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        C1ApiTaskV1TaskActionsServiceRestartResponse
    > = z
        .object({
            contentType: z.string(),
            statusCode: z.number().int(),
            rawResponse: z.instanceof(Response).transform(() => {
                throw new Error("Response cannot be serialized");
            }),
            taskActionsServiceRestartResponse:
                shared.TaskActionsServiceRestartResponse$.outboundSchema.optional(),
        })
        .transform((v) => {
            return {
                ContentType: v.contentType,
                StatusCode: v.statusCode,
                RawResponse: v.rawResponse,
                ...(v.taskActionsServiceRestartResponse === undefined
                    ? null
                    : { TaskActionsServiceRestartResponse: v.taskActionsServiceRestartResponse }),
            };
        });
}
