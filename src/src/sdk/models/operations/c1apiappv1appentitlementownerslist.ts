/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as shared from "../shared";
import * as z from "zod";

export type C1ApiAppV1AppEntitlementOwnersListRequest = {
    appId: string;
    entitlementId: string;
    pageSize?: number | undefined;
    pageToken?: string | undefined;
};

export type C1ApiAppV1AppEntitlementOwnersListResponse = {
    /**
     * HTTP response content type for this operation
     */
    contentType: string;
    /**
     * The response message for listing app entitlement owners.
     */
    listAppEntitlementOwnersResponse?: shared.ListAppEntitlementOwnersResponse | undefined;
    /**
     * HTTP response status code for this operation
     */
    statusCode: number;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse: Response;
};

/** @internal */
export namespace C1ApiAppV1AppEntitlementOwnersListRequest$ {
    export type Inbound = {
        app_id: string;
        entitlement_id: string;
        page_size?: number | undefined;
        page_token?: string | undefined;
    };

    export const inboundSchema: z.ZodType<
        C1ApiAppV1AppEntitlementOwnersListRequest,
        z.ZodTypeDef,
        Inbound
    > = z
        .object({
            app_id: z.string(),
            entitlement_id: z.string(),
            page_size: z.number().int().optional(),
            page_token: z.string().optional(),
        })
        .transform((v) => {
            return {
                appId: v.app_id,
                entitlementId: v.entitlement_id,
                ...(v.page_size === undefined ? null : { pageSize: v.page_size }),
                ...(v.page_token === undefined ? null : { pageToken: v.page_token }),
            };
        });

    export type Outbound = {
        app_id: string;
        entitlement_id: string;
        page_size?: number | undefined;
        page_token?: string | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        C1ApiAppV1AppEntitlementOwnersListRequest
    > = z
        .object({
            appId: z.string(),
            entitlementId: z.string(),
            pageSize: z.number().int().optional(),
            pageToken: z.string().optional(),
        })
        .transform((v) => {
            return {
                app_id: v.appId,
                entitlement_id: v.entitlementId,
                ...(v.pageSize === undefined ? null : { page_size: v.pageSize }),
                ...(v.pageToken === undefined ? null : { page_token: v.pageToken }),
            };
        });
}

/** @internal */
export namespace C1ApiAppV1AppEntitlementOwnersListResponse$ {
    export type Inbound = {
        ContentType: string;
        ListAppEntitlementOwnersResponse?:
            | shared.ListAppEntitlementOwnersResponse$.Inbound
            | undefined;
        StatusCode: number;
        RawResponse: Response;
    };

    export const inboundSchema: z.ZodType<
        C1ApiAppV1AppEntitlementOwnersListResponse,
        z.ZodTypeDef,
        Inbound
    > = z
        .object({
            ContentType: z.string(),
            ListAppEntitlementOwnersResponse:
                shared.ListAppEntitlementOwnersResponse$.inboundSchema.optional(),
            StatusCode: z.number().int(),
            RawResponse: z.instanceof(Response),
        })
        .transform((v) => {
            return {
                contentType: v.ContentType,
                ...(v.ListAppEntitlementOwnersResponse === undefined
                    ? null
                    : { listAppEntitlementOwnersResponse: v.ListAppEntitlementOwnersResponse }),
                statusCode: v.StatusCode,
                rawResponse: v.RawResponse,
            };
        });

    export type Outbound = {
        ContentType: string;
        ListAppEntitlementOwnersResponse?:
            | shared.ListAppEntitlementOwnersResponse$.Outbound
            | undefined;
        StatusCode: number;
        RawResponse: never;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        C1ApiAppV1AppEntitlementOwnersListResponse
    > = z
        .object({
            contentType: z.string(),
            listAppEntitlementOwnersResponse:
                shared.ListAppEntitlementOwnersResponse$.outboundSchema.optional(),
            statusCode: z.number().int(),
            rawResponse: z.instanceof(Response).transform(() => {
                throw new Error("Response cannot be serialized");
            }),
        })
        .transform((v) => {
            return {
                ContentType: v.contentType,
                ...(v.listAppEntitlementOwnersResponse === undefined
                    ? null
                    : { ListAppEntitlementOwnersResponse: v.listAppEntitlementOwnersResponse }),
                StatusCode: v.statusCode,
                RawResponse: v.rawResponse,
            };
        });
}
