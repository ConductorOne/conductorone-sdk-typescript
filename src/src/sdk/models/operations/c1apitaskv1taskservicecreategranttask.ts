/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as shared from "../shared";
import * as z from "zod";

export type C1ApiTaskV1TaskServiceCreateGrantTaskResponse = {
    /**
     * HTTP response content type for this operation
     */
    contentType: string;
    /**
     * HTTP response status code for this operation
     */
    statusCode: number;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse: Response;
    /**
     * The TaskServiceCreateGrantResponse returns a task view which has a task including JSONPATHs to the expanded items in the expanded array.
     */
    taskServiceCreateGrantResponse?: shared.TaskServiceCreateGrantResponse | undefined;
};

/** @internal */
export namespace C1ApiTaskV1TaskServiceCreateGrantTaskResponse$ {
    export type Inbound = {
        ContentType: string;
        StatusCode: number;
        RawResponse: Response;
        TaskServiceCreateGrantResponse?: shared.TaskServiceCreateGrantResponse$.Inbound | undefined;
    };

    export const inboundSchema: z.ZodType<
        C1ApiTaskV1TaskServiceCreateGrantTaskResponse,
        z.ZodTypeDef,
        Inbound
    > = z
        .object({
            ContentType: z.string(),
            StatusCode: z.number().int(),
            RawResponse: z.instanceof(Response),
            TaskServiceCreateGrantResponse:
                shared.TaskServiceCreateGrantResponse$.inboundSchema.optional(),
        })
        .transform((v) => {
            return {
                contentType: v.ContentType,
                statusCode: v.StatusCode,
                rawResponse: v.RawResponse,
                ...(v.TaskServiceCreateGrantResponse === undefined
                    ? null
                    : { taskServiceCreateGrantResponse: v.TaskServiceCreateGrantResponse }),
            };
        });

    export type Outbound = {
        ContentType: string;
        StatusCode: number;
        RawResponse: never;
        TaskServiceCreateGrantResponse?:
            | shared.TaskServiceCreateGrantResponse$.Outbound
            | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        C1ApiTaskV1TaskServiceCreateGrantTaskResponse
    > = z
        .object({
            contentType: z.string(),
            statusCode: z.number().int(),
            rawResponse: z.instanceof(Response).transform(() => {
                throw new Error("Response cannot be serialized");
            }),
            taskServiceCreateGrantResponse:
                shared.TaskServiceCreateGrantResponse$.outboundSchema.optional(),
        })
        .transform((v) => {
            return {
                ContentType: v.contentType,
                StatusCode: v.statusCode,
                RawResponse: v.rawResponse,
                ...(v.taskServiceCreateGrantResponse === undefined
                    ? null
                    : { TaskServiceCreateGrantResponse: v.taskServiceCreateGrantResponse }),
            };
        });
}
