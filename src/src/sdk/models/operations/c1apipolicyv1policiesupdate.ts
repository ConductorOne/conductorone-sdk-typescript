/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as shared from "../shared";
import * as z from "zod";

export type C1ApiPolicyV1PoliciesUpdateRequest = {
    updatePolicyRequest?: shared.UpdatePolicyRequest | undefined;
    id: string;
};

export type C1ApiPolicyV1PoliciesUpdateResponse = {
    /**
     * HTTP response content type for this operation
     */
    contentType: string;
    /**
     * HTTP response status code for this operation
     */
    statusCode: number;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse: Response;
    /**
     * The UpdatePolicyResponse message contains the updated policy object.
     */
    updatePolicyResponse?: shared.UpdatePolicyResponse | undefined;
};

/** @internal */
export namespace C1ApiPolicyV1PoliciesUpdateRequest$ {
    export type Inbound = {
        UpdatePolicyRequest?: shared.UpdatePolicyRequest$.Inbound | undefined;
        id: string;
    };

    export const inboundSchema: z.ZodType<
        C1ApiPolicyV1PoliciesUpdateRequest,
        z.ZodTypeDef,
        Inbound
    > = z
        .object({
            UpdatePolicyRequest: shared.UpdatePolicyRequest$.inboundSchema.optional(),
            id: z.string(),
        })
        .transform((v) => {
            return {
                ...(v.UpdatePolicyRequest === undefined
                    ? null
                    : { updatePolicyRequest: v.UpdatePolicyRequest }),
                id: v.id,
            };
        });

    export type Outbound = {
        UpdatePolicyRequest?: shared.UpdatePolicyRequest$.Outbound | undefined;
        id: string;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        C1ApiPolicyV1PoliciesUpdateRequest
    > = z
        .object({
            updatePolicyRequest: shared.UpdatePolicyRequest$.outboundSchema.optional(),
            id: z.string(),
        })
        .transform((v) => {
            return {
                ...(v.updatePolicyRequest === undefined
                    ? null
                    : { UpdatePolicyRequest: v.updatePolicyRequest }),
                id: v.id,
            };
        });
}

/** @internal */
export namespace C1ApiPolicyV1PoliciesUpdateResponse$ {
    export type Inbound = {
        ContentType: string;
        StatusCode: number;
        RawResponse: Response;
        UpdatePolicyResponse?: shared.UpdatePolicyResponse$.Inbound | undefined;
    };

    export const inboundSchema: z.ZodType<
        C1ApiPolicyV1PoliciesUpdateResponse,
        z.ZodTypeDef,
        Inbound
    > = z
        .object({
            ContentType: z.string(),
            StatusCode: z.number().int(),
            RawResponse: z.instanceof(Response),
            UpdatePolicyResponse: shared.UpdatePolicyResponse$.inboundSchema.optional(),
        })
        .transform((v) => {
            return {
                contentType: v.ContentType,
                statusCode: v.StatusCode,
                rawResponse: v.RawResponse,
                ...(v.UpdatePolicyResponse === undefined
                    ? null
                    : { updatePolicyResponse: v.UpdatePolicyResponse }),
            };
        });

    export type Outbound = {
        ContentType: string;
        StatusCode: number;
        RawResponse: never;
        UpdatePolicyResponse?: shared.UpdatePolicyResponse$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        C1ApiPolicyV1PoliciesUpdateResponse
    > = z
        .object({
            contentType: z.string(),
            statusCode: z.number().int(),
            rawResponse: z.instanceof(Response).transform(() => {
                throw new Error("Response cannot be serialized");
            }),
            updatePolicyResponse: shared.UpdatePolicyResponse$.outboundSchema.optional(),
        })
        .transform((v) => {
            return {
                ContentType: v.contentType,
                StatusCode: v.statusCode,
                RawResponse: v.rawResponse,
                ...(v.updatePolicyResponse === undefined
                    ? null
                    : { UpdatePolicyResponse: v.updatePolicyResponse }),
            };
        });
}
