/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as shared from "../shared";
import * as z from "zod";

export type C1ApiAppV1AppUserServiceUpdateRequest = {
    appUserServiceUpdateRequest?: shared.AppUserServiceUpdateRequest | undefined;
    appUserAppId: string;
    appUserId: string;
};

export type C1ApiAppV1AppUserServiceUpdateResponse = {
    /**
     * Successful response
     */
    appUserServiceUpdateResponse?: shared.AppUserServiceUpdateResponse | undefined;
    /**
     * HTTP response content type for this operation
     */
    contentType: string;
    /**
     * HTTP response status code for this operation
     */
    statusCode: number;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse: Response;
};

/** @internal */
export namespace C1ApiAppV1AppUserServiceUpdateRequest$ {
    export type Inbound = {
        AppUserServiceUpdateRequest?: shared.AppUserServiceUpdateRequest$.Inbound | undefined;
        app_user_app_id: string;
        app_user_id: string;
    };

    export const inboundSchema: z.ZodType<
        C1ApiAppV1AppUserServiceUpdateRequest,
        z.ZodTypeDef,
        Inbound
    > = z
        .object({
            AppUserServiceUpdateRequest:
                shared.AppUserServiceUpdateRequest$.inboundSchema.optional(),
            app_user_app_id: z.string(),
            app_user_id: z.string(),
        })
        .transform((v) => {
            return {
                ...(v.AppUserServiceUpdateRequest === undefined
                    ? null
                    : { appUserServiceUpdateRequest: v.AppUserServiceUpdateRequest }),
                appUserAppId: v.app_user_app_id,
                appUserId: v.app_user_id,
            };
        });

    export type Outbound = {
        AppUserServiceUpdateRequest?: shared.AppUserServiceUpdateRequest$.Outbound | undefined;
        app_user_app_id: string;
        app_user_id: string;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        C1ApiAppV1AppUserServiceUpdateRequest
    > = z
        .object({
            appUserServiceUpdateRequest:
                shared.AppUserServiceUpdateRequest$.outboundSchema.optional(),
            appUserAppId: z.string(),
            appUserId: z.string(),
        })
        .transform((v) => {
            return {
                ...(v.appUserServiceUpdateRequest === undefined
                    ? null
                    : { AppUserServiceUpdateRequest: v.appUserServiceUpdateRequest }),
                app_user_app_id: v.appUserAppId,
                app_user_id: v.appUserId,
            };
        });
}

/** @internal */
export namespace C1ApiAppV1AppUserServiceUpdateResponse$ {
    export type Inbound = {
        AppUserServiceUpdateResponse?: shared.AppUserServiceUpdateResponse$.Inbound | undefined;
        ContentType: string;
        StatusCode: number;
        RawResponse: Response;
    };

    export const inboundSchema: z.ZodType<
        C1ApiAppV1AppUserServiceUpdateResponse,
        z.ZodTypeDef,
        Inbound
    > = z
        .object({
            AppUserServiceUpdateResponse:
                shared.AppUserServiceUpdateResponse$.inboundSchema.optional(),
            ContentType: z.string(),
            StatusCode: z.number().int(),
            RawResponse: z.instanceof(Response),
        })
        .transform((v) => {
            return {
                ...(v.AppUserServiceUpdateResponse === undefined
                    ? null
                    : { appUserServiceUpdateResponse: v.AppUserServiceUpdateResponse }),
                contentType: v.ContentType,
                statusCode: v.StatusCode,
                rawResponse: v.RawResponse,
            };
        });

    export type Outbound = {
        AppUserServiceUpdateResponse?: shared.AppUserServiceUpdateResponse$.Outbound | undefined;
        ContentType: string;
        StatusCode: number;
        RawResponse: never;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        C1ApiAppV1AppUserServiceUpdateResponse
    > = z
        .object({
            appUserServiceUpdateResponse:
                shared.AppUserServiceUpdateResponse$.outboundSchema.optional(),
            contentType: z.string(),
            statusCode: z.number().int(),
            rawResponse: z.instanceof(Response).transform(() => {
                throw new Error("Response cannot be serialized");
            }),
        })
        .transform((v) => {
            return {
                ...(v.appUserServiceUpdateResponse === undefined
                    ? null
                    : { AppUserServiceUpdateResponse: v.appUserServiceUpdateResponse }),
                ContentType: v.contentType,
                StatusCode: v.statusCode,
                RawResponse: v.rawResponse,
            };
        });
}
