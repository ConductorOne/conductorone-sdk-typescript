/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as shared from "../shared";
import * as z from "zod";

export type C1ApiAppV1AppOwnersListRequest = {
    appId: string;
    pageSize?: number | undefined;
    pageToken?: string | undefined;
};

export type C1ApiAppV1AppOwnersListResponse = {
    /**
     * HTTP response content type for this operation
     */
    contentType: string;
    /**
     * Successful response
     */
    listAppOwnersResponse?: shared.ListAppOwnersResponse | undefined;
    /**
     * HTTP response status code for this operation
     */
    statusCode: number;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse: Response;
};

/** @internal */
export namespace C1ApiAppV1AppOwnersListRequest$ {
    export type Inbound = {
        app_id: string;
        page_size?: number | undefined;
        page_token?: string | undefined;
    };

    export const inboundSchema: z.ZodType<C1ApiAppV1AppOwnersListRequest, z.ZodTypeDef, Inbound> = z
        .object({
            app_id: z.string(),
            page_size: z.number().int().optional(),
            page_token: z.string().optional(),
        })
        .transform((v) => {
            return {
                appId: v.app_id,
                ...(v.page_size === undefined ? null : { pageSize: v.page_size }),
                ...(v.page_token === undefined ? null : { pageToken: v.page_token }),
            };
        });

    export type Outbound = {
        app_id: string;
        page_size?: number | undefined;
        page_token?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, C1ApiAppV1AppOwnersListRequest> =
        z
            .object({
                appId: z.string(),
                pageSize: z.number().int().optional(),
                pageToken: z.string().optional(),
            })
            .transform((v) => {
                return {
                    app_id: v.appId,
                    ...(v.pageSize === undefined ? null : { page_size: v.pageSize }),
                    ...(v.pageToken === undefined ? null : { page_token: v.pageToken }),
                };
            });
}

/** @internal */
export namespace C1ApiAppV1AppOwnersListResponse$ {
    export type Inbound = {
        ContentType: string;
        ListAppOwnersResponse?: shared.ListAppOwnersResponse$.Inbound | undefined;
        StatusCode: number;
        RawResponse: Response;
    };

    export const inboundSchema: z.ZodType<C1ApiAppV1AppOwnersListResponse, z.ZodTypeDef, Inbound> =
        z
            .object({
                ContentType: z.string(),
                ListAppOwnersResponse: shared.ListAppOwnersResponse$.inboundSchema.optional(),
                StatusCode: z.number().int(),
                RawResponse: z.instanceof(Response),
            })
            .transform((v) => {
                return {
                    contentType: v.ContentType,
                    ...(v.ListAppOwnersResponse === undefined
                        ? null
                        : { listAppOwnersResponse: v.ListAppOwnersResponse }),
                    statusCode: v.StatusCode,
                    rawResponse: v.RawResponse,
                };
            });

    export type Outbound = {
        ContentType: string;
        ListAppOwnersResponse?: shared.ListAppOwnersResponse$.Outbound | undefined;
        StatusCode: number;
        RawResponse: never;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        C1ApiAppV1AppOwnersListResponse
    > = z
        .object({
            contentType: z.string(),
            listAppOwnersResponse: shared.ListAppOwnersResponse$.outboundSchema.optional(),
            statusCode: z.number().int(),
            rawResponse: z.instanceof(Response).transform(() => {
                throw new Error("Response cannot be serialized");
            }),
        })
        .transform((v) => {
            return {
                ContentType: v.contentType,
                ...(v.listAppOwnersResponse === undefined
                    ? null
                    : { ListAppOwnersResponse: v.listAppOwnersResponse }),
                StatusCode: v.statusCode,
                RawResponse: v.rawResponse,
            };
        });
}
