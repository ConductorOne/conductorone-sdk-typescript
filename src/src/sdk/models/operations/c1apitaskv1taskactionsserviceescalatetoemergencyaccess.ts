/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as shared from "../shared";
import * as z from "zod";

export type C1ApiTaskV1TaskActionsServiceEscalateToEmergencyAccessRequest = {
    taskActionsServiceEscalateToEmergencyAccessRequest?:
        | shared.TaskActionsServiceEscalateToEmergencyAccessRequest
        | undefined;
    taskId: string;
};

export type C1ApiTaskV1TaskActionsServiceEscalateToEmergencyAccessResponse = {
    /**
     * HTTP response content type for this operation
     */
    contentType: string;
    /**
     * HTTP response status code for this operation
     */
    statusCode: number;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse: Response;
    /**
     * Successful response
     */
    taskServiceActionResponse?: shared.TaskServiceActionResponse | undefined;
};

/** @internal */
export namespace C1ApiTaskV1TaskActionsServiceEscalateToEmergencyAccessRequest$ {
    export type Inbound = {
        TaskActionsServiceEscalateToEmergencyAccessRequest?:
            | shared.TaskActionsServiceEscalateToEmergencyAccessRequest$.Inbound
            | undefined;
        task_id: string;
    };

    export const inboundSchema: z.ZodType<
        C1ApiTaskV1TaskActionsServiceEscalateToEmergencyAccessRequest,
        z.ZodTypeDef,
        Inbound
    > = z
        .object({
            TaskActionsServiceEscalateToEmergencyAccessRequest:
                shared.TaskActionsServiceEscalateToEmergencyAccessRequest$.inboundSchema.optional(),
            task_id: z.string(),
        })
        .transform((v) => {
            return {
                ...(v.TaskActionsServiceEscalateToEmergencyAccessRequest === undefined
                    ? null
                    : {
                          taskActionsServiceEscalateToEmergencyAccessRequest:
                              v.TaskActionsServiceEscalateToEmergencyAccessRequest,
                      }),
                taskId: v.task_id,
            };
        });

    export type Outbound = {
        TaskActionsServiceEscalateToEmergencyAccessRequest?:
            | shared.TaskActionsServiceEscalateToEmergencyAccessRequest$.Outbound
            | undefined;
        task_id: string;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        C1ApiTaskV1TaskActionsServiceEscalateToEmergencyAccessRequest
    > = z
        .object({
            taskActionsServiceEscalateToEmergencyAccessRequest:
                shared.TaskActionsServiceEscalateToEmergencyAccessRequest$.outboundSchema.optional(),
            taskId: z.string(),
        })
        .transform((v) => {
            return {
                ...(v.taskActionsServiceEscalateToEmergencyAccessRequest === undefined
                    ? null
                    : {
                          TaskActionsServiceEscalateToEmergencyAccessRequest:
                              v.taskActionsServiceEscalateToEmergencyAccessRequest,
                      }),
                task_id: v.taskId,
            };
        });
}

/** @internal */
export namespace C1ApiTaskV1TaskActionsServiceEscalateToEmergencyAccessResponse$ {
    export type Inbound = {
        ContentType: string;
        StatusCode: number;
        RawResponse: Response;
        TaskServiceActionResponse?: shared.TaskServiceActionResponse$.Inbound | undefined;
    };

    export const inboundSchema: z.ZodType<
        C1ApiTaskV1TaskActionsServiceEscalateToEmergencyAccessResponse,
        z.ZodTypeDef,
        Inbound
    > = z
        .object({
            ContentType: z.string(),
            StatusCode: z.number().int(),
            RawResponse: z.instanceof(Response),
            TaskServiceActionResponse: shared.TaskServiceActionResponse$.inboundSchema.optional(),
        })
        .transform((v) => {
            return {
                contentType: v.ContentType,
                statusCode: v.StatusCode,
                rawResponse: v.RawResponse,
                ...(v.TaskServiceActionResponse === undefined
                    ? null
                    : { taskServiceActionResponse: v.TaskServiceActionResponse }),
            };
        });

    export type Outbound = {
        ContentType: string;
        StatusCode: number;
        RawResponse: never;
        TaskServiceActionResponse?: shared.TaskServiceActionResponse$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        C1ApiTaskV1TaskActionsServiceEscalateToEmergencyAccessResponse
    > = z
        .object({
            contentType: z.string(),
            statusCode: z.number().int(),
            rawResponse: z.instanceof(Response).transform(() => {
                throw new Error("Response cannot be serialized");
            }),
            taskServiceActionResponse: shared.TaskServiceActionResponse$.outboundSchema.optional(),
        })
        .transform((v) => {
            return {
                ContentType: v.contentType,
                StatusCode: v.statusCode,
                RawResponse: v.rawResponse,
                ...(v.taskServiceActionResponse === undefined
                    ? null
                    : { TaskServiceActionResponse: v.taskServiceActionResponse }),
            };
        });
}
