/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import { webhooksCreate } from "../funcs/webhooksCreate.js";
import { webhooksDelete } from "../funcs/webhooksDelete.js";
import { webhooksGet } from "../funcs/webhooksGet.js";
import { webhooksList } from "../funcs/webhooksList.js";
import { webhooksTest } from "../funcs/webhooksTest.js";
import { webhooksUpdate } from "../funcs/webhooksUpdate.js";
import { ClientSDK } from "../lib/sdks.js";
import { unwrapAsync } from "./types/fp.js";
export class Webhooks extends ClientSDK {
    /**
     * List
     *
     * @remarks
     * Invokes the c1.api.webhooks.v1.WebhooksService.List method.
     */
    async list(request, options) {
        return unwrapAsync(webhooksList(this, request, options));
    }
    /**
     * Create
     *
     * @remarks
     * Invokes the c1.api.webhooks.v1.WebhooksService.Create method.
     */
    async create(request, options) {
        return unwrapAsync(webhooksCreate(this, request, options));
    }
    /**
     * Delete
     *
     * @remarks
     * Invokes the c1.api.webhooks.v1.WebhooksService.Delete method.
     */
    async delete(request, options) {
        return unwrapAsync(webhooksDelete(this, request, options));
    }
    /**
     * Get
     *
     * @remarks
     * Invokes the c1.api.webhooks.v1.WebhooksService.Get method.
     */
    async get(request, options) {
        return unwrapAsync(webhooksGet(this, request, options));
    }
    /**
     * Update
     *
     * @remarks
     * Invokes the c1.api.webhooks.v1.WebhooksService.Update method.
     */
    async update(request, options) {
        return unwrapAsync(webhooksUpdate(this, request, options));
    }
    /**
     * Test
     *
     * @remarks
     * Invokes the c1.api.webhooks.v1.WebhooksService.Test method.
     */
    async test(request, options) {
        return unwrapAsync(webhooksTest(this, request, options));
    }
}
