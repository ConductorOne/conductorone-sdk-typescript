/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { directoryCreate } from "../funcs/directoryCreate.js";
import { directoryDelete } from "../funcs/directoryDelete.js";
import { directoryGet } from "../funcs/directoryGet.js";
import { directoryList } from "../funcs/directoryList.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "./models/operations/index.js";
import * as shared from "./models/shared/index.js";
import { unwrapAsync } from "./types/fp.js";

export class Directory extends ClientSDK {
  /**
   * List
   *
   * @remarks
   * List directories.
   */
  async list(
    request?:
      | operations.C1ApiDirectoryV1DirectoryServiceListRequest
      | undefined,
    options?: RequestOptions,
  ): Promise<operations.C1ApiDirectoryV1DirectoryServiceListResponse> {
    return unwrapAsync(directoryList(
      this,
      request,
      options,
    ));
  }

  /**
   * Create
   *
   * @remarks
   * Create a directory.
   */
  async create(
    request?: shared.DirectoryServiceCreateRequest | undefined,
    options?: RequestOptions,
  ): Promise<operations.C1ApiDirectoryV1DirectoryServiceCreateResponse> {
    return unwrapAsync(directoryCreate(
      this,
      request,
      options,
    ));
  }

  /**
   * Delete
   *
   * @remarks
   * Delete a directory by app_id.
   */
  async delete(
    request: operations.C1ApiDirectoryV1DirectoryServiceDeleteRequest,
    options?: RequestOptions,
  ): Promise<operations.C1ApiDirectoryV1DirectoryServiceDeleteResponse> {
    return unwrapAsync(directoryDelete(
      this,
      request,
      options,
    ));
  }

  /**
   * Get
   *
   * @remarks
   * Get a directory by app_id.
   */
  async get(
    request: operations.C1ApiDirectoryV1DirectoryServiceGetRequest,
    options?: RequestOptions,
  ): Promise<operations.C1ApiDirectoryV1DirectoryServiceGetResponse> {
    return unwrapAsync(directoryGet(
      this,
      request,
      options,
    ));
  }
}
