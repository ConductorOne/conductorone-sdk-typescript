/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { automationCreateAutomation } from "../funcs/automationCreateAutomation.js";
import { automationDeleteAutomation } from "../funcs/automationDeleteAutomation.js";
import { automationExecuteAutomation } from "../funcs/automationExecuteAutomation.js";
import { automationGetAutomation } from "../funcs/automationGetAutomation.js";
import { automationListAutomations } from "../funcs/automationListAutomations.js";
import { automationUpdateAutomation } from "../funcs/automationUpdateAutomation.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "./models/operations/index.js";
import * as shared from "./models/shared/index.js";
import { unwrapAsync } from "./types/fp.js";

export class Automation extends ClientSDK {
  /**
   * List Automations
   *
   * @remarks
   * Invokes the c1.api.automations.v1.AutomationService.ListAutomations method.
   */
  async listAutomations(
    options?: RequestOptions,
  ): Promise<
    operations.C1ApiAutomationsV1AutomationServiceListAutomationsResponse
  > {
    return unwrapAsync(automationListAutomations(
      this,
      options,
    ));
  }

  /**
   * Create Automation
   *
   * @remarks
   * Invokes the c1.api.automations.v1.AutomationService.CreateAutomation method.
   */
  async createAutomation(
    request?: shared.CreateAutomationRequestInput | undefined,
    options?: RequestOptions,
  ): Promise<
    operations.C1ApiAutomationsV1AutomationServiceCreateAutomationResponse
  > {
    return unwrapAsync(automationCreateAutomation(
      this,
      request,
      options,
    ));
  }

  /**
   * Delete Automation
   *
   * @remarks
   * Invokes the c1.api.automations.v1.AutomationService.DeleteAutomation method.
   */
  async deleteAutomation(
    request:
      operations.C1ApiAutomationsV1AutomationServiceDeleteAutomationRequest,
    options?: RequestOptions,
  ): Promise<
    operations.C1ApiAutomationsV1AutomationServiceDeleteAutomationResponse
  > {
    return unwrapAsync(automationDeleteAutomation(
      this,
      request,
      options,
    ));
  }

  /**
   * Get Automation
   *
   * @remarks
   * Invokes the c1.api.automations.v1.AutomationService.GetAutomation method.
   */
  async getAutomation(
    request: operations.C1ApiAutomationsV1AutomationServiceGetAutomationRequest,
    options?: RequestOptions,
  ): Promise<
    operations.C1ApiAutomationsV1AutomationServiceGetAutomationResponse
  > {
    return unwrapAsync(automationGetAutomation(
      this,
      request,
      options,
    ));
  }

  /**
   * Update Automation
   *
   * @remarks
   * Invokes the c1.api.automations.v1.AutomationService.UpdateAutomation method.
   */
  async updateAutomation(
    request:
      operations.C1ApiAutomationsV1AutomationServiceUpdateAutomationRequest,
    options?: RequestOptions,
  ): Promise<
    operations.C1ApiAutomationsV1AutomationServiceUpdateAutomationResponse
  > {
    return unwrapAsync(automationUpdateAutomation(
      this,
      request,
      options,
    ));
  }

  /**
   * Execute Automation
   *
   * @remarks
   * Invokes the c1.api.automations.v1.AutomationService.ExecuteAutomation method.
   */
  async executeAutomation(
    request:
      operations.C1ApiAutomationsV1AutomationServiceExecuteAutomationRequest,
    options?: RequestOptions,
  ): Promise<
    operations.C1ApiAutomationsV1AutomationServiceExecuteAutomationResponse
  > {
    return unwrapAsync(automationExecuteAutomation(
      this,
      request,
      options,
    ));
  }
}
