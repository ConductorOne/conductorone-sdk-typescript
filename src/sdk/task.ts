/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { taskCreateGrantTask } from "../funcs/taskCreateGrantTask.js";
import { taskCreateOffboardingTask } from "../funcs/taskCreateOffboardingTask.js";
import { taskCreateRevokeTask } from "../funcs/taskCreateRevokeTask.js";
import { taskGet } from "../funcs/taskGet.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "./models/operations/index.js";
import * as shared from "./models/shared/index.js";
import { unwrapAsync } from "./types/fp.js";

export class Task extends ClientSDK {
  /**
   * Create Grant Task
   *
   * @remarks
   * Create a grant task
   */
  async createGrantTask(
    request?: shared.TaskServiceCreateGrantRequest | undefined,
    options?: RequestOptions,
  ): Promise<operations.C1ApiTaskV1TaskServiceCreateGrantTaskResponse> {
    return unwrapAsync(taskCreateGrantTask(
      this,
      request,
      options,
    ));
  }

  /**
   * Create Offboarding Task
   *
   * @remarks
   * Invokes the c1.api.task.v1.TaskService.CreateOffboardingTask method.
   */
  async createOffboardingTask(
    request?: shared.TaskServiceCreateOffboardingRequest | undefined,
    options?: RequestOptions,
  ): Promise<operations.C1ApiTaskV1TaskServiceCreateOffboardingTaskResponse> {
    return unwrapAsync(taskCreateOffboardingTask(
      this,
      request,
      options,
    ));
  }

  /**
   * Create Revoke Task
   *
   * @remarks
   * Create a revoke task
   */
  async createRevokeTask(
    request?: shared.TaskServiceCreateRevokeRequest | undefined,
    options?: RequestOptions,
  ): Promise<operations.C1ApiTaskV1TaskServiceCreateRevokeTaskResponse> {
    return unwrapAsync(taskCreateRevokeTask(
      this,
      request,
      options,
    ));
  }

  /**
   * Get
   *
   * @remarks
   * Get a task by ID
   */
  async get(
    request: operations.C1ApiTaskV1TaskServiceGetRequest,
    options?: RequestOptions,
  ): Promise<operations.C1ApiTaskV1TaskServiceGetResponse> {
    return unwrapAsync(taskGet(
      this,
      request,
      options,
    ));
  }
}
