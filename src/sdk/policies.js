/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import { policiesCreate } from "../funcs/policiesCreate.js";
import { policiesDelete } from "../funcs/policiesDelete.js";
import { policiesGet } from "../funcs/policiesGet.js";
import { policiesList } from "../funcs/policiesList.js";
import { policiesUpdate } from "../funcs/policiesUpdate.js";
import { ClientSDK } from "../lib/sdks.js";
import { unwrapAsync } from "./types/fp.js";
export class Policies extends ClientSDK {
    /**
     * List
     *
     * @remarks
     * List policies.
     */
    async list(request, options) {
        return unwrapAsync(policiesList(this, request, options));
    }
    /**
     * Create
     *
     * @remarks
     * Create a policy.
     */
    async create(request, options) {
        return unwrapAsync(policiesCreate(this, request, options));
    }
    /**
     * Delete
     *
     * @remarks
     * Delete a policy by ID.
     */
    async delete(request, options) {
        return unwrapAsync(policiesDelete(this, request, options));
    }
    /**
     * Get
     *
     * @remarks
     * Get a policy by ID.
     */
    async get(request, options) {
        return unwrapAsync(policiesGet(this, request, options));
    }
    /**
     * Update
     *
     * @remarks
     * Update a policy by providing a policy object and an update mask.
     */
    async update(request, options) {
        return unwrapAsync(policiesUpdate(this, request, options));
    }
}
