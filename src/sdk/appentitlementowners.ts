/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { appEntitlementOwnersAdd } from "../funcs/appEntitlementOwnersAdd.js";
import { appEntitlementOwnersDelete } from "../funcs/appEntitlementOwnersDelete.js";
import { appEntitlementOwnersList } from "../funcs/appEntitlementOwnersList.js";
import { appEntitlementOwnersListOwnerIDs } from "../funcs/appEntitlementOwnersListOwnerIDs.js";
import { appEntitlementOwnersRemove } from "../funcs/appEntitlementOwnersRemove.js";
import { appEntitlementOwnersSet } from "../funcs/appEntitlementOwnersSet.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "./models/operations/index.js";
import { unwrapAsync } from "./types/fp.js";

export class AppEntitlementOwners extends ClientSDK {
  /**
   * List Owner I Ds
   *
   * @remarks
   * ListUserIDs lists owner IDs for a given app entitlement.
   */
  async listOwnerIDs(
    request: operations.C1ApiAppV1AppEntitlementOwnersListOwnerIDsRequest,
    options?: RequestOptions,
  ): Promise<operations.C1ApiAppV1AppEntitlementOwnersListOwnerIDsResponse> {
    return unwrapAsync(appEntitlementOwnersListOwnerIDs(
      this,
      request,
      options,
    ));
  }

  /**
   * Delete
   *
   * @remarks
   * Delete deletes the owners from a given app entitlement.
   */
  async delete(
    request: operations.C1ApiAppV1AppEntitlementOwnersDeleteRequest,
    options?: RequestOptions,
  ): Promise<operations.C1ApiAppV1AppEntitlementOwnersDeleteResponse> {
    return unwrapAsync(appEntitlementOwnersDelete(
      this,
      request,
      options,
    ));
  }

  /**
   * List
   *
   * @remarks
   * List owners for a given app entitlement.
   */
  async list(
    request: operations.C1ApiAppV1AppEntitlementOwnersListRequest,
    options?: RequestOptions,
  ): Promise<operations.C1ApiAppV1AppEntitlementOwnersListResponse> {
    return unwrapAsync(appEntitlementOwnersList(
      this,
      request,
      options,
    ));
  }

  /**
   * Add
   *
   * @remarks
   * Add an owner to a given app entitlement.
   */
  async add(
    request: operations.C1ApiAppV1AppEntitlementOwnersAddRequest,
    options?: RequestOptions,
  ): Promise<operations.C1ApiAppV1AppEntitlementOwnersAddResponse> {
    return unwrapAsync(appEntitlementOwnersAdd(
      this,
      request,
      options,
    ));
  }

  /**
   * Set
   *
   * @remarks
   * Sets the owners for a given app entitlement to the specified list of users.
   */
  async set(
    request: operations.C1ApiAppV1AppEntitlementOwnersSetRequest,
    options?: RequestOptions,
  ): Promise<operations.C1ApiAppV1AppEntitlementOwnersSetResponse> {
    return unwrapAsync(appEntitlementOwnersSet(
      this,
      request,
      options,
    ));
  }

  /**
   * Remove
   *
   * @remarks
   * Remove an owner from a given app entitlement.
   */
  async remove(
    request: operations.C1ApiAppV1AppEntitlementOwnersRemoveRequest,
    options?: RequestOptions,
  ): Promise<operations.C1ApiAppV1AppEntitlementOwnersRemoveResponse> {
    return unwrapAsync(appEntitlementOwnersRemove(
      this,
      request,
      options,
    ));
  }
}
