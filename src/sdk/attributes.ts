/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { attributesCreateAttributeValue } from "../funcs/attributesCreateAttributeValue.js";
import { attributesCreateComplianceFrameworkAttributeValue } from "../funcs/attributesCreateComplianceFrameworkAttributeValue.js";
import { attributesCreateRiskLevelAttributeValue } from "../funcs/attributesCreateRiskLevelAttributeValue.js";
import { attributesDeleteAttributeValue } from "../funcs/attributesDeleteAttributeValue.js";
import { attributesDeleteComplianceFrameworkAttributeValue } from "../funcs/attributesDeleteComplianceFrameworkAttributeValue.js";
import { attributesDeleteRiskLevelAttributeValue } from "../funcs/attributesDeleteRiskLevelAttributeValue.js";
import { attributesGetAttributeValue } from "../funcs/attributesGetAttributeValue.js";
import { attributesGetComplianceFrameworkAttributeValue } from "../funcs/attributesGetComplianceFrameworkAttributeValue.js";
import { attributesGetRiskLevelAttributeValue } from "../funcs/attributesGetRiskLevelAttributeValue.js";
import { attributesListAttributeTypes } from "../funcs/attributesListAttributeTypes.js";
import { attributesListAttributeValues } from "../funcs/attributesListAttributeValues.js";
import { attributesListComplianceFrameworks } from "../funcs/attributesListComplianceFrameworks.js";
import { attributesListRiskLevels } from "../funcs/attributesListRiskLevels.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "./models/operations/index.js";
import * as shared from "./models/shared/index.js";
import { unwrapAsync } from "./types/fp.js";

export class Attributes extends ClientSDK {
  /**
   * Delete Attribute Value
   *
   * @remarks
   * Delete an attribute value by id.
   */
  async deleteAttributeValue(
    request: operations.C1ApiAttributeV1AttributesDeleteAttributeValueRequest,
    options?: RequestOptions,
  ): Promise<
    operations.C1ApiAttributeV1AttributesDeleteAttributeValueResponse
  > {
    return unwrapAsync(attributesDeleteAttributeValue(
      this,
      request,
      options,
    ));
  }

  /**
   * Create Attribute Value
   *
   * @remarks
   * Create a new attribute value.
   */
  async createAttributeValue(
    request?: shared.CreateAttributeValueRequest | undefined,
    options?: RequestOptions,
  ): Promise<
    operations.C1ApiAttributeV1AttributesCreateAttributeValueResponse
  > {
    return unwrapAsync(attributesCreateAttributeValue(
      this,
      request,
      options,
    ));
  }

  /**
   * Get Attribute Value
   *
   * @remarks
   * Get an attribute value by id.
   */
  async getAttributeValue(
    request: operations.C1ApiAttributeV1AttributesGetAttributeValueRequest,
    options?: RequestOptions,
  ): Promise<operations.C1ApiAttributeV1AttributesGetAttributeValueResponse> {
    return unwrapAsync(attributesGetAttributeValue(
      this,
      request,
      options,
    ));
  }

  /**
   * List Compliance Frameworks
   *
   * @remarks
   * Invokes the c1.api.attribute.v1.Attributes.ListComplianceFrameworks method.
   */
  async listComplianceFrameworks(
    request?:
      | operations.C1ApiAttributeV1AttributesListComplianceFrameworksRequest
      | undefined,
    options?: RequestOptions,
  ): Promise<
    operations.C1ApiAttributeV1AttributesListComplianceFrameworksResponse
  > {
    return unwrapAsync(attributesListComplianceFrameworks(
      this,
      request,
      options,
    ));
  }

  /**
   * Create Compliance Framework Attribute Value
   *
   * @remarks
   * Create a compliance framework value.
   */
  async createComplianceFrameworkAttributeValue(
    request?: shared.CreateComplianceFrameworkAttributeValueRequest | undefined,
    options?: RequestOptions,
  ): Promise<
    operations.C1ApiAttributeV1AttributesCreateComplianceFrameworkAttributeValueResponse
  > {
    return unwrapAsync(attributesCreateComplianceFrameworkAttributeValue(
      this,
      request,
      options,
    ));
  }

  /**
   * Delete Compliance Framework Attribute Value
   *
   * @remarks
   * Delete an attribute value by id.
   */
  async deleteComplianceFrameworkAttributeValue(
    request:
      operations.C1ApiAttributeV1AttributesDeleteComplianceFrameworkAttributeValueRequest,
    options?: RequestOptions,
  ): Promise<
    operations.C1ApiAttributeV1AttributesDeleteComplianceFrameworkAttributeValueResponse
  > {
    return unwrapAsync(attributesDeleteComplianceFrameworkAttributeValue(
      this,
      request,
      options,
    ));
  }

  /**
   * Get Compliance Framework Attribute Value
   *
   * @remarks
   * Get an attribute value by id.
   */
  async getComplianceFrameworkAttributeValue(
    request:
      operations.C1ApiAttributeV1AttributesGetComplianceFrameworkAttributeValueRequest,
    options?: RequestOptions,
  ): Promise<
    operations.C1ApiAttributeV1AttributesGetComplianceFrameworkAttributeValueResponse
  > {
    return unwrapAsync(attributesGetComplianceFrameworkAttributeValue(
      this,
      request,
      options,
    ));
  }

  /**
   * List Risk Levels
   *
   * @remarks
   * Invokes the c1.api.attribute.v1.Attributes.ListRiskLevels method.
   */
  async listRiskLevels(
    request?:
      | operations.C1ApiAttributeV1AttributesListRiskLevelsRequest
      | undefined,
    options?: RequestOptions,
  ): Promise<operations.C1ApiAttributeV1AttributesListRiskLevelsResponse> {
    return unwrapAsync(attributesListRiskLevels(
      this,
      request,
      options,
    ));
  }

  /**
   * Create Risk Level Attribute Value
   *
   * @remarks
   * Create a risk level attribute.
   */
  async createRiskLevelAttributeValue(
    request?: shared.CreateRiskLevelAttributeValueRequest | undefined,
    options?: RequestOptions,
  ): Promise<
    operations.C1ApiAttributeV1AttributesCreateRiskLevelAttributeValueResponse
  > {
    return unwrapAsync(attributesCreateRiskLevelAttributeValue(
      this,
      request,
      options,
    ));
  }

  /**
   * Delete Risk Level Attribute Value
   *
   * @remarks
   * Delete a risk level attribute value by id.
   */
  async deleteRiskLevelAttributeValue(
    request:
      operations.C1ApiAttributeV1AttributesDeleteRiskLevelAttributeValueRequest,
    options?: RequestOptions,
  ): Promise<
    operations.C1ApiAttributeV1AttributesDeleteRiskLevelAttributeValueResponse
  > {
    return unwrapAsync(attributesDeleteRiskLevelAttributeValue(
      this,
      request,
      options,
    ));
  }

  /**
   * Get Risk Level Attribute Value
   *
   * @remarks
   * Get a risk level attribute value by id.
   */
  async getRiskLevelAttributeValue(
    request:
      operations.C1ApiAttributeV1AttributesGetRiskLevelAttributeValueRequest,
    options?: RequestOptions,
  ): Promise<
    operations.C1ApiAttributeV1AttributesGetRiskLevelAttributeValueResponse
  > {
    return unwrapAsync(attributesGetRiskLevelAttributeValue(
      this,
      request,
      options,
    ));
  }

  /**
   * List Attribute Types
   *
   * @remarks
   * List all attribute types.
   */
  async listAttributeTypes(
    request?:
      | operations.C1ApiAttributeV1AttributesListAttributeTypesRequest
      | undefined,
    options?: RequestOptions,
  ): Promise<operations.C1ApiAttributeV1AttributesListAttributeTypesResponse> {
    return unwrapAsync(attributesListAttributeTypes(
      this,
      request,
      options,
    ));
  }

  /**
   * List Attribute Values
   *
   * @remarks
   * List all attribute values for a given attribute type.
   */
  async listAttributeValues(
    request: operations.C1ApiAttributeV1AttributesListAttributeValuesRequest,
    options?: RequestOptions,
  ): Promise<operations.C1ApiAttributeV1AttributesListAttributeValuesResponse> {
    return unwrapAsync(attributesListAttributeValues(
      this,
      request,
      options,
    ));
  }
}
