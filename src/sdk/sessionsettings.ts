/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { sessionSettingsGet } from "../funcs/sessionSettingsGet.js";
import { sessionSettingsTestSourceIP } from "../funcs/sessionSettingsTestSourceIP.js";
import { sessionSettingsUpdate } from "../funcs/sessionSettingsUpdate.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "./models/operations/index.js";
import * as shared from "./models/shared/index.js";
import { unwrapAsync } from "./types/fp.js";

export class SessionSettings extends ClientSDK {
  /**
   * Get
   *
   * @remarks
   * Invokes the c1.api.settings.v1.SessionSettingsService.Get method.
   */
  async get(
    options?: RequestOptions,
  ): Promise<operations.C1ApiSettingsV1SessionSettingsServiceGetResponse> {
    return unwrapAsync(sessionSettingsGet(
      this,
      options,
    ));
  }

  /**
   * Update
   *
   * @remarks
   * Invokes the c1.api.settings.v1.SessionSettingsService.Update method.
   */
  async update(
    request?: shared.UpdateSessionSettingsRequest | undefined,
    options?: RequestOptions,
  ): Promise<operations.C1ApiSettingsV1SessionSettingsServiceUpdateResponse> {
    return unwrapAsync(sessionSettingsUpdate(
      this,
      request,
      options,
    ));
  }

  /**
   * Test Source Ip
   *
   * @remarks
   * Invokes the c1.api.settings.v1.SessionSettingsService.TestSourceIP method.
   */
  async testSourceIP(
    request?: shared.TestSourceIPRequest | undefined,
    options?: RequestOptions,
  ): Promise<
    operations.C1ApiSettingsV1SessionSettingsServiceTestSourceIPResponse
  > {
    return unwrapAsync(sessionSettingsTestSourceIP(
      this,
      request,
      options,
    ));
  }
}
