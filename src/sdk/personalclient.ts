/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { personalClientCreate } from "../funcs/personalClientCreate.js";
import { personalClientDelete } from "../funcs/personalClientDelete.js";
import { personalClientGet } from "../funcs/personalClientGet.js";
import { personalClientList } from "../funcs/personalClientList.js";
import { personalClientUpdate } from "../funcs/personalClientUpdate.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "./models/operations/index.js";
import * as shared from "./models/shared/index.js";
import { unwrapAsync } from "./types/fp.js";

export class PersonalClient extends ClientSDK {
  /**
   * NOTE: Only shows personal clients for the current user.
   *
   * @remarks
   * Invokes the c1.api.iam.v1.PersonalClientService.List method.
   */
  async list(
    options?: RequestOptions,
  ): Promise<operations.C1ApiIamV1PersonalClientServiceListResponse> {
    return unwrapAsync(personalClientList(
      this,
      options,
    ));
  }

  /**
   * Create
   *
   * @remarks
   * Create creates a new PersonalClient object for the current User.
   */
  async create(
    request?: shared.PersonalClientServiceCreateRequest | undefined,
    options?: RequestOptions,
  ): Promise<operations.C1ApiIamV1PersonalClientServiceCreateResponse> {
    return unwrapAsync(personalClientCreate(
      this,
      request,
      options,
    ));
  }

  /**
   * Delete
   *
   * @remarks
   * Invokes the c1.api.iam.v1.PersonalClientService.Delete method.
   */
  async delete(
    request: operations.C1ApiIamV1PersonalClientServiceDeleteRequest,
    options?: RequestOptions,
  ): Promise<operations.C1ApiIamV1PersonalClientServiceDeleteResponse> {
    return unwrapAsync(personalClientDelete(
      this,
      request,
      options,
    ));
  }

  /**
   * Get
   *
   * @remarks
   * Invokes the c1.api.iam.v1.PersonalClientService.Get method.
   */
  async get(
    request: operations.C1ApiIamV1PersonalClientServiceGetRequest,
    options?: RequestOptions,
  ): Promise<operations.C1ApiIamV1PersonalClientServiceGetResponse> {
    return unwrapAsync(personalClientGet(
      this,
      request,
      options,
    ));
  }

  /**
   * Update
   *
   * @remarks
   * Invokes the c1.api.iam.v1.PersonalClientService.Update method.
   */
  async update(
    request: operations.C1ApiIamV1PersonalClientServiceUpdateRequest,
    options?: RequestOptions,
  ): Promise<operations.C1ApiIamV1PersonalClientServiceUpdateResponse> {
    return unwrapAsync(personalClientUpdate(
      this,
      request,
      options,
    ));
  }
}
