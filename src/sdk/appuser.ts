/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { appUserList } from "../funcs/appUserList.js";
import { appUserListAppUserCredentials } from "../funcs/appUserListAppUserCredentials.js";
import { appUserListAppUsersForUser } from "../funcs/appUserListAppUsersForUser.js";
import { appUserSearch } from "../funcs/appUserSearch.js";
import { appUserUpdate } from "../funcs/appUserUpdate.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "./models/operations/index.js";
import * as shared from "./models/shared/index.js";
import { unwrapAsync } from "./types/fp.js";

export class AppUser extends ClientSDK {
  /**
   * List
   *
   * @remarks
   * Invokes the c1.api.app.v1.AppUserService.List method.
   */
  async list(
    request: operations.C1ApiAppV1AppUserServiceListRequest,
    options?: RequestOptions,
  ): Promise<operations.C1ApiAppV1AppUserServiceListResponse> {
    return unwrapAsync(appUserList(
      this,
      request,
      options,
    ));
  }

  /**
   * List App User Credentials
   *
   * @remarks
   * Invokes the c1.api.app.v1.AppUserService.ListAppUserCredentials method.
   */
  async listAppUserCredentials(
    request: operations.C1ApiAppV1AppUserServiceListAppUserCredentialsRequest,
    options?: RequestOptions,
  ): Promise<
    operations.C1ApiAppV1AppUserServiceListAppUserCredentialsResponse
  > {
    return unwrapAsync(appUserListAppUserCredentials(
      this,
      request,
      options,
    ));
  }

  /**
   * List App Users For User
   *
   * @remarks
   * Invokes the c1.api.app.v1.AppUserService.ListAppUsersForUser method.
   */
  async listAppUsersForUser(
    request: operations.C1ApiAppV1AppUserServiceListAppUsersForUserRequest,
    options?: RequestOptions,
  ): Promise<operations.C1ApiAppV1AppUserServiceListAppUsersForUserResponse> {
    return unwrapAsync(appUserListAppUsersForUser(
      this,
      request,
      options,
    ));
  }

  /**
   * Update
   *
   * @remarks
   * Update an app user by ID. Only the fields specified in the update mask are updated.
   *  Currently, only the appUserType, and identityUserId fields can be updated.
   */
  async update(
    request: operations.C1ApiAppV1AppUserServiceUpdateRequest,
    options?: RequestOptions,
  ): Promise<operations.C1ApiAppV1AppUserServiceUpdateResponse> {
    return unwrapAsync(appUserUpdate(
      this,
      request,
      options,
    ));
  }

  /**
   * Search
   *
   * @remarks
   * Search app users based on filters specified in the request body.
   */
  async search(
    request?: shared.AppUserServiceSearchRequest | undefined,
    options?: RequestOptions,
  ): Promise<operations.C1ApiAppV1AppUserServiceSearchResponse> {
    return unwrapAsync(appUserSearch(
      this,
      request,
      options,
    ));
  }
}
