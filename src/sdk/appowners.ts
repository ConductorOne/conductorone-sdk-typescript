/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { appOwnersAdd } from "../funcs/appOwnersAdd.js";
import { appOwnersList } from "../funcs/appOwnersList.js";
import { appOwnersRemove } from "../funcs/appOwnersRemove.js";
import { appOwnersSet } from "../funcs/appOwnersSet.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "./models/operations/index.js";
import { unwrapAsync } from "./types/fp.js";

export class AppOwners extends ClientSDK {
  /**
   * List
   *
   * @remarks
   * List owners of an app.
   */
  async list(
    request: operations.C1ApiAppV1AppOwnersListRequest,
    options?: RequestOptions,
  ): Promise<operations.C1ApiAppV1AppOwnersListResponse> {
    return unwrapAsync(appOwnersList(
      this,
      request,
      options,
    ));
  }

  /**
   * Set
   *
   * @remarks
   * Sets the owners for a given app to the specified list of users.
   */
  async set(
    request: operations.C1ApiAppV1AppOwnersSetRequest,
    options?: RequestOptions,
  ): Promise<operations.C1ApiAppV1AppOwnersSetResponse> {
    return unwrapAsync(appOwnersSet(
      this,
      request,
      options,
    ));
  }

  /**
   * Remove
   *
   * @remarks
   * Removes an owner from an app.
   */
  async remove(
    request: operations.C1ApiAppV1AppOwnersRemoveRequest,
    options?: RequestOptions,
  ): Promise<operations.C1ApiAppV1AppOwnersRemoveResponse> {
    return unwrapAsync(appOwnersRemove(
      this,
      request,
      options,
    ));
  }

  /**
   * Add
   *
   * @remarks
   * Adds an owner to an app.
   */
  async add(
    request: operations.C1ApiAppV1AppOwnersAddRequest,
    options?: RequestOptions,
  ): Promise<operations.C1ApiAppV1AppOwnersAddResponse> {
    return unwrapAsync(appOwnersAdd(
      this,
      request,
      options,
    ));
  }
}
