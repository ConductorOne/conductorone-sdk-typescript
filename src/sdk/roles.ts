/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { rolesGet } from "../funcs/rolesGet.js";
import { rolesList } from "../funcs/rolesList.js";
import { rolesUpdate } from "../funcs/rolesUpdate.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "./models/operations/index.js";
import { unwrapAsync } from "./types/fp.js";

export class Roles extends ClientSDK {
  /**
   * List
   *
   * @remarks
   * List all roles for the current user.
   */
  async list(
    request?: operations.C1ApiIamV1RolesListRequest | undefined,
    options?: RequestOptions,
  ): Promise<operations.C1ApiIamV1RolesListResponse> {
    return unwrapAsync(rolesList(
      this,
      request,
      options,
    ));
  }

  /**
   * Get
   *
   * @remarks
   * Get a role by id.
   */
  async get(
    request: operations.C1ApiIamV1RolesGetRequest,
    options?: RequestOptions,
  ): Promise<operations.C1ApiIamV1RolesGetResponse> {
    return unwrapAsync(rolesGet(
      this,
      request,
      options,
    ));
  }

  /**
   * Update
   *
   * @remarks
   * Update a role by passing a Role object.
   */
  async update(
    request: operations.C1ApiIamV1RolesUpdateRequest,
    options?: RequestOptions,
  ): Promise<operations.C1ApiIamV1RolesUpdateResponse> {
    return unwrapAsync(rolesUpdate(
      this,
      request,
      options,
    ));
  }
}
