/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
/** @internal */
export const ErroredAction$inboundSchema = z.object({
    description: z.nullable(z.string()).optional(),
    errorCode: z.nullable(z.string()).optional(),
    erroredAt: z.nullable(z.string().datetime({ offset: true }).transform(v => new Date(v))).optional(),
});
/** @internal */
export const ErroredAction$outboundSchema = z.object({
    description: z.nullable(z.string()).optional(),
    errorCode: z.nullable(z.string()).optional(),
    erroredAt: z.nullable(z.date().transform(v => v.toISOString())).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ErroredAction$;
(function (ErroredAction$) {
    /** @deprecated use `ErroredAction$inboundSchema` instead. */
    ErroredAction$.inboundSchema = ErroredAction$inboundSchema;
    /** @deprecated use `ErroredAction$outboundSchema` instead. */
    ErroredAction$.outboundSchema = ErroredAction$outboundSchema;
})(ErroredAction$ || (ErroredAction$ = {}));
export function erroredActionToJSON(erroredAction) {
    return JSON.stringify(ErroredAction$outboundSchema.parse(erroredAction));
}
export function erroredActionFromJSON(jsonString) {
    return safeParse(jsonString, (x) => ErroredAction$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ErroredAction' from JSON`);
}
