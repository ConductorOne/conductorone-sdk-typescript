/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  Role,
  Role$inboundSchema,
  Role$Outbound,
  Role$outboundSchema,
} from "./role.js";

/**
 * The GetRolesResponse message contains the retrieved role.
 */
export type GetRolesResponse = {
  role?: Role | null | undefined;
};

/** @internal */
export const GetRolesResponse$inboundSchema: z.ZodType<
  GetRolesResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  role: z.nullable(Role$inboundSchema).optional(),
});

/** @internal */
export type GetRolesResponse$Outbound = {
  role?: Role$Outbound | null | undefined;
};

/** @internal */
export const GetRolesResponse$outboundSchema: z.ZodType<
  GetRolesResponse$Outbound,
  z.ZodTypeDef,
  GetRolesResponse
> = z.object({
  role: z.nullable(Role$outboundSchema).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetRolesResponse$ {
  /** @deprecated use `GetRolesResponse$inboundSchema` instead. */
  export const inboundSchema = GetRolesResponse$inboundSchema;
  /** @deprecated use `GetRolesResponse$outboundSchema` instead. */
  export const outboundSchema = GetRolesResponse$outboundSchema;
  /** @deprecated use `GetRolesResponse$Outbound` instead. */
  export type Outbound = GetRolesResponse$Outbound;
}

export function getRolesResponseToJSON(
  getRolesResponse: GetRolesResponse,
): string {
  return JSON.stringify(
    GetRolesResponse$outboundSchema.parse(getRolesResponse),
  );
}

export function getRolesResponseFromJSON(
  jsonString: string,
): SafeParseResult<GetRolesResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetRolesResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetRolesResponse' from JSON`,
  );
}
