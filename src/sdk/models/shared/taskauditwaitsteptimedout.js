/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
/** @internal */
export const TaskAuditWaitStepTimedOut$inboundSchema = z.object({
    condition: z.nullable(z.string()).optional(),
    stepId: z.nullable(z.string()).optional(),
    timedOutAt: z.nullable(z.string().datetime({ offset: true }).transform(v => new Date(v))).optional(),
});
/** @internal */
export const TaskAuditWaitStepTimedOut$outboundSchema = z.object({
    condition: z.nullable(z.string()).optional(),
    stepId: z.nullable(z.string()).optional(),
    timedOutAt: z.nullable(z.date().transform(v => v.toISOString())).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var TaskAuditWaitStepTimedOut$;
(function (TaskAuditWaitStepTimedOut$) {
    /** @deprecated use `TaskAuditWaitStepTimedOut$inboundSchema` instead. */
    TaskAuditWaitStepTimedOut$.inboundSchema = TaskAuditWaitStepTimedOut$inboundSchema;
    /** @deprecated use `TaskAuditWaitStepTimedOut$outboundSchema` instead. */
    TaskAuditWaitStepTimedOut$.outboundSchema = TaskAuditWaitStepTimedOut$outboundSchema;
})(TaskAuditWaitStepTimedOut$ || (TaskAuditWaitStepTimedOut$ = {}));
export function taskAuditWaitStepTimedOutToJSON(taskAuditWaitStepTimedOut) {
    return JSON.stringify(TaskAuditWaitStepTimedOut$outboundSchema.parse(taskAuditWaitStepTimedOut));
}
export function taskAuditWaitStepTimedOutFromJSON(jsonString) {
    return safeParse(jsonString, (x) => TaskAuditWaitStepTimedOut$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'TaskAuditWaitStepTimedOut' from JSON`);
}
