/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
/** @internal */
export const UserAttributeMappingSource$inboundSchema = z.object({
    appId: z.nullable(z.string()).optional(),
    appUserId: z.nullable(z.string()).optional(),
    appUserProfileAttributeKey: z.nullable(z.string()).optional(),
    userAttributeMappingId: z.nullable(z.string()).optional(),
    value: z.nullable(z.string()).optional(),
});
/** @internal */
export const UserAttributeMappingSource$outboundSchema = z.object({
    appId: z.nullable(z.string()).optional(),
    appUserId: z.nullable(z.string()).optional(),
    appUserProfileAttributeKey: z.nullable(z.string()).optional(),
    userAttributeMappingId: z.nullable(z.string()).optional(),
    value: z.nullable(z.string()).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var UserAttributeMappingSource$;
(function (UserAttributeMappingSource$) {
    /** @deprecated use `UserAttributeMappingSource$inboundSchema` instead. */
    UserAttributeMappingSource$.inboundSchema = UserAttributeMappingSource$inboundSchema;
    /** @deprecated use `UserAttributeMappingSource$outboundSchema` instead. */
    UserAttributeMappingSource$.outboundSchema = UserAttributeMappingSource$outboundSchema;
})(UserAttributeMappingSource$ || (UserAttributeMappingSource$ = {}));
export function userAttributeMappingSourceToJSON(userAttributeMappingSource) {
    return JSON.stringify(UserAttributeMappingSource$outboundSchema.parse(userAttributeMappingSource));
}
export function userAttributeMappingSourceFromJSON(jsonString) {
    return safeParse(jsonString, (x) => UserAttributeMappingSource$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'UserAttributeMappingSource' from JSON`);
}
