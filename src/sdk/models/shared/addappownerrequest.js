/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
/** @internal */
export const AddAppOwnerRequest$inboundSchema = z.object({});
/** @internal */
export const AddAppOwnerRequest$outboundSchema = z.object({});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var AddAppOwnerRequest$;
(function (AddAppOwnerRequest$) {
    /** @deprecated use `AddAppOwnerRequest$inboundSchema` instead. */
    AddAppOwnerRequest$.inboundSchema = AddAppOwnerRequest$inboundSchema;
    /** @deprecated use `AddAppOwnerRequest$outboundSchema` instead. */
    AddAppOwnerRequest$.outboundSchema = AddAppOwnerRequest$outboundSchema;
})(AddAppOwnerRequest$ || (AddAppOwnerRequest$ = {}));
export function addAppOwnerRequestToJSON(addAppOwnerRequest) {
    return JSON.stringify(AddAppOwnerRequest$outboundSchema.parse(addAppOwnerRequest));
}
export function addAppOwnerRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => AddAppOwnerRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'AddAppOwnerRequest' from JSON`);
}
