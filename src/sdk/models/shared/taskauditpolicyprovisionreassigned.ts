/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  User,
  User$inboundSchema,
  User$Outbound,
  User$outboundSchema,
} from "./user.js";

/**
 * The TaskAuditPolicyProvisionReassigned message.
 */
export type TaskAuditPolicyProvisionReassigned = {
  /**
   * The newPolicyStepId field.
   */
  newPolicyStepId?: string | null | undefined;
  /**
   * The newUsers field.
   */
  newUsers?: Array<string> | null | undefined;
  /**
   * The oldPolicyStepId field.
   */
  oldPolicyStepId?: string | null | undefined;
  /**
   * The users field.
   */
  users?: Array<User> | null | undefined;
};

/** @internal */
export const TaskAuditPolicyProvisionReassigned$inboundSchema: z.ZodType<
  TaskAuditPolicyProvisionReassigned,
  z.ZodTypeDef,
  unknown
> = z.object({
  newPolicyStepId: z.nullable(z.string()).optional(),
  newUsers: z.nullable(z.array(z.string())).optional(),
  oldPolicyStepId: z.nullable(z.string()).optional(),
  users: z.nullable(z.array(User$inboundSchema)).optional(),
});

/** @internal */
export type TaskAuditPolicyProvisionReassigned$Outbound = {
  newPolicyStepId?: string | null | undefined;
  newUsers?: Array<string> | null | undefined;
  oldPolicyStepId?: string | null | undefined;
  users?: Array<User$Outbound> | null | undefined;
};

/** @internal */
export const TaskAuditPolicyProvisionReassigned$outboundSchema: z.ZodType<
  TaskAuditPolicyProvisionReassigned$Outbound,
  z.ZodTypeDef,
  TaskAuditPolicyProvisionReassigned
> = z.object({
  newPolicyStepId: z.nullable(z.string()).optional(),
  newUsers: z.nullable(z.array(z.string())).optional(),
  oldPolicyStepId: z.nullable(z.string()).optional(),
  users: z.nullable(z.array(User$outboundSchema)).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TaskAuditPolicyProvisionReassigned$ {
  /** @deprecated use `TaskAuditPolicyProvisionReassigned$inboundSchema` instead. */
  export const inboundSchema = TaskAuditPolicyProvisionReassigned$inboundSchema;
  /** @deprecated use `TaskAuditPolicyProvisionReassigned$outboundSchema` instead. */
  export const outboundSchema =
    TaskAuditPolicyProvisionReassigned$outboundSchema;
  /** @deprecated use `TaskAuditPolicyProvisionReassigned$Outbound` instead. */
  export type Outbound = TaskAuditPolicyProvisionReassigned$Outbound;
}

export function taskAuditPolicyProvisionReassignedToJSON(
  taskAuditPolicyProvisionReassigned: TaskAuditPolicyProvisionReassigned,
): string {
  return JSON.stringify(
    TaskAuditPolicyProvisionReassigned$outboundSchema.parse(
      taskAuditPolicyProvisionReassigned,
    ),
  );
}

export function taskAuditPolicyProvisionReassignedFromJSON(
  jsonString: string,
): SafeParseResult<TaskAuditPolicyProvisionReassigned, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      TaskAuditPolicyProvisionReassigned$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'TaskAuditPolicyProvisionReassigned' from JSON`,
  );
}
