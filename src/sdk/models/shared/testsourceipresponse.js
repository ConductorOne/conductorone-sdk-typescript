/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Status$inboundSchema, Status$outboundSchema, } from "./status.js";
/** @internal */
export const TestSourceIPResponse$inboundSchema = z.object({
    allowed: z.nullable(z.boolean()).optional(),
    checkedIp: z.nullable(z.string()).optional(),
    details: z.nullable(Status$inboundSchema).optional(),
});
/** @internal */
export const TestSourceIPResponse$outboundSchema = z.object({
    allowed: z.nullable(z.boolean()).optional(),
    checkedIp: z.nullable(z.string()).optional(),
    details: z.nullable(Status$outboundSchema).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var TestSourceIPResponse$;
(function (TestSourceIPResponse$) {
    /** @deprecated use `TestSourceIPResponse$inboundSchema` instead. */
    TestSourceIPResponse$.inboundSchema = TestSourceIPResponse$inboundSchema;
    /** @deprecated use `TestSourceIPResponse$outboundSchema` instead. */
    TestSourceIPResponse$.outboundSchema = TestSourceIPResponse$outboundSchema;
})(TestSourceIPResponse$ || (TestSourceIPResponse$ = {}));
export function testSourceIPResponseToJSON(testSourceIPResponse) {
    return JSON.stringify(TestSourceIPResponse$outboundSchema.parse(testSourceIPResponse));
}
export function testSourceIPResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => TestSourceIPResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'TestSourceIPResponse' from JSON`);
}
