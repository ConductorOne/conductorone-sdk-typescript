/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * The DoNotSave message.
 */
export type DoNotSave = {};

/** @internal */
export const DoNotSave$inboundSchema: z.ZodType<
  DoNotSave,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type DoNotSave$Outbound = {};

/** @internal */
export const DoNotSave$outboundSchema: z.ZodType<
  DoNotSave$Outbound,
  z.ZodTypeDef,
  DoNotSave
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DoNotSave$ {
  /** @deprecated use `DoNotSave$inboundSchema` instead. */
  export const inboundSchema = DoNotSave$inboundSchema;
  /** @deprecated use `DoNotSave$outboundSchema` instead. */
  export const outboundSchema = DoNotSave$outboundSchema;
  /** @deprecated use `DoNotSave$Outbound` instead. */
  export type Outbound = DoNotSave$Outbound;
}

export function doNotSaveToJSON(doNotSave: DoNotSave): string {
  return JSON.stringify(DoNotSave$outboundSchema.parse(doNotSave));
}

export function doNotSaveFromJSON(
  jsonString: string,
): SafeParseResult<DoNotSave, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DoNotSave$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DoNotSave' from JSON`,
  );
}
