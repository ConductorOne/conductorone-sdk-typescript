/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { AppResourceRef$inboundSchema, AppResourceRef$outboundSchema, } from "./appresourceref.js";
/** @internal */
export const SearchAppResourcesRequest$inboundSchema = z.object({
    appId: z.nullable(z.string()).optional(),
    appUserIds: z.nullable(z.array(z.string())).optional(),
    excludeDeletedResourceBindings: z.nullable(z.boolean()).optional(),
    excludeResourceIds: z.nullable(z.array(z.string())).optional(),
    excludeResourceTypeTraitIds: z.nullable(z.array(z.string())).optional(),
    pageSize: z.nullable(z.number().int()).optional(),
    pageToken: z.nullable(z.string()).optional(),
    query: z.nullable(z.string()).optional(),
    refs: z.nullable(z.array(AppResourceRef$inboundSchema)).optional(),
    resourceIds: z.nullable(z.array(z.string())).optional(),
    resourceTypeIds: z.nullable(z.array(z.string())).optional(),
    resourceTypeTraitIds: z.nullable(z.array(z.string())).optional(),
});
/** @internal */
export const SearchAppResourcesRequest$outboundSchema = z.object({
    appId: z.nullable(z.string()).optional(),
    appUserIds: z.nullable(z.array(z.string())).optional(),
    excludeDeletedResourceBindings: z.nullable(z.boolean()).optional(),
    excludeResourceIds: z.nullable(z.array(z.string())).optional(),
    excludeResourceTypeTraitIds: z.nullable(z.array(z.string())).optional(),
    pageSize: z.nullable(z.number().int()).optional(),
    pageToken: z.nullable(z.string()).optional(),
    query: z.nullable(z.string()).optional(),
    refs: z.nullable(z.array(AppResourceRef$outboundSchema)).optional(),
    resourceIds: z.nullable(z.array(z.string())).optional(),
    resourceTypeIds: z.nullable(z.array(z.string())).optional(),
    resourceTypeTraitIds: z.nullable(z.array(z.string())).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var SearchAppResourcesRequest$;
(function (SearchAppResourcesRequest$) {
    /** @deprecated use `SearchAppResourcesRequest$inboundSchema` instead. */
    SearchAppResourcesRequest$.inboundSchema = SearchAppResourcesRequest$inboundSchema;
    /** @deprecated use `SearchAppResourcesRequest$outboundSchema` instead. */
    SearchAppResourcesRequest$.outboundSchema = SearchAppResourcesRequest$outboundSchema;
})(SearchAppResourcesRequest$ || (SearchAppResourcesRequest$ = {}));
export function searchAppResourcesRequestToJSON(searchAppResourcesRequest) {
    return JSON.stringify(SearchAppResourcesRequest$outboundSchema.parse(searchAppResourcesRequest));
}
export function searchAppResourcesRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => SearchAppResourcesRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'SearchAppResourcesRequest' from JSON`);
}
