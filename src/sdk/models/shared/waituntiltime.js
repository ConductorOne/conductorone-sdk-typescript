/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
/** @internal */
export const WaitUntilTime$inboundSchema = z.object({
    hours: z.nullable(z.number().int()).optional(),
    minutes: z.nullable(z.number().int()).optional(),
    timezone: z.nullable(z.string()).optional(),
});
/** @internal */
export const WaitUntilTime$outboundSchema = z.object({
    hours: z.nullable(z.number().int()).optional(),
    minutes: z.nullable(z.number().int()).optional(),
    timezone: z.nullable(z.string()).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var WaitUntilTime$;
(function (WaitUntilTime$) {
    /** @deprecated use `WaitUntilTime$inboundSchema` instead. */
    WaitUntilTime$.inboundSchema = WaitUntilTime$inboundSchema;
    /** @deprecated use `WaitUntilTime$outboundSchema` instead. */
    WaitUntilTime$.outboundSchema = WaitUntilTime$outboundSchema;
})(WaitUntilTime$ || (WaitUntilTime$ = {}));
export function waitUntilTimeToJSON(waitUntilTime) {
    return JSON.stringify(WaitUntilTime$outboundSchema.parse(waitUntilTime));
}
export function waitUntilTimeFromJSON(jsonString) {
    return safeParse(jsonString, (x) => WaitUntilTime$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'WaitUntilTime' from JSON`);
}
