/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { PersonalClientInput$inboundSchema, PersonalClientInput$outboundSchema, } from "./personalclientinput.js";
/** @internal */
export const PersonalClientServiceUpdateRequest$inboundSchema = z.object({
    client: z.nullable(PersonalClientInput$inboundSchema).optional(),
    updateMask: z.nullable(z.string()).optional(),
});
/** @internal */
export const PersonalClientServiceUpdateRequest$outboundSchema = z.object({
    client: z.nullable(PersonalClientInput$outboundSchema).optional(),
    updateMask: z.nullable(z.string()).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var PersonalClientServiceUpdateRequest$;
(function (PersonalClientServiceUpdateRequest$) {
    /** @deprecated use `PersonalClientServiceUpdateRequest$inboundSchema` instead. */
    PersonalClientServiceUpdateRequest$.inboundSchema = PersonalClientServiceUpdateRequest$inboundSchema;
    /** @deprecated use `PersonalClientServiceUpdateRequest$outboundSchema` instead. */
    PersonalClientServiceUpdateRequest$.outboundSchema = PersonalClientServiceUpdateRequest$outboundSchema;
})(PersonalClientServiceUpdateRequest$ || (PersonalClientServiceUpdateRequest$ = {}));
export function personalClientServiceUpdateRequestToJSON(personalClientServiceUpdateRequest) {
    return JSON.stringify(PersonalClientServiceUpdateRequest$outboundSchema.parse(personalClientServiceUpdateRequest));
}
export function personalClientServiceUpdateRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => PersonalClientServiceUpdateRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'PersonalClientServiceUpdateRequest' from JSON`);
}
