/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Webhook1$inboundSchema, Webhook1$outboundSchema, } from "./webhook1.js";
/** @internal */
export const WebhooksSearchResponse$inboundSchema = z.object({
    list: z.nullable(z.array(Webhook1$inboundSchema)).optional(),
    nextPageToken: z.nullable(z.string()).optional(),
});
/** @internal */
export const WebhooksSearchResponse$outboundSchema = z.object({
    list: z.nullable(z.array(Webhook1$outboundSchema)).optional(),
    nextPageToken: z.nullable(z.string()).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var WebhooksSearchResponse$;
(function (WebhooksSearchResponse$) {
    /** @deprecated use `WebhooksSearchResponse$inboundSchema` instead. */
    WebhooksSearchResponse$.inboundSchema = WebhooksSearchResponse$inboundSchema;
    /** @deprecated use `WebhooksSearchResponse$outboundSchema` instead. */
    WebhooksSearchResponse$.outboundSchema = WebhooksSearchResponse$outboundSchema;
})(WebhooksSearchResponse$ || (WebhooksSearchResponse$ = {}));
export function webhooksSearchResponseToJSON(webhooksSearchResponse) {
    return JSON.stringify(WebhooksSearchResponse$outboundSchema.parse(webhooksSearchResponse));
}
export function webhooksSearchResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => WebhooksSearchResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'WebhooksSearchResponse' from JSON`);
}
