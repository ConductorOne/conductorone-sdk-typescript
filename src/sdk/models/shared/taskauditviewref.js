/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
/** @internal */
export const TaskAuditViewRef$inboundSchema = z.object({
    id: z.nullable(z.string()).optional(),
});
/** @internal */
export const TaskAuditViewRef$outboundSchema = z.object({
    id: z.nullable(z.string()).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var TaskAuditViewRef$;
(function (TaskAuditViewRef$) {
    /** @deprecated use `TaskAuditViewRef$inboundSchema` instead. */
    TaskAuditViewRef$.inboundSchema = TaskAuditViewRef$inboundSchema;
    /** @deprecated use `TaskAuditViewRef$outboundSchema` instead. */
    TaskAuditViewRef$.outboundSchema = TaskAuditViewRef$outboundSchema;
})(TaskAuditViewRef$ || (TaskAuditViewRef$ = {}));
export function taskAuditViewRefToJSON(taskAuditViewRef) {
    return JSON.stringify(TaskAuditViewRef$outboundSchema.parse(taskAuditViewRef));
}
export function taskAuditViewRefFromJSON(jsonString) {
    return safeParse(jsonString, (x) => TaskAuditViewRef$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'TaskAuditViewRef' from JSON`);
}
