/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { BoolRules$inboundSchema, BoolRules$outboundSchema, } from "./boolrules.js";
import { CheckboxField$inboundSchema, CheckboxField$outboundSchema, } from "./checkboxfield.js";
/** @internal */
export const BoolField$inboundSchema = z.object({
    checkboxField: z.nullable(CheckboxField$inboundSchema).optional(),
    defaultValue: z.nullable(z.boolean()).optional(),
    rules: z.nullable(BoolRules$inboundSchema).optional(),
});
/** @internal */
export const BoolField$outboundSchema = z.object({
    checkboxField: z.nullable(CheckboxField$outboundSchema).optional(),
    defaultValue: z.nullable(z.boolean()).optional(),
    rules: z.nullable(BoolRules$outboundSchema).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var BoolField$;
(function (BoolField$) {
    /** @deprecated use `BoolField$inboundSchema` instead. */
    BoolField$.inboundSchema = BoolField$inboundSchema;
    /** @deprecated use `BoolField$outboundSchema` instead. */
    BoolField$.outboundSchema = BoolField$outboundSchema;
})(BoolField$ || (BoolField$ = {}));
export function boolFieldToJSON(boolField) {
    return JSON.stringify(BoolField$outboundSchema.parse(boolField));
}
export function boolFieldFromJSON(jsonString) {
    return safeParse(jsonString, (x) => BoolField$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'BoolField' from JSON`);
}
