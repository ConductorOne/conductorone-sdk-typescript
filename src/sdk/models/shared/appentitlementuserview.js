/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { AppEntitlementRef$inboundSchema, AppEntitlementRef$outboundSchema, } from "./appentitlementref.js";
import { AppUserView$inboundSchema, AppUserView$outboundSchema, } from "./appuserview.js";
/** @internal */
export const AppEntitlementUserView$inboundSchema = z.object({
    appEntitlementUserBindingCreatedAt: z.nullable(z.string().datetime({ offset: true }).transform(v => new Date(v))).optional(),
    appEntitlementUserBindingDeprovisionAt: z.nullable(z.string().datetime({ offset: true }).transform(v => new Date(v))).optional(),
    appUser: z.nullable(AppUserView$inboundSchema).optional(),
    grantSources: z.nullable(z.array(AppEntitlementRef$inboundSchema)).optional(),
});
/** @internal */
export const AppEntitlementUserView$outboundSchema = z.object({
    appEntitlementUserBindingCreatedAt: z.nullable(z.date().transform(v => v.toISOString())).optional(),
    appEntitlementUserBindingDeprovisionAt: z.nullable(z.date().transform(v => v.toISOString())).optional(),
    appUser: z.nullable(AppUserView$outboundSchema).optional(),
    grantSources: z.nullable(z.array(AppEntitlementRef$outboundSchema))
        .optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var AppEntitlementUserView$;
(function (AppEntitlementUserView$) {
    /** @deprecated use `AppEntitlementUserView$inboundSchema` instead. */
    AppEntitlementUserView$.inboundSchema = AppEntitlementUserView$inboundSchema;
    /** @deprecated use `AppEntitlementUserView$outboundSchema` instead. */
    AppEntitlementUserView$.outboundSchema = AppEntitlementUserView$outboundSchema;
})(AppEntitlementUserView$ || (AppEntitlementUserView$ = {}));
export function appEntitlementUserViewToJSON(appEntitlementUserView) {
    return JSON.stringify(AppEntitlementUserView$outboundSchema.parse(appEntitlementUserView));
}
export function appEntitlementUserViewFromJSON(jsonString) {
    return safeParse(jsonString, (x) => AppEntitlementUserView$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'AppEntitlementUserView' from JSON`);
}
