/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Role$inboundSchema, Role$outboundSchema, } from "./role.js";
/** @internal */
export const ListRolesResponse$inboundSchema = z.object({
    list: z.nullable(z.array(Role$inboundSchema)).optional(),
    nextPageToken: z.nullable(z.string()).optional(),
});
/** @internal */
export const ListRolesResponse$outboundSchema = z.object({
    list: z.nullable(z.array(Role$outboundSchema)).optional(),
    nextPageToken: z.nullable(z.string()).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ListRolesResponse$;
(function (ListRolesResponse$) {
    /** @deprecated use `ListRolesResponse$inboundSchema` instead. */
    ListRolesResponse$.inboundSchema = ListRolesResponse$inboundSchema;
    /** @deprecated use `ListRolesResponse$outboundSchema` instead. */
    ListRolesResponse$.outboundSchema = ListRolesResponse$outboundSchema;
})(ListRolesResponse$ || (ListRolesResponse$ = {}));
export function listRolesResponseToJSON(listRolesResponse) {
    return JSON.stringify(ListRolesResponse$outboundSchema.parse(listRolesResponse));
}
export function listRolesResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => ListRolesResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ListRolesResponse' from JSON`);
}
