/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
/** @internal */
export const WebhookSourcePolicyPostAction$inboundSchema = z.object({
    ticketId: z.nullable(z.string()).optional(),
});
/** @internal */
export const WebhookSourcePolicyPostAction$outboundSchema = z.object({
    ticketId: z.nullable(z.string()).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var WebhookSourcePolicyPostAction$;
(function (WebhookSourcePolicyPostAction$) {
    /** @deprecated use `WebhookSourcePolicyPostAction$inboundSchema` instead. */
    WebhookSourcePolicyPostAction$.inboundSchema = WebhookSourcePolicyPostAction$inboundSchema;
    /** @deprecated use `WebhookSourcePolicyPostAction$outboundSchema` instead. */
    WebhookSourcePolicyPostAction$.outboundSchema = WebhookSourcePolicyPostAction$outboundSchema;
})(WebhookSourcePolicyPostAction$ || (WebhookSourcePolicyPostAction$ = {}));
export function webhookSourcePolicyPostActionToJSON(webhookSourcePolicyPostAction) {
    return JSON.stringify(WebhookSourcePolicyPostAction$outboundSchema.parse(webhookSourcePolicyPostAction));
}
export function webhookSourcePolicyPostActionFromJSON(jsonString) {
    return safeParse(jsonString, (x) => WebhookSourcePolicyPostAction$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'WebhookSourcePolicyPostAction' from JSON`);
}
