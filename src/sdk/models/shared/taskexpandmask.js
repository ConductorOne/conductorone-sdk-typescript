/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
/** @internal */
export const TaskExpandMask$inboundSchema = z.object({
    paths: z.nullable(z.array(z.string())).optional(),
});
/** @internal */
export const TaskExpandMask$outboundSchema = z.object({
    paths: z.nullable(z.array(z.string())).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var TaskExpandMask$;
(function (TaskExpandMask$) {
    /** @deprecated use `TaskExpandMask$inboundSchema` instead. */
    TaskExpandMask$.inboundSchema = TaskExpandMask$inboundSchema;
    /** @deprecated use `TaskExpandMask$outboundSchema` instead. */
    TaskExpandMask$.outboundSchema = TaskExpandMask$outboundSchema;
})(TaskExpandMask$ || (TaskExpandMask$ = {}));
export function taskExpandMaskToJSON(taskExpandMask) {
    return JSON.stringify(TaskExpandMask$outboundSchema.parse(taskExpandMask));
}
export function taskExpandMaskFromJSON(jsonString) {
    return safeParse(jsonString, (x) => TaskExpandMask$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'TaskExpandMask' from JSON`);
}
