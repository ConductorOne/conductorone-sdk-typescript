/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { FunctionT$inboundSchema, FunctionT$outboundSchema, } from "./function.js";
/** @internal */
export const FunctionsServiceUpdateFunctionResponse$inboundSchema = z.object({
    function: z.nullable(FunctionT$inboundSchema).optional(),
});
/** @internal */
export const FunctionsServiceUpdateFunctionResponse$outboundSchema = z.object({
    function: z.nullable(FunctionT$outboundSchema).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var FunctionsServiceUpdateFunctionResponse$;
(function (FunctionsServiceUpdateFunctionResponse$) {
    /** @deprecated use `FunctionsServiceUpdateFunctionResponse$inboundSchema` instead. */
    FunctionsServiceUpdateFunctionResponse$.inboundSchema = FunctionsServiceUpdateFunctionResponse$inboundSchema;
    /** @deprecated use `FunctionsServiceUpdateFunctionResponse$outboundSchema` instead. */
    FunctionsServiceUpdateFunctionResponse$.outboundSchema = FunctionsServiceUpdateFunctionResponse$outboundSchema;
})(FunctionsServiceUpdateFunctionResponse$ || (FunctionsServiceUpdateFunctionResponse$ = {}));
export function functionsServiceUpdateFunctionResponseToJSON(functionsServiceUpdateFunctionResponse) {
    return JSON.stringify(FunctionsServiceUpdateFunctionResponse$outboundSchema.parse(functionsServiceUpdateFunctionResponse));
}
export function functionsServiceUpdateFunctionResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => FunctionsServiceUpdateFunctionResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'FunctionsServiceUpdateFunctionResponse' from JSON`);
}
