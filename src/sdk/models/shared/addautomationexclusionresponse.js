/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
/** @internal */
export const AddAutomationExclusionResponse$inboundSchema = z.object({});
/** @internal */
export const AddAutomationExclusionResponse$outboundSchema = z.object({});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var AddAutomationExclusionResponse$;
(function (AddAutomationExclusionResponse$) {
    /** @deprecated use `AddAutomationExclusionResponse$inboundSchema` instead. */
    AddAutomationExclusionResponse$.inboundSchema = AddAutomationExclusionResponse$inboundSchema;
    /** @deprecated use `AddAutomationExclusionResponse$outboundSchema` instead. */
    AddAutomationExclusionResponse$.outboundSchema = AddAutomationExclusionResponse$outboundSchema;
})(AddAutomationExclusionResponse$ || (AddAutomationExclusionResponse$ = {}));
export function addAutomationExclusionResponseToJSON(addAutomationExclusionResponse) {
    return JSON.stringify(AddAutomationExclusionResponse$outboundSchema.parse(addAutomationExclusionResponse));
}
export function addAutomationExclusionResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => AddAutomationExclusionResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'AddAutomationExclusionResponse' from JSON`);
}
