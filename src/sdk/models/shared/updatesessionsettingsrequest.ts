/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  SessionSettings,
  SessionSettings$inboundSchema,
  SessionSettings$Outbound,
  SessionSettings$outboundSchema,
} from "./sessionsettings.js";

/**
 * The UpdateSessionSettingsRequest message.
 */
export type UpdateSessionSettingsRequest = {
  sessionSettings?: SessionSettings | null | undefined;
  updateMask?: string | null | undefined;
};

/** @internal */
export const UpdateSessionSettingsRequest$inboundSchema: z.ZodType<
  UpdateSessionSettingsRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  sessionSettings: z.nullable(SessionSettings$inboundSchema).optional(),
  updateMask: z.nullable(z.string()).optional(),
});

/** @internal */
export type UpdateSessionSettingsRequest$Outbound = {
  sessionSettings?: SessionSettings$Outbound | null | undefined;
  updateMask?: string | null | undefined;
};

/** @internal */
export const UpdateSessionSettingsRequest$outboundSchema: z.ZodType<
  UpdateSessionSettingsRequest$Outbound,
  z.ZodTypeDef,
  UpdateSessionSettingsRequest
> = z.object({
  sessionSettings: z.nullable(SessionSettings$outboundSchema).optional(),
  updateMask: z.nullable(z.string()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateSessionSettingsRequest$ {
  /** @deprecated use `UpdateSessionSettingsRequest$inboundSchema` instead. */
  export const inboundSchema = UpdateSessionSettingsRequest$inboundSchema;
  /** @deprecated use `UpdateSessionSettingsRequest$outboundSchema` instead. */
  export const outboundSchema = UpdateSessionSettingsRequest$outboundSchema;
  /** @deprecated use `UpdateSessionSettingsRequest$Outbound` instead. */
  export type Outbound = UpdateSessionSettingsRequest$Outbound;
}

export function updateSessionSettingsRequestToJSON(
  updateSessionSettingsRequest: UpdateSessionSettingsRequest,
): string {
  return JSON.stringify(
    UpdateSessionSettingsRequest$outboundSchema.parse(
      updateSessionSettingsRequest,
    ),
  );
}

export function updateSessionSettingsRequestFromJSON(
  jsonString: string,
): SafeParseResult<UpdateSessionSettingsRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateSessionSettingsRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateSessionSettingsRequest' from JSON`,
  );
}
