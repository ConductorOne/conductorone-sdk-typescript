/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
/** @internal */
export const TaskAuditExpressionPolicyStepError$inboundSchema = z.object({
    error: z.nullable(z.string()).optional(),
});
/** @internal */
export const TaskAuditExpressionPolicyStepError$outboundSchema = z.object({
    error: z.nullable(z.string()).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var TaskAuditExpressionPolicyStepError$;
(function (TaskAuditExpressionPolicyStepError$) {
    /** @deprecated use `TaskAuditExpressionPolicyStepError$inboundSchema` instead. */
    TaskAuditExpressionPolicyStepError$.inboundSchema = TaskAuditExpressionPolicyStepError$inboundSchema;
    /** @deprecated use `TaskAuditExpressionPolicyStepError$outboundSchema` instead. */
    TaskAuditExpressionPolicyStepError$.outboundSchema = TaskAuditExpressionPolicyStepError$outboundSchema;
})(TaskAuditExpressionPolicyStepError$ || (TaskAuditExpressionPolicyStepError$ = {}));
export function taskAuditExpressionPolicyStepErrorToJSON(taskAuditExpressionPolicyStepError) {
    return JSON.stringify(TaskAuditExpressionPolicyStepError$outboundSchema.parse(taskAuditExpressionPolicyStepError));
}
export function taskAuditExpressionPolicyStepErrorFromJSON(jsonString) {
    return safeParse(jsonString, (x) => TaskAuditExpressionPolicyStepError$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'TaskAuditExpressionPolicyStepError' from JSON`);
}
