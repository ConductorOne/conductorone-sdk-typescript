/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * Empty response with a status code indicating success.
 */
export type RemoveAppOwnerResponse = {};

/** @internal */
export const RemoveAppOwnerResponse$inboundSchema: z.ZodType<
  RemoveAppOwnerResponse,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type RemoveAppOwnerResponse$Outbound = {};

/** @internal */
export const RemoveAppOwnerResponse$outboundSchema: z.ZodType<
  RemoveAppOwnerResponse$Outbound,
  z.ZodTypeDef,
  RemoveAppOwnerResponse
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RemoveAppOwnerResponse$ {
  /** @deprecated use `RemoveAppOwnerResponse$inboundSchema` instead. */
  export const inboundSchema = RemoveAppOwnerResponse$inboundSchema;
  /** @deprecated use `RemoveAppOwnerResponse$outboundSchema` instead. */
  export const outboundSchema = RemoveAppOwnerResponse$outboundSchema;
  /** @deprecated use `RemoveAppOwnerResponse$Outbound` instead. */
  export type Outbound = RemoveAppOwnerResponse$Outbound;
}

export function removeAppOwnerResponseToJSON(
  removeAppOwnerResponse: RemoveAppOwnerResponse,
): string {
  return JSON.stringify(
    RemoveAppOwnerResponse$outboundSchema.parse(removeAppOwnerResponse),
  );
}

export function removeAppOwnerResponseFromJSON(
  jsonString: string,
): SafeParseResult<RemoveAppOwnerResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => RemoveAppOwnerResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'RemoveAppOwnerResponse' from JSON`,
  );
}
