/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * Empty response with a status code indicating success.
 */
export type RequestCatalogManagementServiceDeleteResponse = {};

/** @internal */
export const RequestCatalogManagementServiceDeleteResponse$inboundSchema:
  z.ZodType<
    RequestCatalogManagementServiceDeleteResponse,
    z.ZodTypeDef,
    unknown
  > = z.object({});

/** @internal */
export type RequestCatalogManagementServiceDeleteResponse$Outbound = {};

/** @internal */
export const RequestCatalogManagementServiceDeleteResponse$outboundSchema:
  z.ZodType<
    RequestCatalogManagementServiceDeleteResponse$Outbound,
    z.ZodTypeDef,
    RequestCatalogManagementServiceDeleteResponse
  > = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RequestCatalogManagementServiceDeleteResponse$ {
  /** @deprecated use `RequestCatalogManagementServiceDeleteResponse$inboundSchema` instead. */
  export const inboundSchema =
    RequestCatalogManagementServiceDeleteResponse$inboundSchema;
  /** @deprecated use `RequestCatalogManagementServiceDeleteResponse$outboundSchema` instead. */
  export const outboundSchema =
    RequestCatalogManagementServiceDeleteResponse$outboundSchema;
  /** @deprecated use `RequestCatalogManagementServiceDeleteResponse$Outbound` instead. */
  export type Outbound = RequestCatalogManagementServiceDeleteResponse$Outbound;
}

export function requestCatalogManagementServiceDeleteResponseToJSON(
  requestCatalogManagementServiceDeleteResponse:
    RequestCatalogManagementServiceDeleteResponse,
): string {
  return JSON.stringify(
    RequestCatalogManagementServiceDeleteResponse$outboundSchema.parse(
      requestCatalogManagementServiceDeleteResponse,
    ),
  );
}

export function requestCatalogManagementServiceDeleteResponseFromJSON(
  jsonString: string,
): SafeParseResult<
  RequestCatalogManagementServiceDeleteResponse,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RequestCatalogManagementServiceDeleteResponse$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RequestCatalogManagementServiceDeleteResponse' from JSON`,
  );
}
