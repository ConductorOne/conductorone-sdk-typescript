/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { AppEntitlementRef$inboundSchema, AppEntitlementRef$outboundSchema, } from "./appentitlementref.js";
/** @internal */
export const RequestCatalogManagementServiceRemoveAccessEntitlementsRequest$inboundSchema = z.object({
    accessEntitlements: z.nullable(z.array(AppEntitlementRef$inboundSchema))
        .optional(),
});
/** @internal */
export const RequestCatalogManagementServiceRemoveAccessEntitlementsRequest$outboundSchema = z.object({
    accessEntitlements: z.nullable(z.array(AppEntitlementRef$outboundSchema))
        .optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RequestCatalogManagementServiceRemoveAccessEntitlementsRequest$;
(function (RequestCatalogManagementServiceRemoveAccessEntitlementsRequest$) {
    /** @deprecated use `RequestCatalogManagementServiceRemoveAccessEntitlementsRequest$inboundSchema` instead. */
    RequestCatalogManagementServiceRemoveAccessEntitlementsRequest$.inboundSchema = RequestCatalogManagementServiceRemoveAccessEntitlementsRequest$inboundSchema;
    /** @deprecated use `RequestCatalogManagementServiceRemoveAccessEntitlementsRequest$outboundSchema` instead. */
    RequestCatalogManagementServiceRemoveAccessEntitlementsRequest$.outboundSchema = RequestCatalogManagementServiceRemoveAccessEntitlementsRequest$outboundSchema;
})(RequestCatalogManagementServiceRemoveAccessEntitlementsRequest$ || (RequestCatalogManagementServiceRemoveAccessEntitlementsRequest$ = {}));
export function requestCatalogManagementServiceRemoveAccessEntitlementsRequestToJSON(requestCatalogManagementServiceRemoveAccessEntitlementsRequest) {
    return JSON.stringify(RequestCatalogManagementServiceRemoveAccessEntitlementsRequest$outboundSchema
        .parse(requestCatalogManagementServiceRemoveAccessEntitlementsRequest));
}
export function requestCatalogManagementServiceRemoveAccessEntitlementsRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => RequestCatalogManagementServiceRemoveAccessEntitlementsRequest$inboundSchema
        .parse(JSON.parse(x)), `Failed to parse 'RequestCatalogManagementServiceRemoveAccessEntitlementsRequest' from JSON`);
}
