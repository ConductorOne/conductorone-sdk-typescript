/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Exporter$inboundSchema, Exporter$outboundSchema, } from "./exporter.js";
/** @internal */
export const ExportServiceCreateResponse$inboundSchema = z.object({
    exporter: z.nullable(Exporter$inboundSchema).optional(),
});
/** @internal */
export const ExportServiceCreateResponse$outboundSchema = z.object({
    exporter: z.nullable(Exporter$outboundSchema).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ExportServiceCreateResponse$;
(function (ExportServiceCreateResponse$) {
    /** @deprecated use `ExportServiceCreateResponse$inboundSchema` instead. */
    ExportServiceCreateResponse$.inboundSchema = ExportServiceCreateResponse$inboundSchema;
    /** @deprecated use `ExportServiceCreateResponse$outboundSchema` instead. */
    ExportServiceCreateResponse$.outboundSchema = ExportServiceCreateResponse$outboundSchema;
})(ExportServiceCreateResponse$ || (ExportServiceCreateResponse$ = {}));
export function exportServiceCreateResponseToJSON(exportServiceCreateResponse) {
    return JSON.stringify(ExportServiceCreateResponse$outboundSchema.parse(exportServiceCreateResponse));
}
export function exportServiceCreateResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => ExportServiceCreateResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ExportServiceCreateResponse' from JSON`);
}
