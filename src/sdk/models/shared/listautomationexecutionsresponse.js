/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { AutomationExecution$inboundSchema, AutomationExecution$outboundSchema, } from "./automationexecution.js";
/** @internal */
export const ListAutomationExecutionsResponse$inboundSchema = z.object({
    automationExecutions: z.nullable(z.array(AutomationExecution$inboundSchema))
        .optional(),
    nextPageToken: z.nullable(z.string()).optional(),
});
/** @internal */
export const ListAutomationExecutionsResponse$outboundSchema = z.object({
    automationExecutions: z.nullable(z.array(AutomationExecution$outboundSchema))
        .optional(),
    nextPageToken: z.nullable(z.string()).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ListAutomationExecutionsResponse$;
(function (ListAutomationExecutionsResponse$) {
    /** @deprecated use `ListAutomationExecutionsResponse$inboundSchema` instead. */
    ListAutomationExecutionsResponse$.inboundSchema = ListAutomationExecutionsResponse$inboundSchema;
    /** @deprecated use `ListAutomationExecutionsResponse$outboundSchema` instead. */
    ListAutomationExecutionsResponse$.outboundSchema = ListAutomationExecutionsResponse$outboundSchema;
})(ListAutomationExecutionsResponse$ || (ListAutomationExecutionsResponse$ = {}));
export function listAutomationExecutionsResponseToJSON(listAutomationExecutionsResponse) {
    return JSON.stringify(ListAutomationExecutionsResponse$outboundSchema.parse(listAutomationExecutionsResponse));
}
export function listAutomationExecutionsResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => ListAutomationExecutionsResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ListAutomationExecutionsResponse' from JSON`);
}
