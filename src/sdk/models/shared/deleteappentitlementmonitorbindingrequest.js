/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { catchUnrecognizedEnum, } from "../../types/enums.js";
/**
 * The entitlementGroup field.
 */
export const EntitlementGroup = {
    EntitlementGroupUnspecified: "ENTITLEMENT_GROUP_UNSPECIFIED",
    EntitlementGroupA: "ENTITLEMENT_GROUP_A",
    EntitlementGroupB: "ENTITLEMENT_GROUP_B",
};
/** @internal */
export const EntitlementGroup$inboundSchema = z
    .union([
    z.nativeEnum(EntitlementGroup),
    z.string().transform(catchUnrecognizedEnum),
]);
/** @internal */
export const EntitlementGroup$outboundSchema = z.union([
    z.nativeEnum(EntitlementGroup),
    z.string().and(z.custom()),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var EntitlementGroup$;
(function (EntitlementGroup$) {
    /** @deprecated use `EntitlementGroup$inboundSchema` instead. */
    EntitlementGroup$.inboundSchema = EntitlementGroup$inboundSchema;
    /** @deprecated use `EntitlementGroup$outboundSchema` instead. */
    EntitlementGroup$.outboundSchema = EntitlementGroup$outboundSchema;
})(EntitlementGroup$ || (EntitlementGroup$ = {}));
/** @internal */
export const DeleteAppEntitlementMonitorBindingRequest$inboundSchema = z.object({
    appEntitlementId: z.nullable(z.string()).optional(),
    appId: z.nullable(z.string()).optional(),
    entitlementGroup: z.nullable(EntitlementGroup$inboundSchema).optional(),
    monitorId: z.nullable(z.string()).optional(),
});
/** @internal */
export const DeleteAppEntitlementMonitorBindingRequest$outboundSchema = z.object({
    appEntitlementId: z.nullable(z.string()).optional(),
    appId: z.nullable(z.string()).optional(),
    entitlementGroup: z.nullable(EntitlementGroup$outboundSchema).optional(),
    monitorId: z.nullable(z.string()).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var DeleteAppEntitlementMonitorBindingRequest$;
(function (DeleteAppEntitlementMonitorBindingRequest$) {
    /** @deprecated use `DeleteAppEntitlementMonitorBindingRequest$inboundSchema` instead. */
    DeleteAppEntitlementMonitorBindingRequest$.inboundSchema = DeleteAppEntitlementMonitorBindingRequest$inboundSchema;
    /** @deprecated use `DeleteAppEntitlementMonitorBindingRequest$outboundSchema` instead. */
    DeleteAppEntitlementMonitorBindingRequest$.outboundSchema = DeleteAppEntitlementMonitorBindingRequest$outboundSchema;
})(DeleteAppEntitlementMonitorBindingRequest$ || (DeleteAppEntitlementMonitorBindingRequest$ = {}));
export function deleteAppEntitlementMonitorBindingRequestToJSON(deleteAppEntitlementMonitorBindingRequest) {
    return JSON.stringify(DeleteAppEntitlementMonitorBindingRequest$outboundSchema.parse(deleteAppEntitlementMonitorBindingRequest));
}
export function deleteAppEntitlementMonitorBindingRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => DeleteAppEntitlementMonitorBindingRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'DeleteAppEntitlementMonitorBindingRequest' from JSON`);
}
