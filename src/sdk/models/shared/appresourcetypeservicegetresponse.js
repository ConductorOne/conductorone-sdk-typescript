/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";
import { collectExtraKeys as collectExtraKeys$, safeParse, } from "../../../lib/schemas.js";
import { AppResourceTypeView$inboundSchema, AppResourceTypeView$outboundSchema, } from "./appresourcetypeview.js";
/** @internal */
export const AppResourceTypeServiceGetResponseExpanded$inboundSchema = collectExtraKeys$(z.object({
    "@type": z.string().optional(),
}).catchall(z.any()), "additionalProperties", true).transform((v) => {
    return remap$(v, {
        "@type": "atType",
    });
});
/** @internal */
export const AppResourceTypeServiceGetResponseExpanded$outboundSchema = z.object({
    atType: z.string().optional(),
    additionalProperties: z.record(z.any()),
}).transform((v) => {
    return {
        ...v.additionalProperties,
        ...remap$(v, {
            atType: "@type",
            additionalProperties: null,
        }),
    };
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var AppResourceTypeServiceGetResponseExpanded$;
(function (AppResourceTypeServiceGetResponseExpanded$) {
    /** @deprecated use `AppResourceTypeServiceGetResponseExpanded$inboundSchema` instead. */
    AppResourceTypeServiceGetResponseExpanded$.inboundSchema = AppResourceTypeServiceGetResponseExpanded$inboundSchema;
    /** @deprecated use `AppResourceTypeServiceGetResponseExpanded$outboundSchema` instead. */
    AppResourceTypeServiceGetResponseExpanded$.outboundSchema = AppResourceTypeServiceGetResponseExpanded$outboundSchema;
})(AppResourceTypeServiceGetResponseExpanded$ || (AppResourceTypeServiceGetResponseExpanded$ = {}));
export function appResourceTypeServiceGetResponseExpandedToJSON(appResourceTypeServiceGetResponseExpanded) {
    return JSON.stringify(AppResourceTypeServiceGetResponseExpanded$outboundSchema.parse(appResourceTypeServiceGetResponseExpanded));
}
export function appResourceTypeServiceGetResponseExpandedFromJSON(jsonString) {
    return safeParse(jsonString, (x) => AppResourceTypeServiceGetResponseExpanded$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'AppResourceTypeServiceGetResponseExpanded' from JSON`);
}
/** @internal */
export const AppResourceTypeServiceGetResponse$inboundSchema = z.object({
    appResourceTypeView: z.nullable(AppResourceTypeView$inboundSchema).optional(),
    expanded: z.nullable(z.array(z.lazy(() => AppResourceTypeServiceGetResponseExpanded$inboundSchema))).optional(),
});
/** @internal */
export const AppResourceTypeServiceGetResponse$outboundSchema = z.object({
    appResourceTypeView: z.nullable(AppResourceTypeView$outboundSchema)
        .optional(),
    expanded: z.nullable(z.array(z.lazy(() => AppResourceTypeServiceGetResponseExpanded$outboundSchema))).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var AppResourceTypeServiceGetResponse$;
(function (AppResourceTypeServiceGetResponse$) {
    /** @deprecated use `AppResourceTypeServiceGetResponse$inboundSchema` instead. */
    AppResourceTypeServiceGetResponse$.inboundSchema = AppResourceTypeServiceGetResponse$inboundSchema;
    /** @deprecated use `AppResourceTypeServiceGetResponse$outboundSchema` instead. */
    AppResourceTypeServiceGetResponse$.outboundSchema = AppResourceTypeServiceGetResponse$outboundSchema;
})(AppResourceTypeServiceGetResponse$ || (AppResourceTypeServiceGetResponse$ = {}));
export function appResourceTypeServiceGetResponseToJSON(appResourceTypeServiceGetResponse) {
    return JSON.stringify(AppResourceTypeServiceGetResponse$outboundSchema.parse(appResourceTypeServiceGetResponse));
}
export function appResourceTypeServiceGetResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => AppResourceTypeServiceGetResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'AppResourceTypeServiceGetResponse' from JSON`);
}
