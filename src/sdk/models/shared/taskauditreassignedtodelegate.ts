/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  User,
  User$inboundSchema,
  User$Outbound,
  User$outboundSchema,
} from "./user.js";

/**
 * The TaskAuditReassignedToDelegate message.
 */
export type TaskAuditReassignedToDelegate = {
  delegatedAssigneeUser?: User | null | undefined;
  /**
   * The delegatedAssigneeUserId field.
   */
  delegatedAssigneeUserId?: string | null | undefined;
  originalAssigneeUser?: User | null | undefined;
  /**
   * The originalAssigneeUserId field.
   */
  originalAssigneeUserId?: string | null | undefined;
};

/** @internal */
export const TaskAuditReassignedToDelegate$inboundSchema: z.ZodType<
  TaskAuditReassignedToDelegate,
  z.ZodTypeDef,
  unknown
> = z.object({
  delegatedAssigneeUser: z.nullable(User$inboundSchema).optional(),
  delegatedAssigneeUserId: z.nullable(z.string()).optional(),
  originalAssigneeUser: z.nullable(User$inboundSchema).optional(),
  originalAssigneeUserId: z.nullable(z.string()).optional(),
});

/** @internal */
export type TaskAuditReassignedToDelegate$Outbound = {
  delegatedAssigneeUser?: User$Outbound | null | undefined;
  delegatedAssigneeUserId?: string | null | undefined;
  originalAssigneeUser?: User$Outbound | null | undefined;
  originalAssigneeUserId?: string | null | undefined;
};

/** @internal */
export const TaskAuditReassignedToDelegate$outboundSchema: z.ZodType<
  TaskAuditReassignedToDelegate$Outbound,
  z.ZodTypeDef,
  TaskAuditReassignedToDelegate
> = z.object({
  delegatedAssigneeUser: z.nullable(User$outboundSchema).optional(),
  delegatedAssigneeUserId: z.nullable(z.string()).optional(),
  originalAssigneeUser: z.nullable(User$outboundSchema).optional(),
  originalAssigneeUserId: z.nullable(z.string()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TaskAuditReassignedToDelegate$ {
  /** @deprecated use `TaskAuditReassignedToDelegate$inboundSchema` instead. */
  export const inboundSchema = TaskAuditReassignedToDelegate$inboundSchema;
  /** @deprecated use `TaskAuditReassignedToDelegate$outboundSchema` instead. */
  export const outboundSchema = TaskAuditReassignedToDelegate$outboundSchema;
  /** @deprecated use `TaskAuditReassignedToDelegate$Outbound` instead. */
  export type Outbound = TaskAuditReassignedToDelegate$Outbound;
}

export function taskAuditReassignedToDelegateToJSON(
  taskAuditReassignedToDelegate: TaskAuditReassignedToDelegate,
): string {
  return JSON.stringify(
    TaskAuditReassignedToDelegate$outboundSchema.parse(
      taskAuditReassignedToDelegate,
    ),
  );
}

export function taskAuditReassignedToDelegateFromJSON(
  jsonString: string,
): SafeParseResult<TaskAuditReassignedToDelegate, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => TaskAuditReassignedToDelegate$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'TaskAuditReassignedToDelegate' from JSON`,
  );
}
