/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
/** @internal */
export const WebhookSpec$inboundSchema = z.object({
    destination: z.nullable(z.string()).optional(),
});
/** @internal */
export const WebhookSpec$outboundSchema = z.object({
    destination: z.nullable(z.string()).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var WebhookSpec$;
(function (WebhookSpec$) {
    /** @deprecated use `WebhookSpec$inboundSchema` instead. */
    WebhookSpec$.inboundSchema = WebhookSpec$inboundSchema;
    /** @deprecated use `WebhookSpec$outboundSchema` instead. */
    WebhookSpec$.outboundSchema = WebhookSpec$outboundSchema;
})(WebhookSpec$ || (WebhookSpec$ = {}));
export function webhookSpecToJSON(webhookSpec) {
    return JSON.stringify(WebhookSpec$outboundSchema.parse(webhookSpec));
}
export function webhookSpecFromJSON(jsonString) {
    return safeParse(jsonString, (x) => WebhookSpec$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'WebhookSpec' from JSON`);
}
