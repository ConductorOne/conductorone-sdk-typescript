/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { ConnectorRef$inboundSchema, ConnectorRef$outboundSchema, } from "./connectorref.js";
import { UserProperties$inboundSchema, UserProperties$outboundSchema, } from "./userproperties.js";
/** @internal */
export const ConnectorCreateAccount$inboundSchema = z.object({
    connectorRef: z.nullable(ConnectorRef$inboundSchema).optional(),
    userIdCel: z.nullable(z.string()).optional(),
    userProperties: z.nullable(UserProperties$inboundSchema).optional(),
});
/** @internal */
export const ConnectorCreateAccount$outboundSchema = z.object({
    connectorRef: z.nullable(ConnectorRef$outboundSchema).optional(),
    userIdCel: z.nullable(z.string()).optional(),
    userProperties: z.nullable(UserProperties$outboundSchema).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ConnectorCreateAccount$;
(function (ConnectorCreateAccount$) {
    /** @deprecated use `ConnectorCreateAccount$inboundSchema` instead. */
    ConnectorCreateAccount$.inboundSchema = ConnectorCreateAccount$inboundSchema;
    /** @deprecated use `ConnectorCreateAccount$outboundSchema` instead. */
    ConnectorCreateAccount$.outboundSchema = ConnectorCreateAccount$outboundSchema;
})(ConnectorCreateAccount$ || (ConnectorCreateAccount$ = {}));
export function connectorCreateAccountToJSON(connectorCreateAccount) {
    return JSON.stringify(ConnectorCreateAccount$outboundSchema.parse(connectorCreateAccount));
}
export function connectorCreateAccountFromJSON(jsonString) {
    return safeParse(jsonString, (x) => ConnectorCreateAccount$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ConnectorCreateAccount' from JSON`);
}
