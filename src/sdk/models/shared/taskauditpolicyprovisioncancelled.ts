/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * The TaskAuditPolicyProvisionCancelled message.
 */
export type TaskAuditPolicyProvisionCancelled = {
  /**
   * The cancelReason field.
   */
  cancelReason?: string | null | undefined;
};

/** @internal */
export const TaskAuditPolicyProvisionCancelled$inboundSchema: z.ZodType<
  TaskAuditPolicyProvisionCancelled,
  z.ZodTypeDef,
  unknown
> = z.object({
  cancelReason: z.nullable(z.string()).optional(),
});

/** @internal */
export type TaskAuditPolicyProvisionCancelled$Outbound = {
  cancelReason?: string | null | undefined;
};

/** @internal */
export const TaskAuditPolicyProvisionCancelled$outboundSchema: z.ZodType<
  TaskAuditPolicyProvisionCancelled$Outbound,
  z.ZodTypeDef,
  TaskAuditPolicyProvisionCancelled
> = z.object({
  cancelReason: z.nullable(z.string()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TaskAuditPolicyProvisionCancelled$ {
  /** @deprecated use `TaskAuditPolicyProvisionCancelled$inboundSchema` instead. */
  export const inboundSchema = TaskAuditPolicyProvisionCancelled$inboundSchema;
  /** @deprecated use `TaskAuditPolicyProvisionCancelled$outboundSchema` instead. */
  export const outboundSchema =
    TaskAuditPolicyProvisionCancelled$outboundSchema;
  /** @deprecated use `TaskAuditPolicyProvisionCancelled$Outbound` instead. */
  export type Outbound = TaskAuditPolicyProvisionCancelled$Outbound;
}

export function taskAuditPolicyProvisionCancelledToJSON(
  taskAuditPolicyProvisionCancelled: TaskAuditPolicyProvisionCancelled,
): string {
  return JSON.stringify(
    TaskAuditPolicyProvisionCancelled$outboundSchema.parse(
      taskAuditPolicyProvisionCancelled,
    ),
  );
}

export function taskAuditPolicyProvisionCancelledFromJSON(
  jsonString: string,
): SafeParseResult<TaskAuditPolicyProvisionCancelled, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => TaskAuditPolicyProvisionCancelled$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'TaskAuditPolicyProvisionCancelled' from JSON`,
  );
}
