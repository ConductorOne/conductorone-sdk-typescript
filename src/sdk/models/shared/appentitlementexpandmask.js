/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
/** @internal */
export const AppEntitlementExpandMask$inboundSchema = z.object({
    paths: z.nullable(z.array(z.string())).optional(),
});
/** @internal */
export const AppEntitlementExpandMask$outboundSchema = z.object({
    paths: z.nullable(z.array(z.string())).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var AppEntitlementExpandMask$;
(function (AppEntitlementExpandMask$) {
    /** @deprecated use `AppEntitlementExpandMask$inboundSchema` instead. */
    AppEntitlementExpandMask$.inboundSchema = AppEntitlementExpandMask$inboundSchema;
    /** @deprecated use `AppEntitlementExpandMask$outboundSchema` instead. */
    AppEntitlementExpandMask$.outboundSchema = AppEntitlementExpandMask$outboundSchema;
})(AppEntitlementExpandMask$ || (AppEntitlementExpandMask$ = {}));
export function appEntitlementExpandMaskToJSON(appEntitlementExpandMask) {
    return JSON.stringify(AppEntitlementExpandMask$outboundSchema.parse(appEntitlementExpandMask));
}
export function appEntitlementExpandMaskFromJSON(jsonString) {
    return safeParse(jsonString, (x) => AppEntitlementExpandMask$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'AppEntitlementExpandMask' from JSON`);
}
