/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
/** @internal */
export const ExportServiceDeleteResponse$inboundSchema = z.object({});
/** @internal */
export const ExportServiceDeleteResponse$outboundSchema = z.object({});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ExportServiceDeleteResponse$;
(function (ExportServiceDeleteResponse$) {
    /** @deprecated use `ExportServiceDeleteResponse$inboundSchema` instead. */
    ExportServiceDeleteResponse$.inboundSchema = ExportServiceDeleteResponse$inboundSchema;
    /** @deprecated use `ExportServiceDeleteResponse$outboundSchema` instead. */
    ExportServiceDeleteResponse$.outboundSchema = ExportServiceDeleteResponse$outboundSchema;
})(ExportServiceDeleteResponse$ || (ExportServiceDeleteResponse$ = {}));
export function exportServiceDeleteResponseToJSON(exportServiceDeleteResponse) {
    return JSON.stringify(ExportServiceDeleteResponse$outboundSchema.parse(exportServiceDeleteResponse));
}
export function exportServiceDeleteResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => ExportServiceDeleteResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ExportServiceDeleteResponse' from JSON`);
}
