/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * The AtLeastOne message.
 */
export type AtLeastOne = {};

/** @internal */
export const AtLeastOne$inboundSchema: z.ZodType<
  AtLeastOne,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type AtLeastOne$Outbound = {};

/** @internal */
export const AtLeastOne$outboundSchema: z.ZodType<
  AtLeastOne$Outbound,
  z.ZodTypeDef,
  AtLeastOne
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AtLeastOne$ {
  /** @deprecated use `AtLeastOne$inboundSchema` instead. */
  export const inboundSchema = AtLeastOne$inboundSchema;
  /** @deprecated use `AtLeastOne$outboundSchema` instead. */
  export const outboundSchema = AtLeastOne$outboundSchema;
  /** @deprecated use `AtLeastOne$Outbound` instead. */
  export type Outbound = AtLeastOne$Outbound;
}

export function atLeastOneToJSON(atLeastOne: AtLeastOne): string {
  return JSON.stringify(AtLeastOne$outboundSchema.parse(atLeastOne));
}

export function atLeastOneFromJSON(
  jsonString: string,
): SafeParseResult<AtLeastOne, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => AtLeastOne$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'AtLeastOne' from JSON`,
  );
}
