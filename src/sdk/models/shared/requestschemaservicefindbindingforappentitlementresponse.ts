/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  AppEntitlementRef,
  AppEntitlementRef$inboundSchema,
  AppEntitlementRef$Outbound,
  AppEntitlementRef$outboundSchema,
} from "./appentitlementref.js";

/**
 * The RequestSchemaServiceFindBindingForAppEntitlementResponse message.
 */
export type RequestSchemaServiceFindBindingForAppEntitlementResponse = {
  entitlementRef?: AppEntitlementRef | null | undefined;
  /**
   * The requestSchemaId field.
   */
  requestSchemaId?: string | null | undefined;
};

/** @internal */
export const RequestSchemaServiceFindBindingForAppEntitlementResponse$inboundSchema:
  z.ZodType<
    RequestSchemaServiceFindBindingForAppEntitlementResponse,
    z.ZodTypeDef,
    unknown
  > = z.object({
    entitlementRef: z.nullable(AppEntitlementRef$inboundSchema).optional(),
    requestSchemaId: z.nullable(z.string()).optional(),
  });

/** @internal */
export type RequestSchemaServiceFindBindingForAppEntitlementResponse$Outbound =
  {
    entitlementRef?: AppEntitlementRef$Outbound | null | undefined;
    requestSchemaId?: string | null | undefined;
  };

/** @internal */
export const RequestSchemaServiceFindBindingForAppEntitlementResponse$outboundSchema:
  z.ZodType<
    RequestSchemaServiceFindBindingForAppEntitlementResponse$Outbound,
    z.ZodTypeDef,
    RequestSchemaServiceFindBindingForAppEntitlementResponse
  > = z.object({
    entitlementRef: z.nullable(AppEntitlementRef$outboundSchema).optional(),
    requestSchemaId: z.nullable(z.string()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RequestSchemaServiceFindBindingForAppEntitlementResponse$ {
  /** @deprecated use `RequestSchemaServiceFindBindingForAppEntitlementResponse$inboundSchema` instead. */
  export const inboundSchema =
    RequestSchemaServiceFindBindingForAppEntitlementResponse$inboundSchema;
  /** @deprecated use `RequestSchemaServiceFindBindingForAppEntitlementResponse$outboundSchema` instead. */
  export const outboundSchema =
    RequestSchemaServiceFindBindingForAppEntitlementResponse$outboundSchema;
  /** @deprecated use `RequestSchemaServiceFindBindingForAppEntitlementResponse$Outbound` instead. */
  export type Outbound =
    RequestSchemaServiceFindBindingForAppEntitlementResponse$Outbound;
}

export function requestSchemaServiceFindBindingForAppEntitlementResponseToJSON(
  requestSchemaServiceFindBindingForAppEntitlementResponse:
    RequestSchemaServiceFindBindingForAppEntitlementResponse,
): string {
  return JSON.stringify(
    RequestSchemaServiceFindBindingForAppEntitlementResponse$outboundSchema
      .parse(requestSchemaServiceFindBindingForAppEntitlementResponse),
  );
}

export function requestSchemaServiceFindBindingForAppEntitlementResponseFromJSON(
  jsonString: string,
): SafeParseResult<
  RequestSchemaServiceFindBindingForAppEntitlementResponse,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RequestSchemaServiceFindBindingForAppEntitlementResponse$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'RequestSchemaServiceFindBindingForAppEntitlementResponse' from JSON`,
  );
}
