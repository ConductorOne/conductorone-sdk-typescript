/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  AppEntitlementUserView,
  AppEntitlementUserView$inboundSchema,
  AppEntitlementUserView$Outbound,
  AppEntitlementUserView$outboundSchema,
} from "./appentitlementuserview.js";
import {
  AppEntitlementView,
  AppEntitlementView$inboundSchema,
  AppEntitlementView$Outbound,
  AppEntitlementView$outboundSchema,
} from "./appentitlementview.js";

/**
 * The AppEntitlementWithUserBinding message.
 */
export type AppEntitlementWithUserBinding = {
  appEntitlementUserBinding?: AppEntitlementUserView | null | undefined;
  entitlement?: AppEntitlementView | null | undefined;
};

/** @internal */
export const AppEntitlementWithUserBinding$inboundSchema: z.ZodType<
  AppEntitlementWithUserBinding,
  z.ZodTypeDef,
  unknown
> = z.object({
  appEntitlementUserBinding: z.nullable(AppEntitlementUserView$inboundSchema)
    .optional(),
  entitlement: z.nullable(AppEntitlementView$inboundSchema).optional(),
});

/** @internal */
export type AppEntitlementWithUserBinding$Outbound = {
  appEntitlementUserBinding?:
    | AppEntitlementUserView$Outbound
    | null
    | undefined;
  entitlement?: AppEntitlementView$Outbound | null | undefined;
};

/** @internal */
export const AppEntitlementWithUserBinding$outboundSchema: z.ZodType<
  AppEntitlementWithUserBinding$Outbound,
  z.ZodTypeDef,
  AppEntitlementWithUserBinding
> = z.object({
  appEntitlementUserBinding: z.nullable(AppEntitlementUserView$outboundSchema)
    .optional(),
  entitlement: z.nullable(AppEntitlementView$outboundSchema).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppEntitlementWithUserBinding$ {
  /** @deprecated use `AppEntitlementWithUserBinding$inboundSchema` instead. */
  export const inboundSchema = AppEntitlementWithUserBinding$inboundSchema;
  /** @deprecated use `AppEntitlementWithUserBinding$outboundSchema` instead. */
  export const outboundSchema = AppEntitlementWithUserBinding$outboundSchema;
  /** @deprecated use `AppEntitlementWithUserBinding$Outbound` instead. */
  export type Outbound = AppEntitlementWithUserBinding$Outbound;
}

export function appEntitlementWithUserBindingToJSON(
  appEntitlementWithUserBinding: AppEntitlementWithUserBinding,
): string {
  return JSON.stringify(
    AppEntitlementWithUserBinding$outboundSchema.parse(
      appEntitlementWithUserBinding,
    ),
  );
}

export function appEntitlementWithUserBindingFromJSON(
  jsonString: string,
): SafeParseResult<AppEntitlementWithUserBinding, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => AppEntitlementWithUserBinding$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'AppEntitlementWithUserBinding' from JSON`,
  );
}
