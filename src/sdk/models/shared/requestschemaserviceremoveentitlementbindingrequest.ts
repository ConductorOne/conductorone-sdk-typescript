/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { remap as remap$ } from "../../../lib/primitives.js";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  AppEntitlementRef,
  AppEntitlementRef$inboundSchema,
  AppEntitlementRef$Outbound,
  AppEntitlementRef$outboundSchema,
} from "./appentitlementref.js";

/**
 * The RequestSchemaServiceRemoveEntitlementBindingRequest message.
 */
export type RequestSchemaServiceRemoveEntitlementBindingRequest = {
  /**
   * The AppEntitlementRef message.
   */
  appEntitlementRef?: AppEntitlementRef | undefined;
  /**
   * The requestSchemaId field.
   */
  requestSchemaId?: string | undefined;
};

/** @internal */
export const RequestSchemaServiceRemoveEntitlementBindingRequest$inboundSchema:
  z.ZodType<
    RequestSchemaServiceRemoveEntitlementBindingRequest,
    z.ZodTypeDef,
    unknown
  > = z.object({
    entitlementRef: AppEntitlementRef$inboundSchema.optional(),
    requestSchemaId: z.string().optional(),
  }).transform((v) => {
    return remap$(v, {
      "entitlementRef": "appEntitlementRef",
    });
  });

/** @internal */
export type RequestSchemaServiceRemoveEntitlementBindingRequest$Outbound = {
  entitlementRef?: AppEntitlementRef$Outbound | undefined;
  requestSchemaId?: string | undefined;
};

/** @internal */
export const RequestSchemaServiceRemoveEntitlementBindingRequest$outboundSchema:
  z.ZodType<
    RequestSchemaServiceRemoveEntitlementBindingRequest$Outbound,
    z.ZodTypeDef,
    RequestSchemaServiceRemoveEntitlementBindingRequest
  > = z.object({
    appEntitlementRef: AppEntitlementRef$outboundSchema.optional(),
    requestSchemaId: z.string().optional(),
  }).transform((v) => {
    return remap$(v, {
      appEntitlementRef: "entitlementRef",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RequestSchemaServiceRemoveEntitlementBindingRequest$ {
  /** @deprecated use `RequestSchemaServiceRemoveEntitlementBindingRequest$inboundSchema` instead. */
  export const inboundSchema =
    RequestSchemaServiceRemoveEntitlementBindingRequest$inboundSchema;
  /** @deprecated use `RequestSchemaServiceRemoveEntitlementBindingRequest$outboundSchema` instead. */
  export const outboundSchema =
    RequestSchemaServiceRemoveEntitlementBindingRequest$outboundSchema;
  /** @deprecated use `RequestSchemaServiceRemoveEntitlementBindingRequest$Outbound` instead. */
  export type Outbound =
    RequestSchemaServiceRemoveEntitlementBindingRequest$Outbound;
}

export function requestSchemaServiceRemoveEntitlementBindingRequestToJSON(
  requestSchemaServiceRemoveEntitlementBindingRequest:
    RequestSchemaServiceRemoveEntitlementBindingRequest,
): string {
  return JSON.stringify(
    RequestSchemaServiceRemoveEntitlementBindingRequest$outboundSchema.parse(
      requestSchemaServiceRemoveEntitlementBindingRequest,
    ),
  );
}

export function requestSchemaServiceRemoveEntitlementBindingRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  RequestSchemaServiceRemoveEntitlementBindingRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RequestSchemaServiceRemoveEntitlementBindingRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RequestSchemaServiceRemoveEntitlementBindingRequest' from JSON`,
  );
}
