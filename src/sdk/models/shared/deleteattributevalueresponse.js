/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
/** @internal */
export const DeleteAttributeValueResponse$inboundSchema = z.object({});
/** @internal */
export const DeleteAttributeValueResponse$outboundSchema = z.object({});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var DeleteAttributeValueResponse$;
(function (DeleteAttributeValueResponse$) {
    /** @deprecated use `DeleteAttributeValueResponse$inboundSchema` instead. */
    DeleteAttributeValueResponse$.inboundSchema = DeleteAttributeValueResponse$inboundSchema;
    /** @deprecated use `DeleteAttributeValueResponse$outboundSchema` instead. */
    DeleteAttributeValueResponse$.outboundSchema = DeleteAttributeValueResponse$outboundSchema;
})(DeleteAttributeValueResponse$ || (DeleteAttributeValueResponse$ = {}));
export function deleteAttributeValueResponseToJSON(deleteAttributeValueResponse) {
    return JSON.stringify(DeleteAttributeValueResponse$outboundSchema.parse(deleteAttributeValueResponse));
}
export function deleteAttributeValueResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => DeleteAttributeValueResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'DeleteAttributeValueResponse' from JSON`);
}
