/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";
import { collectExtraKeys as collectExtraKeys$, safeParse, } from "../../../lib/schemas.js";
import { AppEntitlementView$inboundSchema, AppEntitlementView$outboundSchema, } from "./appentitlementview.js";
/** @internal */
export const GetAppEntitlementResponseExpanded$inboundSchema = collectExtraKeys$(z.object({
    "@type": z.string().optional(),
}).catchall(z.any()), "additionalProperties", true).transform((v) => {
    return remap$(v, {
        "@type": "atType",
    });
});
/** @internal */
export const GetAppEntitlementResponseExpanded$outboundSchema = z.object({
    atType: z.string().optional(),
    additionalProperties: z.record(z.any()),
}).transform((v) => {
    return {
        ...v.additionalProperties,
        ...remap$(v, {
            atType: "@type",
            additionalProperties: null,
        }),
    };
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetAppEntitlementResponseExpanded$;
(function (GetAppEntitlementResponseExpanded$) {
    /** @deprecated use `GetAppEntitlementResponseExpanded$inboundSchema` instead. */
    GetAppEntitlementResponseExpanded$.inboundSchema = GetAppEntitlementResponseExpanded$inboundSchema;
    /** @deprecated use `GetAppEntitlementResponseExpanded$outboundSchema` instead. */
    GetAppEntitlementResponseExpanded$.outboundSchema = GetAppEntitlementResponseExpanded$outboundSchema;
})(GetAppEntitlementResponseExpanded$ || (GetAppEntitlementResponseExpanded$ = {}));
export function getAppEntitlementResponseExpandedToJSON(getAppEntitlementResponseExpanded) {
    return JSON.stringify(GetAppEntitlementResponseExpanded$outboundSchema.parse(getAppEntitlementResponseExpanded));
}
export function getAppEntitlementResponseExpandedFromJSON(jsonString) {
    return safeParse(jsonString, (x) => GetAppEntitlementResponseExpanded$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetAppEntitlementResponseExpanded' from JSON`);
}
/** @internal */
export const GetAppEntitlementResponse$inboundSchema = z.object({
    appEntitlementView: z.nullable(AppEntitlementView$inboundSchema).optional(),
    expanded: z.nullable(z.array(z.lazy(() => GetAppEntitlementResponseExpanded$inboundSchema))).optional(),
});
/** @internal */
export const GetAppEntitlementResponse$outboundSchema = z.object({
    appEntitlementView: z.nullable(AppEntitlementView$outboundSchema).optional(),
    expanded: z.nullable(z.array(z.lazy(() => GetAppEntitlementResponseExpanded$outboundSchema))).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetAppEntitlementResponse$;
(function (GetAppEntitlementResponse$) {
    /** @deprecated use `GetAppEntitlementResponse$inboundSchema` instead. */
    GetAppEntitlementResponse$.inboundSchema = GetAppEntitlementResponse$inboundSchema;
    /** @deprecated use `GetAppEntitlementResponse$outboundSchema` instead. */
    GetAppEntitlementResponse$.outboundSchema = GetAppEntitlementResponse$outboundSchema;
})(GetAppEntitlementResponse$ || (GetAppEntitlementResponse$ = {}));
export function getAppEntitlementResponseToJSON(getAppEntitlementResponse) {
    return JSON.stringify(GetAppEntitlementResponse$outboundSchema.parse(getAppEntitlementResponse));
}
export function getAppEntitlementResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => GetAppEntitlementResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetAppEntitlementResponse' from JSON`);
}
