/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { FunctionCommit$inboundSchema, FunctionCommit$outboundSchema, } from "./functioncommit.js";
/** @internal */
export const FunctionsServiceListCommitsResponse$inboundSchema = z.object({
    list: z.nullable(z.array(FunctionCommit$inboundSchema)).optional(),
    nextPageToken: z.nullable(z.string()).optional(),
});
/** @internal */
export const FunctionsServiceListCommitsResponse$outboundSchema = z.object({
    list: z.nullable(z.array(FunctionCommit$outboundSchema)).optional(),
    nextPageToken: z.nullable(z.string()).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var FunctionsServiceListCommitsResponse$;
(function (FunctionsServiceListCommitsResponse$) {
    /** @deprecated use `FunctionsServiceListCommitsResponse$inboundSchema` instead. */
    FunctionsServiceListCommitsResponse$.inboundSchema = FunctionsServiceListCommitsResponse$inboundSchema;
    /** @deprecated use `FunctionsServiceListCommitsResponse$outboundSchema` instead. */
    FunctionsServiceListCommitsResponse$.outboundSchema = FunctionsServiceListCommitsResponse$outboundSchema;
})(FunctionsServiceListCommitsResponse$ || (FunctionsServiceListCommitsResponse$ = {}));
export function functionsServiceListCommitsResponseToJSON(functionsServiceListCommitsResponse) {
    return JSON.stringify(FunctionsServiceListCommitsResponse$outboundSchema.parse(functionsServiceListCommitsResponse));
}
export function functionsServiceListCommitsResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => FunctionsServiceListCommitsResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'FunctionsServiceListCommitsResponse' from JSON`);
}
