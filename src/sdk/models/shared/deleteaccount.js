/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
/** @internal */
export const DeleteAccount$inboundSchema = z.object({
    connectorId: z.nullable(z.string()).optional(),
});
/** @internal */
export const DeleteAccount$outboundSchema = z.object({
    connectorId: z.nullable(z.string()).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var DeleteAccount$;
(function (DeleteAccount$) {
    /** @deprecated use `DeleteAccount$inboundSchema` instead. */
    DeleteAccount$.inboundSchema = DeleteAccount$inboundSchema;
    /** @deprecated use `DeleteAccount$outboundSchema` instead. */
    DeleteAccount$.outboundSchema = DeleteAccount$outboundSchema;
})(DeleteAccount$ || (DeleteAccount$ = {}));
export function deleteAccountToJSON(deleteAccount) {
    return JSON.stringify(DeleteAccount$outboundSchema.parse(deleteAccount));
}
export function deleteAccountFromJSON(jsonString) {
    return safeParse(jsonString, (x) => DeleteAccount$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'DeleteAccount' from JSON`);
}
