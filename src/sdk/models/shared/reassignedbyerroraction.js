/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
/** @internal */
export const ReassignedByErrorAction$inboundSchema = z.object({
    description: z.nullable(z.string()).optional(),
    errorCode: z.nullable(z.string()).optional(),
    errorUserId: z.nullable(z.string()).optional(),
    erroredAt: z.nullable(z.string().datetime({ offset: true }).transform(v => new Date(v))).optional(),
    newPolicyStepId: z.nullable(z.string()).optional(),
    reassignedAt: z.nullable(z.string().datetime({ offset: true }).transform(v => new Date(v))).optional(),
});
/** @internal */
export const ReassignedByErrorAction$outboundSchema = z.object({
    description: z.nullable(z.string()).optional(),
    errorCode: z.nullable(z.string()).optional(),
    errorUserId: z.nullable(z.string()).optional(),
    erroredAt: z.nullable(z.date().transform(v => v.toISOString())).optional(),
    newPolicyStepId: z.nullable(z.string()).optional(),
    reassignedAt: z.nullable(z.date().transform(v => v.toISOString())).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ReassignedByErrorAction$;
(function (ReassignedByErrorAction$) {
    /** @deprecated use `ReassignedByErrorAction$inboundSchema` instead. */
    ReassignedByErrorAction$.inboundSchema = ReassignedByErrorAction$inboundSchema;
    /** @deprecated use `ReassignedByErrorAction$outboundSchema` instead. */
    ReassignedByErrorAction$.outboundSchema = ReassignedByErrorAction$outboundSchema;
})(ReassignedByErrorAction$ || (ReassignedByErrorAction$ = {}));
export function reassignedByErrorActionToJSON(reassignedByErrorAction) {
    return JSON.stringify(ReassignedByErrorAction$outboundSchema.parse(reassignedByErrorAction));
}
export function reassignedByErrorActionFromJSON(jsonString) {
    return safeParse(jsonString, (x) => ReassignedByErrorAction$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ReassignedByErrorAction' from JSON`);
}
