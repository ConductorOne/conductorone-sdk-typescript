/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { FormInput$inboundSchema, FormInput$outboundSchema, } from "./forminput.js";
/** @internal */
export const FormTrigger$inboundSchema = z.object({
    form: z.nullable(FormInput$inboundSchema).optional(),
});
/** @internal */
export const FormTrigger$outboundSchema = z.object({
    form: z.nullable(FormInput$outboundSchema).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var FormTrigger$;
(function (FormTrigger$) {
    /** @deprecated use `FormTrigger$inboundSchema` instead. */
    FormTrigger$.inboundSchema = FormTrigger$inboundSchema;
    /** @deprecated use `FormTrigger$outboundSchema` instead. */
    FormTrigger$.outboundSchema = FormTrigger$outboundSchema;
})(FormTrigger$ || (FormTrigger$ = {}));
export function formTriggerToJSON(formTrigger) {
    return JSON.stringify(FormTrigger$outboundSchema.parse(formTrigger));
}
export function formTriggerFromJSON(jsonString) {
    return safeParse(jsonString, (x) => FormTrigger$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'FormTrigger' from JSON`);
}
