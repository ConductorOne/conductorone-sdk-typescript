/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
/** @internal */
export const RemoveAppOwnerResponse$inboundSchema = z.object({});
/** @internal */
export const RemoveAppOwnerResponse$outboundSchema = z.object({});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RemoveAppOwnerResponse$;
(function (RemoveAppOwnerResponse$) {
    /** @deprecated use `RemoveAppOwnerResponse$inboundSchema` instead. */
    RemoveAppOwnerResponse$.inboundSchema = RemoveAppOwnerResponse$inboundSchema;
    /** @deprecated use `RemoveAppOwnerResponse$outboundSchema` instead. */
    RemoveAppOwnerResponse$.outboundSchema = RemoveAppOwnerResponse$outboundSchema;
})(RemoveAppOwnerResponse$ || (RemoveAppOwnerResponse$ = {}));
export function removeAppOwnerResponseToJSON(removeAppOwnerResponse) {
    return JSON.stringify(RemoveAppOwnerResponse$outboundSchema.parse(removeAppOwnerResponse));
}
export function removeAppOwnerResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => RemoveAppOwnerResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'RemoveAppOwnerResponse' from JSON`);
}
