/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { remap as remap$ } from "../../../lib/primitives.js";
import {
  collectExtraKeys as collectExtraKeys$,
  safeParse,
} from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  AppUserView,
  AppUserView$inboundSchema,
  AppUserView$Outbound,
  AppUserView$outboundSchema,
} from "./appuserview.js";

/**
 * Contains an arbitrary serialized message along with a @type that describes the type of the serialized message.
 */
export type AppUserServiceUpdateResponseExpanded = {
  /**
   * The type of the serialized message.
   */
  atType?: string | undefined;
  additionalProperties?: { [k: string]: any } | undefined;
};

/**
 * The AppUserServiceUpdateResponse message.
 */
export type AppUserServiceUpdateResponse = {
  appUserView?: AppUserView | null | undefined;
  /**
   * The expanded field.
   */
  expanded?: Array<AppUserServiceUpdateResponseExpanded> | null | undefined;
};

/** @internal */
export const AppUserServiceUpdateResponseExpanded$inboundSchema: z.ZodType<
  AppUserServiceUpdateResponseExpanded,
  z.ZodTypeDef,
  unknown
> = collectExtraKeys$(
  z.object({
    "@type": z.string().optional(),
  }).catchall(z.any()),
  "additionalProperties",
  true,
).transform((v) => {
  return remap$(v, {
    "@type": "atType",
  });
});

/** @internal */
export type AppUserServiceUpdateResponseExpanded$Outbound = {
  "@type"?: string | undefined;
  [additionalProperties: string]: unknown;
};

/** @internal */
export const AppUserServiceUpdateResponseExpanded$outboundSchema: z.ZodType<
  AppUserServiceUpdateResponseExpanded$Outbound,
  z.ZodTypeDef,
  AppUserServiceUpdateResponseExpanded
> = z.object({
  atType: z.string().optional(),
  additionalProperties: z.record(z.any()).optional(),
}).transform((v) => {
  return {
    ...v.additionalProperties,
    ...remap$(v, {
      atType: "@type",
      additionalProperties: null,
    }),
  };
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppUserServiceUpdateResponseExpanded$ {
  /** @deprecated use `AppUserServiceUpdateResponseExpanded$inboundSchema` instead. */
  export const inboundSchema =
    AppUserServiceUpdateResponseExpanded$inboundSchema;
  /** @deprecated use `AppUserServiceUpdateResponseExpanded$outboundSchema` instead. */
  export const outboundSchema =
    AppUserServiceUpdateResponseExpanded$outboundSchema;
  /** @deprecated use `AppUserServiceUpdateResponseExpanded$Outbound` instead. */
  export type Outbound = AppUserServiceUpdateResponseExpanded$Outbound;
}

export function appUserServiceUpdateResponseExpandedToJSON(
  appUserServiceUpdateResponseExpanded: AppUserServiceUpdateResponseExpanded,
): string {
  return JSON.stringify(
    AppUserServiceUpdateResponseExpanded$outboundSchema.parse(
      appUserServiceUpdateResponseExpanded,
    ),
  );
}

export function appUserServiceUpdateResponseExpandedFromJSON(
  jsonString: string,
): SafeParseResult<AppUserServiceUpdateResponseExpanded, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      AppUserServiceUpdateResponseExpanded$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'AppUserServiceUpdateResponseExpanded' from JSON`,
  );
}

/** @internal */
export const AppUserServiceUpdateResponse$inboundSchema: z.ZodType<
  AppUserServiceUpdateResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  appUserView: z.nullable(AppUserView$inboundSchema).optional(),
  expanded: z.nullable(
    z.array(z.lazy(() => AppUserServiceUpdateResponseExpanded$inboundSchema)),
  ).optional(),
});

/** @internal */
export type AppUserServiceUpdateResponse$Outbound = {
  appUserView?: AppUserView$Outbound | null | undefined;
  expanded?:
    | Array<AppUserServiceUpdateResponseExpanded$Outbound>
    | null
    | undefined;
};

/** @internal */
export const AppUserServiceUpdateResponse$outboundSchema: z.ZodType<
  AppUserServiceUpdateResponse$Outbound,
  z.ZodTypeDef,
  AppUserServiceUpdateResponse
> = z.object({
  appUserView: z.nullable(AppUserView$outboundSchema).optional(),
  expanded: z.nullable(
    z.array(z.lazy(() => AppUserServiceUpdateResponseExpanded$outboundSchema)),
  ).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppUserServiceUpdateResponse$ {
  /** @deprecated use `AppUserServiceUpdateResponse$inboundSchema` instead. */
  export const inboundSchema = AppUserServiceUpdateResponse$inboundSchema;
  /** @deprecated use `AppUserServiceUpdateResponse$outboundSchema` instead. */
  export const outboundSchema = AppUserServiceUpdateResponse$outboundSchema;
  /** @deprecated use `AppUserServiceUpdateResponse$Outbound` instead. */
  export type Outbound = AppUserServiceUpdateResponse$Outbound;
}

export function appUserServiceUpdateResponseToJSON(
  appUserServiceUpdateResponse: AppUserServiceUpdateResponse,
): string {
  return JSON.stringify(
    AppUserServiceUpdateResponse$outboundSchema.parse(
      appUserServiceUpdateResponse,
    ),
  );
}

export function appUserServiceUpdateResponseFromJSON(
  jsonString: string,
): SafeParseResult<AppUserServiceUpdateResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => AppUserServiceUpdateResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'AppUserServiceUpdateResponse' from JSON`,
  );
}
