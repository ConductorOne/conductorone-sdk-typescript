/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { ExporterInput$inboundSchema, ExporterInput$outboundSchema, } from "./exporterinput.js";
/** @internal */
export const ExportServiceUpdateRequest$inboundSchema = z.object({
    exporter: z.nullable(ExporterInput$inboundSchema).optional(),
    updateMask: z.nullable(z.string()).optional(),
});
/** @internal */
export const ExportServiceUpdateRequest$outboundSchema = z.object({
    exporter: z.nullable(ExporterInput$outboundSchema).optional(),
    updateMask: z.nullable(z.string()).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ExportServiceUpdateRequest$;
(function (ExportServiceUpdateRequest$) {
    /** @deprecated use `ExportServiceUpdateRequest$inboundSchema` instead. */
    ExportServiceUpdateRequest$.inboundSchema = ExportServiceUpdateRequest$inboundSchema;
    /** @deprecated use `ExportServiceUpdateRequest$outboundSchema` instead. */
    ExportServiceUpdateRequest$.outboundSchema = ExportServiceUpdateRequest$outboundSchema;
})(ExportServiceUpdateRequest$ || (ExportServiceUpdateRequest$ = {}));
export function exportServiceUpdateRequestToJSON(exportServiceUpdateRequest) {
    return JSON.stringify(ExportServiceUpdateRequest$outboundSchema.parse(exportServiceUpdateRequest));
}
export function exportServiceUpdateRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => ExportServiceUpdateRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ExportServiceUpdateRequest' from JSON`);
}
