/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
/** @internal */
export const TaskAuditWebhookTriggered$inboundSchema = z.object({
    webhookId: z.nullable(z.string()).optional(),
    webhookInstanceId: z.nullable(z.string()).optional(),
    webhookName: z.nullable(z.string()).optional(),
    webhookUrl: z.nullable(z.string()).optional(),
});
/** @internal */
export const TaskAuditWebhookTriggered$outboundSchema = z.object({
    webhookId: z.nullable(z.string()).optional(),
    webhookInstanceId: z.nullable(z.string()).optional(),
    webhookName: z.nullable(z.string()).optional(),
    webhookUrl: z.nullable(z.string()).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var TaskAuditWebhookTriggered$;
(function (TaskAuditWebhookTriggered$) {
    /** @deprecated use `TaskAuditWebhookTriggered$inboundSchema` instead. */
    TaskAuditWebhookTriggered$.inboundSchema = TaskAuditWebhookTriggered$inboundSchema;
    /** @deprecated use `TaskAuditWebhookTriggered$outboundSchema` instead. */
    TaskAuditWebhookTriggered$.outboundSchema = TaskAuditWebhookTriggered$outboundSchema;
})(TaskAuditWebhookTriggered$ || (TaskAuditWebhookTriggered$ = {}));
export function taskAuditWebhookTriggeredToJSON(taskAuditWebhookTriggered) {
    return JSON.stringify(TaskAuditWebhookTriggered$outboundSchema.parse(taskAuditWebhookTriggered));
}
export function taskAuditWebhookTriggeredFromJSON(jsonString) {
    return safeParse(jsonString, (x) => TaskAuditWebhookTriggered$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'TaskAuditWebhookTriggered' from JSON`);
}
