/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
/** @internal */
export const ResourceOwnerApproval$inboundSchema = z.object({
    allowSelfApproval: z.nullable(z.boolean()).optional(),
    fallback: z.nullable(z.boolean()).optional(),
    fallbackUserIds: z.nullable(z.array(z.string())).optional(),
});
/** @internal */
export const ResourceOwnerApproval$outboundSchema = z.object({
    allowSelfApproval: z.nullable(z.boolean()).optional(),
    fallback: z.nullable(z.boolean()).optional(),
    fallbackUserIds: z.nullable(z.array(z.string())).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ResourceOwnerApproval$;
(function (ResourceOwnerApproval$) {
    /** @deprecated use `ResourceOwnerApproval$inboundSchema` instead. */
    ResourceOwnerApproval$.inboundSchema = ResourceOwnerApproval$inboundSchema;
    /** @deprecated use `ResourceOwnerApproval$outboundSchema` instead. */
    ResourceOwnerApproval$.outboundSchema = ResourceOwnerApproval$outboundSchema;
})(ResourceOwnerApproval$ || (ResourceOwnerApproval$ = {}));
export function resourceOwnerApprovalToJSON(resourceOwnerApproval) {
    return JSON.stringify(ResourceOwnerApproval$outboundSchema.parse(resourceOwnerApproval));
}
export function resourceOwnerApprovalFromJSON(jsonString) {
    return safeParse(jsonString, (x) => ResourceOwnerApproval$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ResourceOwnerApproval' from JSON`);
}
