/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
/** @internal */
export const AppResourceRef$inboundSchema = z.object({
    appId: z.nullable(z.string()).optional(),
    appResourceTypeId: z.nullable(z.string()).optional(),
    id: z.nullable(z.string()).optional(),
});
/** @internal */
export const AppResourceRef$outboundSchema = z.object({
    appId: z.nullable(z.string()).optional(),
    appResourceTypeId: z.nullable(z.string()).optional(),
    id: z.nullable(z.string()).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var AppResourceRef$;
(function (AppResourceRef$) {
    /** @deprecated use `AppResourceRef$inboundSchema` instead. */
    AppResourceRef$.inboundSchema = AppResourceRef$inboundSchema;
    /** @deprecated use `AppResourceRef$outboundSchema` instead. */
    AppResourceRef$.outboundSchema = AppResourceRef$outboundSchema;
})(AppResourceRef$ || (AppResourceRef$ = {}));
export function appResourceRefToJSON(appResourceRef) {
    return JSON.stringify(AppResourceRef$outboundSchema.parse(appResourceRef));
}
export function appResourceRefFromJSON(jsonString) {
    return safeParse(jsonString, (x) => AppResourceRef$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'AppResourceRef' from JSON`);
}
