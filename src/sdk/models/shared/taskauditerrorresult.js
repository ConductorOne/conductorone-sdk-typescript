/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
/** @internal */
export const TaskAuditErrorResult$inboundSchema = z.object({
    errorCount: z.nullable(z.string().transform(v => parseInt(v, 10))).optional(),
    errorReason: z.nullable(z.string()).optional(),
});
/** @internal */
export const TaskAuditErrorResult$outboundSchema = z.object({
    errorCount: z.nullable(z.number().int().transform(v => `${v}`)).optional(),
    errorReason: z.nullable(z.string()).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var TaskAuditErrorResult$;
(function (TaskAuditErrorResult$) {
    /** @deprecated use `TaskAuditErrorResult$inboundSchema` instead. */
    TaskAuditErrorResult$.inboundSchema = TaskAuditErrorResult$inboundSchema;
    /** @deprecated use `TaskAuditErrorResult$outboundSchema` instead. */
    TaskAuditErrorResult$.outboundSchema = TaskAuditErrorResult$outboundSchema;
})(TaskAuditErrorResult$ || (TaskAuditErrorResult$ = {}));
export function taskAuditErrorResultToJSON(taskAuditErrorResult) {
    return JSON.stringify(TaskAuditErrorResult$outboundSchema.parse(taskAuditErrorResult));
}
export function taskAuditErrorResultFromJSON(jsonString) {
    return safeParse(jsonString, (x) => TaskAuditErrorResult$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'TaskAuditErrorResult' from JSON`);
}
