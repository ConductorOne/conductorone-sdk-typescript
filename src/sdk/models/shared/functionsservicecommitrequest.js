/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
/** @internal */
export const FunctionsServiceCommitRequest$inboundSchema = z.object({
    commitMessage: z.nullable(z.string()).optional(),
    content: z.nullable(z.record(z.string())).optional(),
});
/** @internal */
export const FunctionsServiceCommitRequest$outboundSchema = z.object({
    commitMessage: z.nullable(z.string()).optional(),
    content: z.nullable(z.record(z.string())).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var FunctionsServiceCommitRequest$;
(function (FunctionsServiceCommitRequest$) {
    /** @deprecated use `FunctionsServiceCommitRequest$inboundSchema` instead. */
    FunctionsServiceCommitRequest$.inboundSchema = FunctionsServiceCommitRequest$inboundSchema;
    /** @deprecated use `FunctionsServiceCommitRequest$outboundSchema` instead. */
    FunctionsServiceCommitRequest$.outboundSchema = FunctionsServiceCommitRequest$outboundSchema;
})(FunctionsServiceCommitRequest$ || (FunctionsServiceCommitRequest$ = {}));
export function functionsServiceCommitRequestToJSON(functionsServiceCommitRequest) {
    return JSON.stringify(FunctionsServiceCommitRequest$outboundSchema.parse(functionsServiceCommitRequest));
}
export function functionsServiceCommitRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => FunctionsServiceCommitRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'FunctionsServiceCommitRequest' from JSON`);
}
