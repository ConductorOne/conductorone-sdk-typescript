/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
/** @internal */
export const ScheduleTrigger$inboundSchema = z.object({
    advanced: z.nullable(z.boolean()).optional(),
    cronSpec: z.nullable(z.string()).optional(),
    skipIfTrueCel: z.nullable(z.string()).optional(),
    start: z.nullable(z.string().datetime({ offset: true }).transform(v => new Date(v))).optional(),
});
/** @internal */
export const ScheduleTrigger$outboundSchema = z.object({
    advanced: z.nullable(z.boolean()).optional(),
    cronSpec: z.nullable(z.string()).optional(),
    skipIfTrueCel: z.nullable(z.string()).optional(),
    start: z.nullable(z.date().transform(v => v.toISOString())).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ScheduleTrigger$;
(function (ScheduleTrigger$) {
    /** @deprecated use `ScheduleTrigger$inboundSchema` instead. */
    ScheduleTrigger$.inboundSchema = ScheduleTrigger$inboundSchema;
    /** @deprecated use `ScheduleTrigger$outboundSchema` instead. */
    ScheduleTrigger$.outboundSchema = ScheduleTrigger$outboundSchema;
})(ScheduleTrigger$ || (ScheduleTrigger$ = {}));
export function scheduleTriggerToJSON(scheduleTrigger) {
    return JSON.stringify(ScheduleTrigger$outboundSchema.parse(scheduleTrigger));
}
export function scheduleTriggerFromJSON(jsonString) {
    return safeParse(jsonString, (x) => ScheduleTrigger$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ScheduleTrigger' from JSON`);
}
