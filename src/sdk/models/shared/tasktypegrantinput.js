/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { TaskGrantSource$inboundSchema, TaskGrantSource$outboundSchema, } from "./taskgrantsource.js";
/** @internal */
export const TaskTypeGrantInput$inboundSchema = z.object({
    grantDuration: z.nullable(z.string()).optional(),
    outcomeTime: z.nullable(z.string().datetime({ offset: true }).transform(v => new Date(v))).optional(),
    source: z.nullable(TaskGrantSource$inboundSchema).optional(),
});
/** @internal */
export const TaskTypeGrantInput$outboundSchema = z.object({
    grantDuration: z.nullable(z.string()).optional(),
    outcomeTime: z.nullable(z.date().transform(v => v.toISOString())).optional(),
    source: z.nullable(TaskGrantSource$outboundSchema).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var TaskTypeGrantInput$;
(function (TaskTypeGrantInput$) {
    /** @deprecated use `TaskTypeGrantInput$inboundSchema` instead. */
    TaskTypeGrantInput$.inboundSchema = TaskTypeGrantInput$inboundSchema;
    /** @deprecated use `TaskTypeGrantInput$outboundSchema` instead. */
    TaskTypeGrantInput$.outboundSchema = TaskTypeGrantInput$outboundSchema;
})(TaskTypeGrantInput$ || (TaskTypeGrantInput$ = {}));
export function taskTypeGrantInputToJSON(taskTypeGrantInput) {
    return JSON.stringify(TaskTypeGrantInput$outboundSchema.parse(taskTypeGrantInput));
}
export function taskTypeGrantInputFromJSON(jsonString) {
    return safeParse(jsonString, (x) => TaskTypeGrantInput$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'TaskTypeGrantInput' from JSON`);
}
