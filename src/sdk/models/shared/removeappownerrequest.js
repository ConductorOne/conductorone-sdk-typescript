/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
/** @internal */
export const RemoveAppOwnerRequest$inboundSchema = z.object({});
/** @internal */
export const RemoveAppOwnerRequest$outboundSchema = z.object({});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RemoveAppOwnerRequest$;
(function (RemoveAppOwnerRequest$) {
    /** @deprecated use `RemoveAppOwnerRequest$inboundSchema` instead. */
    RemoveAppOwnerRequest$.inboundSchema = RemoveAppOwnerRequest$inboundSchema;
    /** @deprecated use `RemoveAppOwnerRequest$outboundSchema` instead. */
    RemoveAppOwnerRequest$.outboundSchema = RemoveAppOwnerRequest$outboundSchema;
})(RemoveAppOwnerRequest$ || (RemoveAppOwnerRequest$ = {}));
export function removeAppOwnerRequestToJSON(removeAppOwnerRequest) {
    return JSON.stringify(RemoveAppOwnerRequest$outboundSchema.parse(removeAppOwnerRequest));
}
export function removeAppOwnerRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => RemoveAppOwnerRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'RemoveAppOwnerRequest' from JSON`);
}
