/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";
import { collectExtraKeys as collectExtraKeys$, safeParse, } from "../../../lib/schemas.js";
import { AppResourceType$inboundSchema, AppResourceType$outboundSchema, } from "./appresourcetype.js";
/** @internal */
export const UpdateManuallyManagedResourceTypeResponseExpanded$inboundSchema = collectExtraKeys$(z.object({
    "@type": z.string().optional(),
}).catchall(z.any()), "additionalProperties", true).transform((v) => {
    return remap$(v, {
        "@type": "atType",
    });
});
/** @internal */
export const UpdateManuallyManagedResourceTypeResponseExpanded$outboundSchema = z.object({
    atType: z.string().optional(),
    additionalProperties: z.record(z.any()),
}).transform((v) => {
    return {
        ...v.additionalProperties,
        ...remap$(v, {
            atType: "@type",
            additionalProperties: null,
        }),
    };
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var UpdateManuallyManagedResourceTypeResponseExpanded$;
(function (UpdateManuallyManagedResourceTypeResponseExpanded$) {
    /** @deprecated use `UpdateManuallyManagedResourceTypeResponseExpanded$inboundSchema` instead. */
    UpdateManuallyManagedResourceTypeResponseExpanded$.inboundSchema = UpdateManuallyManagedResourceTypeResponseExpanded$inboundSchema;
    /** @deprecated use `UpdateManuallyManagedResourceTypeResponseExpanded$outboundSchema` instead. */
    UpdateManuallyManagedResourceTypeResponseExpanded$.outboundSchema = UpdateManuallyManagedResourceTypeResponseExpanded$outboundSchema;
})(UpdateManuallyManagedResourceTypeResponseExpanded$ || (UpdateManuallyManagedResourceTypeResponseExpanded$ = {}));
export function updateManuallyManagedResourceTypeResponseExpandedToJSON(updateManuallyManagedResourceTypeResponseExpanded) {
    return JSON.stringify(UpdateManuallyManagedResourceTypeResponseExpanded$outboundSchema.parse(updateManuallyManagedResourceTypeResponseExpanded));
}
export function updateManuallyManagedResourceTypeResponseExpandedFromJSON(jsonString) {
    return safeParse(jsonString, (x) => UpdateManuallyManagedResourceTypeResponseExpanded$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'UpdateManuallyManagedResourceTypeResponseExpanded' from JSON`);
}
/** @internal */
export const UpdateManuallyManagedResourceTypeResponse$inboundSchema = z.object({
    appResourceType: z.nullable(AppResourceType$inboundSchema).optional(),
    expanded: z.nullable(z.array(z.lazy(() => UpdateManuallyManagedResourceTypeResponseExpanded$inboundSchema))).optional(),
});
/** @internal */
export const UpdateManuallyManagedResourceTypeResponse$outboundSchema = z.object({
    appResourceType: z.nullable(AppResourceType$outboundSchema).optional(),
    expanded: z.nullable(z.array(z.lazy(() => UpdateManuallyManagedResourceTypeResponseExpanded$outboundSchema))).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var UpdateManuallyManagedResourceTypeResponse$;
(function (UpdateManuallyManagedResourceTypeResponse$) {
    /** @deprecated use `UpdateManuallyManagedResourceTypeResponse$inboundSchema` instead. */
    UpdateManuallyManagedResourceTypeResponse$.inboundSchema = UpdateManuallyManagedResourceTypeResponse$inboundSchema;
    /** @deprecated use `UpdateManuallyManagedResourceTypeResponse$outboundSchema` instead. */
    UpdateManuallyManagedResourceTypeResponse$.outboundSchema = UpdateManuallyManagedResourceTypeResponse$outboundSchema;
})(UpdateManuallyManagedResourceTypeResponse$ || (UpdateManuallyManagedResourceTypeResponse$ = {}));
export function updateManuallyManagedResourceTypeResponseToJSON(updateManuallyManagedResourceTypeResponse) {
    return JSON.stringify(UpdateManuallyManagedResourceTypeResponse$outboundSchema.parse(updateManuallyManagedResourceTypeResponse));
}
export function updateManuallyManagedResourceTypeResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => UpdateManuallyManagedResourceTypeResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'UpdateManuallyManagedResourceTypeResponse' from JSON`);
}
