/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
/** @internal */
export const TaskRevokeSourceRequest$inboundSchema = z.object({
    requestUserId: z.nullable(z.string()).optional(),
});
/** @internal */
export const TaskRevokeSourceRequest$outboundSchema = z.object({
    requestUserId: z.nullable(z.string()).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var TaskRevokeSourceRequest$;
(function (TaskRevokeSourceRequest$) {
    /** @deprecated use `TaskRevokeSourceRequest$inboundSchema` instead. */
    TaskRevokeSourceRequest$.inboundSchema = TaskRevokeSourceRequest$inboundSchema;
    /** @deprecated use `TaskRevokeSourceRequest$outboundSchema` instead. */
    TaskRevokeSourceRequest$.outboundSchema = TaskRevokeSourceRequest$outboundSchema;
})(TaskRevokeSourceRequest$ || (TaskRevokeSourceRequest$ = {}));
export function taskRevokeSourceRequestToJSON(taskRevokeSourceRequest) {
    return JSON.stringify(TaskRevokeSourceRequest$outboundSchema.parse(taskRevokeSourceRequest));
}
export function taskRevokeSourceRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => TaskRevokeSourceRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'TaskRevokeSourceRequest' from JSON`);
}
