/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { UserAttributeMappingSource } from "./userattributemappingsource";
import { Expose, Transform, Type } from "class-transformer";

/**
 * The directoryStatus field.
 */
export enum UserDirectoryStatus {
    Unknown = "UNKNOWN",
    Enabled = "ENABLED",
    Disabled = "DISABLED",
    Deleted = "DELETED",
}

/**
 * The status field.
 */
export enum UserStatus {
    Unknown = "UNKNOWN",
    Enabled = "ENABLED",
    Disabled = "DISABLED",
    Deleted = "DELETED",
}

/**
 * The User message.
 */
export class User extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "createdAt" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    createdAt?: Date;

    /**
     * The delegatedUserId field.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "delegatedUserId" })
    delegatedUserId?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "deletedAt" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    deletedAt?: Date;

    /**
     * The department field.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "department" })
    department?: string;

    /**
     * The departmentSources field.
     */
    @SpeakeasyMetadata({ elemType: UserAttributeMappingSource })
    @Expose({ name: "departmentSources" })
    @Type(() => UserAttributeMappingSource)
    departmentSources?: UserAttributeMappingSource[];

    /**
     * The directoryIds field.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "directoryIds" })
    directoryIds?: string[];

    /**
     * The directoryStatus field.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "directoryStatus" })
    directoryStatus?: UserDirectoryStatus;

    /**
     * The directoryStatusSources field.
     */
    @SpeakeasyMetadata({ elemType: UserAttributeMappingSource })
    @Expose({ name: "directoryStatusSources" })
    @Type(() => UserAttributeMappingSource)
    directoryStatusSources?: UserAttributeMappingSource[];

    /**
     * The displayName field.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "displayName" })
    displayName?: string;

    /**
     * The email field.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "email" })
    email?: string;

    /**
     * The employmentStatus field.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "employmentStatus" })
    employmentStatus?: string;

    /**
     * The employmentStatusSources field.
     */
    @SpeakeasyMetadata({ elemType: UserAttributeMappingSource })
    @Expose({ name: "employmentStatusSources" })
    @Type(() => UserAttributeMappingSource)
    employmentStatusSources?: UserAttributeMappingSource[];

    /**
     * The employmentType field.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "employmentType" })
    employmentType?: string;

    /**
     * The employmentTypeSources field.
     */
    @SpeakeasyMetadata({ elemType: UserAttributeMappingSource })
    @Expose({ name: "employmentTypeSources" })
    @Type(() => UserAttributeMappingSource)
    employmentTypeSources?: UserAttributeMappingSource[];

    /**
     * The id field.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id?: string;

    /**
     * The jobTitle field.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "jobTitle" })
    jobTitle?: string;

    /**
     * The jobTitleSources field.
     */
    @SpeakeasyMetadata({ elemType: UserAttributeMappingSource })
    @Expose({ name: "jobTitleSources" })
    @Type(() => UserAttributeMappingSource)
    jobTitleSources?: UserAttributeMappingSource[];

    /**
     * The managerIds field.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "managerIds" })
    managerIds?: string[];

    /**
     * The managerSources field.
     */
    @SpeakeasyMetadata({ elemType: UserAttributeMappingSource })
    @Expose({ name: "managerSources" })
    @Type(() => UserAttributeMappingSource)
    managerSources?: UserAttributeMappingSource[];

    /**
     * The roleIds field.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "roleIds" })
    roleIds?: string[];

    /**
     * The status field.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "status" })
    status?: UserStatus;

    @SpeakeasyMetadata()
    @Expose({ name: "updatedAt" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    updatedAt?: Date;
}
