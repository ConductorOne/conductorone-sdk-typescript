/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
/** @internal */
export const RequiredTogether$inboundSchema = z.object({});
/** @internal */
export const RequiredTogether$outboundSchema = z.object({});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RequiredTogether$;
(function (RequiredTogether$) {
    /** @deprecated use `RequiredTogether$inboundSchema` instead. */
    RequiredTogether$.inboundSchema = RequiredTogether$inboundSchema;
    /** @deprecated use `RequiredTogether$outboundSchema` instead. */
    RequiredTogether$.outboundSchema = RequiredTogether$outboundSchema;
})(RequiredTogether$ || (RequiredTogether$ = {}));
export function requiredTogetherToJSON(requiredTogether) {
    return JSON.stringify(RequiredTogether$outboundSchema.parse(requiredTogether));
}
export function requiredTogetherFromJSON(jsonString) {
    return safeParse(jsonString, (x) => RequiredTogether$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'RequiredTogether' from JSON`);
}
