/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
/** @internal */
export const PersonalClientServiceDeleteResponse$inboundSchema = z.object({});
/** @internal */
export const PersonalClientServiceDeleteResponse$outboundSchema = z.object({});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var PersonalClientServiceDeleteResponse$;
(function (PersonalClientServiceDeleteResponse$) {
    /** @deprecated use `PersonalClientServiceDeleteResponse$inboundSchema` instead. */
    PersonalClientServiceDeleteResponse$.inboundSchema = PersonalClientServiceDeleteResponse$inboundSchema;
    /** @deprecated use `PersonalClientServiceDeleteResponse$outboundSchema` instead. */
    PersonalClientServiceDeleteResponse$.outboundSchema = PersonalClientServiceDeleteResponse$outboundSchema;
})(PersonalClientServiceDeleteResponse$ || (PersonalClientServiceDeleteResponse$ = {}));
export function personalClientServiceDeleteResponseToJSON(personalClientServiceDeleteResponse) {
    return JSON.stringify(PersonalClientServiceDeleteResponse$outboundSchema.parse(personalClientServiceDeleteResponse));
}
export function personalClientServiceDeleteResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => PersonalClientServiceDeleteResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'PersonalClientServiceDeleteResponse' from JSON`);
}
