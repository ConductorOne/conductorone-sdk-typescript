/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";
import {
  collectExtraKeys as collectExtraKeys$,
  safeParse,
} from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  AppEntitlementWithUserBinding,
  AppEntitlementWithUserBinding$inboundSchema,
  AppEntitlementWithUserBinding$Outbound,
  AppEntitlementWithUserBinding$outboundSchema,
} from "./appentitlementwithuserbinding.js";

/**
 * Contains an arbitrary serialized message along with a @type that describes the type of the serialized message.
 */
export type AppEntitlementSearchServiceSearchGrantsResponseExpanded = {
  /**
   * The type of the serialized message.
   */
  atType?: string | undefined;
  additionalProperties?: { [k: string]: any };
};

/**
 * The AppEntitlementSearchServiceSearchGrantsResponse message.
 */
export type AppEntitlementSearchServiceSearchGrantsResponse = {
  /**
   * The expanded field.
   */
  expanded?:
    | Array<AppEntitlementSearchServiceSearchGrantsResponseExpanded>
    | null
    | undefined;
  /**
   * The list field.
   */
  list?: Array<AppEntitlementWithUserBinding> | null | undefined;
  /**
   * The nextPageToken field.
   */
  nextPageToken?: string | null | undefined;
};

/** @internal */
export const AppEntitlementSearchServiceSearchGrantsResponseExpanded$inboundSchema:
  z.ZodType<
    AppEntitlementSearchServiceSearchGrantsResponseExpanded,
    z.ZodTypeDef,
    unknown
  > = collectExtraKeys$(
    z.object({
      "@type": z.string().optional(),
    }).catchall(z.any()),
    "additionalProperties",
    true,
  ).transform((v) => {
    return remap$(v, {
      "@type": "atType",
    });
  });

/** @internal */
export type AppEntitlementSearchServiceSearchGrantsResponseExpanded$Outbound = {
  "@type"?: string | undefined;
  [additionalProperties: string]: unknown;
};

/** @internal */
export const AppEntitlementSearchServiceSearchGrantsResponseExpanded$outboundSchema:
  z.ZodType<
    AppEntitlementSearchServiceSearchGrantsResponseExpanded$Outbound,
    z.ZodTypeDef,
    AppEntitlementSearchServiceSearchGrantsResponseExpanded
  > = z.object({
    atType: z.string().optional(),
    additionalProperties: z.record(z.any()),
  }).transform((v) => {
    return {
      ...v.additionalProperties,
      ...remap$(v, {
        atType: "@type",
        additionalProperties: null,
      }),
    };
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppEntitlementSearchServiceSearchGrantsResponseExpanded$ {
  /** @deprecated use `AppEntitlementSearchServiceSearchGrantsResponseExpanded$inboundSchema` instead. */
  export const inboundSchema =
    AppEntitlementSearchServiceSearchGrantsResponseExpanded$inboundSchema;
  /** @deprecated use `AppEntitlementSearchServiceSearchGrantsResponseExpanded$outboundSchema` instead. */
  export const outboundSchema =
    AppEntitlementSearchServiceSearchGrantsResponseExpanded$outboundSchema;
  /** @deprecated use `AppEntitlementSearchServiceSearchGrantsResponseExpanded$Outbound` instead. */
  export type Outbound =
    AppEntitlementSearchServiceSearchGrantsResponseExpanded$Outbound;
}

export function appEntitlementSearchServiceSearchGrantsResponseExpandedToJSON(
  appEntitlementSearchServiceSearchGrantsResponseExpanded:
    AppEntitlementSearchServiceSearchGrantsResponseExpanded,
): string {
  return JSON.stringify(
    AppEntitlementSearchServiceSearchGrantsResponseExpanded$outboundSchema
      .parse(appEntitlementSearchServiceSearchGrantsResponseExpanded),
  );
}

export function appEntitlementSearchServiceSearchGrantsResponseExpandedFromJSON(
  jsonString: string,
): SafeParseResult<
  AppEntitlementSearchServiceSearchGrantsResponseExpanded,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      AppEntitlementSearchServiceSearchGrantsResponseExpanded$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'AppEntitlementSearchServiceSearchGrantsResponseExpanded' from JSON`,
  );
}

/** @internal */
export const AppEntitlementSearchServiceSearchGrantsResponse$inboundSchema:
  z.ZodType<
    AppEntitlementSearchServiceSearchGrantsResponse,
    z.ZodTypeDef,
    unknown
  > = z.object({
    expanded: z.nullable(
      z.array(z.lazy(() =>
        AppEntitlementSearchServiceSearchGrantsResponseExpanded$inboundSchema
      )),
    ).optional(),
    list: z.nullable(z.array(AppEntitlementWithUserBinding$inboundSchema))
      .optional(),
    nextPageToken: z.nullable(z.string()).optional(),
  });

/** @internal */
export type AppEntitlementSearchServiceSearchGrantsResponse$Outbound = {
  expanded?:
    | Array<AppEntitlementSearchServiceSearchGrantsResponseExpanded$Outbound>
    | null
    | undefined;
  list?: Array<AppEntitlementWithUserBinding$Outbound> | null | undefined;
  nextPageToken?: string | null | undefined;
};

/** @internal */
export const AppEntitlementSearchServiceSearchGrantsResponse$outboundSchema:
  z.ZodType<
    AppEntitlementSearchServiceSearchGrantsResponse$Outbound,
    z.ZodTypeDef,
    AppEntitlementSearchServiceSearchGrantsResponse
  > = z.object({
    expanded: z.nullable(
      z.array(z.lazy(() =>
        AppEntitlementSearchServiceSearchGrantsResponseExpanded$outboundSchema
      )),
    ).optional(),
    list: z.nullable(z.array(AppEntitlementWithUserBinding$outboundSchema))
      .optional(),
    nextPageToken: z.nullable(z.string()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppEntitlementSearchServiceSearchGrantsResponse$ {
  /** @deprecated use `AppEntitlementSearchServiceSearchGrantsResponse$inboundSchema` instead. */
  export const inboundSchema =
    AppEntitlementSearchServiceSearchGrantsResponse$inboundSchema;
  /** @deprecated use `AppEntitlementSearchServiceSearchGrantsResponse$outboundSchema` instead. */
  export const outboundSchema =
    AppEntitlementSearchServiceSearchGrantsResponse$outboundSchema;
  /** @deprecated use `AppEntitlementSearchServiceSearchGrantsResponse$Outbound` instead. */
  export type Outbound =
    AppEntitlementSearchServiceSearchGrantsResponse$Outbound;
}

export function appEntitlementSearchServiceSearchGrantsResponseToJSON(
  appEntitlementSearchServiceSearchGrantsResponse:
    AppEntitlementSearchServiceSearchGrantsResponse,
): string {
  return JSON.stringify(
    AppEntitlementSearchServiceSearchGrantsResponse$outboundSchema.parse(
      appEntitlementSearchServiceSearchGrantsResponse,
    ),
  );
}

export function appEntitlementSearchServiceSearchGrantsResponseFromJSON(
  jsonString: string,
): SafeParseResult<
  AppEntitlementSearchServiceSearchGrantsResponse,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      AppEntitlementSearchServiceSearchGrantsResponse$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'AppEntitlementSearchServiceSearchGrantsResponse' from JSON`,
  );
}
