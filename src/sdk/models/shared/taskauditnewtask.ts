/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * The TaskAuditNewTask message.
 */
export type TaskAuditNewTask = {};

/** @internal */
export const TaskAuditNewTask$inboundSchema: z.ZodType<
  TaskAuditNewTask,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type TaskAuditNewTask$Outbound = {};

/** @internal */
export const TaskAuditNewTask$outboundSchema: z.ZodType<
  TaskAuditNewTask$Outbound,
  z.ZodTypeDef,
  TaskAuditNewTask
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TaskAuditNewTask$ {
  /** @deprecated use `TaskAuditNewTask$inboundSchema` instead. */
  export const inboundSchema = TaskAuditNewTask$inboundSchema;
  /** @deprecated use `TaskAuditNewTask$outboundSchema` instead. */
  export const outboundSchema = TaskAuditNewTask$outboundSchema;
  /** @deprecated use `TaskAuditNewTask$Outbound` instead. */
  export type Outbound = TaskAuditNewTask$Outbound;
}

export function taskAuditNewTaskToJSON(
  taskAuditNewTask: TaskAuditNewTask,
): string {
  return JSON.stringify(
    TaskAuditNewTask$outboundSchema.parse(taskAuditNewTask),
  );
}

export function taskAuditNewTaskFromJSON(
  jsonString: string,
): SafeParseResult<TaskAuditNewTask, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => TaskAuditNewTask$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'TaskAuditNewTask' from JSON`,
  );
}
