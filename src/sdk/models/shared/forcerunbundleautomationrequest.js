/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { AppEntitlementRef$inboundSchema, AppEntitlementRef$outboundSchema, } from "./appentitlementref.js";
/** @internal */
export const ForceRunBundleAutomationRequest$inboundSchema = z.object({
    refs: z.nullable(z.array(AppEntitlementRef$inboundSchema)).optional(),
});
/** @internal */
export const ForceRunBundleAutomationRequest$outboundSchema = z.object({
    refs: z.nullable(z.array(AppEntitlementRef$outboundSchema)).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ForceRunBundleAutomationRequest$;
(function (ForceRunBundleAutomationRequest$) {
    /** @deprecated use `ForceRunBundleAutomationRequest$inboundSchema` instead. */
    ForceRunBundleAutomationRequest$.inboundSchema = ForceRunBundleAutomationRequest$inboundSchema;
    /** @deprecated use `ForceRunBundleAutomationRequest$outboundSchema` instead. */
    ForceRunBundleAutomationRequest$.outboundSchema = ForceRunBundleAutomationRequest$outboundSchema;
})(ForceRunBundleAutomationRequest$ || (ForceRunBundleAutomationRequest$ = {}));
export function forceRunBundleAutomationRequestToJSON(forceRunBundleAutomationRequest) {
    return JSON.stringify(ForceRunBundleAutomationRequest$outboundSchema.parse(forceRunBundleAutomationRequest));
}
export function forceRunBundleAutomationRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => ForceRunBundleAutomationRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ForceRunBundleAutomationRequest' from JSON`);
}
