/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { App$inboundSchema, App$outboundSchema, } from "./app.js";
/** @internal */
export const SearchAppsResponse$inboundSchema = z.object({
    list: z.nullable(z.array(App$inboundSchema)).optional(),
    nextPageToken: z.nullable(z.string()).optional(),
});
/** @internal */
export const SearchAppsResponse$outboundSchema = z.object({
    list: z.nullable(z.array(App$outboundSchema)).optional(),
    nextPageToken: z.nullable(z.string()).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var SearchAppsResponse$;
(function (SearchAppsResponse$) {
    /** @deprecated use `SearchAppsResponse$inboundSchema` instead. */
    SearchAppsResponse$.inboundSchema = SearchAppsResponse$inboundSchema;
    /** @deprecated use `SearchAppsResponse$outboundSchema` instead. */
    SearchAppsResponse$.outboundSchema = SearchAppsResponse$outboundSchema;
})(SearchAppsResponse$ || (SearchAppsResponse$ = {}));
export function searchAppsResponseToJSON(searchAppsResponse) {
    return JSON.stringify(SearchAppsResponse$outboundSchema.parse(searchAppsResponse));
}
export function searchAppsResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => SearchAppsResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'SearchAppsResponse' from JSON`);
}
