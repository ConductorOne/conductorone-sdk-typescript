/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";
import { collectExtraKeys as collectExtraKeys$, safeParse, } from "../../../lib/schemas.js";
import { AppResourceView$inboundSchema, AppResourceView$outboundSchema, } from "./appresourceview.js";
/** @internal */
export const AppResourceServiceUpdateResponseExpanded$inboundSchema = collectExtraKeys$(z.object({
    "@type": z.string().optional(),
}).catchall(z.any()), "additionalProperties", true).transform((v) => {
    return remap$(v, {
        "@type": "atType",
    });
});
/** @internal */
export const AppResourceServiceUpdateResponseExpanded$outboundSchema = z.object({
    atType: z.string().optional(),
    additionalProperties: z.record(z.any()),
}).transform((v) => {
    return {
        ...v.additionalProperties,
        ...remap$(v, {
            atType: "@type",
            additionalProperties: null,
        }),
    };
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var AppResourceServiceUpdateResponseExpanded$;
(function (AppResourceServiceUpdateResponseExpanded$) {
    /** @deprecated use `AppResourceServiceUpdateResponseExpanded$inboundSchema` instead. */
    AppResourceServiceUpdateResponseExpanded$.inboundSchema = AppResourceServiceUpdateResponseExpanded$inboundSchema;
    /** @deprecated use `AppResourceServiceUpdateResponseExpanded$outboundSchema` instead. */
    AppResourceServiceUpdateResponseExpanded$.outboundSchema = AppResourceServiceUpdateResponseExpanded$outboundSchema;
})(AppResourceServiceUpdateResponseExpanded$ || (AppResourceServiceUpdateResponseExpanded$ = {}));
export function appResourceServiceUpdateResponseExpandedToJSON(appResourceServiceUpdateResponseExpanded) {
    return JSON.stringify(AppResourceServiceUpdateResponseExpanded$outboundSchema.parse(appResourceServiceUpdateResponseExpanded));
}
export function appResourceServiceUpdateResponseExpandedFromJSON(jsonString) {
    return safeParse(jsonString, (x) => AppResourceServiceUpdateResponseExpanded$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'AppResourceServiceUpdateResponseExpanded' from JSON`);
}
/** @internal */
export const AppResourceServiceUpdateResponse$inboundSchema = z.object({
    appResourceView: z.nullable(AppResourceView$inboundSchema).optional(),
    expanded: z.nullable(z.array(z.lazy(() => AppResourceServiceUpdateResponseExpanded$inboundSchema))).optional(),
});
/** @internal */
export const AppResourceServiceUpdateResponse$outboundSchema = z.object({
    appResourceView: z.nullable(AppResourceView$outboundSchema).optional(),
    expanded: z.nullable(z.array(z.lazy(() => AppResourceServiceUpdateResponseExpanded$outboundSchema))).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var AppResourceServiceUpdateResponse$;
(function (AppResourceServiceUpdateResponse$) {
    /** @deprecated use `AppResourceServiceUpdateResponse$inboundSchema` instead. */
    AppResourceServiceUpdateResponse$.inboundSchema = AppResourceServiceUpdateResponse$inboundSchema;
    /** @deprecated use `AppResourceServiceUpdateResponse$outboundSchema` instead. */
    AppResourceServiceUpdateResponse$.outboundSchema = AppResourceServiceUpdateResponse$outboundSchema;
})(AppResourceServiceUpdateResponse$ || (AppResourceServiceUpdateResponse$ = {}));
export function appResourceServiceUpdateResponseToJSON(appResourceServiceUpdateResponse) {
    return JSON.stringify(AppResourceServiceUpdateResponse$outboundSchema.parse(appResourceServiceUpdateResponse));
}
export function appResourceServiceUpdateResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => AppResourceServiceUpdateResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'AppResourceServiceUpdateResponse' from JSON`);
}
