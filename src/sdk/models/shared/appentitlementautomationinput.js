/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { AppEntitlementAutomationLastRunStatusInput$inboundSchema, AppEntitlementAutomationLastRunStatusInput$outboundSchema, } from "./appentitlementautomationlastrunstatusinput.js";
import { AppEntitlementAutomationRuleBasic$inboundSchema, AppEntitlementAutomationRuleBasic$outboundSchema, } from "./appentitlementautomationrulebasic.js";
import { AppEntitlementAutomationRuleCEL$inboundSchema, AppEntitlementAutomationRuleCEL$outboundSchema, } from "./appentitlementautomationrulecel.js";
import { AppEntitlementAutomationRuleEntitlement$inboundSchema, AppEntitlementAutomationRuleEntitlement$outboundSchema, } from "./appentitlementautomationruleentitlement.js";
import { AppEntitlementAutomationRuleNone$inboundSchema, AppEntitlementAutomationRuleNone$outboundSchema, } from "./appentitlementautomationrulenone.js";
/** @internal */
export const AppEntitlementAutomationInput$inboundSchema = z.object({
    basic: z.nullable(AppEntitlementAutomationRuleBasic$inboundSchema).optional(),
    cel: z.nullable(AppEntitlementAutomationRuleCEL$inboundSchema).optional(),
    createdAt: z.nullable(z.string().datetime({ offset: true }).transform(v => new Date(v))).optional(),
    deletedAt: z.nullable(z.string().datetime({ offset: true }).transform(v => new Date(v))).optional(),
    description: z.nullable(z.string()).optional(),
    displayName: z.nullable(z.string()).optional(),
    entitlements: z.nullable(AppEntitlementAutomationRuleEntitlement$inboundSchema).optional(),
    lastRunStatus: z.nullable(AppEntitlementAutomationLastRunStatusInput$inboundSchema).optional(),
    none: z.nullable(AppEntitlementAutomationRuleNone$inboundSchema).optional(),
    updatedAt: z.nullable(z.string().datetime({ offset: true }).transform(v => new Date(v))).optional(),
});
/** @internal */
export const AppEntitlementAutomationInput$outboundSchema = z.object({
    basic: z.nullable(AppEntitlementAutomationRuleBasic$outboundSchema)
        .optional(),
    cel: z.nullable(AppEntitlementAutomationRuleCEL$outboundSchema).optional(),
    createdAt: z.nullable(z.date().transform(v => v.toISOString())).optional(),
    deletedAt: z.nullable(z.date().transform(v => v.toISOString())).optional(),
    description: z.nullable(z.string()).optional(),
    displayName: z.nullable(z.string()).optional(),
    entitlements: z.nullable(AppEntitlementAutomationRuleEntitlement$outboundSchema).optional(),
    lastRunStatus: z.nullable(AppEntitlementAutomationLastRunStatusInput$outboundSchema).optional(),
    none: z.nullable(AppEntitlementAutomationRuleNone$outboundSchema).optional(),
    updatedAt: z.nullable(z.date().transform(v => v.toISOString())).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var AppEntitlementAutomationInput$;
(function (AppEntitlementAutomationInput$) {
    /** @deprecated use `AppEntitlementAutomationInput$inboundSchema` instead. */
    AppEntitlementAutomationInput$.inboundSchema = AppEntitlementAutomationInput$inboundSchema;
    /** @deprecated use `AppEntitlementAutomationInput$outboundSchema` instead. */
    AppEntitlementAutomationInput$.outboundSchema = AppEntitlementAutomationInput$outboundSchema;
})(AppEntitlementAutomationInput$ || (AppEntitlementAutomationInput$ = {}));
export function appEntitlementAutomationInputToJSON(appEntitlementAutomationInput) {
    return JSON.stringify(AppEntitlementAutomationInput$outboundSchema.parse(appEntitlementAutomationInput));
}
export function appEntitlementAutomationInputFromJSON(jsonString) {
    return safeParse(jsonString, (x) => AppEntitlementAutomationInput$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'AppEntitlementAutomationInput' from JSON`);
}
