/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  DirectoryAccountFilterAll,
  DirectoryAccountFilterAll$inboundSchema,
  DirectoryAccountFilterAll$Outbound,
  DirectoryAccountFilterAll$outboundSchema,
} from "./directoryaccountfilterall.js";
import {
  DirectoryAccountFilterCel,
  DirectoryAccountFilterCel$inboundSchema,
  DirectoryAccountFilterCel$Outbound,
  DirectoryAccountFilterCel$outboundSchema,
} from "./directoryaccountfiltercel.js";
import {
  DirectoryExpandMask,
  DirectoryExpandMask$inboundSchema,
  DirectoryExpandMask$Outbound,
  DirectoryExpandMask$outboundSchema,
} from "./directoryexpandmask.js";

/**
 * Update a directory by app_id.
 *
 * @remarks
 *
 * This message contains a oneof named account_filter. Only a single field of the following list may be set at a time:
 *   - all
 *   - celExpression
 */
export type DirectoryServiceUpdateRequest = {
  all?: DirectoryAccountFilterAll | null | undefined;
  celExpression?: DirectoryAccountFilterCel | null | undefined;
  expandMask?: DirectoryExpandMask | null | undefined;
};

/** @internal */
export const DirectoryServiceUpdateRequest$inboundSchema: z.ZodType<
  DirectoryServiceUpdateRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  all: z.nullable(DirectoryAccountFilterAll$inboundSchema).optional(),
  celExpression: z.nullable(DirectoryAccountFilterCel$inboundSchema).optional(),
  expandMask: z.nullable(DirectoryExpandMask$inboundSchema).optional(),
});

/** @internal */
export type DirectoryServiceUpdateRequest$Outbound = {
  all?: DirectoryAccountFilterAll$Outbound | null | undefined;
  celExpression?: DirectoryAccountFilterCel$Outbound | null | undefined;
  expandMask?: DirectoryExpandMask$Outbound | null | undefined;
};

/** @internal */
export const DirectoryServiceUpdateRequest$outboundSchema: z.ZodType<
  DirectoryServiceUpdateRequest$Outbound,
  z.ZodTypeDef,
  DirectoryServiceUpdateRequest
> = z.object({
  all: z.nullable(DirectoryAccountFilterAll$outboundSchema).optional(),
  celExpression: z.nullable(DirectoryAccountFilterCel$outboundSchema)
    .optional(),
  expandMask: z.nullable(DirectoryExpandMask$outboundSchema).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DirectoryServiceUpdateRequest$ {
  /** @deprecated use `DirectoryServiceUpdateRequest$inboundSchema` instead. */
  export const inboundSchema = DirectoryServiceUpdateRequest$inboundSchema;
  /** @deprecated use `DirectoryServiceUpdateRequest$outboundSchema` instead. */
  export const outboundSchema = DirectoryServiceUpdateRequest$outboundSchema;
  /** @deprecated use `DirectoryServiceUpdateRequest$Outbound` instead. */
  export type Outbound = DirectoryServiceUpdateRequest$Outbound;
}

export function directoryServiceUpdateRequestToJSON(
  directoryServiceUpdateRequest: DirectoryServiceUpdateRequest,
): string {
  return JSON.stringify(
    DirectoryServiceUpdateRequest$outboundSchema.parse(
      directoryServiceUpdateRequest,
    ),
  );
}

export function directoryServiceUpdateRequestFromJSON(
  jsonString: string,
): SafeParseResult<DirectoryServiceUpdateRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DirectoryServiceUpdateRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DirectoryServiceUpdateRequest' from JSON`,
  );
}
