/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { AppEntitlementUserBindingHistory$inboundSchema, AppEntitlementUserBindingHistory$outboundSchema, } from "./appentitlementuserbindinghistory.js";
/** @internal */
export const AppEntitlementUserBindingHistoryView$inboundSchema = z.object({
    appPath: z.nullable(z.string()).optional(),
    appUserPath: z.nullable(z.string()).optional(),
    entitlementPath: z.nullable(z.string()).optional(),
    history: z.nullable(AppEntitlementUserBindingHistory$inboundSchema)
        .optional(),
});
/** @internal */
export const AppEntitlementUserBindingHistoryView$outboundSchema = z.object({
    appPath: z.nullable(z.string()).optional(),
    appUserPath: z.nullable(z.string()).optional(),
    entitlementPath: z.nullable(z.string()).optional(),
    history: z.nullable(AppEntitlementUserBindingHistory$outboundSchema)
        .optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var AppEntitlementUserBindingHistoryView$;
(function (AppEntitlementUserBindingHistoryView$) {
    /** @deprecated use `AppEntitlementUserBindingHistoryView$inboundSchema` instead. */
    AppEntitlementUserBindingHistoryView$.inboundSchema = AppEntitlementUserBindingHistoryView$inboundSchema;
    /** @deprecated use `AppEntitlementUserBindingHistoryView$outboundSchema` instead. */
    AppEntitlementUserBindingHistoryView$.outboundSchema = AppEntitlementUserBindingHistoryView$outboundSchema;
})(AppEntitlementUserBindingHistoryView$ || (AppEntitlementUserBindingHistoryView$ = {}));
export function appEntitlementUserBindingHistoryViewToJSON(appEntitlementUserBindingHistoryView) {
    return JSON.stringify(AppEntitlementUserBindingHistoryView$outboundSchema.parse(appEntitlementUserBindingHistoryView));
}
export function appEntitlementUserBindingHistoryViewFromJSON(jsonString) {
    return safeParse(jsonString, (x) => AppEntitlementUserBindingHistoryView$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'AppEntitlementUserBindingHistoryView' from JSON`);
}
