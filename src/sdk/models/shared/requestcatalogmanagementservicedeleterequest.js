/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
/** @internal */
export const RequestCatalogManagementServiceDeleteRequest$inboundSchema = z.object({});
/** @internal */
export const RequestCatalogManagementServiceDeleteRequest$outboundSchema = z.object({});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RequestCatalogManagementServiceDeleteRequest$;
(function (RequestCatalogManagementServiceDeleteRequest$) {
    /** @deprecated use `RequestCatalogManagementServiceDeleteRequest$inboundSchema` instead. */
    RequestCatalogManagementServiceDeleteRequest$.inboundSchema = RequestCatalogManagementServiceDeleteRequest$inboundSchema;
    /** @deprecated use `RequestCatalogManagementServiceDeleteRequest$outboundSchema` instead. */
    RequestCatalogManagementServiceDeleteRequest$.outboundSchema = RequestCatalogManagementServiceDeleteRequest$outboundSchema;
})(RequestCatalogManagementServiceDeleteRequest$ || (RequestCatalogManagementServiceDeleteRequest$ = {}));
export function requestCatalogManagementServiceDeleteRequestToJSON(requestCatalogManagementServiceDeleteRequest) {
    return JSON.stringify(RequestCatalogManagementServiceDeleteRequest$outboundSchema.parse(requestCatalogManagementServiceDeleteRequest));
}
export function requestCatalogManagementServiceDeleteRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => RequestCatalogManagementServiceDeleteRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'RequestCatalogManagementServiceDeleteRequest' from JSON`);
}
