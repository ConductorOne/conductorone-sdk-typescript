/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  AppEntitlementRef,
  AppEntitlementRef$inboundSchema,
  AppEntitlementRef$Outbound,
  AppEntitlementRef$outboundSchema,
} from "./appentitlementref.js";

/**
 * The RequestCatalogManagementServiceAddAccessEntitlementsRequest message is used to add access entitlements to a request
 *
 * @remarks
 *  catalog to determine which users can view the request catalog.
 */
export type RequestCatalogManagementServiceAddAccessEntitlementsRequest = {
  /**
   * List of entitlements to add to the request catalog as access entitlements.
   */
  accessEntitlements: Array<AppEntitlementRef>;
};

/** @internal */
export const RequestCatalogManagementServiceAddAccessEntitlementsRequest$inboundSchema:
  z.ZodType<
    RequestCatalogManagementServiceAddAccessEntitlementsRequest,
    z.ZodTypeDef,
    unknown
  > = z.object({
    accessEntitlements: z.array(AppEntitlementRef$inboundSchema),
  });

/** @internal */
export type RequestCatalogManagementServiceAddAccessEntitlementsRequest$Outbound =
  {
    accessEntitlements: Array<AppEntitlementRef$Outbound>;
  };

/** @internal */
export const RequestCatalogManagementServiceAddAccessEntitlementsRequest$outboundSchema:
  z.ZodType<
    RequestCatalogManagementServiceAddAccessEntitlementsRequest$Outbound,
    z.ZodTypeDef,
    RequestCatalogManagementServiceAddAccessEntitlementsRequest
  > = z.object({
    accessEntitlements: z.array(AppEntitlementRef$outboundSchema),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RequestCatalogManagementServiceAddAccessEntitlementsRequest$ {
  /** @deprecated use `RequestCatalogManagementServiceAddAccessEntitlementsRequest$inboundSchema` instead. */
  export const inboundSchema =
    RequestCatalogManagementServiceAddAccessEntitlementsRequest$inboundSchema;
  /** @deprecated use `RequestCatalogManagementServiceAddAccessEntitlementsRequest$outboundSchema` instead. */
  export const outboundSchema =
    RequestCatalogManagementServiceAddAccessEntitlementsRequest$outboundSchema;
  /** @deprecated use `RequestCatalogManagementServiceAddAccessEntitlementsRequest$Outbound` instead. */
  export type Outbound =
    RequestCatalogManagementServiceAddAccessEntitlementsRequest$Outbound;
}

export function requestCatalogManagementServiceAddAccessEntitlementsRequestToJSON(
  requestCatalogManagementServiceAddAccessEntitlementsRequest:
    RequestCatalogManagementServiceAddAccessEntitlementsRequest,
): string {
  return JSON.stringify(
    RequestCatalogManagementServiceAddAccessEntitlementsRequest$outboundSchema
      .parse(requestCatalogManagementServiceAddAccessEntitlementsRequest),
  );
}

export function requestCatalogManagementServiceAddAccessEntitlementsRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  RequestCatalogManagementServiceAddAccessEntitlementsRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RequestCatalogManagementServiceAddAccessEntitlementsRequest$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'RequestCatalogManagementServiceAddAccessEntitlementsRequest' from JSON`,
  );
}
