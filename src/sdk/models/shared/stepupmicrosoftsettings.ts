/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * StepUpMicrosoftSettings represents a Microsoft Entra Provider using Conditional Access Policies to enforce step-up authentication.
 */
export type StepUpMicrosoftSettings = {
  /**
   * The conditionalAccessIds field.
   */
  conditionalAccessIds?: Array<string> | null | undefined;
  /**
   * The tenant field.
   */
  tenant?: string | null | undefined;
};

/** @internal */
export const StepUpMicrosoftSettings$inboundSchema: z.ZodType<
  StepUpMicrosoftSettings,
  z.ZodTypeDef,
  unknown
> = z.object({
  conditionalAccessIds: z.nullable(z.array(z.string())).optional(),
  tenant: z.nullable(z.string()).optional(),
});

/** @internal */
export type StepUpMicrosoftSettings$Outbound = {
  conditionalAccessIds?: Array<string> | null | undefined;
  tenant?: string | null | undefined;
};

/** @internal */
export const StepUpMicrosoftSettings$outboundSchema: z.ZodType<
  StepUpMicrosoftSettings$Outbound,
  z.ZodTypeDef,
  StepUpMicrosoftSettings
> = z.object({
  conditionalAccessIds: z.nullable(z.array(z.string())).optional(),
  tenant: z.nullable(z.string()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace StepUpMicrosoftSettings$ {
  /** @deprecated use `StepUpMicrosoftSettings$inboundSchema` instead. */
  export const inboundSchema = StepUpMicrosoftSettings$inboundSchema;
  /** @deprecated use `StepUpMicrosoftSettings$outboundSchema` instead. */
  export const outboundSchema = StepUpMicrosoftSettings$outboundSchema;
  /** @deprecated use `StepUpMicrosoftSettings$Outbound` instead. */
  export type Outbound = StepUpMicrosoftSettings$Outbound;
}

export function stepUpMicrosoftSettingsToJSON(
  stepUpMicrosoftSettings: StepUpMicrosoftSettings,
): string {
  return JSON.stringify(
    StepUpMicrosoftSettings$outboundSchema.parse(stepUpMicrosoftSettings),
  );
}

export function stepUpMicrosoftSettingsFromJSON(
  jsonString: string,
): SafeParseResult<StepUpMicrosoftSettings, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => StepUpMicrosoftSettings$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'StepUpMicrosoftSettings' from JSON`,
  );
}
