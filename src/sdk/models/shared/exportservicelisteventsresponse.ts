/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * The ExportServiceListEventsResponse message.
 */
export type ExportServiceListEventsResponse = {
  /**
   * List contains an array of JSON OCSF events.
   */
  list?: Array<{ [k: string]: any }> | null | undefined;
  /**
   * The nextPageToken field.
   */
  nextPageToken?: string | null | undefined;
};

/** @internal */
export const ExportServiceListEventsResponse$inboundSchema: z.ZodType<
  ExportServiceListEventsResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  list: z.nullable(z.array(z.record(z.any()))).optional(),
  nextPageToken: z.nullable(z.string()).optional(),
});

/** @internal */
export type ExportServiceListEventsResponse$Outbound = {
  list?: Array<{ [k: string]: any }> | null | undefined;
  nextPageToken?: string | null | undefined;
};

/** @internal */
export const ExportServiceListEventsResponse$outboundSchema: z.ZodType<
  ExportServiceListEventsResponse$Outbound,
  z.ZodTypeDef,
  ExportServiceListEventsResponse
> = z.object({
  list: z.nullable(z.array(z.record(z.any()))).optional(),
  nextPageToken: z.nullable(z.string()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ExportServiceListEventsResponse$ {
  /** @deprecated use `ExportServiceListEventsResponse$inboundSchema` instead. */
  export const inboundSchema = ExportServiceListEventsResponse$inboundSchema;
  /** @deprecated use `ExportServiceListEventsResponse$outboundSchema` instead. */
  export const outboundSchema = ExportServiceListEventsResponse$outboundSchema;
  /** @deprecated use `ExportServiceListEventsResponse$Outbound` instead. */
  export type Outbound = ExportServiceListEventsResponse$Outbound;
}

export function exportServiceListEventsResponseToJSON(
  exportServiceListEventsResponse: ExportServiceListEventsResponse,
): string {
  return JSON.stringify(
    ExportServiceListEventsResponse$outboundSchema.parse(
      exportServiceListEventsResponse,
    ),
  );
}

export function exportServiceListEventsResponseFromJSON(
  jsonString: string,
): SafeParseResult<ExportServiceListEventsResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ExportServiceListEventsResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ExportServiceListEventsResponse' from JSON`,
  );
}
