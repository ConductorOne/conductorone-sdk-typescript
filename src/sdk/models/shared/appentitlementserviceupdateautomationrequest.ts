/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  AppEntitlementAutomationRuleBasic,
  AppEntitlementAutomationRuleBasic$inboundSchema,
  AppEntitlementAutomationRuleBasic$Outbound,
  AppEntitlementAutomationRuleBasic$outboundSchema,
} from "./appentitlementautomationrulebasic.js";
import {
  AppEntitlementAutomationRuleCEL,
  AppEntitlementAutomationRuleCEL$inboundSchema,
  AppEntitlementAutomationRuleCEL$Outbound,
  AppEntitlementAutomationRuleCEL$outboundSchema,
} from "./appentitlementautomationrulecel.js";
import {
  AppEntitlementAutomationRuleEntitlement,
  AppEntitlementAutomationRuleEntitlement$inboundSchema,
  AppEntitlementAutomationRuleEntitlement$Outbound,
  AppEntitlementAutomationRuleEntitlement$outboundSchema,
} from "./appentitlementautomationruleentitlement.js";
import {
  AppEntitlementAutomationRuleNone,
  AppEntitlementAutomationRuleNone$inboundSchema,
  AppEntitlementAutomationRuleNone$Outbound,
  AppEntitlementAutomationRuleNone$outboundSchema,
} from "./appentitlementautomationrulenone.js";

/**
 * The AppEntitlementServiceUpdateAutomationRequest message.
 *
 * @remarks
 *
 * This message contains a oneof named conditions. Only a single field of the following list may be set at a time:
 *   - none
 *   - entitlements
 *   - cel
 *   - basic
 */
export type AppEntitlementServiceUpdateAutomationRequest = {
  basic?: AppEntitlementAutomationRuleBasic | null | undefined;
  cel?: AppEntitlementAutomationRuleCEL | null | undefined;
  /**
   * The description of the app entitlement.
   */
  description?: string | null | undefined;
  /**
   * The display name of the app entitlement.
   */
  displayName?: string | null | undefined;
  entitlements?: AppEntitlementAutomationRuleEntitlement | null | undefined;
  none?: AppEntitlementAutomationRuleNone | null | undefined;
  updateMask?: string | null | undefined;
};

/** @internal */
export const AppEntitlementServiceUpdateAutomationRequest$inboundSchema:
  z.ZodType<
    AppEntitlementServiceUpdateAutomationRequest,
    z.ZodTypeDef,
    unknown
  > = z.object({
    basic: z.nullable(AppEntitlementAutomationRuleBasic$inboundSchema)
      .optional(),
    cel: z.nullable(AppEntitlementAutomationRuleCEL$inboundSchema).optional(),
    description: z.nullable(z.string()).optional(),
    displayName: z.nullable(z.string()).optional(),
    entitlements: z.nullable(
      AppEntitlementAutomationRuleEntitlement$inboundSchema,
    ).optional(),
    none: z.nullable(AppEntitlementAutomationRuleNone$inboundSchema).optional(),
    updateMask: z.nullable(z.string()).optional(),
  });

/** @internal */
export type AppEntitlementServiceUpdateAutomationRequest$Outbound = {
  basic?: AppEntitlementAutomationRuleBasic$Outbound | null | undefined;
  cel?: AppEntitlementAutomationRuleCEL$Outbound | null | undefined;
  description?: string | null | undefined;
  displayName?: string | null | undefined;
  entitlements?:
    | AppEntitlementAutomationRuleEntitlement$Outbound
    | null
    | undefined;
  none?: AppEntitlementAutomationRuleNone$Outbound | null | undefined;
  updateMask?: string | null | undefined;
};

/** @internal */
export const AppEntitlementServiceUpdateAutomationRequest$outboundSchema:
  z.ZodType<
    AppEntitlementServiceUpdateAutomationRequest$Outbound,
    z.ZodTypeDef,
    AppEntitlementServiceUpdateAutomationRequest
  > = z.object({
    basic: z.nullable(AppEntitlementAutomationRuleBasic$outboundSchema)
      .optional(),
    cel: z.nullable(AppEntitlementAutomationRuleCEL$outboundSchema).optional(),
    description: z.nullable(z.string()).optional(),
    displayName: z.nullable(z.string()).optional(),
    entitlements: z.nullable(
      AppEntitlementAutomationRuleEntitlement$outboundSchema,
    ).optional(),
    none: z.nullable(AppEntitlementAutomationRuleNone$outboundSchema)
      .optional(),
    updateMask: z.nullable(z.string()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppEntitlementServiceUpdateAutomationRequest$ {
  /** @deprecated use `AppEntitlementServiceUpdateAutomationRequest$inboundSchema` instead. */
  export const inboundSchema =
    AppEntitlementServiceUpdateAutomationRequest$inboundSchema;
  /** @deprecated use `AppEntitlementServiceUpdateAutomationRequest$outboundSchema` instead. */
  export const outboundSchema =
    AppEntitlementServiceUpdateAutomationRequest$outboundSchema;
  /** @deprecated use `AppEntitlementServiceUpdateAutomationRequest$Outbound` instead. */
  export type Outbound = AppEntitlementServiceUpdateAutomationRequest$Outbound;
}

export function appEntitlementServiceUpdateAutomationRequestToJSON(
  appEntitlementServiceUpdateAutomationRequest:
    AppEntitlementServiceUpdateAutomationRequest,
): string {
  return JSON.stringify(
    AppEntitlementServiceUpdateAutomationRequest$outboundSchema.parse(
      appEntitlementServiceUpdateAutomationRequest,
    ),
  );
}

export function appEntitlementServiceUpdateAutomationRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  AppEntitlementServiceUpdateAutomationRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      AppEntitlementServiceUpdateAutomationRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'AppEntitlementServiceUpdateAutomationRequest' from JSON`,
  );
}
