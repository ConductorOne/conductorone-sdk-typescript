/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  ExpiringUserDelegationBinding,
  ExpiringUserDelegationBinding$inboundSchema,
  ExpiringUserDelegationBinding$Outbound,
  ExpiringUserDelegationBinding$outboundSchema,
} from "./expiringuserdelegationbinding.js";

/**
 * The SetExpiringUserDelegationBindingByAdminResponse message.
 */
export type SetExpiringUserDelegationBindingByAdminResponse = {
  item?: ExpiringUserDelegationBinding | null | undefined;
};

/** @internal */
export const SetExpiringUserDelegationBindingByAdminResponse$inboundSchema:
  z.ZodType<
    SetExpiringUserDelegationBindingByAdminResponse,
    z.ZodTypeDef,
    unknown
  > = z.object({
    item: z.nullable(ExpiringUserDelegationBinding$inboundSchema).optional(),
  });

/** @internal */
export type SetExpiringUserDelegationBindingByAdminResponse$Outbound = {
  item?: ExpiringUserDelegationBinding$Outbound | null | undefined;
};

/** @internal */
export const SetExpiringUserDelegationBindingByAdminResponse$outboundSchema:
  z.ZodType<
    SetExpiringUserDelegationBindingByAdminResponse$Outbound,
    z.ZodTypeDef,
    SetExpiringUserDelegationBindingByAdminResponse
  > = z.object({
    item: z.nullable(ExpiringUserDelegationBinding$outboundSchema).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SetExpiringUserDelegationBindingByAdminResponse$ {
  /** @deprecated use `SetExpiringUserDelegationBindingByAdminResponse$inboundSchema` instead. */
  export const inboundSchema =
    SetExpiringUserDelegationBindingByAdminResponse$inboundSchema;
  /** @deprecated use `SetExpiringUserDelegationBindingByAdminResponse$outboundSchema` instead. */
  export const outboundSchema =
    SetExpiringUserDelegationBindingByAdminResponse$outboundSchema;
  /** @deprecated use `SetExpiringUserDelegationBindingByAdminResponse$Outbound` instead. */
  export type Outbound =
    SetExpiringUserDelegationBindingByAdminResponse$Outbound;
}

export function setExpiringUserDelegationBindingByAdminResponseToJSON(
  setExpiringUserDelegationBindingByAdminResponse:
    SetExpiringUserDelegationBindingByAdminResponse,
): string {
  return JSON.stringify(
    SetExpiringUserDelegationBindingByAdminResponse$outboundSchema.parse(
      setExpiringUserDelegationBindingByAdminResponse,
    ),
  );
}

export function setExpiringUserDelegationBindingByAdminResponseFromJSON(
  jsonString: string,
): SafeParseResult<
  SetExpiringUserDelegationBindingByAdminResponse,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      SetExpiringUserDelegationBindingByAdminResponse$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'SetExpiringUserDelegationBindingByAdminResponse' from JSON`,
  );
}
