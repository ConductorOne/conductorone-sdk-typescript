/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { PersonalClient$inboundSchema, PersonalClient$outboundSchema, } from "./personalclient.js";
/** @internal */
export const PersonalClientServiceListResponse$inboundSchema = z.object({
    list: z.nullable(z.array(PersonalClient$inboundSchema)).optional(),
    nextPageToken: z.nullable(z.string()).optional(),
});
/** @internal */
export const PersonalClientServiceListResponse$outboundSchema = z.object({
    list: z.nullable(z.array(PersonalClient$outboundSchema)).optional(),
    nextPageToken: z.nullable(z.string()).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var PersonalClientServiceListResponse$;
(function (PersonalClientServiceListResponse$) {
    /** @deprecated use `PersonalClientServiceListResponse$inboundSchema` instead. */
    PersonalClientServiceListResponse$.inboundSchema = PersonalClientServiceListResponse$inboundSchema;
    /** @deprecated use `PersonalClientServiceListResponse$outboundSchema` instead. */
    PersonalClientServiceListResponse$.outboundSchema = PersonalClientServiceListResponse$outboundSchema;
})(PersonalClientServiceListResponse$ || (PersonalClientServiceListResponse$ = {}));
export function personalClientServiceListResponseToJSON(personalClientServiceListResponse) {
    return JSON.stringify(PersonalClientServiceListResponse$outboundSchema.parse(personalClientServiceListResponse));
}
export function personalClientServiceListResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => PersonalClientServiceListResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'PersonalClientServiceListResponse' from JSON`);
}
