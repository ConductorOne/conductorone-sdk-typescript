/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { TaskRevokeSource$inboundSchema, TaskRevokeSource$outboundSchema, } from "./taskrevokesource.js";
/** @internal */
export const TaskTypeRevokeInput$inboundSchema = z.object({
    outcomeTime: z.nullable(z.string().datetime({ offset: true }).transform(v => new Date(v))).optional(),
    source: z.nullable(TaskRevokeSource$inboundSchema).optional(),
});
/** @internal */
export const TaskTypeRevokeInput$outboundSchema = z.object({
    outcomeTime: z.nullable(z.date().transform(v => v.toISOString())).optional(),
    source: z.nullable(TaskRevokeSource$outboundSchema).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var TaskTypeRevokeInput$;
(function (TaskTypeRevokeInput$) {
    /** @deprecated use `TaskTypeRevokeInput$inboundSchema` instead. */
    TaskTypeRevokeInput$.inboundSchema = TaskTypeRevokeInput$inboundSchema;
    /** @deprecated use `TaskTypeRevokeInput$outboundSchema` instead. */
    TaskTypeRevokeInput$.outboundSchema = TaskTypeRevokeInput$outboundSchema;
})(TaskTypeRevokeInput$ || (TaskTypeRevokeInput$ = {}));
export function taskTypeRevokeInputToJSON(taskTypeRevokeInput) {
    return JSON.stringify(TaskTypeRevokeInput$outboundSchema.parse(taskTypeRevokeInput));
}
export function taskTypeRevokeInputFromJSON(jsonString) {
    return safeParse(jsonString, (x) => TaskTypeRevokeInput$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'TaskTypeRevokeInput' from JSON`);
}
