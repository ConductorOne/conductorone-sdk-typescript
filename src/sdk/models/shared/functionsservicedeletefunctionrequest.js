/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
/** @internal */
export const FunctionsServiceDeleteFunctionRequest$inboundSchema = z.object({});
/** @internal */
export const FunctionsServiceDeleteFunctionRequest$outboundSchema = z.object({});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var FunctionsServiceDeleteFunctionRequest$;
(function (FunctionsServiceDeleteFunctionRequest$) {
    /** @deprecated use `FunctionsServiceDeleteFunctionRequest$inboundSchema` instead. */
    FunctionsServiceDeleteFunctionRequest$.inboundSchema = FunctionsServiceDeleteFunctionRequest$inboundSchema;
    /** @deprecated use `FunctionsServiceDeleteFunctionRequest$outboundSchema` instead. */
    FunctionsServiceDeleteFunctionRequest$.outboundSchema = FunctionsServiceDeleteFunctionRequest$outboundSchema;
})(FunctionsServiceDeleteFunctionRequest$ || (FunctionsServiceDeleteFunctionRequest$ = {}));
export function functionsServiceDeleteFunctionRequestToJSON(functionsServiceDeleteFunctionRequest) {
    return JSON.stringify(FunctionsServiceDeleteFunctionRequest$outboundSchema.parse(functionsServiceDeleteFunctionRequest));
}
export function functionsServiceDeleteFunctionRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => FunctionsServiceDeleteFunctionRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'FunctionsServiceDeleteFunctionRequest' from JSON`);
}
