/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
/** @internal */
export const ReassignedAction$inboundSchema = z.object({
    newPolicyStepId: z.nullable(z.string()).optional(),
    reassignedAt: z.nullable(z.string().datetime({ offset: true }).transform(v => new Date(v))).optional(),
    userId: z.nullable(z.string()).optional(),
});
/** @internal */
export const ReassignedAction$outboundSchema = z.object({
    newPolicyStepId: z.nullable(z.string()).optional(),
    reassignedAt: z.nullable(z.date().transform(v => v.toISOString())).optional(),
    userId: z.nullable(z.string()).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ReassignedAction$;
(function (ReassignedAction$) {
    /** @deprecated use `ReassignedAction$inboundSchema` instead. */
    ReassignedAction$.inboundSchema = ReassignedAction$inboundSchema;
    /** @deprecated use `ReassignedAction$outboundSchema` instead. */
    ReassignedAction$.outboundSchema = ReassignedAction$outboundSchema;
})(ReassignedAction$ || (ReassignedAction$ = {}));
export function reassignedActionToJSON(reassignedAction) {
    return JSON.stringify(ReassignedAction$outboundSchema.parse(reassignedAction));
}
export function reassignedActionFromJSON(jsonString) {
    return safeParse(jsonString, (x) => ReassignedAction$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ReassignedAction' from JSON`);
}
