/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * The PayloadTest message.
 */
export type PayloadTest = {};

/** @internal */
export const PayloadTest$inboundSchema: z.ZodType<
  PayloadTest,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type PayloadTest$Outbound = {};

/** @internal */
export const PayloadTest$outboundSchema: z.ZodType<
  PayloadTest$Outbound,
  z.ZodTypeDef,
  PayloadTest
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PayloadTest$ {
  /** @deprecated use `PayloadTest$inboundSchema` instead. */
  export const inboundSchema = PayloadTest$inboundSchema;
  /** @deprecated use `PayloadTest$outboundSchema` instead. */
  export const outboundSchema = PayloadTest$outboundSchema;
  /** @deprecated use `PayloadTest$Outbound` instead. */
  export type Outbound = PayloadTest$Outbound;
}

export function payloadTestToJSON(payloadTest: PayloadTest): string {
  return JSON.stringify(PayloadTest$outboundSchema.parse(payloadTest));
}

export function payloadTestFromJSON(
  jsonString: string,
): SafeParseResult<PayloadTest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PayloadTest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PayloadTest' from JSON`,
  );
}
