/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * Target for approving a task
 */
export type TargetTask = {
  /**
   * ID of the policy step requiring step-up authentication
   */
  policyStepId?: string | null | undefined;
  /**
   * ID of the task being approved
   */
  taskId?: string | null | undefined;
};

/** @internal */
export const TargetTask$inboundSchema: z.ZodType<
  TargetTask,
  z.ZodTypeDef,
  unknown
> = z.object({
  policyStepId: z.nullable(z.string()).optional(),
  taskId: z.nullable(z.string()).optional(),
});

/** @internal */
export type TargetTask$Outbound = {
  policyStepId?: string | null | undefined;
  taskId?: string | null | undefined;
};

/** @internal */
export const TargetTask$outboundSchema: z.ZodType<
  TargetTask$Outbound,
  z.ZodTypeDef,
  TargetTask
> = z.object({
  policyStepId: z.nullable(z.string()).optional(),
  taskId: z.nullable(z.string()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TargetTask$ {
  /** @deprecated use `TargetTask$inboundSchema` instead. */
  export const inboundSchema = TargetTask$inboundSchema;
  /** @deprecated use `TargetTask$outboundSchema` instead. */
  export const outboundSchema = TargetTask$outboundSchema;
  /** @deprecated use `TargetTask$Outbound` instead. */
  export type Outbound = TargetTask$Outbound;
}

export function targetTaskToJSON(targetTask: TargetTask): string {
  return JSON.stringify(TargetTask$outboundSchema.parse(targetTask));
}

export function targetTaskFromJSON(
  jsonString: string,
): SafeParseResult<TargetTask, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => TargetTask$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'TargetTask' from JSON`,
  );
}
