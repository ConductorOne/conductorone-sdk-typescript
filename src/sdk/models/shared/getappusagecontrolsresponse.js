/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { AppUsageControls$inboundSchema, AppUsageControls$outboundSchema, } from "./appusagecontrols.js";
/** @internal */
export const GetAppUsageControlsResponse$inboundSchema = z.object({
    appUsageControls: z.nullable(AppUsageControls$inboundSchema).optional(),
    hasUsageData: z.nullable(z.boolean()).optional(),
});
/** @internal */
export const GetAppUsageControlsResponse$outboundSchema = z.object({
    appUsageControls: z.nullable(AppUsageControls$outboundSchema).optional(),
    hasUsageData: z.nullable(z.boolean()).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetAppUsageControlsResponse$;
(function (GetAppUsageControlsResponse$) {
    /** @deprecated use `GetAppUsageControlsResponse$inboundSchema` instead. */
    GetAppUsageControlsResponse$.inboundSchema = GetAppUsageControlsResponse$inboundSchema;
    /** @deprecated use `GetAppUsageControlsResponse$outboundSchema` instead. */
    GetAppUsageControlsResponse$.outboundSchema = GetAppUsageControlsResponse$outboundSchema;
})(GetAppUsageControlsResponse$ || (GetAppUsageControlsResponse$ = {}));
export function getAppUsageControlsResponseToJSON(getAppUsageControlsResponse) {
    return JSON.stringify(GetAppUsageControlsResponse$outboundSchema.parse(getAppUsageControlsResponse));
}
export function getAppUsageControlsResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => GetAppUsageControlsResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetAppUsageControlsResponse' from JSON`);
}
