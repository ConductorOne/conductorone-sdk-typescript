/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { ResponseProvisionStepComplete$inboundSchema, ResponseProvisionStepComplete$outboundSchema, } from "./responseprovisionstepcomplete.js";
import { ResponseProvisionStepErrored$inboundSchema, ResponseProvisionStepErrored$outboundSchema, } from "./responseprovisionsteperrored.js";
/** @internal */
export const ResponseProvisionStep$inboundSchema = z.object({
    complete: z.nullable(ResponseProvisionStepComplete$inboundSchema).optional(),
    errored: z.nullable(ResponseProvisionStepErrored$inboundSchema).optional(),
    version: z.nullable(z.string()).optional(),
});
/** @internal */
export const ResponseProvisionStep$outboundSchema = z.object({
    complete: z.nullable(ResponseProvisionStepComplete$outboundSchema).optional(),
    errored: z.nullable(ResponseProvisionStepErrored$outboundSchema).optional(),
    version: z.nullable(z.string()).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ResponseProvisionStep$;
(function (ResponseProvisionStep$) {
    /** @deprecated use `ResponseProvisionStep$inboundSchema` instead. */
    ResponseProvisionStep$.inboundSchema = ResponseProvisionStep$inboundSchema;
    /** @deprecated use `ResponseProvisionStep$outboundSchema` instead. */
    ResponseProvisionStep$.outboundSchema = ResponseProvisionStep$outboundSchema;
})(ResponseProvisionStep$ || (ResponseProvisionStep$ = {}));
export function responseProvisionStepToJSON(responseProvisionStep) {
    return JSON.stringify(ResponseProvisionStep$outboundSchema.parse(responseProvisionStep));
}
export function responseProvisionStepFromJSON(jsonString) {
    return safeParse(jsonString, (x) => ResponseProvisionStep$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ResponseProvisionStep' from JSON`);
}
