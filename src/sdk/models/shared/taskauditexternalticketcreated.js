/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
/** @internal */
export const TaskAuditExternalTicketCreated$inboundSchema = z.object({
    appId: z.nullable(z.string()).optional(),
    connectorId: z.nullable(z.string()).optional(),
    externalTicketId: z.nullable(z.string()).optional(),
    externalTicketProvisionerConfigId: z.nullable(z.string()).optional(),
    externalTicketProvisionerConfigName: z.nullable(z.string()).optional(),
    externalTicketUrl: z.nullable(z.string()).optional(),
});
/** @internal */
export const TaskAuditExternalTicketCreated$outboundSchema = z.object({
    appId: z.nullable(z.string()).optional(),
    connectorId: z.nullable(z.string()).optional(),
    externalTicketId: z.nullable(z.string()).optional(),
    externalTicketProvisionerConfigId: z.nullable(z.string()).optional(),
    externalTicketProvisionerConfigName: z.nullable(z.string()).optional(),
    externalTicketUrl: z.nullable(z.string()).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var TaskAuditExternalTicketCreated$;
(function (TaskAuditExternalTicketCreated$) {
    /** @deprecated use `TaskAuditExternalTicketCreated$inboundSchema` instead. */
    TaskAuditExternalTicketCreated$.inboundSchema = TaskAuditExternalTicketCreated$inboundSchema;
    /** @deprecated use `TaskAuditExternalTicketCreated$outboundSchema` instead. */
    TaskAuditExternalTicketCreated$.outboundSchema = TaskAuditExternalTicketCreated$outboundSchema;
})(TaskAuditExternalTicketCreated$ || (TaskAuditExternalTicketCreated$ = {}));
export function taskAuditExternalTicketCreatedToJSON(taskAuditExternalTicketCreated) {
    return JSON.stringify(TaskAuditExternalTicketCreated$outboundSchema.parse(taskAuditExternalTicketCreated));
}
export function taskAuditExternalTicketCreatedFromJSON(jsonString) {
    return safeParse(jsonString, (x) => TaskAuditExternalTicketCreated$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'TaskAuditExternalTicketCreated' from JSON`);
}
