/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";
import { collectExtraKeys as collectExtraKeys$, safeParse, } from "../../../lib/schemas.js";
import { AppResourceView$inboundSchema, AppResourceView$outboundSchema, } from "./appresourceview.js";
/** @internal */
export const AppResourceServiceListResponseExpanded$inboundSchema = collectExtraKeys$(z.object({
    "@type": z.string().optional(),
}).catchall(z.any()), "additionalProperties", true).transform((v) => {
    return remap$(v, {
        "@type": "atType",
    });
});
/** @internal */
export const AppResourceServiceListResponseExpanded$outboundSchema = z.object({
    atType: z.string().optional(),
    additionalProperties: z.record(z.any()),
}).transform((v) => {
    return {
        ...v.additionalProperties,
        ...remap$(v, {
            atType: "@type",
            additionalProperties: null,
        }),
    };
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var AppResourceServiceListResponseExpanded$;
(function (AppResourceServiceListResponseExpanded$) {
    /** @deprecated use `AppResourceServiceListResponseExpanded$inboundSchema` instead. */
    AppResourceServiceListResponseExpanded$.inboundSchema = AppResourceServiceListResponseExpanded$inboundSchema;
    /** @deprecated use `AppResourceServiceListResponseExpanded$outboundSchema` instead. */
    AppResourceServiceListResponseExpanded$.outboundSchema = AppResourceServiceListResponseExpanded$outboundSchema;
})(AppResourceServiceListResponseExpanded$ || (AppResourceServiceListResponseExpanded$ = {}));
export function appResourceServiceListResponseExpandedToJSON(appResourceServiceListResponseExpanded) {
    return JSON.stringify(AppResourceServiceListResponseExpanded$outboundSchema.parse(appResourceServiceListResponseExpanded));
}
export function appResourceServiceListResponseExpandedFromJSON(jsonString) {
    return safeParse(jsonString, (x) => AppResourceServiceListResponseExpanded$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'AppResourceServiceListResponseExpanded' from JSON`);
}
/** @internal */
export const AppResourceServiceListResponse$inboundSchema = z.object({
    expanded: z.nullable(z.array(z.lazy(() => AppResourceServiceListResponseExpanded$inboundSchema))).optional(),
    list: z.nullable(z.array(AppResourceView$inboundSchema)).optional(),
    nextPageToken: z.nullable(z.string()).optional(),
});
/** @internal */
export const AppResourceServiceListResponse$outboundSchema = z.object({
    expanded: z.nullable(z.array(z.lazy(() => AppResourceServiceListResponseExpanded$outboundSchema))).optional(),
    list: z.nullable(z.array(AppResourceView$outboundSchema)).optional(),
    nextPageToken: z.nullable(z.string()).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var AppResourceServiceListResponse$;
(function (AppResourceServiceListResponse$) {
    /** @deprecated use `AppResourceServiceListResponse$inboundSchema` instead. */
    AppResourceServiceListResponse$.inboundSchema = AppResourceServiceListResponse$inboundSchema;
    /** @deprecated use `AppResourceServiceListResponse$outboundSchema` instead. */
    AppResourceServiceListResponse$.outboundSchema = AppResourceServiceListResponse$outboundSchema;
})(AppResourceServiceListResponse$ || (AppResourceServiceListResponse$ = {}));
export function appResourceServiceListResponseToJSON(appResourceServiceListResponse) {
    return JSON.stringify(AppResourceServiceListResponse$outboundSchema.parse(appResourceServiceListResponse));
}
export function appResourceServiceListResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => AppResourceServiceListResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'AppResourceServiceListResponse' from JSON`);
}
