/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * The AutomationTemplateRef message.
 */
export type AutomationTemplateRef = {
  /**
   * The id field.
   */
  id?: string | null | undefined;
};

/** @internal */
export const AutomationTemplateRef$inboundSchema: z.ZodType<
  AutomationTemplateRef,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.nullable(z.string()).optional(),
});

/** @internal */
export type AutomationTemplateRef$Outbound = {
  id?: string | null | undefined;
};

/** @internal */
export const AutomationTemplateRef$outboundSchema: z.ZodType<
  AutomationTemplateRef$Outbound,
  z.ZodTypeDef,
  AutomationTemplateRef
> = z.object({
  id: z.nullable(z.string()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AutomationTemplateRef$ {
  /** @deprecated use `AutomationTemplateRef$inboundSchema` instead. */
  export const inboundSchema = AutomationTemplateRef$inboundSchema;
  /** @deprecated use `AutomationTemplateRef$outboundSchema` instead. */
  export const outboundSchema = AutomationTemplateRef$outboundSchema;
  /** @deprecated use `AutomationTemplateRef$Outbound` instead. */
  export type Outbound = AutomationTemplateRef$Outbound;
}

export function automationTemplateRefToJSON(
  automationTemplateRef: AutomationTemplateRef,
): string {
  return JSON.stringify(
    AutomationTemplateRef$outboundSchema.parse(automationTemplateRef),
  );
}

export function automationTemplateRefFromJSON(
  jsonString: string,
): SafeParseResult<AutomationTemplateRef, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => AutomationTemplateRef$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'AutomationTemplateRef' from JSON`,
  );
}
