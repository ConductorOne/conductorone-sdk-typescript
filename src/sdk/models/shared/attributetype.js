/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
/** @internal */
export const AttributeType$inboundSchema = z.object({
    id: z.nullable(z.string()).optional(),
    name: z.nullable(z.string()).optional(),
});
/** @internal */
export const AttributeType$outboundSchema = z.object({
    id: z.nullable(z.string()).optional(),
    name: z.nullable(z.string()).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var AttributeType$;
(function (AttributeType$) {
    /** @deprecated use `AttributeType$inboundSchema` instead. */
    AttributeType$.inboundSchema = AttributeType$inboundSchema;
    /** @deprecated use `AttributeType$outboundSchema` instead. */
    AttributeType$.outboundSchema = AttributeType$outboundSchema;
})(AttributeType$ || (AttributeType$ = {}));
export function attributeTypeToJSON(attributeType) {
    return JSON.stringify(AttributeType$outboundSchema.parse(attributeType));
}
export function attributeTypeFromJSON(jsonString) {
    return safeParse(jsonString, (x) => AttributeType$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'AttributeType' from JSON`);
}
