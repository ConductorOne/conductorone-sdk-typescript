/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
/** @internal */
export const TaskAuditStepSkipped$inboundSchema = z.object({
    skippedBy: z.nullable(z.string()).optional(),
});
/** @internal */
export const TaskAuditStepSkipped$outboundSchema = z.object({
    skippedBy: z.nullable(z.string()).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var TaskAuditStepSkipped$;
(function (TaskAuditStepSkipped$) {
    /** @deprecated use `TaskAuditStepSkipped$inboundSchema` instead. */
    TaskAuditStepSkipped$.inboundSchema = TaskAuditStepSkipped$inboundSchema;
    /** @deprecated use `TaskAuditStepSkipped$outboundSchema` instead. */
    TaskAuditStepSkipped$.outboundSchema = TaskAuditStepSkipped$outboundSchema;
})(TaskAuditStepSkipped$ || (TaskAuditStepSkipped$ = {}));
export function taskAuditStepSkippedToJSON(taskAuditStepSkipped) {
    return JSON.stringify(TaskAuditStepSkipped$outboundSchema.parse(taskAuditStepSkipped));
}
export function taskAuditStepSkippedFromJSON(jsonString) {
    return safeParse(jsonString, (x) => TaskAuditStepSkipped$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'TaskAuditStepSkipped' from JSON`);
}
