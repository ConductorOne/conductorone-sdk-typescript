/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";
import { collectExtraKeys as collectExtraKeys$, safeParse, } from "../../../lib/schemas.js";
import { TaskView$inboundSchema, TaskView$outboundSchema, } from "./taskview.js";
/** @internal */
export const TaskServiceCreateRevokeResponseExpanded$inboundSchema = collectExtraKeys$(z.object({
    "@type": z.string().optional(),
}).catchall(z.any()), "additionalProperties", true).transform((v) => {
    return remap$(v, {
        "@type": "atType",
    });
});
/** @internal */
export const TaskServiceCreateRevokeResponseExpanded$outboundSchema = z.object({
    atType: z.string().optional(),
    additionalProperties: z.record(z.any()),
}).transform((v) => {
    return {
        ...v.additionalProperties,
        ...remap$(v, {
            atType: "@type",
            additionalProperties: null,
        }),
    };
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var TaskServiceCreateRevokeResponseExpanded$;
(function (TaskServiceCreateRevokeResponseExpanded$) {
    /** @deprecated use `TaskServiceCreateRevokeResponseExpanded$inboundSchema` instead. */
    TaskServiceCreateRevokeResponseExpanded$.inboundSchema = TaskServiceCreateRevokeResponseExpanded$inboundSchema;
    /** @deprecated use `TaskServiceCreateRevokeResponseExpanded$outboundSchema` instead. */
    TaskServiceCreateRevokeResponseExpanded$.outboundSchema = TaskServiceCreateRevokeResponseExpanded$outboundSchema;
})(TaskServiceCreateRevokeResponseExpanded$ || (TaskServiceCreateRevokeResponseExpanded$ = {}));
export function taskServiceCreateRevokeResponseExpandedToJSON(taskServiceCreateRevokeResponseExpanded) {
    return JSON.stringify(TaskServiceCreateRevokeResponseExpanded$outboundSchema.parse(taskServiceCreateRevokeResponseExpanded));
}
export function taskServiceCreateRevokeResponseExpandedFromJSON(jsonString) {
    return safeParse(jsonString, (x) => TaskServiceCreateRevokeResponseExpanded$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'TaskServiceCreateRevokeResponseExpanded' from JSON`);
}
/** @internal */
export const TaskServiceCreateRevokeResponse$inboundSchema = z.object({
    expanded: z.nullable(z.array(z.lazy(() => TaskServiceCreateRevokeResponseExpanded$inboundSchema))).optional(),
    taskView: z.nullable(TaskView$inboundSchema).optional(),
});
/** @internal */
export const TaskServiceCreateRevokeResponse$outboundSchema = z.object({
    expanded: z.nullable(z.array(z.lazy(() => TaskServiceCreateRevokeResponseExpanded$outboundSchema))).optional(),
    taskView: z.nullable(TaskView$outboundSchema).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var TaskServiceCreateRevokeResponse$;
(function (TaskServiceCreateRevokeResponse$) {
    /** @deprecated use `TaskServiceCreateRevokeResponse$inboundSchema` instead. */
    TaskServiceCreateRevokeResponse$.inboundSchema = TaskServiceCreateRevokeResponse$inboundSchema;
    /** @deprecated use `TaskServiceCreateRevokeResponse$outboundSchema` instead. */
    TaskServiceCreateRevokeResponse$.outboundSchema = TaskServiceCreateRevokeResponse$outboundSchema;
})(TaskServiceCreateRevokeResponse$ || (TaskServiceCreateRevokeResponse$ = {}));
export function taskServiceCreateRevokeResponseToJSON(taskServiceCreateRevokeResponse) {
    return JSON.stringify(TaskServiceCreateRevokeResponse$outboundSchema.parse(taskServiceCreateRevokeResponse));
}
export function taskServiceCreateRevokeResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => TaskServiceCreateRevokeResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'TaskServiceCreateRevokeResponse' from JSON`);
}
