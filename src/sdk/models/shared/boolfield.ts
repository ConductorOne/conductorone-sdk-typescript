/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  BoolRules,
  BoolRules$inboundSchema,
  BoolRules$Outbound,
  BoolRules$outboundSchema,
} from "./boolrules.js";
import {
  CheckboxField,
  CheckboxField$inboundSchema,
  CheckboxField$Outbound,
  CheckboxField$outboundSchema,
} from "./checkboxfield.js";

/**
 * The BoolField message.
 *
 * @remarks
 *
 * This message contains a oneof named view. Only a single field of the following list may be set at a time:
 *   - checkboxField
 *
 * This message contains a oneof named _rules. Only a single field of the following list may be set at a time:
 *   - rules
 */
export type BoolField = {
  checkboxField?: CheckboxField | null | undefined;
  /**
   * The defaultValue field.
   */
  defaultValue?: boolean | null | undefined;
  rules?: BoolRules | null | undefined;
};

/** @internal */
export const BoolField$inboundSchema: z.ZodType<
  BoolField,
  z.ZodTypeDef,
  unknown
> = z.object({
  checkboxField: z.nullable(CheckboxField$inboundSchema).optional(),
  defaultValue: z.nullable(z.boolean()).optional(),
  rules: z.nullable(BoolRules$inboundSchema).optional(),
});

/** @internal */
export type BoolField$Outbound = {
  checkboxField?: CheckboxField$Outbound | null | undefined;
  defaultValue?: boolean | null | undefined;
  rules?: BoolRules$Outbound | null | undefined;
};

/** @internal */
export const BoolField$outboundSchema: z.ZodType<
  BoolField$Outbound,
  z.ZodTypeDef,
  BoolField
> = z.object({
  checkboxField: z.nullable(CheckboxField$outboundSchema).optional(),
  defaultValue: z.nullable(z.boolean()).optional(),
  rules: z.nullable(BoolRules$outboundSchema).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace BoolField$ {
  /** @deprecated use `BoolField$inboundSchema` instead. */
  export const inboundSchema = BoolField$inboundSchema;
  /** @deprecated use `BoolField$outboundSchema` instead. */
  export const outboundSchema = BoolField$outboundSchema;
  /** @deprecated use `BoolField$Outbound` instead. */
  export type Outbound = BoolField$Outbound;
}

export function boolFieldToJSON(boolField: BoolField): string {
  return JSON.stringify(BoolField$outboundSchema.parse(boolField));
}

export function boolFieldFromJSON(
  jsonString: string,
): SafeParseResult<BoolField, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => BoolField$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'BoolField' from JSON`,
  );
}
