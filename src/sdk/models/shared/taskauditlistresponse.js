/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { TaskAuditView$inboundSchema, TaskAuditView$outboundSchema, } from "./taskauditview.js";
/** @internal */
export const TaskAuditListResponse$inboundSchema = z.object({
    list: z.nullable(z.array(TaskAuditView$inboundSchema)).optional(),
    nextPageToken: z.nullable(z.string()).optional(),
});
/** @internal */
export const TaskAuditListResponse$outboundSchema = z.object({
    list: z.nullable(z.array(TaskAuditView$outboundSchema)).optional(),
    nextPageToken: z.nullable(z.string()).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var TaskAuditListResponse$;
(function (TaskAuditListResponse$) {
    /** @deprecated use `TaskAuditListResponse$inboundSchema` instead. */
    TaskAuditListResponse$.inboundSchema = TaskAuditListResponse$inboundSchema;
    /** @deprecated use `TaskAuditListResponse$outboundSchema` instead. */
    TaskAuditListResponse$.outboundSchema = TaskAuditListResponse$outboundSchema;
})(TaskAuditListResponse$ || (TaskAuditListResponse$ = {}));
export function taskAuditListResponseToJSON(taskAuditListResponse) {
    return JSON.stringify(TaskAuditListResponse$outboundSchema.parse(taskAuditListResponse));
}
export function taskAuditListResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => TaskAuditListResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'TaskAuditListResponse' from JSON`);
}
