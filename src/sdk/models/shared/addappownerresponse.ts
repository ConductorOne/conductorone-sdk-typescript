/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * Empty response with a status code indicating success
 */
export type AddAppOwnerResponse = {};

/** @internal */
export const AddAppOwnerResponse$inboundSchema: z.ZodType<
  AddAppOwnerResponse,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type AddAppOwnerResponse$Outbound = {};

/** @internal */
export const AddAppOwnerResponse$outboundSchema: z.ZodType<
  AddAppOwnerResponse$Outbound,
  z.ZodTypeDef,
  AddAppOwnerResponse
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AddAppOwnerResponse$ {
  /** @deprecated use `AddAppOwnerResponse$inboundSchema` instead. */
  export const inboundSchema = AddAppOwnerResponse$inboundSchema;
  /** @deprecated use `AddAppOwnerResponse$outboundSchema` instead. */
  export const outboundSchema = AddAppOwnerResponse$outboundSchema;
  /** @deprecated use `AddAppOwnerResponse$Outbound` instead. */
  export type Outbound = AddAppOwnerResponse$Outbound;
}

export function addAppOwnerResponseToJSON(
  addAppOwnerResponse: AddAppOwnerResponse,
): string {
  return JSON.stringify(
    AddAppOwnerResponse$outboundSchema.parse(addAppOwnerResponse),
  );
}

export function addAppOwnerResponseFromJSON(
  jsonString: string,
): SafeParseResult<AddAppOwnerResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => AddAppOwnerResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'AddAppOwnerResponse' from JSON`,
  );
}
