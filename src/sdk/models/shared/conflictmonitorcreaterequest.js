/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { NotificationConfig$inboundSchema, NotificationConfig$outboundSchema, } from "./notificationconfig.js";
/** @internal */
export const ConflictMonitorCreateRequest$inboundSchema = z.object({
    description: z.nullable(z.string()).optional(),
    displayName: z.string(),
    notificationConfig: z.nullable(NotificationConfig$inboundSchema).optional(),
});
/** @internal */
export const ConflictMonitorCreateRequest$outboundSchema = z.object({
    description: z.nullable(z.string()).optional(),
    displayName: z.string(),
    notificationConfig: z.nullable(NotificationConfig$outboundSchema).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ConflictMonitorCreateRequest$;
(function (ConflictMonitorCreateRequest$) {
    /** @deprecated use `ConflictMonitorCreateRequest$inboundSchema` instead. */
    ConflictMonitorCreateRequest$.inboundSchema = ConflictMonitorCreateRequest$inboundSchema;
    /** @deprecated use `ConflictMonitorCreateRequest$outboundSchema` instead. */
    ConflictMonitorCreateRequest$.outboundSchema = ConflictMonitorCreateRequest$outboundSchema;
})(ConflictMonitorCreateRequest$ || (ConflictMonitorCreateRequest$ = {}));
export function conflictMonitorCreateRequestToJSON(conflictMonitorCreateRequest) {
    return JSON.stringify(ConflictMonitorCreateRequest$outboundSchema.parse(conflictMonitorCreateRequest));
}
export function conflictMonitorCreateRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => ConflictMonitorCreateRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ConflictMonitorCreateRequest' from JSON`);
}
