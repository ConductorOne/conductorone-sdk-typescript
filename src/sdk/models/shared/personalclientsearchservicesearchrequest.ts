/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  UserRef,
  UserRef$inboundSchema,
  UserRef$Outbound,
  UserRef$outboundSchema,
} from "./userref.js";

/**
 * The PersonalClientSearchServiceSearchRequest message.
 */
export type PersonalClientSearchServiceSearchRequest = {
  /**
   * The pageSize field.
   */
  pageSize?: number | null | undefined;
  /**
   * The pageToken field.
   */
  pageToken?: string | null | undefined;
  /**
   * The query field.
   */
  query?: string | null | undefined;
  /**
   * The users field.
   */
  users?: Array<UserRef> | null | undefined;
};

/** @internal */
export const PersonalClientSearchServiceSearchRequest$inboundSchema: z.ZodType<
  PersonalClientSearchServiceSearchRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  pageSize: z.nullable(z.number().int()).optional(),
  pageToken: z.nullable(z.string()).optional(),
  query: z.nullable(z.string()).optional(),
  users: z.nullable(z.array(UserRef$inboundSchema)).optional(),
});

/** @internal */
export type PersonalClientSearchServiceSearchRequest$Outbound = {
  pageSize?: number | null | undefined;
  pageToken?: string | null | undefined;
  query?: string | null | undefined;
  users?: Array<UserRef$Outbound> | null | undefined;
};

/** @internal */
export const PersonalClientSearchServiceSearchRequest$outboundSchema: z.ZodType<
  PersonalClientSearchServiceSearchRequest$Outbound,
  z.ZodTypeDef,
  PersonalClientSearchServiceSearchRequest
> = z.object({
  pageSize: z.nullable(z.number().int()).optional(),
  pageToken: z.nullable(z.string()).optional(),
  query: z.nullable(z.string()).optional(),
  users: z.nullable(z.array(UserRef$outboundSchema)).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PersonalClientSearchServiceSearchRequest$ {
  /** @deprecated use `PersonalClientSearchServiceSearchRequest$inboundSchema` instead. */
  export const inboundSchema =
    PersonalClientSearchServiceSearchRequest$inboundSchema;
  /** @deprecated use `PersonalClientSearchServiceSearchRequest$outboundSchema` instead. */
  export const outboundSchema =
    PersonalClientSearchServiceSearchRequest$outboundSchema;
  /** @deprecated use `PersonalClientSearchServiceSearchRequest$Outbound` instead. */
  export type Outbound = PersonalClientSearchServiceSearchRequest$Outbound;
}

export function personalClientSearchServiceSearchRequestToJSON(
  personalClientSearchServiceSearchRequest:
    PersonalClientSearchServiceSearchRequest,
): string {
  return JSON.stringify(
    PersonalClientSearchServiceSearchRequest$outboundSchema.parse(
      personalClientSearchServiceSearchRequest,
    ),
  );
}

export function personalClientSearchServiceSearchRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  PersonalClientSearchServiceSearchRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PersonalClientSearchServiceSearchRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PersonalClientSearchServiceSearchRequest' from JSON`,
  );
}
