/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Webhook1$inboundSchema, Webhook1$outboundSchema, } from "./webhook1.js";
/** @internal */
export const WebhooksServiceUpdateRequest$inboundSchema = z.object({
    updateMask: z.nullable(z.string()).optional(),
    webhook: z.nullable(Webhook1$inboundSchema).optional(),
});
/** @internal */
export const WebhooksServiceUpdateRequest$outboundSchema = z.object({
    updateMask: z.nullable(z.string()).optional(),
    webhook: z.nullable(Webhook1$outboundSchema).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var WebhooksServiceUpdateRequest$;
(function (WebhooksServiceUpdateRequest$) {
    /** @deprecated use `WebhooksServiceUpdateRequest$inboundSchema` instead. */
    WebhooksServiceUpdateRequest$.inboundSchema = WebhooksServiceUpdateRequest$inboundSchema;
    /** @deprecated use `WebhooksServiceUpdateRequest$outboundSchema` instead. */
    WebhooksServiceUpdateRequest$.outboundSchema = WebhooksServiceUpdateRequest$outboundSchema;
})(WebhooksServiceUpdateRequest$ || (WebhooksServiceUpdateRequest$ = {}));
export function webhooksServiceUpdateRequestToJSON(webhooksServiceUpdateRequest) {
    return JSON.stringify(WebhooksServiceUpdateRequest$outboundSchema.parse(webhooksServiceUpdateRequest));
}
export function webhooksServiceUpdateRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => WebhooksServiceUpdateRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'WebhooksServiceUpdateRequest' from JSON`);
}
