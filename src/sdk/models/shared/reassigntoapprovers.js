/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
/** @internal */
export const ReassignToApprovers$inboundSchema = z.object({
    approverIds: z.nullable(z.array(z.string())).optional(),
});
/** @internal */
export const ReassignToApprovers$outboundSchema = z.object({
    approverIds: z.nullable(z.array(z.string())).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ReassignToApprovers$;
(function (ReassignToApprovers$) {
    /** @deprecated use `ReassignToApprovers$inboundSchema` instead. */
    ReassignToApprovers$.inboundSchema = ReassignToApprovers$inboundSchema;
    /** @deprecated use `ReassignToApprovers$outboundSchema` instead. */
    ReassignToApprovers$.outboundSchema = ReassignToApprovers$outboundSchema;
})(ReassignToApprovers$ || (ReassignToApprovers$ = {}));
export function reassignToApproversToJSON(reassignToApprovers) {
    return JSON.stringify(ReassignToApprovers$outboundSchema.parse(reassignToApprovers));
}
export function reassignToApproversFromJSON(jsonString) {
    return safeParse(jsonString, (x) => ReassignToApprovers$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ReassignToApprovers' from JSON`);
}
