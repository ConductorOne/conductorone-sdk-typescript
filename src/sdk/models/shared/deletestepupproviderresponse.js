/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
/** @internal */
export const DeleteStepUpProviderResponse$inboundSchema = z.object({});
/** @internal */
export const DeleteStepUpProviderResponse$outboundSchema = z.object({});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var DeleteStepUpProviderResponse$;
(function (DeleteStepUpProviderResponse$) {
    /** @deprecated use `DeleteStepUpProviderResponse$inboundSchema` instead. */
    DeleteStepUpProviderResponse$.inboundSchema = DeleteStepUpProviderResponse$inboundSchema;
    /** @deprecated use `DeleteStepUpProviderResponse$outboundSchema` instead. */
    DeleteStepUpProviderResponse$.outboundSchema = DeleteStepUpProviderResponse$outboundSchema;
})(DeleteStepUpProviderResponse$ || (DeleteStepUpProviderResponse$ = {}));
export function deleteStepUpProviderResponseToJSON(deleteStepUpProviderResponse) {
    return JSON.stringify(DeleteStepUpProviderResponse$outboundSchema.parse(deleteStepUpProviderResponse));
}
export function deleteStepUpProviderResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => DeleteStepUpProviderResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'DeleteStepUpProviderResponse' from JSON`);
}
