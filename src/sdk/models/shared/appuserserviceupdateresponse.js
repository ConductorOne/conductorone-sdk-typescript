/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";
import { collectExtraKeys as collectExtraKeys$, safeParse, } from "../../../lib/schemas.js";
import { AppUserView$inboundSchema, AppUserView$outboundSchema, } from "./appuserview.js";
/** @internal */
export const AppUserServiceUpdateResponseExpanded$inboundSchema = collectExtraKeys$(z.object({
    "@type": z.string().optional(),
}).catchall(z.any()), "additionalProperties", true).transform((v) => {
    return remap$(v, {
        "@type": "atType",
    });
});
/** @internal */
export const AppUserServiceUpdateResponseExpanded$outboundSchema = z.object({
    atType: z.string().optional(),
    additionalProperties: z.record(z.any()),
}).transform((v) => {
    return {
        ...v.additionalProperties,
        ...remap$(v, {
            atType: "@type",
            additionalProperties: null,
        }),
    };
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var AppUserServiceUpdateResponseExpanded$;
(function (AppUserServiceUpdateResponseExpanded$) {
    /** @deprecated use `AppUserServiceUpdateResponseExpanded$inboundSchema` instead. */
    AppUserServiceUpdateResponseExpanded$.inboundSchema = AppUserServiceUpdateResponseExpanded$inboundSchema;
    /** @deprecated use `AppUserServiceUpdateResponseExpanded$outboundSchema` instead. */
    AppUserServiceUpdateResponseExpanded$.outboundSchema = AppUserServiceUpdateResponseExpanded$outboundSchema;
})(AppUserServiceUpdateResponseExpanded$ || (AppUserServiceUpdateResponseExpanded$ = {}));
export function appUserServiceUpdateResponseExpandedToJSON(appUserServiceUpdateResponseExpanded) {
    return JSON.stringify(AppUserServiceUpdateResponseExpanded$outboundSchema.parse(appUserServiceUpdateResponseExpanded));
}
export function appUserServiceUpdateResponseExpandedFromJSON(jsonString) {
    return safeParse(jsonString, (x) => AppUserServiceUpdateResponseExpanded$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'AppUserServiceUpdateResponseExpanded' from JSON`);
}
/** @internal */
export const AppUserServiceUpdateResponse$inboundSchema = z.object({
    appUserView: z.nullable(AppUserView$inboundSchema).optional(),
    expanded: z.nullable(z.array(z.lazy(() => AppUserServiceUpdateResponseExpanded$inboundSchema))).optional(),
});
/** @internal */
export const AppUserServiceUpdateResponse$outboundSchema = z.object({
    appUserView: z.nullable(AppUserView$outboundSchema).optional(),
    expanded: z.nullable(z.array(z.lazy(() => AppUserServiceUpdateResponseExpanded$outboundSchema))).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var AppUserServiceUpdateResponse$;
(function (AppUserServiceUpdateResponse$) {
    /** @deprecated use `AppUserServiceUpdateResponse$inboundSchema` instead. */
    AppUserServiceUpdateResponse$.inboundSchema = AppUserServiceUpdateResponse$inboundSchema;
    /** @deprecated use `AppUserServiceUpdateResponse$outboundSchema` instead. */
    AppUserServiceUpdateResponse$.outboundSchema = AppUserServiceUpdateResponse$outboundSchema;
})(AppUserServiceUpdateResponse$ || (AppUserServiceUpdateResponse$ = {}));
export function appUserServiceUpdateResponseToJSON(appUserServiceUpdateResponse) {
    return JSON.stringify(AppUserServiceUpdateResponse$outboundSchema.parse(appUserServiceUpdateResponse));
}
export function appUserServiceUpdateResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => AppUserServiceUpdateResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'AppUserServiceUpdateResponse' from JSON`);
}
