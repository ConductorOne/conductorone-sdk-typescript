/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
/** @internal */
export const AddAppOwnerResponse$inboundSchema = z.object({});
/** @internal */
export const AddAppOwnerResponse$outboundSchema = z.object({});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var AddAppOwnerResponse$;
(function (AddAppOwnerResponse$) {
    /** @deprecated use `AddAppOwnerResponse$inboundSchema` instead. */
    AddAppOwnerResponse$.inboundSchema = AddAppOwnerResponse$inboundSchema;
    /** @deprecated use `AddAppOwnerResponse$outboundSchema` instead. */
    AddAppOwnerResponse$.outboundSchema = AddAppOwnerResponse$outboundSchema;
})(AddAppOwnerResponse$ || (AddAppOwnerResponse$ = {}));
export function addAppOwnerResponseToJSON(addAppOwnerResponse) {
    return JSON.stringify(AddAppOwnerResponse$outboundSchema.parse(addAppOwnerResponse));
}
export function addAppOwnerResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => AddAppOwnerResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'AddAppOwnerResponse' from JSON`);
}
