/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
/** @internal */
export const ResponsePolicyPostAction$inboundSchema = z.object({
    version: z.nullable(z.string()).optional(),
});
/** @internal */
export const ResponsePolicyPostAction$outboundSchema = z.object({
    version: z.nullable(z.string()).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ResponsePolicyPostAction$;
(function (ResponsePolicyPostAction$) {
    /** @deprecated use `ResponsePolicyPostAction$inboundSchema` instead. */
    ResponsePolicyPostAction$.inboundSchema = ResponsePolicyPostAction$inboundSchema;
    /** @deprecated use `ResponsePolicyPostAction$outboundSchema` instead. */
    ResponsePolicyPostAction$.outboundSchema = ResponsePolicyPostAction$outboundSchema;
})(ResponsePolicyPostAction$ || (ResponsePolicyPostAction$ = {}));
export function responsePolicyPostActionToJSON(responsePolicyPostAction) {
    return JSON.stringify(ResponsePolicyPostAction$outboundSchema.parse(responsePolicyPostAction));
}
export function responsePolicyPostActionFromJSON(jsonString) {
    return safeParse(jsonString, (x) => ResponsePolicyPostAction$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ResponsePolicyPostAction' from JSON`);
}
