/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
/** @internal */
export const WebhookSourceProvisionStep$inboundSchema = z.object({
    ticketId: z.nullable(z.string()).optional(),
});
/** @internal */
export const WebhookSourceProvisionStep$outboundSchema = z.object({
    ticketId: z.nullable(z.string()).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var WebhookSourceProvisionStep$;
(function (WebhookSourceProvisionStep$) {
    /** @deprecated use `WebhookSourceProvisionStep$inboundSchema` instead. */
    WebhookSourceProvisionStep$.inboundSchema = WebhookSourceProvisionStep$inboundSchema;
    /** @deprecated use `WebhookSourceProvisionStep$outboundSchema` instead. */
    WebhookSourceProvisionStep$.outboundSchema = WebhookSourceProvisionStep$outboundSchema;
})(WebhookSourceProvisionStep$ || (WebhookSourceProvisionStep$ = {}));
export function webhookSourceProvisionStepToJSON(webhookSourceProvisionStep) {
    return JSON.stringify(WebhookSourceProvisionStep$outboundSchema.parse(webhookSourceProvisionStep));
}
export function webhookSourceProvisionStepFromJSON(jsonString) {
    return safeParse(jsonString, (x) => WebhookSourceProvisionStep$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'WebhookSourceProvisionStep' from JSON`);
}
