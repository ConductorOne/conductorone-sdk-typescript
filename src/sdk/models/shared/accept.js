/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
/** @internal */
export const Accept$inboundSchema = z
    .object({
    acceptMessage: z.nullable(z.string()).optional(),
});
/** @internal */
export const Accept$outboundSchema = z.object({
    acceptMessage: z.nullable(z.string()).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var Accept$;
(function (Accept$) {
    /** @deprecated use `Accept$inboundSchema` instead. */
    Accept$.inboundSchema = Accept$inboundSchema;
    /** @deprecated use `Accept$outboundSchema` instead. */
    Accept$.outboundSchema = Accept$outboundSchema;
})(Accept$ || (Accept$ = {}));
export function acceptToJSON(accept) {
    return JSON.stringify(Accept$outboundSchema.parse(accept));
}
export function acceptFromJSON(jsonString) {
    return safeParse(jsonString, (x) => Accept$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'Accept' from JSON`);
}
