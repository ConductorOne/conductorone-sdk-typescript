/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { AppUserInput$inboundSchema, AppUserInput$outboundSchema, } from "./appuser.js";
import { AppUserExpandMask$inboundSchema, AppUserExpandMask$outboundSchema, } from "./appuserexpandmask.js";
/** @internal */
export const AppUserServiceUpdateRequest$inboundSchema = z.object({
    appUser: z.nullable(AppUserInput$inboundSchema).optional(),
    expandMask: z.nullable(AppUserExpandMask$inboundSchema).optional(),
    updateMask: z.nullable(z.string()).optional(),
});
/** @internal */
export const AppUserServiceUpdateRequest$outboundSchema = z.object({
    appUser: z.nullable(AppUserInput$outboundSchema).optional(),
    expandMask: z.nullable(AppUserExpandMask$outboundSchema).optional(),
    updateMask: z.nullable(z.string()).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var AppUserServiceUpdateRequest$;
(function (AppUserServiceUpdateRequest$) {
    /** @deprecated use `AppUserServiceUpdateRequest$inboundSchema` instead. */
    AppUserServiceUpdateRequest$.inboundSchema = AppUserServiceUpdateRequest$inboundSchema;
    /** @deprecated use `AppUserServiceUpdateRequest$outboundSchema` instead. */
    AppUserServiceUpdateRequest$.outboundSchema = AppUserServiceUpdateRequest$outboundSchema;
})(AppUserServiceUpdateRequest$ || (AppUserServiceUpdateRequest$ = {}));
export function appUserServiceUpdateRequestToJSON(appUserServiceUpdateRequest) {
    return JSON.stringify(AppUserServiceUpdateRequest$outboundSchema.parse(appUserServiceUpdateRequest));
}
export function appUserServiceUpdateRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => AppUserServiceUpdateRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'AppUserServiceUpdateRequest' from JSON`);
}
