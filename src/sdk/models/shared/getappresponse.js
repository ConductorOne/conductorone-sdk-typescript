/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { App$inboundSchema, App$outboundSchema, } from "./app.js";
/** @internal */
export const GetAppResponse$inboundSchema = z.object({
    app: z.nullable(App$inboundSchema).optional(),
});
/** @internal */
export const GetAppResponse$outboundSchema = z.object({
    app: z.nullable(App$outboundSchema).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetAppResponse$;
(function (GetAppResponse$) {
    /** @deprecated use `GetAppResponse$inboundSchema` instead. */
    GetAppResponse$.inboundSchema = GetAppResponse$inboundSchema;
    /** @deprecated use `GetAppResponse$outboundSchema` instead. */
    GetAppResponse$.outboundSchema = GetAppResponse$outboundSchema;
})(GetAppResponse$ || (GetAppResponse$ = {}));
export function getAppResponseToJSON(getAppResponse) {
    return JSON.stringify(GetAppResponse$outboundSchema.parse(getAppResponse));
}
export function getAppResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => GetAppResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetAppResponse' from JSON`);
}
