/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
/** @internal */
export const RequestCatalogManagementServiceRemoveAppEntitlementsResponse$inboundSchema = z.object({});
/** @internal */
export const RequestCatalogManagementServiceRemoveAppEntitlementsResponse$outboundSchema = z.object({});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RequestCatalogManagementServiceRemoveAppEntitlementsResponse$;
(function (RequestCatalogManagementServiceRemoveAppEntitlementsResponse$) {
    /** @deprecated use `RequestCatalogManagementServiceRemoveAppEntitlementsResponse$inboundSchema` instead. */
    RequestCatalogManagementServiceRemoveAppEntitlementsResponse$.inboundSchema = RequestCatalogManagementServiceRemoveAppEntitlementsResponse$inboundSchema;
    /** @deprecated use `RequestCatalogManagementServiceRemoveAppEntitlementsResponse$outboundSchema` instead. */
    RequestCatalogManagementServiceRemoveAppEntitlementsResponse$.outboundSchema = RequestCatalogManagementServiceRemoveAppEntitlementsResponse$outboundSchema;
})(RequestCatalogManagementServiceRemoveAppEntitlementsResponse$ || (RequestCatalogManagementServiceRemoveAppEntitlementsResponse$ = {}));
export function requestCatalogManagementServiceRemoveAppEntitlementsResponseToJSON(requestCatalogManagementServiceRemoveAppEntitlementsResponse) {
    return JSON.stringify(RequestCatalogManagementServiceRemoveAppEntitlementsResponse$outboundSchema
        .parse(requestCatalogManagementServiceRemoveAppEntitlementsResponse));
}
export function requestCatalogManagementServiceRemoveAppEntitlementsResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => RequestCatalogManagementServiceRemoveAppEntitlementsResponse$inboundSchema
        .parse(JSON.parse(x)), `Failed to parse 'RequestCatalogManagementServiceRemoveAppEntitlementsResponse' from JSON`);
}
