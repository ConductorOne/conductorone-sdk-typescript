/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
/** @internal */
export const DirectoryExpandMask$inboundSchema = z.object({
    paths: z.nullable(z.array(z.string())).optional(),
});
/** @internal */
export const DirectoryExpandMask$outboundSchema = z.object({
    paths: z.nullable(z.array(z.string())).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var DirectoryExpandMask$;
(function (DirectoryExpandMask$) {
    /** @deprecated use `DirectoryExpandMask$inboundSchema` instead. */
    DirectoryExpandMask$.inboundSchema = DirectoryExpandMask$inboundSchema;
    /** @deprecated use `DirectoryExpandMask$outboundSchema` instead. */
    DirectoryExpandMask$.outboundSchema = DirectoryExpandMask$outboundSchema;
})(DirectoryExpandMask$ || (DirectoryExpandMask$ = {}));
export function directoryExpandMaskToJSON(directoryExpandMask) {
    return JSON.stringify(DirectoryExpandMask$outboundSchema.parse(directoryExpandMask));
}
export function directoryExpandMaskFromJSON(jsonString) {
    return safeParse(jsonString, (x) => DirectoryExpandMask$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'DirectoryExpandMask' from JSON`);
}
