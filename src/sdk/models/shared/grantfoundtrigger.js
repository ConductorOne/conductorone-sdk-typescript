/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { GrantTriggerFilter$inboundSchema, GrantTriggerFilter$outboundSchema, } from "./granttriggerfilter.js";
/** @internal */
export const GrantFoundTrigger$inboundSchema = z.object({
    grantTriggerFilter: z.nullable(GrantTriggerFilter$inboundSchema).optional(),
});
/** @internal */
export const GrantFoundTrigger$outboundSchema = z.object({
    grantTriggerFilter: z.nullable(GrantTriggerFilter$outboundSchema).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GrantFoundTrigger$;
(function (GrantFoundTrigger$) {
    /** @deprecated use `GrantFoundTrigger$inboundSchema` instead. */
    GrantFoundTrigger$.inboundSchema = GrantFoundTrigger$inboundSchema;
    /** @deprecated use `GrantFoundTrigger$outboundSchema` instead. */
    GrantFoundTrigger$.outboundSchema = GrantFoundTrigger$outboundSchema;
})(GrantFoundTrigger$ || (GrantFoundTrigger$ = {}));
export function grantFoundTriggerToJSON(grantFoundTrigger) {
    return JSON.stringify(GrantFoundTrigger$outboundSchema.parse(grantFoundTrigger));
}
export function grantFoundTriggerFromJSON(jsonString) {
    return safeParse(jsonString, (x) => GrantFoundTrigger$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GrantFoundTrigger' from JSON`);
}
