/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * The ConditionSucceeded message.
 */
export type ConditionSucceeded = {
  succeededAt?: Date | null | undefined;
};

/** @internal */
export const ConditionSucceeded$inboundSchema: z.ZodType<
  ConditionSucceeded,
  z.ZodTypeDef,
  unknown
> = z.object({
  succeededAt: z.nullable(
    z.string().datetime({ offset: true }).transform(v => new Date(v)),
  ).optional(),
});

/** @internal */
export type ConditionSucceeded$Outbound = {
  succeededAt?: string | null | undefined;
};

/** @internal */
export const ConditionSucceeded$outboundSchema: z.ZodType<
  ConditionSucceeded$Outbound,
  z.ZodTypeDef,
  ConditionSucceeded
> = z.object({
  succeededAt: z.nullable(z.date().transform(v => v.toISOString())).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConditionSucceeded$ {
  /** @deprecated use `ConditionSucceeded$inboundSchema` instead. */
  export const inboundSchema = ConditionSucceeded$inboundSchema;
  /** @deprecated use `ConditionSucceeded$outboundSchema` instead. */
  export const outboundSchema = ConditionSucceeded$outboundSchema;
  /** @deprecated use `ConditionSucceeded$Outbound` instead. */
  export type Outbound = ConditionSucceeded$Outbound;
}

export function conditionSucceededToJSON(
  conditionSucceeded: ConditionSucceeded,
): string {
  return JSON.stringify(
    ConditionSucceeded$outboundSchema.parse(conditionSucceeded),
  );
}

export function conditionSucceededFromJSON(
  jsonString: string,
): SafeParseResult<ConditionSucceeded, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ConditionSucceeded$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ConditionSucceeded' from JSON`,
  );
}
