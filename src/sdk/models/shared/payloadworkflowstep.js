/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
/** @internal */
export const PayloadWorkflowStep$inboundSchema = z.object({
    context: z.nullable(z.record(z.any())).optional(),
    workflowExecutionId: z.nullable(z.string().transform(v => parseInt(v, 10)))
        .optional(),
    workflowExecutionStepId: z.nullable(z.string()).optional(),
    workflowId: z.nullable(z.string()).optional(),
});
/** @internal */
export const PayloadWorkflowStep$outboundSchema = z.object({
    context: z.nullable(z.record(z.any())).optional(),
    workflowExecutionId: z.nullable(z.number().int().transform(v => `${v}`))
        .optional(),
    workflowExecutionStepId: z.nullable(z.string()).optional(),
    workflowId: z.nullable(z.string()).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var PayloadWorkflowStep$;
(function (PayloadWorkflowStep$) {
    /** @deprecated use `PayloadWorkflowStep$inboundSchema` instead. */
    PayloadWorkflowStep$.inboundSchema = PayloadWorkflowStep$inboundSchema;
    /** @deprecated use `PayloadWorkflowStep$outboundSchema` instead. */
    PayloadWorkflowStep$.outboundSchema = PayloadWorkflowStep$outboundSchema;
})(PayloadWorkflowStep$ || (PayloadWorkflowStep$ = {}));
export function payloadWorkflowStepToJSON(payloadWorkflowStep) {
    return JSON.stringify(PayloadWorkflowStep$outboundSchema.parse(payloadWorkflowStep));
}
export function payloadWorkflowStepFromJSON(jsonString) {
    return safeParse(jsonString, (x) => PayloadWorkflowStep$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'PayloadWorkflowStep' from JSON`);
}
