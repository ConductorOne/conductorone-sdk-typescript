/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { UserRef$inboundSchema, UserRef$outboundSchema, } from "./userref.js";
/** @internal */
export const CloseAction$inboundSchema = z.object({
    useSubjectUser: z.nullable(z.boolean()).optional(),
    userIdCel: z.nullable(z.string()).optional(),
    userRef: z.nullable(UserRef$inboundSchema).optional(),
});
/** @internal */
export const CloseAction$outboundSchema = z.object({
    useSubjectUser: z.nullable(z.boolean()).optional(),
    userIdCel: z.nullable(z.string()).optional(),
    userRef: z.nullable(UserRef$outboundSchema).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CloseAction$;
(function (CloseAction$) {
    /** @deprecated use `CloseAction$inboundSchema` instead. */
    CloseAction$.inboundSchema = CloseAction$inboundSchema;
    /** @deprecated use `CloseAction$outboundSchema` instead. */
    CloseAction$.outboundSchema = CloseAction$outboundSchema;
})(CloseAction$ || (CloseAction$ = {}));
export function closeActionToJSON(closeAction) {
    return JSON.stringify(CloseAction$outboundSchema.parse(closeAction));
}
export function closeActionFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CloseAction$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CloseAction' from JSON`);
}
