/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  AppEntitlementAutomationInput,
  AppEntitlementAutomationInput$inboundSchema,
  AppEntitlementAutomationInput$Outbound,
  AppEntitlementAutomationInput$outboundSchema,
} from "./appentitlementautomationinput.js";

/**
 * The CreateAutomationRequest message.
 */
export type CreateAutomationRequest = {
  automation?: AppEntitlementAutomationInput | null | undefined;
};

/** @internal */
export const CreateAutomationRequest$inboundSchema: z.ZodType<
  CreateAutomationRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  automation: z.nullable(AppEntitlementAutomationInput$inboundSchema)
    .optional(),
});

/** @internal */
export type CreateAutomationRequest$Outbound = {
  automation?: AppEntitlementAutomationInput$Outbound | null | undefined;
};

/** @internal */
export const CreateAutomationRequest$outboundSchema: z.ZodType<
  CreateAutomationRequest$Outbound,
  z.ZodTypeDef,
  CreateAutomationRequest
> = z.object({
  automation: z.nullable(AppEntitlementAutomationInput$outboundSchema)
    .optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateAutomationRequest$ {
  /** @deprecated use `CreateAutomationRequest$inboundSchema` instead. */
  export const inboundSchema = CreateAutomationRequest$inboundSchema;
  /** @deprecated use `CreateAutomationRequest$outboundSchema` instead. */
  export const outboundSchema = CreateAutomationRequest$outboundSchema;
  /** @deprecated use `CreateAutomationRequest$Outbound` instead. */
  export type Outbound = CreateAutomationRequest$Outbound;
}

export function createAutomationRequestToJSON(
  createAutomationRequest: CreateAutomationRequest,
): string {
  return JSON.stringify(
    CreateAutomationRequest$outboundSchema.parse(createAutomationRequest),
  );
}

export function createAutomationRequestFromJSON(
  jsonString: string,
): SafeParseResult<CreateAutomationRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateAutomationRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateAutomationRequest' from JSON`,
  );
}
