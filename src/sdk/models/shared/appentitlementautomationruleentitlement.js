/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { AppEntitlementRef$inboundSchema, AppEntitlementRef$outboundSchema, } from "./appentitlementref.js";
/** @internal */
export const AppEntitlementAutomationRuleEntitlement$inboundSchema = z.object({
    entitlementRefs: z.nullable(z.array(AppEntitlementRef$inboundSchema))
        .optional(),
});
/** @internal */
export const AppEntitlementAutomationRuleEntitlement$outboundSchema = z.object({
    entitlementRefs: z.nullable(z.array(AppEntitlementRef$outboundSchema))
        .optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var AppEntitlementAutomationRuleEntitlement$;
(function (AppEntitlementAutomationRuleEntitlement$) {
    /** @deprecated use `AppEntitlementAutomationRuleEntitlement$inboundSchema` instead. */
    AppEntitlementAutomationRuleEntitlement$.inboundSchema = AppEntitlementAutomationRuleEntitlement$inboundSchema;
    /** @deprecated use `AppEntitlementAutomationRuleEntitlement$outboundSchema` instead. */
    AppEntitlementAutomationRuleEntitlement$.outboundSchema = AppEntitlementAutomationRuleEntitlement$outboundSchema;
})(AppEntitlementAutomationRuleEntitlement$ || (AppEntitlementAutomationRuleEntitlement$ = {}));
export function appEntitlementAutomationRuleEntitlementToJSON(appEntitlementAutomationRuleEntitlement) {
    return JSON.stringify(AppEntitlementAutomationRuleEntitlement$outboundSchema.parse(appEntitlementAutomationRuleEntitlement));
}
export function appEntitlementAutomationRuleEntitlementFromJSON(jsonString) {
    return safeParse(jsonString, (x) => AppEntitlementAutomationRuleEntitlement$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'AppEntitlementAutomationRuleEntitlement' from JSON`);
}
