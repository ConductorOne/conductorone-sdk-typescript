/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Role$inboundSchema, Role$outboundSchema, } from "./role.js";
/** @internal */
export const UpdateRolesResponse$inboundSchema = z.object({
    role: z.nullable(Role$inboundSchema).optional(),
});
/** @internal */
export const UpdateRolesResponse$outboundSchema = z.object({
    role: z.nullable(Role$outboundSchema).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var UpdateRolesResponse$;
(function (UpdateRolesResponse$) {
    /** @deprecated use `UpdateRolesResponse$inboundSchema` instead. */
    UpdateRolesResponse$.inboundSchema = UpdateRolesResponse$inboundSchema;
    /** @deprecated use `UpdateRolesResponse$outboundSchema` instead. */
    UpdateRolesResponse$.outboundSchema = UpdateRolesResponse$outboundSchema;
})(UpdateRolesResponse$ || (UpdateRolesResponse$ = {}));
export function updateRolesResponseToJSON(updateRolesResponse) {
    return JSON.stringify(UpdateRolesResponse$outboundSchema.parse(updateRolesResponse));
}
export function updateRolesResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => UpdateRolesResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'UpdateRolesResponse' from JSON`);
}
