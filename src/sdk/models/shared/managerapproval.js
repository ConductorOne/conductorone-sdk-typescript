/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
/** @internal */
export const ManagerApproval$inboundSchema = z.object({
    allowSelfApproval: z.nullable(z.boolean()).optional(),
    assignedUserIds: z.nullable(z.array(z.string())).optional(),
    fallback: z.nullable(z.boolean()).optional(),
    fallbackUserIds: z.nullable(z.array(z.string())).optional(),
});
/** @internal */
export const ManagerApproval$outboundSchema = z.object({
    allowSelfApproval: z.nullable(z.boolean()).optional(),
    assignedUserIds: z.nullable(z.array(z.string())).optional(),
    fallback: z.nullable(z.boolean()).optional(),
    fallbackUserIds: z.nullable(z.array(z.string())).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ManagerApproval$;
(function (ManagerApproval$) {
    /** @deprecated use `ManagerApproval$inboundSchema` instead. */
    ManagerApproval$.inboundSchema = ManagerApproval$inboundSchema;
    /** @deprecated use `ManagerApproval$outboundSchema` instead. */
    ManagerApproval$.outboundSchema = ManagerApproval$outboundSchema;
})(ManagerApproval$ || (ManagerApproval$ = {}));
export function managerApprovalToJSON(managerApproval) {
    return JSON.stringify(ManagerApproval$outboundSchema.parse(managerApproval));
}
export function managerApprovalFromJSON(jsonString) {
    return safeParse(jsonString, (x) => ManagerApproval$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ManagerApproval' from JSON`);
}
