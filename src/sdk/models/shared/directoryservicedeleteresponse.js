/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
/** @internal */
export const DirectoryServiceDeleteResponse$inboundSchema = z.object({});
/** @internal */
export const DirectoryServiceDeleteResponse$outboundSchema = z.object({});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var DirectoryServiceDeleteResponse$;
(function (DirectoryServiceDeleteResponse$) {
    /** @deprecated use `DirectoryServiceDeleteResponse$inboundSchema` instead. */
    DirectoryServiceDeleteResponse$.inboundSchema = DirectoryServiceDeleteResponse$inboundSchema;
    /** @deprecated use `DirectoryServiceDeleteResponse$outboundSchema` instead. */
    DirectoryServiceDeleteResponse$.outboundSchema = DirectoryServiceDeleteResponse$outboundSchema;
})(DirectoryServiceDeleteResponse$ || (DirectoryServiceDeleteResponse$ = {}));
export function directoryServiceDeleteResponseToJSON(directoryServiceDeleteResponse) {
    return JSON.stringify(DirectoryServiceDeleteResponse$outboundSchema.parse(directoryServiceDeleteResponse));
}
export function directoryServiceDeleteResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => DirectoryServiceDeleteResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'DirectoryServiceDeleteResponse' from JSON`);
}
