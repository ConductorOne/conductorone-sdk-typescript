/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
/** @internal */
export const StepUpMicrosoftSettings$inboundSchema = z.object({
    conditionalAccessIds: z.nullable(z.array(z.string())).optional(),
    tenant: z.nullable(z.string()).optional(),
});
/** @internal */
export const StepUpMicrosoftSettings$outboundSchema = z.object({
    conditionalAccessIds: z.nullable(z.array(z.string())).optional(),
    tenant: z.nullable(z.string()).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var StepUpMicrosoftSettings$;
(function (StepUpMicrosoftSettings$) {
    /** @deprecated use `StepUpMicrosoftSettings$inboundSchema` instead. */
    StepUpMicrosoftSettings$.inboundSchema = StepUpMicrosoftSettings$inboundSchema;
    /** @deprecated use `StepUpMicrosoftSettings$outboundSchema` instead. */
    StepUpMicrosoftSettings$.outboundSchema = StepUpMicrosoftSettings$outboundSchema;
})(StepUpMicrosoftSettings$ || (StepUpMicrosoftSettings$ = {}));
export function stepUpMicrosoftSettingsToJSON(stepUpMicrosoftSettings) {
    return JSON.stringify(StepUpMicrosoftSettings$outboundSchema.parse(stepUpMicrosoftSettings));
}
export function stepUpMicrosoftSettingsFromJSON(jsonString) {
    return safeParse(jsonString, (x) => StepUpMicrosoftSettings$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'StepUpMicrosoftSettings' from JSON`);
}
