/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * The DeleteAppEntitlementResponse message.
 */
export type DeleteAppEntitlementResponse = {};

/** @internal */
export const DeleteAppEntitlementResponse$inboundSchema: z.ZodType<
  DeleteAppEntitlementResponse,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type DeleteAppEntitlementResponse$Outbound = {};

/** @internal */
export const DeleteAppEntitlementResponse$outboundSchema: z.ZodType<
  DeleteAppEntitlementResponse$Outbound,
  z.ZodTypeDef,
  DeleteAppEntitlementResponse
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteAppEntitlementResponse$ {
  /** @deprecated use `DeleteAppEntitlementResponse$inboundSchema` instead. */
  export const inboundSchema = DeleteAppEntitlementResponse$inboundSchema;
  /** @deprecated use `DeleteAppEntitlementResponse$outboundSchema` instead. */
  export const outboundSchema = DeleteAppEntitlementResponse$outboundSchema;
  /** @deprecated use `DeleteAppEntitlementResponse$Outbound` instead. */
  export type Outbound = DeleteAppEntitlementResponse$Outbound;
}

export function deleteAppEntitlementResponseToJSON(
  deleteAppEntitlementResponse: DeleteAppEntitlementResponse,
): string {
  return JSON.stringify(
    DeleteAppEntitlementResponse$outboundSchema.parse(
      deleteAppEntitlementResponse,
    ),
  );
}

export function deleteAppEntitlementResponseFromJSON(
  jsonString: string,
): SafeParseResult<DeleteAppEntitlementResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DeleteAppEntitlementResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeleteAppEntitlementResponse' from JSON`,
  );
}
