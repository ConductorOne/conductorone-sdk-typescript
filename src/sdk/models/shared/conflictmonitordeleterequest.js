/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
/** @internal */
export const ConflictMonitorDeleteRequest$inboundSchema = z.object({});
/** @internal */
export const ConflictMonitorDeleteRequest$outboundSchema = z.object({});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ConflictMonitorDeleteRequest$;
(function (ConflictMonitorDeleteRequest$) {
    /** @deprecated use `ConflictMonitorDeleteRequest$inboundSchema` instead. */
    ConflictMonitorDeleteRequest$.inboundSchema = ConflictMonitorDeleteRequest$inboundSchema;
    /** @deprecated use `ConflictMonitorDeleteRequest$outboundSchema` instead. */
    ConflictMonitorDeleteRequest$.outboundSchema = ConflictMonitorDeleteRequest$outboundSchema;
})(ConflictMonitorDeleteRequest$ || (ConflictMonitorDeleteRequest$ = {}));
export function conflictMonitorDeleteRequestToJSON(conflictMonitorDeleteRequest) {
    return JSON.stringify(ConflictMonitorDeleteRequest$outboundSchema.parse(conflictMonitorDeleteRequest));
}
export function conflictMonitorDeleteRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => ConflictMonitorDeleteRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ConflictMonitorDeleteRequest' from JSON`);
}
