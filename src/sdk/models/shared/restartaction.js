/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
/** @internal */
export const RestartAction$inboundSchema = z.object({
    oldPolicyStepId: z.nullable(z.string()).optional(),
    restartedAt: z.nullable(z.string().datetime({ offset: true }).transform(v => new Date(v))).optional(),
    userId: z.nullable(z.string()).optional(),
});
/** @internal */
export const RestartAction$outboundSchema = z.object({
    oldPolicyStepId: z.nullable(z.string()).optional(),
    restartedAt: z.nullable(z.date().transform(v => v.toISOString())).optional(),
    userId: z.nullable(z.string()).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RestartAction$;
(function (RestartAction$) {
    /** @deprecated use `RestartAction$inboundSchema` instead. */
    RestartAction$.inboundSchema = RestartAction$inboundSchema;
    /** @deprecated use `RestartAction$outboundSchema` instead. */
    RestartAction$.outboundSchema = RestartAction$outboundSchema;
})(RestartAction$ || (RestartAction$ = {}));
export function restartActionToJSON(restartAction) {
    return JSON.stringify(RestartAction$outboundSchema.parse(restartAction));
}
export function restartActionFromJSON(jsonString) {
    return safeParse(jsonString, (x) => RestartAction$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'RestartAction' from JSON`);
}
