/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
/** @internal */
export const DeletePolicyResponse$inboundSchema = z.object({});
/** @internal */
export const DeletePolicyResponse$outboundSchema = z.object({});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var DeletePolicyResponse$;
(function (DeletePolicyResponse$) {
    /** @deprecated use `DeletePolicyResponse$inboundSchema` instead. */
    DeletePolicyResponse$.inboundSchema = DeletePolicyResponse$inboundSchema;
    /** @deprecated use `DeletePolicyResponse$outboundSchema` instead. */
    DeletePolicyResponse$.outboundSchema = DeletePolicyResponse$outboundSchema;
})(DeletePolicyResponse$ || (DeletePolicyResponse$ = {}));
export function deletePolicyResponseToJSON(deletePolicyResponse) {
    return JSON.stringify(DeletePolicyResponse$outboundSchema.parse(deletePolicyResponse));
}
export function deletePolicyResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => DeletePolicyResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'DeletePolicyResponse' from JSON`);
}
