/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * The AppEntitlementAutomationRuleBasic message.
 */
export type AppEntitlementAutomationRuleBasic = {
  /**
   * The expression field.
   */
  expression?: string | null | undefined;
};

/** @internal */
export const AppEntitlementAutomationRuleBasic$inboundSchema: z.ZodType<
  AppEntitlementAutomationRuleBasic,
  z.ZodTypeDef,
  unknown
> = z.object({
  expression: z.nullable(z.string()).optional(),
});

/** @internal */
export type AppEntitlementAutomationRuleBasic$Outbound = {
  expression?: string | null | undefined;
};

/** @internal */
export const AppEntitlementAutomationRuleBasic$outboundSchema: z.ZodType<
  AppEntitlementAutomationRuleBasic$Outbound,
  z.ZodTypeDef,
  AppEntitlementAutomationRuleBasic
> = z.object({
  expression: z.nullable(z.string()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppEntitlementAutomationRuleBasic$ {
  /** @deprecated use `AppEntitlementAutomationRuleBasic$inboundSchema` instead. */
  export const inboundSchema = AppEntitlementAutomationRuleBasic$inboundSchema;
  /** @deprecated use `AppEntitlementAutomationRuleBasic$outboundSchema` instead. */
  export const outboundSchema =
    AppEntitlementAutomationRuleBasic$outboundSchema;
  /** @deprecated use `AppEntitlementAutomationRuleBasic$Outbound` instead. */
  export type Outbound = AppEntitlementAutomationRuleBasic$Outbound;
}

export function appEntitlementAutomationRuleBasicToJSON(
  appEntitlementAutomationRuleBasic: AppEntitlementAutomationRuleBasic,
): string {
  return JSON.stringify(
    AppEntitlementAutomationRuleBasic$outboundSchema.parse(
      appEntitlementAutomationRuleBasic,
    ),
  );
}

export function appEntitlementAutomationRuleBasicFromJSON(
  jsonString: string,
): SafeParseResult<AppEntitlementAutomationRuleBasic, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => AppEntitlementAutomationRuleBasic$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'AppEntitlementAutomationRuleBasic' from JSON`,
  );
}
