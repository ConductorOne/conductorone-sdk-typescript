/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  AttributeValue,
  AttributeValue$inboundSchema,
  AttributeValue$Outbound,
  AttributeValue$outboundSchema,
} from "./attributevalue.js";

/**
 * The ListRiskLevelsResponse message.
 */
export type ListRiskLevelsResponse = {
  /**
   * The list field.
   */
  list?: Array<AttributeValue> | null | undefined;
  /**
   * The nextPageToken field.
   */
  nextPageToken?: string | null | undefined;
};

/** @internal */
export const ListRiskLevelsResponse$inboundSchema: z.ZodType<
  ListRiskLevelsResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  list: z.nullable(z.array(AttributeValue$inboundSchema)).optional(),
  nextPageToken: z.nullable(z.string()).optional(),
});

/** @internal */
export type ListRiskLevelsResponse$Outbound = {
  list?: Array<AttributeValue$Outbound> | null | undefined;
  nextPageToken?: string | null | undefined;
};

/** @internal */
export const ListRiskLevelsResponse$outboundSchema: z.ZodType<
  ListRiskLevelsResponse$Outbound,
  z.ZodTypeDef,
  ListRiskLevelsResponse
> = z.object({
  list: z.nullable(z.array(AttributeValue$outboundSchema)).optional(),
  nextPageToken: z.nullable(z.string()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListRiskLevelsResponse$ {
  /** @deprecated use `ListRiskLevelsResponse$inboundSchema` instead. */
  export const inboundSchema = ListRiskLevelsResponse$inboundSchema;
  /** @deprecated use `ListRiskLevelsResponse$outboundSchema` instead. */
  export const outboundSchema = ListRiskLevelsResponse$outboundSchema;
  /** @deprecated use `ListRiskLevelsResponse$Outbound` instead. */
  export type Outbound = ListRiskLevelsResponse$Outbound;
}

export function listRiskLevelsResponseToJSON(
  listRiskLevelsResponse: ListRiskLevelsResponse,
): string {
  return JSON.stringify(
    ListRiskLevelsResponse$outboundSchema.parse(listRiskLevelsResponse),
  );
}

export function listRiskLevelsResponseFromJSON(
  jsonString: string,
): SafeParseResult<ListRiskLevelsResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ListRiskLevelsResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ListRiskLevelsResponse' from JSON`,
  );
}
