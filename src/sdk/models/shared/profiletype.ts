/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * ProfileType represents a type of profile in the system
 */
export type ProfileType = {
  /**
   * The description field.
   */
  description?: string | null | undefined;
  /**
   * The iconUrl field.
   */
  iconUrl?: string | null | undefined;
  /**
   * The id field.
   */
  id?: string | null | undefined;
  /**
   * The name field.
   */
  name?: string | null | undefined;
  /**
   * The priority field.
   */
  priority?: number | null | undefined;
  /**
   * icon sizes
   */
  sizes?: Array<number> | null | undefined;
};

/** @internal */
export const ProfileType$inboundSchema: z.ZodType<
  ProfileType,
  z.ZodTypeDef,
  unknown
> = z.object({
  description: z.nullable(z.string()).optional(),
  iconUrl: z.nullable(z.string()).optional(),
  id: z.nullable(z.string()).optional(),
  name: z.nullable(z.string()).optional(),
  priority: z.nullable(z.number().int()).optional(),
  sizes: z.nullable(z.array(z.number().int())).optional(),
});

/** @internal */
export type ProfileType$Outbound = {
  description?: string | null | undefined;
  iconUrl?: string | null | undefined;
  id?: string | null | undefined;
  name?: string | null | undefined;
  priority?: number | null | undefined;
  sizes?: Array<number> | null | undefined;
};

/** @internal */
export const ProfileType$outboundSchema: z.ZodType<
  ProfileType$Outbound,
  z.ZodTypeDef,
  ProfileType
> = z.object({
  description: z.nullable(z.string()).optional(),
  iconUrl: z.nullable(z.string()).optional(),
  id: z.nullable(z.string()).optional(),
  name: z.nullable(z.string()).optional(),
  priority: z.nullable(z.number().int()).optional(),
  sizes: z.nullable(z.array(z.number().int())).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ProfileType$ {
  /** @deprecated use `ProfileType$inboundSchema` instead. */
  export const inboundSchema = ProfileType$inboundSchema;
  /** @deprecated use `ProfileType$outboundSchema` instead. */
  export const outboundSchema = ProfileType$outboundSchema;
  /** @deprecated use `ProfileType$Outbound` instead. */
  export type Outbound = ProfileType$Outbound;
}

export function profileTypeToJSON(profileType: ProfileType): string {
  return JSON.stringify(ProfileType$outboundSchema.parse(profileType));
}

export function profileTypeFromJSON(
  jsonString: string,
): SafeParseResult<ProfileType, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ProfileType$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ProfileType' from JSON`,
  );
}
