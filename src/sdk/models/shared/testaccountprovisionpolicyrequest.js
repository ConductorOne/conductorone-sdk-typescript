/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
/** @internal */
export const TestAccountProvisionPolicyRequest$inboundSchema = z.object({
    cel: z.nullable(z.string()).optional(),
});
/** @internal */
export const TestAccountProvisionPolicyRequest$outboundSchema = z.object({
    cel: z.nullable(z.string()).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var TestAccountProvisionPolicyRequest$;
(function (TestAccountProvisionPolicyRequest$) {
    /** @deprecated use `TestAccountProvisionPolicyRequest$inboundSchema` instead. */
    TestAccountProvisionPolicyRequest$.inboundSchema = TestAccountProvisionPolicyRequest$inboundSchema;
    /** @deprecated use `TestAccountProvisionPolicyRequest$outboundSchema` instead. */
    TestAccountProvisionPolicyRequest$.outboundSchema = TestAccountProvisionPolicyRequest$outboundSchema;
})(TestAccountProvisionPolicyRequest$ || (TestAccountProvisionPolicyRequest$ = {}));
export function testAccountProvisionPolicyRequestToJSON(testAccountProvisionPolicyRequest) {
    return JSON.stringify(TestAccountProvisionPolicyRequest$outboundSchema.parse(testAccountProvisionPolicyRequest));
}
export function testAccountProvisionPolicyRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => TestAccountProvisionPolicyRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'TestAccountProvisionPolicyRequest' from JSON`);
}
