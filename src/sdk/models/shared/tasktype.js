/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { TaskTypeCertify$inboundSchema, TaskTypeCertify$outboundSchema, } from "./tasktypecertify.js";
import { TaskTypeGrant$inboundSchema, TaskTypeGrant$outboundSchema, } from "./tasktypegrant.js";
import { TaskTypeOffboarding$inboundSchema, TaskTypeOffboarding$outboundSchema, } from "./tasktypeoffboarding.js";
import { TaskTypeRevoke$inboundSchema, TaskTypeRevoke$outboundSchema, } from "./tasktyperevoke.js";
/** @internal */
export const TaskType$inboundSchema = z.object({
    certify: z.nullable(TaskTypeCertify$inboundSchema).optional(),
    grant: z.nullable(TaskTypeGrant$inboundSchema).optional(),
    offboarding: z.nullable(TaskTypeOffboarding$inboundSchema).optional(),
    revoke: z.nullable(TaskTypeRevoke$inboundSchema).optional(),
});
/** @internal */
export const TaskType$outboundSchema = z.object({
    certify: z.nullable(TaskTypeCertify$outboundSchema).optional(),
    grant: z.nullable(TaskTypeGrant$outboundSchema).optional(),
    offboarding: z.nullable(TaskTypeOffboarding$outboundSchema).optional(),
    revoke: z.nullable(TaskTypeRevoke$outboundSchema).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var TaskType$;
(function (TaskType$) {
    /** @deprecated use `TaskType$inboundSchema` instead. */
    TaskType$.inboundSchema = TaskType$inboundSchema;
    /** @deprecated use `TaskType$outboundSchema` instead. */
    TaskType$.outboundSchema = TaskType$outboundSchema;
})(TaskType$ || (TaskType$ = {}));
export function taskTypeToJSON(taskType) {
    return JSON.stringify(TaskType$outboundSchema.parse(taskType));
}
export function taskTypeFromJSON(jsonString) {
    return safeParse(jsonString, (x) => TaskType$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'TaskType' from JSON`);
}
