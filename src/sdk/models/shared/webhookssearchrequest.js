/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { WebhookRef$inboundSchema, WebhookRef$outboundSchema, } from "./webhookref.js";
/** @internal */
export const WebhooksSearchRequest$inboundSchema = z.object({
    pageSize: z.nullable(z.number().int()).optional(),
    pageToken: z.nullable(z.string()).optional(),
    query: z.nullable(z.string()).optional(),
    refs: z.nullable(z.array(WebhookRef$inboundSchema)).optional(),
});
/** @internal */
export const WebhooksSearchRequest$outboundSchema = z.object({
    pageSize: z.nullable(z.number().int()).optional(),
    pageToken: z.nullable(z.string()).optional(),
    query: z.nullable(z.string()).optional(),
    refs: z.nullable(z.array(WebhookRef$outboundSchema)).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var WebhooksSearchRequest$;
(function (WebhooksSearchRequest$) {
    /** @deprecated use `WebhooksSearchRequest$inboundSchema` instead. */
    WebhooksSearchRequest$.inboundSchema = WebhooksSearchRequest$inboundSchema;
    /** @deprecated use `WebhooksSearchRequest$outboundSchema` instead. */
    WebhooksSearchRequest$.outboundSchema = WebhooksSearchRequest$outboundSchema;
})(WebhooksSearchRequest$ || (WebhooksSearchRequest$ = {}));
export function webhooksSearchRequestToJSON(webhooksSearchRequest) {
    return JSON.stringify(WebhooksSearchRequest$outboundSchema.parse(webhooksSearchRequest));
}
export function webhooksSearchRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => WebhooksSearchRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'WebhooksSearchRequest' from JSON`);
}
