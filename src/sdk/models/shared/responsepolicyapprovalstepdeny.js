/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
/** @internal */
export const ResponsePolicyApprovalStepDeny$inboundSchema = z.object({
    comment: z.nullable(z.string()).optional(),
});
/** @internal */
export const ResponsePolicyApprovalStepDeny$outboundSchema = z.object({
    comment: z.nullable(z.string()).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ResponsePolicyApprovalStepDeny$;
(function (ResponsePolicyApprovalStepDeny$) {
    /** @deprecated use `ResponsePolicyApprovalStepDeny$inboundSchema` instead. */
    ResponsePolicyApprovalStepDeny$.inboundSchema = ResponsePolicyApprovalStepDeny$inboundSchema;
    /** @deprecated use `ResponsePolicyApprovalStepDeny$outboundSchema` instead. */
    ResponsePolicyApprovalStepDeny$.outboundSchema = ResponsePolicyApprovalStepDeny$outboundSchema;
})(ResponsePolicyApprovalStepDeny$ || (ResponsePolicyApprovalStepDeny$ = {}));
export function responsePolicyApprovalStepDenyToJSON(responsePolicyApprovalStepDeny) {
    return JSON.stringify(ResponsePolicyApprovalStepDeny$outboundSchema.parse(responsePolicyApprovalStepDeny));
}
export function responsePolicyApprovalStepDenyFromJSON(jsonString) {
    return safeParse(jsonString, (x) => ResponsePolicyApprovalStepDeny$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ResponsePolicyApprovalStepDeny' from JSON`);
}
