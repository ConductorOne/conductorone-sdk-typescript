/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
/** @internal */
export const DeletePolicyRequest$inboundSchema = z.object({});
/** @internal */
export const DeletePolicyRequest$outboundSchema = z.object({});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var DeletePolicyRequest$;
(function (DeletePolicyRequest$) {
    /** @deprecated use `DeletePolicyRequest$inboundSchema` instead. */
    DeletePolicyRequest$.inboundSchema = DeletePolicyRequest$inboundSchema;
    /** @deprecated use `DeletePolicyRequest$outboundSchema` instead. */
    DeletePolicyRequest$.outboundSchema = DeletePolicyRequest$outboundSchema;
})(DeletePolicyRequest$ || (DeletePolicyRequest$ = {}));
export function deletePolicyRequestToJSON(deletePolicyRequest) {
    return JSON.stringify(DeletePolicyRequest$outboundSchema.parse(deletePolicyRequest));
}
export function deletePolicyRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => DeletePolicyRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'DeletePolicyRequest' from JSON`);
}
