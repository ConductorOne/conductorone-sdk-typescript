/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * The PersonalClientServiceCreateRequest message contains the fields for creating a new personal client.
 */
export type PersonalClientServiceCreateRequest = {
  /**
   * A list of CIDRs to restrict this credential to.
   */
  allowSourceCidr?: Array<string> | null | undefined;
  /**
   * The display name for the new personal client.
   */
  displayName?: string | null | undefined;
  expires?: string | null | undefined;
  /**
   * The list of roles to restrict the credential to.
   */
  scopedRoles?: Array<string> | null | undefined;
};

/** @internal */
export const PersonalClientServiceCreateRequest$inboundSchema: z.ZodType<
  PersonalClientServiceCreateRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  allowSourceCidr: z.nullable(z.array(z.string())).optional(),
  displayName: z.nullable(z.string()).optional(),
  expires: z.nullable(z.string()).optional(),
  scopedRoles: z.nullable(z.array(z.string())).optional(),
});

/** @internal */
export type PersonalClientServiceCreateRequest$Outbound = {
  allowSourceCidr?: Array<string> | null | undefined;
  displayName?: string | null | undefined;
  expires?: string | null | undefined;
  scopedRoles?: Array<string> | null | undefined;
};

/** @internal */
export const PersonalClientServiceCreateRequest$outboundSchema: z.ZodType<
  PersonalClientServiceCreateRequest$Outbound,
  z.ZodTypeDef,
  PersonalClientServiceCreateRequest
> = z.object({
  allowSourceCidr: z.nullable(z.array(z.string())).optional(),
  displayName: z.nullable(z.string()).optional(),
  expires: z.nullable(z.string()).optional(),
  scopedRoles: z.nullable(z.array(z.string())).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PersonalClientServiceCreateRequest$ {
  /** @deprecated use `PersonalClientServiceCreateRequest$inboundSchema` instead. */
  export const inboundSchema = PersonalClientServiceCreateRequest$inboundSchema;
  /** @deprecated use `PersonalClientServiceCreateRequest$outboundSchema` instead. */
  export const outboundSchema =
    PersonalClientServiceCreateRequest$outboundSchema;
  /** @deprecated use `PersonalClientServiceCreateRequest$Outbound` instead. */
  export type Outbound = PersonalClientServiceCreateRequest$Outbound;
}

export function personalClientServiceCreateRequestToJSON(
  personalClientServiceCreateRequest: PersonalClientServiceCreateRequest,
): string {
  return JSON.stringify(
    PersonalClientServiceCreateRequest$outboundSchema.parse(
      personalClientServiceCreateRequest,
    ),
  );
}

export function personalClientServiceCreateRequestFromJSON(
  jsonString: string,
): SafeParseResult<PersonalClientServiceCreateRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      PersonalClientServiceCreateRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PersonalClientServiceCreateRequest' from JSON`,
  );
}
