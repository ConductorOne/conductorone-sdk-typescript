/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
/** @internal */
export const RemoveAppEntitlementOwnerResponse$inboundSchema = z.object({});
/** @internal */
export const RemoveAppEntitlementOwnerResponse$outboundSchema = z.object({});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RemoveAppEntitlementOwnerResponse$;
(function (RemoveAppEntitlementOwnerResponse$) {
    /** @deprecated use `RemoveAppEntitlementOwnerResponse$inboundSchema` instead. */
    RemoveAppEntitlementOwnerResponse$.inboundSchema = RemoveAppEntitlementOwnerResponse$inboundSchema;
    /** @deprecated use `RemoveAppEntitlementOwnerResponse$outboundSchema` instead. */
    RemoveAppEntitlementOwnerResponse$.outboundSchema = RemoveAppEntitlementOwnerResponse$outboundSchema;
})(RemoveAppEntitlementOwnerResponse$ || (RemoveAppEntitlementOwnerResponse$ = {}));
export function removeAppEntitlementOwnerResponseToJSON(removeAppEntitlementOwnerResponse) {
    return JSON.stringify(RemoveAppEntitlementOwnerResponse$outboundSchema.parse(removeAppEntitlementOwnerResponse));
}
export function removeAppEntitlementOwnerResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => RemoveAppEntitlementOwnerResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'RemoveAppEntitlementOwnerResponse' from JSON`);
}
