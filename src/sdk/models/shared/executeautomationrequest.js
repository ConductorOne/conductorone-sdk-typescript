/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { AutomationContext$inboundSchema, AutomationContext$outboundSchema, } from "./automationcontext.js";
/** @internal */
export const ExecuteAutomationRequest$inboundSchema = z.object({
    context: z.nullable(AutomationContext$inboundSchema).optional(),
});
/** @internal */
export const ExecuteAutomationRequest$outboundSchema = z.object({
    context: z.nullable(AutomationContext$outboundSchema).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ExecuteAutomationRequest$;
(function (ExecuteAutomationRequest$) {
    /** @deprecated use `ExecuteAutomationRequest$inboundSchema` instead. */
    ExecuteAutomationRequest$.inboundSchema = ExecuteAutomationRequest$inboundSchema;
    /** @deprecated use `ExecuteAutomationRequest$outboundSchema` instead. */
    ExecuteAutomationRequest$.outboundSchema = ExecuteAutomationRequest$outboundSchema;
})(ExecuteAutomationRequest$ || (ExecuteAutomationRequest$ = {}));
export function executeAutomationRequestToJSON(executeAutomationRequest) {
    return JSON.stringify(ExecuteAutomationRequest$outboundSchema.parse(executeAutomationRequest));
}
export function executeAutomationRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => ExecuteAutomationRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ExecuteAutomationRequest' from JSON`);
}
