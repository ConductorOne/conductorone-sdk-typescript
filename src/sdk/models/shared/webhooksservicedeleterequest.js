/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
/** @internal */
export const WebhooksServiceDeleteRequest$inboundSchema = z.object({});
/** @internal */
export const WebhooksServiceDeleteRequest$outboundSchema = z.object({});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var WebhooksServiceDeleteRequest$;
(function (WebhooksServiceDeleteRequest$) {
    /** @deprecated use `WebhooksServiceDeleteRequest$inboundSchema` instead. */
    WebhooksServiceDeleteRequest$.inboundSchema = WebhooksServiceDeleteRequest$inboundSchema;
    /** @deprecated use `WebhooksServiceDeleteRequest$outboundSchema` instead. */
    WebhooksServiceDeleteRequest$.outboundSchema = WebhooksServiceDeleteRequest$outboundSchema;
})(WebhooksServiceDeleteRequest$ || (WebhooksServiceDeleteRequest$ = {}));
export function webhooksServiceDeleteRequestToJSON(webhooksServiceDeleteRequest) {
    return JSON.stringify(WebhooksServiceDeleteRequest$outboundSchema.parse(webhooksServiceDeleteRequest));
}
export function webhooksServiceDeleteRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => WebhooksServiceDeleteRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'WebhooksServiceDeleteRequest' from JSON`);
}
