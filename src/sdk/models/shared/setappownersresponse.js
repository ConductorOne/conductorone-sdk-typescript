/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
/** @internal */
export const SetAppOwnersResponse$inboundSchema = z.object({});
/** @internal */
export const SetAppOwnersResponse$outboundSchema = z.object({});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var SetAppOwnersResponse$;
(function (SetAppOwnersResponse$) {
    /** @deprecated use `SetAppOwnersResponse$inboundSchema` instead. */
    SetAppOwnersResponse$.inboundSchema = SetAppOwnersResponse$inboundSchema;
    /** @deprecated use `SetAppOwnersResponse$outboundSchema` instead. */
    SetAppOwnersResponse$.outboundSchema = SetAppOwnersResponse$outboundSchema;
})(SetAppOwnersResponse$ || (SetAppOwnersResponse$ = {}));
export function setAppOwnersResponseToJSON(setAppOwnersResponse) {
    return JSON.stringify(SetAppOwnersResponse$outboundSchema.parse(setAppOwnersResponse));
}
export function setAppOwnersResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => SetAppOwnersResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'SetAppOwnersResponse' from JSON`);
}
