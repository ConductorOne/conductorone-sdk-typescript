/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
/** @internal */
export const ManagerApprovalInput$inboundSchema = z.object({
    allowSelfApproval: z.nullable(z.boolean()).optional(),
    fallback: z.nullable(z.boolean()).optional(),
    fallbackUserIds: z.nullable(z.array(z.string())).optional(),
});
/** @internal */
export const ManagerApprovalInput$outboundSchema = z.object({
    allowSelfApproval: z.nullable(z.boolean()).optional(),
    fallback: z.nullable(z.boolean()).optional(),
    fallbackUserIds: z.nullable(z.array(z.string())).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ManagerApprovalInput$;
(function (ManagerApprovalInput$) {
    /** @deprecated use `ManagerApprovalInput$inboundSchema` instead. */
    ManagerApprovalInput$.inboundSchema = ManagerApprovalInput$inboundSchema;
    /** @deprecated use `ManagerApprovalInput$outboundSchema` instead. */
    ManagerApprovalInput$.outboundSchema = ManagerApprovalInput$outboundSchema;
})(ManagerApprovalInput$ || (ManagerApprovalInput$ = {}));
export function managerApprovalInputToJSON(managerApprovalInput) {
    return JSON.stringify(ManagerApprovalInput$outboundSchema.parse(managerApprovalInput));
}
export function managerApprovalInputFromJSON(jsonString) {
    return safeParse(jsonString, (x) => ManagerApprovalInput$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ManagerApprovalInput' from JSON`);
}
