/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * The SystemLogServiceListEventsResponse message.
 */
export type SystemLogServiceListEventsResponse = {
  /**
   * List contains an array of JSON OCSF events.
   */
  list?: Array<{ [k: string]: any }> | null | undefined;
  /**
   * The nextPageToken field.
   */
  nextPageToken?: string | null | undefined;
};

/** @internal */
export const SystemLogServiceListEventsResponse$inboundSchema: z.ZodType<
  SystemLogServiceListEventsResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  list: z.nullable(z.array(z.record(z.any()))).optional(),
  nextPageToken: z.nullable(z.string()).optional(),
});

/** @internal */
export type SystemLogServiceListEventsResponse$Outbound = {
  list?: Array<{ [k: string]: any }> | null | undefined;
  nextPageToken?: string | null | undefined;
};

/** @internal */
export const SystemLogServiceListEventsResponse$outboundSchema: z.ZodType<
  SystemLogServiceListEventsResponse$Outbound,
  z.ZodTypeDef,
  SystemLogServiceListEventsResponse
> = z.object({
  list: z.nullable(z.array(z.record(z.any()))).optional(),
  nextPageToken: z.nullable(z.string()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SystemLogServiceListEventsResponse$ {
  /** @deprecated use `SystemLogServiceListEventsResponse$inboundSchema` instead. */
  export const inboundSchema = SystemLogServiceListEventsResponse$inboundSchema;
  /** @deprecated use `SystemLogServiceListEventsResponse$outboundSchema` instead. */
  export const outboundSchema =
    SystemLogServiceListEventsResponse$outboundSchema;
  /** @deprecated use `SystemLogServiceListEventsResponse$Outbound` instead. */
  export type Outbound = SystemLogServiceListEventsResponse$Outbound;
}

export function systemLogServiceListEventsResponseToJSON(
  systemLogServiceListEventsResponse: SystemLogServiceListEventsResponse,
): string {
  return JSON.stringify(
    SystemLogServiceListEventsResponse$outboundSchema.parse(
      systemLogServiceListEventsResponse,
    ),
  );
}

export function systemLogServiceListEventsResponseFromJSON(
  jsonString: string,
): SafeParseResult<SystemLogServiceListEventsResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      SystemLogServiceListEventsResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'SystemLogServiceListEventsResponse' from JSON`,
  );
}
