/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { WaitCondition$inboundSchema, WaitCondition$outboundSchema, } from "./waitcondition.js";
import { WaitDuration$inboundSchema, WaitDuration$outboundSchema, } from "./waitduration.js";
import { WaitUntilTime$inboundSchema, WaitUntilTime$outboundSchema, } from "./waituntiltime.js";
/** @internal */
export const Wait$inboundSchema = z
    .object({
    commentOnFirstWait: z.nullable(z.string()).optional(),
    commentOnTimeout: z.nullable(z.string()).optional(),
    condition: z.nullable(WaitCondition$inboundSchema).optional(),
    duration: z.nullable(WaitDuration$inboundSchema).optional(),
    name: z.nullable(z.string()).optional(),
    timeoutDuration: z.nullable(z.string()).optional(),
    untilTime: z.nullable(WaitUntilTime$inboundSchema).optional(),
});
/** @internal */
export const Wait$outboundSchema = z.object({
    commentOnFirstWait: z.nullable(z.string()).optional(),
    commentOnTimeout: z.nullable(z.string()).optional(),
    condition: z.nullable(WaitCondition$outboundSchema).optional(),
    duration: z.nullable(WaitDuration$outboundSchema).optional(),
    name: z.nullable(z.string()).optional(),
    timeoutDuration: z.nullable(z.string()).optional(),
    untilTime: z.nullable(WaitUntilTime$outboundSchema).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var Wait$;
(function (Wait$) {
    /** @deprecated use `Wait$inboundSchema` instead. */
    Wait$.inboundSchema = Wait$inboundSchema;
    /** @deprecated use `Wait$outboundSchema` instead. */
    Wait$.outboundSchema = Wait$outboundSchema;
})(Wait$ || (Wait$ = {}));
export function waitToJSON(wait) {
    return JSON.stringify(Wait$outboundSchema.parse(wait));
}
export function waitFromJSON(jsonString) {
    return safeParse(jsonString, (x) => Wait$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'Wait' from JSON`);
}
