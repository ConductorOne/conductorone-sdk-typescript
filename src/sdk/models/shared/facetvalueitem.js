/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { FacetValue$inboundSchema, FacetValue$outboundSchema, } from "./facetvalue.js";
/** @internal */
export const FacetValueItem$inboundSchema = z.object({
    values: z.nullable(z.array(FacetValue$inboundSchema)).optional(),
});
/** @internal */
export const FacetValueItem$outboundSchema = z.object({
    values: z.nullable(z.array(FacetValue$outboundSchema)).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var FacetValueItem$;
(function (FacetValueItem$) {
    /** @deprecated use `FacetValueItem$inboundSchema` instead. */
    FacetValueItem$.inboundSchema = FacetValueItem$inboundSchema;
    /** @deprecated use `FacetValueItem$outboundSchema` instead. */
    FacetValueItem$.outboundSchema = FacetValueItem$outboundSchema;
})(FacetValueItem$ || (FacetValueItem$ = {}));
export function facetValueItemToJSON(facetValueItem) {
    return JSON.stringify(FacetValueItem$outboundSchema.parse(facetValueItem));
}
export function facetValueItemFromJSON(jsonString) {
    return safeParse(jsonString, (x) => FacetValueItem$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'FacetValueItem' from JSON`);
}
