/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";
import { collectExtraKeys as collectExtraKeys$, safeParse, } from "../../../lib/schemas.js";
import { AppEntitlementProxyView$inboundSchema, AppEntitlementProxyView$outboundSchema, } from "./appentitlementproxyview.js";
/** @internal */
export const GetAppEntitlementProxyResponseExpanded$inboundSchema = collectExtraKeys$(z.object({
    "@type": z.string().optional(),
}).catchall(z.any()), "additionalProperties", true).transform((v) => {
    return remap$(v, {
        "@type": "atType",
    });
});
/** @internal */
export const GetAppEntitlementProxyResponseExpanded$outboundSchema = z.object({
    atType: z.string().optional(),
    additionalProperties: z.record(z.any()),
}).transform((v) => {
    return {
        ...v.additionalProperties,
        ...remap$(v, {
            atType: "@type",
            additionalProperties: null,
        }),
    };
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetAppEntitlementProxyResponseExpanded$;
(function (GetAppEntitlementProxyResponseExpanded$) {
    /** @deprecated use `GetAppEntitlementProxyResponseExpanded$inboundSchema` instead. */
    GetAppEntitlementProxyResponseExpanded$.inboundSchema = GetAppEntitlementProxyResponseExpanded$inboundSchema;
    /** @deprecated use `GetAppEntitlementProxyResponseExpanded$outboundSchema` instead. */
    GetAppEntitlementProxyResponseExpanded$.outboundSchema = GetAppEntitlementProxyResponseExpanded$outboundSchema;
})(GetAppEntitlementProxyResponseExpanded$ || (GetAppEntitlementProxyResponseExpanded$ = {}));
export function getAppEntitlementProxyResponseExpandedToJSON(getAppEntitlementProxyResponseExpanded) {
    return JSON.stringify(GetAppEntitlementProxyResponseExpanded$outboundSchema.parse(getAppEntitlementProxyResponseExpanded));
}
export function getAppEntitlementProxyResponseExpandedFromJSON(jsonString) {
    return safeParse(jsonString, (x) => GetAppEntitlementProxyResponseExpanded$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetAppEntitlementProxyResponseExpanded' from JSON`);
}
/** @internal */
export const GetAppEntitlementProxyResponse$inboundSchema = z.object({
    appProxyEntitlementView: z.nullable(AppEntitlementProxyView$inboundSchema)
        .optional(),
    expanded: z.nullable(z.array(z.lazy(() => GetAppEntitlementProxyResponseExpanded$inboundSchema))).optional(),
});
/** @internal */
export const GetAppEntitlementProxyResponse$outboundSchema = z.object({
    appProxyEntitlementView: z.nullable(AppEntitlementProxyView$outboundSchema)
        .optional(),
    expanded: z.nullable(z.array(z.lazy(() => GetAppEntitlementProxyResponseExpanded$outboundSchema))).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetAppEntitlementProxyResponse$;
(function (GetAppEntitlementProxyResponse$) {
    /** @deprecated use `GetAppEntitlementProxyResponse$inboundSchema` instead. */
    GetAppEntitlementProxyResponse$.inboundSchema = GetAppEntitlementProxyResponse$inboundSchema;
    /** @deprecated use `GetAppEntitlementProxyResponse$outboundSchema` instead. */
    GetAppEntitlementProxyResponse$.outboundSchema = GetAppEntitlementProxyResponse$outboundSchema;
})(GetAppEntitlementProxyResponse$ || (GetAppEntitlementProxyResponse$ = {}));
export function getAppEntitlementProxyResponseToJSON(getAppEntitlementProxyResponse) {
    return JSON.stringify(GetAppEntitlementProxyResponse$outboundSchema.parse(getAppEntitlementProxyResponse));
}
export function getAppEntitlementProxyResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => GetAppEntitlementProxyResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetAppEntitlementProxyResponse' from JSON`);
}
