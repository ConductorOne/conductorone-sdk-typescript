/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { PersonalClient$inboundSchema, PersonalClient$outboundSchema, } from "./personalclient.js";
/** @internal */
export const PersonalClientSearchServiceSearchResponse$inboundSchema = z.object({
    list: z.nullable(z.array(PersonalClient$inboundSchema)).optional(),
    nextPageToken: z.nullable(z.string()).optional(),
});
/** @internal */
export const PersonalClientSearchServiceSearchResponse$outboundSchema = z.object({
    list: z.nullable(z.array(PersonalClient$outboundSchema)).optional(),
    nextPageToken: z.nullable(z.string()).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var PersonalClientSearchServiceSearchResponse$;
(function (PersonalClientSearchServiceSearchResponse$) {
    /** @deprecated use `PersonalClientSearchServiceSearchResponse$inboundSchema` instead. */
    PersonalClientSearchServiceSearchResponse$.inboundSchema = PersonalClientSearchServiceSearchResponse$inboundSchema;
    /** @deprecated use `PersonalClientSearchServiceSearchResponse$outboundSchema` instead. */
    PersonalClientSearchServiceSearchResponse$.outboundSchema = PersonalClientSearchServiceSearchResponse$outboundSchema;
})(PersonalClientSearchServiceSearchResponse$ || (PersonalClientSearchServiceSearchResponse$ = {}));
export function personalClientSearchServiceSearchResponseToJSON(personalClientSearchServiceSearchResponse) {
    return JSON.stringify(PersonalClientSearchServiceSearchResponse$outboundSchema.parse(personalClientSearchServiceSearchResponse));
}
export function personalClientSearchServiceSearchResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => PersonalClientSearchServiceSearchResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'PersonalClientSearchServiceSearchResponse' from JSON`);
}
