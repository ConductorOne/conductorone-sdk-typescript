/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";
import {
  collectExtraKeys as collectExtraKeys$,
  safeParse,
} from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  TaskView,
  TaskView$inboundSchema,
  TaskView$Outbound,
  TaskView$outboundSchema,
} from "./taskview.js";

/**
 * Contains an arbitrary serialized message along with a @type that describes the type of the serialized message.
 */
export type PayloadPolicyApprovalStepExpanded = {
  /**
   * The type of the serialized message.
   */
  atType?: string | undefined;
  additionalProperties?: { [k: string]: any };
};

/**
 * The PayloadPolicyApprovalStep message.
 */
export type PayloadPolicyApprovalStep = {
  /**
   * List of serialized related objects.
   */
  expanded?: Array<PayloadPolicyApprovalStepExpanded> | null | undefined;
  taskView?: TaskView | null | undefined;
};

/** @internal */
export const PayloadPolicyApprovalStepExpanded$inboundSchema: z.ZodType<
  PayloadPolicyApprovalStepExpanded,
  z.ZodTypeDef,
  unknown
> = collectExtraKeys$(
  z.object({
    "@type": z.string().optional(),
  }).catchall(z.any()),
  "additionalProperties",
  true,
).transform((v) => {
  return remap$(v, {
    "@type": "atType",
  });
});

/** @internal */
export type PayloadPolicyApprovalStepExpanded$Outbound = {
  "@type"?: string | undefined;
  [additionalProperties: string]: unknown;
};

/** @internal */
export const PayloadPolicyApprovalStepExpanded$outboundSchema: z.ZodType<
  PayloadPolicyApprovalStepExpanded$Outbound,
  z.ZodTypeDef,
  PayloadPolicyApprovalStepExpanded
> = z.object({
  atType: z.string().optional(),
  additionalProperties: z.record(z.any()),
}).transform((v) => {
  return {
    ...v.additionalProperties,
    ...remap$(v, {
      atType: "@type",
      additionalProperties: null,
    }),
  };
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PayloadPolicyApprovalStepExpanded$ {
  /** @deprecated use `PayloadPolicyApprovalStepExpanded$inboundSchema` instead. */
  export const inboundSchema = PayloadPolicyApprovalStepExpanded$inboundSchema;
  /** @deprecated use `PayloadPolicyApprovalStepExpanded$outboundSchema` instead. */
  export const outboundSchema =
    PayloadPolicyApprovalStepExpanded$outboundSchema;
  /** @deprecated use `PayloadPolicyApprovalStepExpanded$Outbound` instead. */
  export type Outbound = PayloadPolicyApprovalStepExpanded$Outbound;
}

export function payloadPolicyApprovalStepExpandedToJSON(
  payloadPolicyApprovalStepExpanded: PayloadPolicyApprovalStepExpanded,
): string {
  return JSON.stringify(
    PayloadPolicyApprovalStepExpanded$outboundSchema.parse(
      payloadPolicyApprovalStepExpanded,
    ),
  );
}

export function payloadPolicyApprovalStepExpandedFromJSON(
  jsonString: string,
): SafeParseResult<PayloadPolicyApprovalStepExpanded, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PayloadPolicyApprovalStepExpanded$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PayloadPolicyApprovalStepExpanded' from JSON`,
  );
}

/** @internal */
export const PayloadPolicyApprovalStep$inboundSchema: z.ZodType<
  PayloadPolicyApprovalStep,
  z.ZodTypeDef,
  unknown
> = z.object({
  expanded: z.nullable(
    z.array(z.lazy(() => PayloadPolicyApprovalStepExpanded$inboundSchema)),
  ).optional(),
  taskView: z.nullable(TaskView$inboundSchema).optional(),
});

/** @internal */
export type PayloadPolicyApprovalStep$Outbound = {
  expanded?:
    | Array<PayloadPolicyApprovalStepExpanded$Outbound>
    | null
    | undefined;
  taskView?: TaskView$Outbound | null | undefined;
};

/** @internal */
export const PayloadPolicyApprovalStep$outboundSchema: z.ZodType<
  PayloadPolicyApprovalStep$Outbound,
  z.ZodTypeDef,
  PayloadPolicyApprovalStep
> = z.object({
  expanded: z.nullable(
    z.array(z.lazy(() => PayloadPolicyApprovalStepExpanded$outboundSchema)),
  ).optional(),
  taskView: z.nullable(TaskView$outboundSchema).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PayloadPolicyApprovalStep$ {
  /** @deprecated use `PayloadPolicyApprovalStep$inboundSchema` instead. */
  export const inboundSchema = PayloadPolicyApprovalStep$inboundSchema;
  /** @deprecated use `PayloadPolicyApprovalStep$outboundSchema` instead. */
  export const outboundSchema = PayloadPolicyApprovalStep$outboundSchema;
  /** @deprecated use `PayloadPolicyApprovalStep$Outbound` instead. */
  export type Outbound = PayloadPolicyApprovalStep$Outbound;
}

export function payloadPolicyApprovalStepToJSON(
  payloadPolicyApprovalStep: PayloadPolicyApprovalStep,
): string {
  return JSON.stringify(
    PayloadPolicyApprovalStep$outboundSchema.parse(payloadPolicyApprovalStep),
  );
}

export function payloadPolicyApprovalStepFromJSON(
  jsonString: string,
): SafeParseResult<PayloadPolicyApprovalStep, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PayloadPolicyApprovalStep$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PayloadPolicyApprovalStep' from JSON`,
  );
}
