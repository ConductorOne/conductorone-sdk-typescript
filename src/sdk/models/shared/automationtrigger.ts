/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { remap as remap$ } from "../../../lib/primitives.js";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  AppUserCreatedTrigger,
  AppUserCreatedTrigger$inboundSchema,
  AppUserCreatedTrigger$Outbound,
  AppUserCreatedTrigger$outboundSchema,
} from "./appusercreatedtrigger.js";
import {
  AppUserUpdatedTrigger,
  AppUserUpdatedTrigger$inboundSchema,
  AppUserUpdatedTrigger$Outbound,
  AppUserUpdatedTrigger$outboundSchema,
} from "./appuserupdatedtrigger.js";
import {
  FormTrigger,
  FormTrigger$inboundSchema,
  FormTrigger$Outbound,
  FormTrigger$outboundSchema,
} from "./formtrigger.js";
import {
  GrantDeletedTrigger,
  GrantDeletedTrigger$inboundSchema,
  GrantDeletedTrigger$Outbound,
  GrantDeletedTrigger$outboundSchema,
} from "./grantdeletedtrigger.js";
import {
  GrantFoundTrigger,
  GrantFoundTrigger$inboundSchema,
  GrantFoundTrigger$Outbound,
  GrantFoundTrigger$outboundSchema,
} from "./grantfoundtrigger.js";
import {
  ManualAutomationTrigger,
  ManualAutomationTrigger$inboundSchema,
  ManualAutomationTrigger$Outbound,
  ManualAutomationTrigger$outboundSchema,
} from "./manualautomationtrigger.js";
import {
  ScheduleTrigger,
  ScheduleTrigger$inboundSchema,
  ScheduleTrigger$Outbound,
  ScheduleTrigger$outboundSchema,
} from "./scheduletrigger.js";
import {
  ScheduleTriggerAppUser,
  ScheduleTriggerAppUser$inboundSchema,
  ScheduleTriggerAppUser$Outbound,
  ScheduleTriggerAppUser$outboundSchema,
} from "./scheduletriggerappuser.js";
import {
  UsageBasedRevocationTrigger,
  UsageBasedRevocationTrigger$inboundSchema,
  UsageBasedRevocationTrigger$Outbound,
  UsageBasedRevocationTrigger$outboundSchema,
} from "./usagebasedrevocationtrigger.js";
import {
  UserCreatedTrigger,
  UserCreatedTrigger$inboundSchema,
  UserCreatedTrigger$Outbound,
  UserCreatedTrigger$outboundSchema,
} from "./usercreatedtrigger.js";
import {
  UserProfileChangeTrigger,
  UserProfileChangeTrigger$inboundSchema,
  UserProfileChangeTrigger$Outbound,
  UserProfileChangeTrigger$outboundSchema,
} from "./userprofilechangetrigger.js";
import {
  WebhookAutomationTrigger,
  WebhookAutomationTrigger$inboundSchema,
  WebhookAutomationTrigger$Outbound,
  WebhookAutomationTrigger$outboundSchema,
} from "./webhookautomationtrigger.js";

/**
 * Automation Triggers
 *
 * @remarks
 *
 * This message contains a oneof named kind. Only a single field of the following list may be set at a time:
 *   - manual
 *   - userProfileChange
 *   - appUserCreated
 *   - appUserUpdated
 *   - usageBasedRevocation
 *   - userCreated
 *   - grantFound
 *   - grantDeleted
 *   - webhook
 *   - schedule
 *   - form
 *   - scheduleAppUser
 */
export type AutomationTrigger = {
  appUserCreated?: AppUserCreatedTrigger | null | undefined;
  appUserUpdated?: AppUserUpdatedTrigger | null | undefined;
  form?: FormTrigger | null | undefined;
  grantDeleted?: GrantDeletedTrigger | null | undefined;
  grantFound?: GrantFoundTrigger | null | undefined;
  manual?: ManualAutomationTrigger | null | undefined;
  schedule?: ScheduleTrigger | null | undefined;
  /**
   * The ScheduleTriggerAppUser message.
   */
  scheduleTriggerAppUser?: ScheduleTriggerAppUser | null | undefined;
  usageBasedRevocation?: UsageBasedRevocationTrigger | null | undefined;
  userCreated?: UserCreatedTrigger | null | undefined;
  userProfileChange?: UserProfileChangeTrigger | null | undefined;
  webhook?: WebhookAutomationTrigger | null | undefined;
};

/** @internal */
export const AutomationTrigger$inboundSchema: z.ZodType<
  AutomationTrigger,
  z.ZodTypeDef,
  unknown
> = z.object({
  appUserCreated: z.nullable(AppUserCreatedTrigger$inboundSchema).optional(),
  appUserUpdated: z.nullable(AppUserUpdatedTrigger$inboundSchema).optional(),
  form: z.nullable(FormTrigger$inboundSchema).optional(),
  grantDeleted: z.nullable(GrantDeletedTrigger$inboundSchema).optional(),
  grantFound: z.nullable(GrantFoundTrigger$inboundSchema).optional(),
  manual: z.nullable(ManualAutomationTrigger$inboundSchema).optional(),
  schedule: z.nullable(ScheduleTrigger$inboundSchema).optional(),
  scheduleAppUser: z.nullable(ScheduleTriggerAppUser$inboundSchema).optional(),
  usageBasedRevocation: z.nullable(UsageBasedRevocationTrigger$inboundSchema)
    .optional(),
  userCreated: z.nullable(UserCreatedTrigger$inboundSchema).optional(),
  userProfileChange: z.nullable(UserProfileChangeTrigger$inboundSchema)
    .optional(),
  webhook: z.nullable(WebhookAutomationTrigger$inboundSchema).optional(),
}).transform((v) => {
  return remap$(v, {
    "scheduleAppUser": "scheduleTriggerAppUser",
  });
});

/** @internal */
export type AutomationTrigger$Outbound = {
  appUserCreated?: AppUserCreatedTrigger$Outbound | null | undefined;
  appUserUpdated?: AppUserUpdatedTrigger$Outbound | null | undefined;
  form?: FormTrigger$Outbound | null | undefined;
  grantDeleted?: GrantDeletedTrigger$Outbound | null | undefined;
  grantFound?: GrantFoundTrigger$Outbound | null | undefined;
  manual?: ManualAutomationTrigger$Outbound | null | undefined;
  schedule?: ScheduleTrigger$Outbound | null | undefined;
  scheduleAppUser?: ScheduleTriggerAppUser$Outbound | null | undefined;
  usageBasedRevocation?:
    | UsageBasedRevocationTrigger$Outbound
    | null
    | undefined;
  userCreated?: UserCreatedTrigger$Outbound | null | undefined;
  userProfileChange?: UserProfileChangeTrigger$Outbound | null | undefined;
  webhook?: WebhookAutomationTrigger$Outbound | null | undefined;
};

/** @internal */
export const AutomationTrigger$outboundSchema: z.ZodType<
  AutomationTrigger$Outbound,
  z.ZodTypeDef,
  AutomationTrigger
> = z.object({
  appUserCreated: z.nullable(AppUserCreatedTrigger$outboundSchema).optional(),
  appUserUpdated: z.nullable(AppUserUpdatedTrigger$outboundSchema).optional(),
  form: z.nullable(FormTrigger$outboundSchema).optional(),
  grantDeleted: z.nullable(GrantDeletedTrigger$outboundSchema).optional(),
  grantFound: z.nullable(GrantFoundTrigger$outboundSchema).optional(),
  manual: z.nullable(ManualAutomationTrigger$outboundSchema).optional(),
  schedule: z.nullable(ScheduleTrigger$outboundSchema).optional(),
  scheduleTriggerAppUser: z.nullable(ScheduleTriggerAppUser$outboundSchema)
    .optional(),
  usageBasedRevocation: z.nullable(UsageBasedRevocationTrigger$outboundSchema)
    .optional(),
  userCreated: z.nullable(UserCreatedTrigger$outboundSchema).optional(),
  userProfileChange: z.nullable(UserProfileChangeTrigger$outboundSchema)
    .optional(),
  webhook: z.nullable(WebhookAutomationTrigger$outboundSchema).optional(),
}).transform((v) => {
  return remap$(v, {
    scheduleTriggerAppUser: "scheduleAppUser",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AutomationTrigger$ {
  /** @deprecated use `AutomationTrigger$inboundSchema` instead. */
  export const inboundSchema = AutomationTrigger$inboundSchema;
  /** @deprecated use `AutomationTrigger$outboundSchema` instead. */
  export const outboundSchema = AutomationTrigger$outboundSchema;
  /** @deprecated use `AutomationTrigger$Outbound` instead. */
  export type Outbound = AutomationTrigger$Outbound;
}

export function automationTriggerToJSON(
  automationTrigger: AutomationTrigger,
): string {
  return JSON.stringify(
    AutomationTrigger$outboundSchema.parse(automationTrigger),
  );
}

export function automationTriggerFromJSON(
  jsonString: string,
): SafeParseResult<AutomationTrigger, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => AutomationTrigger$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'AutomationTrigger' from JSON`,
  );
}
