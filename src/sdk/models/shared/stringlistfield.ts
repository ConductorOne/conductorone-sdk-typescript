/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  StringRules,
  StringRules$inboundSchema,
  StringRules$Outbound,
  StringRules$outboundSchema,
} from "./stringrules.js";

/**
 * The StringListField message.
 */
export type StringListField = {
  valueValidator?: StringRules | null | undefined;
};

/** @internal */
export const StringListField$inboundSchema: z.ZodType<
  StringListField,
  z.ZodTypeDef,
  unknown
> = z.object({
  valueValidator: z.nullable(StringRules$inboundSchema).optional(),
});

/** @internal */
export type StringListField$Outbound = {
  valueValidator?: StringRules$Outbound | null | undefined;
};

/** @internal */
export const StringListField$outboundSchema: z.ZodType<
  StringListField$Outbound,
  z.ZodTypeDef,
  StringListField
> = z.object({
  valueValidator: z.nullable(StringRules$outboundSchema).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace StringListField$ {
  /** @deprecated use `StringListField$inboundSchema` instead. */
  export const inboundSchema = StringListField$inboundSchema;
  /** @deprecated use `StringListField$outboundSchema` instead. */
  export const outboundSchema = StringListField$outboundSchema;
  /** @deprecated use `StringListField$Outbound` instead. */
  export type Outbound = StringListField$Outbound;
}

export function stringListFieldToJSON(
  stringListField: StringListField,
): string {
  return JSON.stringify(StringListField$outboundSchema.parse(stringListField));
}

export function stringListFieldFromJSON(
  jsonString: string,
): SafeParseResult<StringListField, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => StringListField$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'StringListField' from JSON`,
  );
}
