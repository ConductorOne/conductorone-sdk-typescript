/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { AttributeValue$inboundSchema, AttributeValue$outboundSchema, } from "./attributevalue.js";
/** @internal */
export const ListAttributeValuesResponse$inboundSchema = z.object({
    list: z.nullable(z.array(AttributeValue$inboundSchema)).optional(),
    nextPageToken: z.nullable(z.string()).optional(),
});
/** @internal */
export const ListAttributeValuesResponse$outboundSchema = z.object({
    list: z.nullable(z.array(AttributeValue$outboundSchema)).optional(),
    nextPageToken: z.nullable(z.string()).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ListAttributeValuesResponse$;
(function (ListAttributeValuesResponse$) {
    /** @deprecated use `ListAttributeValuesResponse$inboundSchema` instead. */
    ListAttributeValuesResponse$.inboundSchema = ListAttributeValuesResponse$inboundSchema;
    /** @deprecated use `ListAttributeValuesResponse$outboundSchema` instead. */
    ListAttributeValuesResponse$.outboundSchema = ListAttributeValuesResponse$outboundSchema;
})(ListAttributeValuesResponse$ || (ListAttributeValuesResponse$ = {}));
export function listAttributeValuesResponseToJSON(listAttributeValuesResponse) {
    return JSON.stringify(ListAttributeValuesResponse$outboundSchema.parse(listAttributeValuesResponse));
}
export function listAttributeValuesResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => ListAttributeValuesResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ListAttributeValuesResponse' from JSON`);
}
