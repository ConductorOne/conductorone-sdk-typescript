/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
/** @internal */
export const PersonalClientServiceDeleteRequest$inboundSchema = z.object({});
/** @internal */
export const PersonalClientServiceDeleteRequest$outboundSchema = z.object({});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var PersonalClientServiceDeleteRequest$;
(function (PersonalClientServiceDeleteRequest$) {
    /** @deprecated use `PersonalClientServiceDeleteRequest$inboundSchema` instead. */
    PersonalClientServiceDeleteRequest$.inboundSchema = PersonalClientServiceDeleteRequest$inboundSchema;
    /** @deprecated use `PersonalClientServiceDeleteRequest$outboundSchema` instead. */
    PersonalClientServiceDeleteRequest$.outboundSchema = PersonalClientServiceDeleteRequest$outboundSchema;
})(PersonalClientServiceDeleteRequest$ || (PersonalClientServiceDeleteRequest$ = {}));
export function personalClientServiceDeleteRequestToJSON(personalClientServiceDeleteRequest) {
    return JSON.stringify(PersonalClientServiceDeleteRequest$outboundSchema.parse(personalClientServiceDeleteRequest));
}
export function personalClientServiceDeleteRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => PersonalClientServiceDeleteRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'PersonalClientServiceDeleteRequest' from JSON`);
}
