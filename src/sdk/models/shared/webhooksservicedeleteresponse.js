/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
/** @internal */
export const WebhooksServiceDeleteResponse$inboundSchema = z.object({});
/** @internal */
export const WebhooksServiceDeleteResponse$outboundSchema = z.object({});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var WebhooksServiceDeleteResponse$;
(function (WebhooksServiceDeleteResponse$) {
    /** @deprecated use `WebhooksServiceDeleteResponse$inboundSchema` instead. */
    WebhooksServiceDeleteResponse$.inboundSchema = WebhooksServiceDeleteResponse$inboundSchema;
    /** @deprecated use `WebhooksServiceDeleteResponse$outboundSchema` instead. */
    WebhooksServiceDeleteResponse$.outboundSchema = WebhooksServiceDeleteResponse$outboundSchema;
})(WebhooksServiceDeleteResponse$ || (WebhooksServiceDeleteResponse$ = {}));
export function webhooksServiceDeleteResponseToJSON(webhooksServiceDeleteResponse) {
    return JSON.stringify(WebhooksServiceDeleteResponse$outboundSchema.parse(webhooksServiceDeleteResponse));
}
export function webhooksServiceDeleteResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => WebhooksServiceDeleteResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'WebhooksServiceDeleteResponse' from JSON`);
}
