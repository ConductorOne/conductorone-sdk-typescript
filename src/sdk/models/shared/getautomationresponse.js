/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Automation$inboundSchema, Automation$outboundSchema, } from "./automation.js";
/** @internal */
export const GetAutomationResponse$inboundSchema = z.object({
    automation: z.nullable(Automation$inboundSchema).optional(),
});
/** @internal */
export const GetAutomationResponse$outboundSchema = z.object({
    automation: z.nullable(Automation$outboundSchema).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetAutomationResponse$;
(function (GetAutomationResponse$) {
    /** @deprecated use `GetAutomationResponse$inboundSchema` instead. */
    GetAutomationResponse$.inboundSchema = GetAutomationResponse$inboundSchema;
    /** @deprecated use `GetAutomationResponse$outboundSchema` instead. */
    GetAutomationResponse$.outboundSchema = GetAutomationResponse$outboundSchema;
})(GetAutomationResponse$ || (GetAutomationResponse$ = {}));
export function getAutomationResponseToJSON(getAutomationResponse) {
    return JSON.stringify(GetAutomationResponse$outboundSchema.parse(getAutomationResponse));
}
export function getAutomationResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => GetAutomationResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetAutomationResponse' from JSON`);
}
