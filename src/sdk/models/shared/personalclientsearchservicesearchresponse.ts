/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  PersonalClient,
  PersonalClient$inboundSchema,
  PersonalClient$Outbound,
  PersonalClient$outboundSchema,
} from "./personalclient.js";

/**
 * The PersonalClientSearchServiceSearchResponse message.
 */
export type PersonalClientSearchServiceSearchResponse = {
  /**
   * The list field.
   */
  list?: Array<PersonalClient> | null | undefined;
  /**
   * The nextPageToken field.
   */
  nextPageToken?: string | null | undefined;
};

/** @internal */
export const PersonalClientSearchServiceSearchResponse$inboundSchema: z.ZodType<
  PersonalClientSearchServiceSearchResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  list: z.nullable(z.array(PersonalClient$inboundSchema)).optional(),
  nextPageToken: z.nullable(z.string()).optional(),
});

/** @internal */
export type PersonalClientSearchServiceSearchResponse$Outbound = {
  list?: Array<PersonalClient$Outbound> | null | undefined;
  nextPageToken?: string | null | undefined;
};

/** @internal */
export const PersonalClientSearchServiceSearchResponse$outboundSchema:
  z.ZodType<
    PersonalClientSearchServiceSearchResponse$Outbound,
    z.ZodTypeDef,
    PersonalClientSearchServiceSearchResponse
  > = z.object({
    list: z.nullable(z.array(PersonalClient$outboundSchema)).optional(),
    nextPageToken: z.nullable(z.string()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PersonalClientSearchServiceSearchResponse$ {
  /** @deprecated use `PersonalClientSearchServiceSearchResponse$inboundSchema` instead. */
  export const inboundSchema =
    PersonalClientSearchServiceSearchResponse$inboundSchema;
  /** @deprecated use `PersonalClientSearchServiceSearchResponse$outboundSchema` instead. */
  export const outboundSchema =
    PersonalClientSearchServiceSearchResponse$outboundSchema;
  /** @deprecated use `PersonalClientSearchServiceSearchResponse$Outbound` instead. */
  export type Outbound = PersonalClientSearchServiceSearchResponse$Outbound;
}

export function personalClientSearchServiceSearchResponseToJSON(
  personalClientSearchServiceSearchResponse:
    PersonalClientSearchServiceSearchResponse,
): string {
  return JSON.stringify(
    PersonalClientSearchServiceSearchResponse$outboundSchema.parse(
      personalClientSearchServiceSearchResponse,
    ),
  );
}

export function personalClientSearchServiceSearchResponseFromJSON(
  jsonString: string,
): SafeParseResult<
  PersonalClientSearchServiceSearchResponse,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PersonalClientSearchServiceSearchResponse$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PersonalClientSearchServiceSearchResponse' from JSON`,
  );
}
