/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { CallFunction$inboundSchema, CallFunction$outboundSchema, } from "./callfunction.js";
import { ConnectorAction$inboundSchema, ConnectorAction$outboundSchema, } from "./connectoraction.js";
import { ConnectorCreateAccount$inboundSchema, ConnectorCreateAccount$outboundSchema, } from "./connectorcreateaccount.js";
import { CreateAccessReview$inboundSchema, CreateAccessReview$outboundSchema, } from "./createaccessreview.js";
import { CreateRevokeTasks$inboundSchema, CreateRevokeTasks$outboundSchema, } from "./createrevoketasks.js";
import { GrantEntitlements$inboundSchema, GrantEntitlements$outboundSchema, } from "./grantentitlements.js";
import { RemoveFromDelegation$inboundSchema, RemoveFromDelegation$outboundSchema, } from "./removefromdelegation.js";
import { RunAutomation$inboundSchema, RunAutomation$outboundSchema, } from "./runautomation.js";
import { SendEmail$inboundSchema, SendEmail$outboundSchema, } from "./sendemail.js";
import { SendSlackMessage$inboundSchema, SendSlackMessage$outboundSchema, } from "./sendslackmessage.js";
import { TaskAction$inboundSchema, TaskAction$outboundSchema, } from "./taskaction.js";
import { UnenrollFromAllAccessProfiles$inboundSchema, UnenrollFromAllAccessProfiles$outboundSchema, } from "./unenrollfromallaccessprofiles.js";
import { UpdateUser$inboundSchema, UpdateUser$outboundSchema, } from "./updateuser.js";
import { WaitForDuration$inboundSchema, WaitForDuration$outboundSchema, } from "./waitforduration.js";
import { Webhook$inboundSchema, Webhook$outboundSchema, } from "./webhook.js";
/** @internal */
export const AutomationStep$inboundSchema = z.object({
    callFunction: z.nullable(CallFunction$inboundSchema).optional(),
    connectorAction: z.nullable(ConnectorAction$inboundSchema).optional(),
    connectorCreateAccount: z.nullable(ConnectorCreateAccount$inboundSchema)
        .optional(),
    createAccessReview: z.nullable(CreateAccessReview$inboundSchema).optional(),
    createRevokeTasks: z.nullable(CreateRevokeTasks$inboundSchema).optional(),
    grantEntitlements: z.nullable(GrantEntitlements$inboundSchema).optional(),
    removeFromDelegation: z.nullable(RemoveFromDelegation$inboundSchema)
        .optional(),
    runAutomation: z.nullable(RunAutomation$inboundSchema).optional(),
    sendEmail: z.nullable(SendEmail$inboundSchema).optional(),
    sendSlackMessage: z.nullable(SendSlackMessage$inboundSchema).optional(),
    skipIfTrueCel: z.nullable(z.string()).optional(),
    stepDisplayName: z.nullable(z.string()).optional(),
    stepName: z.nullable(z.string()).optional(),
    taskAction: z.nullable(TaskAction$inboundSchema).optional(),
    unenrollFromAllAccessProfiles: z.nullable(UnenrollFromAllAccessProfiles$inboundSchema).optional(),
    updateUser: z.nullable(UpdateUser$inboundSchema).optional(),
    waitForDuration: z.nullable(WaitForDuration$inboundSchema).optional(),
    webhook: z.nullable(Webhook$inboundSchema).optional(),
});
/** @internal */
export const AutomationStep$outboundSchema = z.object({
    callFunction: z.nullable(CallFunction$outboundSchema).optional(),
    connectorAction: z.nullable(ConnectorAction$outboundSchema).optional(),
    connectorCreateAccount: z.nullable(ConnectorCreateAccount$outboundSchema)
        .optional(),
    createAccessReview: z.nullable(CreateAccessReview$outboundSchema).optional(),
    createRevokeTasks: z.nullable(CreateRevokeTasks$outboundSchema).optional(),
    grantEntitlements: z.nullable(GrantEntitlements$outboundSchema).optional(),
    removeFromDelegation: z.nullable(RemoveFromDelegation$outboundSchema)
        .optional(),
    runAutomation: z.nullable(RunAutomation$outboundSchema).optional(),
    sendEmail: z.nullable(SendEmail$outboundSchema).optional(),
    sendSlackMessage: z.nullable(SendSlackMessage$outboundSchema).optional(),
    skipIfTrueCel: z.nullable(z.string()).optional(),
    stepDisplayName: z.nullable(z.string()).optional(),
    stepName: z.nullable(z.string()).optional(),
    taskAction: z.nullable(TaskAction$outboundSchema).optional(),
    unenrollFromAllAccessProfiles: z.nullable(UnenrollFromAllAccessProfiles$outboundSchema).optional(),
    updateUser: z.nullable(UpdateUser$outboundSchema).optional(),
    waitForDuration: z.nullable(WaitForDuration$outboundSchema).optional(),
    webhook: z.nullable(Webhook$outboundSchema).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var AutomationStep$;
(function (AutomationStep$) {
    /** @deprecated use `AutomationStep$inboundSchema` instead. */
    AutomationStep$.inboundSchema = AutomationStep$inboundSchema;
    /** @deprecated use `AutomationStep$outboundSchema` instead. */
    AutomationStep$.outboundSchema = AutomationStep$outboundSchema;
})(AutomationStep$ || (AutomationStep$ = {}));
export function automationStepToJSON(automationStep) {
    return JSON.stringify(AutomationStep$outboundSchema.parse(automationStep));
}
export function automationStepFromJSON(jsonString) {
    return safeParse(jsonString, (x) => AutomationStep$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'AutomationStep' from JSON`);
}
