/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
/** @internal */
export const UpdateGrantDurationRequest$inboundSchema = z.object({
    newDeprovisionAt: z.nullable(z.string().datetime({ offset: true }).transform(v => new Date(v))).optional(),
});
/** @internal */
export const UpdateGrantDurationRequest$outboundSchema = z.object({
    newDeprovisionAt: z.nullable(z.date().transform(v => v.toISOString()))
        .optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var UpdateGrantDurationRequest$;
(function (UpdateGrantDurationRequest$) {
    /** @deprecated use `UpdateGrantDurationRequest$inboundSchema` instead. */
    UpdateGrantDurationRequest$.inboundSchema = UpdateGrantDurationRequest$inboundSchema;
    /** @deprecated use `UpdateGrantDurationRequest$outboundSchema` instead. */
    UpdateGrantDurationRequest$.outboundSchema = UpdateGrantDurationRequest$outboundSchema;
})(UpdateGrantDurationRequest$ || (UpdateGrantDurationRequest$ = {}));
export function updateGrantDurationRequestToJSON(updateGrantDurationRequest) {
    return JSON.stringify(UpdateGrantDurationRequest$outboundSchema.parse(updateGrantDurationRequest));
}
export function updateGrantDurationRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => UpdateGrantDurationRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'UpdateGrantDurationRequest' from JSON`);
}
