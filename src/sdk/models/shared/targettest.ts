/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * Target for testing a provider
 */
export type TargetTest = {};

/** @internal */
export const TargetTest$inboundSchema: z.ZodType<
  TargetTest,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type TargetTest$Outbound = {};

/** @internal */
export const TargetTest$outboundSchema: z.ZodType<
  TargetTest$Outbound,
  z.ZodTypeDef,
  TargetTest
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TargetTest$ {
  /** @deprecated use `TargetTest$inboundSchema` instead. */
  export const inboundSchema = TargetTest$inboundSchema;
  /** @deprecated use `TargetTest$outboundSchema` instead. */
  export const outboundSchema = TargetTest$outboundSchema;
  /** @deprecated use `TargetTest$Outbound` instead. */
  export type Outbound = TargetTest$Outbound;
}

export function targetTestToJSON(targetTest: TargetTest): string {
  return JSON.stringify(TargetTest$outboundSchema.parse(targetTest));
}

export function targetTestFromJSON(
  jsonString: string,
): SafeParseResult<TargetTest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => TargetTest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'TargetTest' from JSON`,
  );
}
