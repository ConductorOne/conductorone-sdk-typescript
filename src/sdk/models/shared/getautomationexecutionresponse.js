/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { AutomationExecution$inboundSchema, AutomationExecution$outboundSchema, } from "./automationexecution.js";
/** @internal */
export const GetAutomationExecutionResponse$inboundSchema = z.object({
    automationExecution: z.nullable(AutomationExecution$inboundSchema).optional(),
});
/** @internal */
export const GetAutomationExecutionResponse$outboundSchema = z.object({
    automationExecution: z.nullable(AutomationExecution$outboundSchema)
        .optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetAutomationExecutionResponse$;
(function (GetAutomationExecutionResponse$) {
    /** @deprecated use `GetAutomationExecutionResponse$inboundSchema` instead. */
    GetAutomationExecutionResponse$.inboundSchema = GetAutomationExecutionResponse$inboundSchema;
    /** @deprecated use `GetAutomationExecutionResponse$outboundSchema` instead. */
    GetAutomationExecutionResponse$.outboundSchema = GetAutomationExecutionResponse$outboundSchema;
})(GetAutomationExecutionResponse$ || (GetAutomationExecutionResponse$ = {}));
export function getAutomationExecutionResponseToJSON(getAutomationExecutionResponse) {
    return JSON.stringify(GetAutomationExecutionResponse$outboundSchema.parse(getAutomationExecutionResponse));
}
export function getAutomationExecutionResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => GetAutomationExecutionResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetAutomationExecutionResponse' from JSON`);
}
