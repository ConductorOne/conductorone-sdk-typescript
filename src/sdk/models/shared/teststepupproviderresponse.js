/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
/** @internal */
export const TestStepUpProviderResponse$inboundSchema = z.object({
    redirectUrl: z.nullable(z.string()).optional(),
});
/** @internal */
export const TestStepUpProviderResponse$outboundSchema = z.object({
    redirectUrl: z.nullable(z.string()).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var TestStepUpProviderResponse$;
(function (TestStepUpProviderResponse$) {
    /** @deprecated use `TestStepUpProviderResponse$inboundSchema` instead. */
    TestStepUpProviderResponse$.inboundSchema = TestStepUpProviderResponse$inboundSchema;
    /** @deprecated use `TestStepUpProviderResponse$outboundSchema` instead. */
    TestStepUpProviderResponse$.outboundSchema = TestStepUpProviderResponse$outboundSchema;
})(TestStepUpProviderResponse$ || (TestStepUpProviderResponse$ = {}));
export function testStepUpProviderResponseToJSON(testStepUpProviderResponse) {
    return JSON.stringify(TestStepUpProviderResponse$outboundSchema.parse(testStepUpProviderResponse));
}
export function testStepUpProviderResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => TestStepUpProviderResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'TestStepUpProviderResponse' from JSON`);
}
