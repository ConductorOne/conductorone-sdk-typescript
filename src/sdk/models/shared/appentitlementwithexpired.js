/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { AppEntitlementRef$inboundSchema, AppEntitlementRef$outboundSchema, } from "./appentitlementref.js";
import { AppUser$inboundSchema, AppUser$outboundSchema, } from "./appuser.js";
import { GrantReason$inboundSchema, GrantReason$outboundSchema, } from "./grantreason.js";
import { User$inboundSchema, User$outboundSchema, } from "./user.js";
/** @internal */
export const AppEntitlementWithExpired$inboundSchema = z.object({
    appEntitlementId: z.nullable(z.string()).optional(),
    appId: z.nullable(z.string()).optional(),
    appUser: z.nullable(AppUser$inboundSchema).optional(),
    appUserId: z.nullable(z.string()).optional(),
    discovered: z.nullable(z.string().datetime({ offset: true }).transform(v => new Date(v))).optional(),
    expired: z.nullable(z.string().datetime({ offset: true }).transform(v => new Date(v))).optional(),
    grantReasons: z.nullable(z.array(GrantReason$inboundSchema)).optional(),
    grantSources: z.nullable(z.array(AppEntitlementRef$inboundSchema)).optional(),
    user: z.nullable(User$inboundSchema).optional(),
});
/** @internal */
export const AppEntitlementWithExpired$outboundSchema = z.object({
    appEntitlementId: z.nullable(z.string()).optional(),
    appId: z.nullable(z.string()).optional(),
    appUser: z.nullable(AppUser$outboundSchema).optional(),
    appUserId: z.nullable(z.string()).optional(),
    discovered: z.nullable(z.date().transform(v => v.toISOString())).optional(),
    expired: z.nullable(z.date().transform(v => v.toISOString())).optional(),
    grantReasons: z.nullable(z.array(GrantReason$outboundSchema)).optional(),
    grantSources: z.nullable(z.array(AppEntitlementRef$outboundSchema))
        .optional(),
    user: z.nullable(User$outboundSchema).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var AppEntitlementWithExpired$;
(function (AppEntitlementWithExpired$) {
    /** @deprecated use `AppEntitlementWithExpired$inboundSchema` instead. */
    AppEntitlementWithExpired$.inboundSchema = AppEntitlementWithExpired$inboundSchema;
    /** @deprecated use `AppEntitlementWithExpired$outboundSchema` instead. */
    AppEntitlementWithExpired$.outboundSchema = AppEntitlementWithExpired$outboundSchema;
})(AppEntitlementWithExpired$ || (AppEntitlementWithExpired$ = {}));
export function appEntitlementWithExpiredToJSON(appEntitlementWithExpired) {
    return JSON.stringify(AppEntitlementWithExpired$outboundSchema.parse(appEntitlementWithExpired));
}
export function appEntitlementWithExpiredFromJSON(jsonString) {
    return safeParse(jsonString, (x) => AppEntitlementWithExpired$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'AppEntitlementWithExpired' from JSON`);
}
