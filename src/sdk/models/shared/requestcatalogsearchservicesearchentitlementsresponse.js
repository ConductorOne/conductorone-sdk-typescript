/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";
import { collectExtraKeys as collectExtraKeys$, safeParse, } from "../../../lib/schemas.js";
import { AppEntitlementWithUserBindings$inboundSchema, AppEntitlementWithUserBindings$outboundSchema, } from "./appentitlementwithuserbindings.js";
/** @internal */
export const RequestCatalogSearchServiceSearchEntitlementsResponseExpanded$inboundSchema = collectExtraKeys$(z.object({
    "@type": z.string().optional(),
}).catchall(z.any()), "additionalProperties", true).transform((v) => {
    return remap$(v, {
        "@type": "atType",
    });
});
/** @internal */
export const RequestCatalogSearchServiceSearchEntitlementsResponseExpanded$outboundSchema = z.object({
    atType: z.string().optional(),
    additionalProperties: z.record(z.any()),
}).transform((v) => {
    return {
        ...v.additionalProperties,
        ...remap$(v, {
            atType: "@type",
            additionalProperties: null,
        }),
    };
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RequestCatalogSearchServiceSearchEntitlementsResponseExpanded$;
(function (RequestCatalogSearchServiceSearchEntitlementsResponseExpanded$) {
    /** @deprecated use `RequestCatalogSearchServiceSearchEntitlementsResponseExpanded$inboundSchema` instead. */
    RequestCatalogSearchServiceSearchEntitlementsResponseExpanded$.inboundSchema = RequestCatalogSearchServiceSearchEntitlementsResponseExpanded$inboundSchema;
    /** @deprecated use `RequestCatalogSearchServiceSearchEntitlementsResponseExpanded$outboundSchema` instead. */
    RequestCatalogSearchServiceSearchEntitlementsResponseExpanded$.outboundSchema = RequestCatalogSearchServiceSearchEntitlementsResponseExpanded$outboundSchema;
})(RequestCatalogSearchServiceSearchEntitlementsResponseExpanded$ || (RequestCatalogSearchServiceSearchEntitlementsResponseExpanded$ = {}));
export function requestCatalogSearchServiceSearchEntitlementsResponseExpandedToJSON(requestCatalogSearchServiceSearchEntitlementsResponseExpanded) {
    return JSON.stringify(RequestCatalogSearchServiceSearchEntitlementsResponseExpanded$outboundSchema
        .parse(requestCatalogSearchServiceSearchEntitlementsResponseExpanded));
}
export function requestCatalogSearchServiceSearchEntitlementsResponseExpandedFromJSON(jsonString) {
    return safeParse(jsonString, (x) => RequestCatalogSearchServiceSearchEntitlementsResponseExpanded$inboundSchema
        .parse(JSON.parse(x)), `Failed to parse 'RequestCatalogSearchServiceSearchEntitlementsResponseExpanded' from JSON`);
}
/** @internal */
export const RequestCatalogSearchServiceSearchEntitlementsResponse$inboundSchema = z.object({
    expanded: z.nullable(z.array(z.lazy(() => RequestCatalogSearchServiceSearchEntitlementsResponseExpanded$inboundSchema))).optional(),
    list: z.nullable(z.array(AppEntitlementWithUserBindings$inboundSchema))
        .optional(),
    nextPageToken: z.nullable(z.string()).optional(),
});
/** @internal */
export const RequestCatalogSearchServiceSearchEntitlementsResponse$outboundSchema = z.object({
    expanded: z.nullable(z.array(z.lazy(() => RequestCatalogSearchServiceSearchEntitlementsResponseExpanded$outboundSchema))).optional(),
    list: z.nullable(z.array(AppEntitlementWithUserBindings$outboundSchema))
        .optional(),
    nextPageToken: z.nullable(z.string()).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RequestCatalogSearchServiceSearchEntitlementsResponse$;
(function (RequestCatalogSearchServiceSearchEntitlementsResponse$) {
    /** @deprecated use `RequestCatalogSearchServiceSearchEntitlementsResponse$inboundSchema` instead. */
    RequestCatalogSearchServiceSearchEntitlementsResponse$.inboundSchema = RequestCatalogSearchServiceSearchEntitlementsResponse$inboundSchema;
    /** @deprecated use `RequestCatalogSearchServiceSearchEntitlementsResponse$outboundSchema` instead. */
    RequestCatalogSearchServiceSearchEntitlementsResponse$.outboundSchema = RequestCatalogSearchServiceSearchEntitlementsResponse$outboundSchema;
})(RequestCatalogSearchServiceSearchEntitlementsResponse$ || (RequestCatalogSearchServiceSearchEntitlementsResponse$ = {}));
export function requestCatalogSearchServiceSearchEntitlementsResponseToJSON(requestCatalogSearchServiceSearchEntitlementsResponse) {
    return JSON.stringify(RequestCatalogSearchServiceSearchEntitlementsResponse$outboundSchema.parse(requestCatalogSearchServiceSearchEntitlementsResponse));
}
export function requestCatalogSearchServiceSearchEntitlementsResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => RequestCatalogSearchServiceSearchEntitlementsResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'RequestCatalogSearchServiceSearchEntitlementsResponse' from JSON`);
}
