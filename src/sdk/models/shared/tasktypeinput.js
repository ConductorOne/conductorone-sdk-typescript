/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { TaskTypeCertifyInput$inboundSchema, TaskTypeCertifyInput$outboundSchema, } from "./tasktypecertifyinput.js";
import { TaskTypeGrantInput$inboundSchema, TaskTypeGrantInput$outboundSchema, } from "./tasktypegrantinput.js";
import { TaskTypeOffboardingInput$inboundSchema, TaskTypeOffboardingInput$outboundSchema, } from "./tasktypeoffboardinginput.js";
import { TaskTypeRevokeInput$inboundSchema, TaskTypeRevokeInput$outboundSchema, } from "./tasktyperevokeinput.js";
/** @internal */
export const TaskTypeInput$inboundSchema = z.object({
    certify: z.nullable(TaskTypeCertifyInput$inboundSchema).optional(),
    grant: z.nullable(TaskTypeGrantInput$inboundSchema).optional(),
    offboarding: z.nullable(TaskTypeOffboardingInput$inboundSchema).optional(),
    revoke: z.nullable(TaskTypeRevokeInput$inboundSchema).optional(),
});
/** @internal */
export const TaskTypeInput$outboundSchema = z.object({
    certify: z.nullable(TaskTypeCertifyInput$outboundSchema).optional(),
    grant: z.nullable(TaskTypeGrantInput$outboundSchema).optional(),
    offboarding: z.nullable(TaskTypeOffboardingInput$outboundSchema).optional(),
    revoke: z.nullable(TaskTypeRevokeInput$outboundSchema).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var TaskTypeInput$;
(function (TaskTypeInput$) {
    /** @deprecated use `TaskTypeInput$inboundSchema` instead. */
    TaskTypeInput$.inboundSchema = TaskTypeInput$inboundSchema;
    /** @deprecated use `TaskTypeInput$outboundSchema` instead. */
    TaskTypeInput$.outboundSchema = TaskTypeInput$outboundSchema;
})(TaskTypeInput$ || (TaskTypeInput$ = {}));
export function taskTypeInputToJSON(taskTypeInput) {
    return JSON.stringify(TaskTypeInput$outboundSchema.parse(taskTypeInput));
}
export function taskTypeInputFromJSON(jsonString) {
    return safeParse(jsonString, (x) => TaskTypeInput$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'TaskTypeInput' from JSON`);
}
