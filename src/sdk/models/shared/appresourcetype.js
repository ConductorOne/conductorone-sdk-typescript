/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
/** @internal */
export const AppResourceType$inboundSchema = z.object({
    appId: z.nullable(z.string()).optional(),
    createdAt: z.nullable(z.string().datetime({ offset: true }).transform(v => new Date(v))).optional(),
    deletedAt: z.nullable(z.string().datetime({ offset: true }).transform(v => new Date(v))).optional(),
    displayName: z.nullable(z.string()).optional(),
    id: z.nullable(z.string()).optional(),
    traitIds: z.nullable(z.array(z.string())).optional(),
    updatedAt: z.nullable(z.string().datetime({ offset: true }).transform(v => new Date(v))).optional(),
});
/** @internal */
export const AppResourceType$outboundSchema = z.object({
    appId: z.nullable(z.string()).optional(),
    createdAt: z.nullable(z.date().transform(v => v.toISOString())).optional(),
    deletedAt: z.nullable(z.date().transform(v => v.toISOString())).optional(),
    displayName: z.nullable(z.string()).optional(),
    id: z.nullable(z.string()).optional(),
    traitIds: z.nullable(z.array(z.string())).optional(),
    updatedAt: z.nullable(z.date().transform(v => v.toISOString())).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var AppResourceType$;
(function (AppResourceType$) {
    /** @deprecated use `AppResourceType$inboundSchema` instead. */
    AppResourceType$.inboundSchema = AppResourceType$inboundSchema;
    /** @deprecated use `AppResourceType$outboundSchema` instead. */
    AppResourceType$.outboundSchema = AppResourceType$outboundSchema;
})(AppResourceType$ || (AppResourceType$ = {}));
export function appResourceTypeToJSON(appResourceType) {
    return JSON.stringify(AppResourceType$outboundSchema.parse(appResourceType));
}
export function appResourceTypeFromJSON(jsonString) {
    return safeParse(jsonString, (x) => AppResourceType$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'AppResourceType' from JSON`);
}
