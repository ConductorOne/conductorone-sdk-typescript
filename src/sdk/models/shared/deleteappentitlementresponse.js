/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
/** @internal */
export const DeleteAppEntitlementResponse$inboundSchema = z.object({});
/** @internal */
export const DeleteAppEntitlementResponse$outboundSchema = z.object({});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var DeleteAppEntitlementResponse$;
(function (DeleteAppEntitlementResponse$) {
    /** @deprecated use `DeleteAppEntitlementResponse$inboundSchema` instead. */
    DeleteAppEntitlementResponse$.inboundSchema = DeleteAppEntitlementResponse$inboundSchema;
    /** @deprecated use `DeleteAppEntitlementResponse$outboundSchema` instead. */
    DeleteAppEntitlementResponse$.outboundSchema = DeleteAppEntitlementResponse$outboundSchema;
})(DeleteAppEntitlementResponse$ || (DeleteAppEntitlementResponse$ = {}));
export function deleteAppEntitlementResponseToJSON(deleteAppEntitlementResponse) {
    return JSON.stringify(DeleteAppEntitlementResponse$outboundSchema.parse(deleteAppEntitlementResponse));
}
export function deleteAppEntitlementResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => DeleteAppEntitlementResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'DeleteAppEntitlementResponse' from JSON`);
}
