/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
/** @internal */
export const PasswordField$inboundSchema = z.object({});
/** @internal */
export const PasswordField$outboundSchema = z.object({});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var PasswordField$;
(function (PasswordField$) {
    /** @deprecated use `PasswordField$inboundSchema` instead. */
    PasswordField$.inboundSchema = PasswordField$inboundSchema;
    /** @deprecated use `PasswordField$outboundSchema` instead. */
    PasswordField$.outboundSchema = PasswordField$outboundSchema;
})(PasswordField$ || (PasswordField$ = {}));
export function passwordFieldToJSON(passwordField) {
    return JSON.stringify(PasswordField$outboundSchema.parse(passwordField));
}
export function passwordFieldFromJSON(jsonString) {
    return safeParse(jsonString, (x) => PasswordField$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'PasswordField' from JSON`);
}
