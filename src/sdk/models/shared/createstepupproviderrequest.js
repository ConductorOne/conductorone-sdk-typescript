/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { StepUpMicrosoftSettings$inboundSchema, StepUpMicrosoftSettings$outboundSchema, } from "./stepupmicrosoftsettings.js";
import { StepUpOAuth2Settings$inboundSchema, StepUpOAuth2Settings$outboundSchema, } from "./stepupoauth2settings.js";
/** @internal */
export const CreateStepUpProviderRequest$inboundSchema = z.object({
    clientId: z.nullable(z.string()).optional(),
    clientSecret: z.nullable(z.string()).optional(),
    displayName: z.nullable(z.string()).optional(),
    issuerUrl: z.nullable(z.string()).optional(),
    microsoft: z.nullable(StepUpMicrosoftSettings$inboundSchema).optional(),
    oauth2: z.nullable(StepUpOAuth2Settings$inboundSchema).optional(),
});
/** @internal */
export const CreateStepUpProviderRequest$outboundSchema = z.object({
    clientId: z.nullable(z.string()).optional(),
    clientSecret: z.nullable(z.string()).optional(),
    displayName: z.nullable(z.string()).optional(),
    issuerUrl: z.nullable(z.string()).optional(),
    microsoft: z.nullable(StepUpMicrosoftSettings$outboundSchema).optional(),
    oauth2: z.nullable(StepUpOAuth2Settings$outboundSchema).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateStepUpProviderRequest$;
(function (CreateStepUpProviderRequest$) {
    /** @deprecated use `CreateStepUpProviderRequest$inboundSchema` instead. */
    CreateStepUpProviderRequest$.inboundSchema = CreateStepUpProviderRequest$inboundSchema;
    /** @deprecated use `CreateStepUpProviderRequest$outboundSchema` instead. */
    CreateStepUpProviderRequest$.outboundSchema = CreateStepUpProviderRequest$outboundSchema;
})(CreateStepUpProviderRequest$ || (CreateStepUpProviderRequest$ = {}));
export function createStepUpProviderRequestToJSON(createStepUpProviderRequest) {
    return JSON.stringify(CreateStepUpProviderRequest$outboundSchema.parse(createStepUpProviderRequest));
}
export function createStepUpProviderRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CreateStepUpProviderRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CreateStepUpProviderRequest' from JSON`);
}
