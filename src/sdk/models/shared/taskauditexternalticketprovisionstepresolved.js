/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
/** @internal */
export const TaskAuditExternalTicketProvisionStepResolved$inboundSchema = z.object({
    appId: z.nullable(z.string()).optional(),
    connectorId: z.nullable(z.string()).optional(),
    externalTicketId: z.nullable(z.string()).optional(),
    externalTicketProvisionerConfigId: z.nullable(z.string()).optional(),
    externalTicketUrl: z.nullable(z.string()).optional(),
});
/** @internal */
export const TaskAuditExternalTicketProvisionStepResolved$outboundSchema = z.object({
    appId: z.nullable(z.string()).optional(),
    connectorId: z.nullable(z.string()).optional(),
    externalTicketId: z.nullable(z.string()).optional(),
    externalTicketProvisionerConfigId: z.nullable(z.string()).optional(),
    externalTicketUrl: z.nullable(z.string()).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var TaskAuditExternalTicketProvisionStepResolved$;
(function (TaskAuditExternalTicketProvisionStepResolved$) {
    /** @deprecated use `TaskAuditExternalTicketProvisionStepResolved$inboundSchema` instead. */
    TaskAuditExternalTicketProvisionStepResolved$.inboundSchema = TaskAuditExternalTicketProvisionStepResolved$inboundSchema;
    /** @deprecated use `TaskAuditExternalTicketProvisionStepResolved$outboundSchema` instead. */
    TaskAuditExternalTicketProvisionStepResolved$.outboundSchema = TaskAuditExternalTicketProvisionStepResolved$outboundSchema;
})(TaskAuditExternalTicketProvisionStepResolved$ || (TaskAuditExternalTicketProvisionStepResolved$ = {}));
export function taskAuditExternalTicketProvisionStepResolvedToJSON(taskAuditExternalTicketProvisionStepResolved) {
    return JSON.stringify(TaskAuditExternalTicketProvisionStepResolved$outboundSchema.parse(taskAuditExternalTicketProvisionStepResolved));
}
export function taskAuditExternalTicketProvisionStepResolvedFromJSON(jsonString) {
    return safeParse(jsonString, (x) => TaskAuditExternalTicketProvisionStepResolved$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'TaskAuditExternalTicketProvisionStepResolved' from JSON`);
}
