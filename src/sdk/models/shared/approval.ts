/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AppGroupApproval } from "./appgroupapproval";
import { AppGroupApproval1 } from "./appgroupapproval1";
import { AppOwnerApproval } from "./appownerapproval";
import { AppOwnerApproval1 } from "./appownerapproval1";
import { EntitlementOwnerApproval } from "./entitlementownerapproval";
import { EntitlementOwnerApproval1 } from "./entitlementownerapproval1";
import { ManagerApproval } from "./managerapproval";
import { ManagerApproval1 } from "./managerapproval1";
import { SelfApproval } from "./selfapproval";
import { SelfApproval1 } from "./selfapproval1";
import { UserApproval } from "./userapproval";
import { UserApproval1 } from "./userapproval1";
import { Expose, Type } from "class-transformer";

/**
 * The Approval message.
 *
 * @remarks
 *
 * This message contains a oneof named typ. Only a single field of the following list may be set at a time:
 *   - users
 *   - manager
 *   - appOwners
 *   - group
 *   - self
 *   - entitlementOwners
 *
 */
export class Approval extends SpeakeasyBase {
    /**
     *  The AppGroupApproval object provides the configuration for setting a group as the approvers of an approval policy step.
     *
     * @remarks
     *
     */
    @SpeakeasyMetadata()
    @Expose({ name: "group" })
    @Type(() => AppGroupApproval)
    appGroupApproval?: AppGroupApproval;

    /**
     *  App owner approval provides the configuration for an approval step when the app owner is the target.
     *
     * @remarks
     *
     */
    @SpeakeasyMetadata()
    @Expose({ name: "appOwners" })
    @Type(() => AppOwnerApproval)
    appOwnerApproval?: AppOwnerApproval;

    /**
     *  The entitlement owner approval allows configuration of the approval step when the target approvers are the entitlement owners.
     *
     * @remarks
     *
     */
    @SpeakeasyMetadata()
    @Expose({ name: "entitlementOwners" })
    @Type(() => EntitlementOwnerApproval)
    entitlementOwnerApproval?: EntitlementOwnerApproval;

    /**
     *  The manager approval object provides configuration options for approval when the target of the approval is the manager of the user in the task.
     *
     * @remarks
     *
     */
    @SpeakeasyMetadata()
    @Expose({ name: "manager" })
    @Type(() => ManagerApproval)
    managerApproval?: ManagerApproval;

    /**
     *  The self approval object describes the configuration of a policy step that needs to be approved by the target of the request.
     *
     * @remarks
     *
     */
    @SpeakeasyMetadata()
    @Expose({ name: "self" })
    @Type(() => SelfApproval)
    selfApproval?: SelfApproval;

    /**
     *  The user approval object describes the approval configuration of a policy step that needs to be approved by a specific list of users.
     *
     * @remarks
     *
     */
    @SpeakeasyMetadata()
    @Expose({ name: "users" })
    @Type(() => UserApproval)
    userApproval?: UserApproval;

    /**
     *  Configuration to allow reassignment by reviewers during this step.
     *
     * @remarks
     *
     */
    @SpeakeasyMetadata()
    @Expose({ name: "allowReassignment" })
    allowReassignment?: boolean;

    /**
     *  A field indicating whether this step is assigned.
     *
     * @remarks
     *
     */
    @SpeakeasyMetadata()
    @Expose({ name: "assigned" })
    assigned?: boolean;

    /**
     *  Configuration to require a reason when approving this step.
     *
     * @remarks
     *
     */
    @SpeakeasyMetadata()
    @Expose({ name: "requireApprovalReason" })
    requireApprovalReason?: boolean;

    /**
     *  Configuration to require a reason when reassigning this step.
     *
     * @remarks
     *
     */
    @SpeakeasyMetadata()
    @Expose({ name: "requireReassignmentReason" })
    requireReassignmentReason?: boolean;
}

/**
 * The Approval message.
 *
 * @remarks
 *
 * This message contains a oneof named typ. Only a single field of the following list may be set at a time:
 *   - users
 *   - manager
 *   - appOwners
 *   - group
 *   - self
 *   - entitlementOwners
 *
 */
export class ApprovalInput extends SpeakeasyBase {
    /**
     *  The AppGroupApproval object provides the configuration for setting a group as the approvers of an approval policy step.
     *
     * @remarks
     *
     */
    @SpeakeasyMetadata()
    @Expose({ name: "group" })
    @Type(() => AppGroupApproval1)
    appGroupApproval?: AppGroupApproval1;

    /**
     *  App owner approval provides the configuration for an approval step when the app owner is the target.
     *
     * @remarks
     *
     */
    @SpeakeasyMetadata()
    @Expose({ name: "appOwners" })
    @Type(() => AppOwnerApproval1)
    appOwnerApproval?: AppOwnerApproval1;

    /**
     *  The entitlement owner approval allows configuration of the approval step when the target approvers are the entitlement owners.
     *
     * @remarks
     *
     */
    @SpeakeasyMetadata()
    @Expose({ name: "entitlementOwners" })
    @Type(() => EntitlementOwnerApproval1)
    entitlementOwnerApproval?: EntitlementOwnerApproval1;

    /**
     *  The manager approval object provides configuration options for approval when the target of the approval is the manager of the user in the task.
     *
     * @remarks
     *
     */
    @SpeakeasyMetadata()
    @Expose({ name: "manager" })
    @Type(() => ManagerApproval1)
    managerApproval?: ManagerApproval1;

    /**
     *  The self approval object describes the configuration of a policy step that needs to be approved by the target of the request.
     *
     * @remarks
     *
     */
    @SpeakeasyMetadata()
    @Expose({ name: "self" })
    @Type(() => SelfApproval1)
    selfApproval?: SelfApproval1;

    /**
     *  The user approval object describes the approval configuration of a policy step that needs to be approved by a specific list of users.
     *
     * @remarks
     *
     */
    @SpeakeasyMetadata()
    @Expose({ name: "users" })
    @Type(() => UserApproval1)
    userApproval?: UserApproval1;
}
