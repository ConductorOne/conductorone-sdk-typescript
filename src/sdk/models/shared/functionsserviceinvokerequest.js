/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
/** @internal */
export const FunctionsServiceInvokeRequest$inboundSchema = z.object({
    commitId: z.nullable(z.string()).optional(),
    json: z.nullable(z.string()).optional(),
});
/** @internal */
export const FunctionsServiceInvokeRequest$outboundSchema = z.object({
    commitId: z.nullable(z.string()).optional(),
    json: z.nullable(z.string()).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var FunctionsServiceInvokeRequest$;
(function (FunctionsServiceInvokeRequest$) {
    /** @deprecated use `FunctionsServiceInvokeRequest$inboundSchema` instead. */
    FunctionsServiceInvokeRequest$.inboundSchema = FunctionsServiceInvokeRequest$inboundSchema;
    /** @deprecated use `FunctionsServiceInvokeRequest$outboundSchema` instead. */
    FunctionsServiceInvokeRequest$.outboundSchema = FunctionsServiceInvokeRequest$outboundSchema;
})(FunctionsServiceInvokeRequest$ || (FunctionsServiceInvokeRequest$ = {}));
export function functionsServiceInvokeRequestToJSON(functionsServiceInvokeRequest) {
    return JSON.stringify(FunctionsServiceInvokeRequest$outboundSchema.parse(functionsServiceInvokeRequest));
}
export function functionsServiceInvokeRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => FunctionsServiceInvokeRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'FunctionsServiceInvokeRequest' from JSON`);
}
