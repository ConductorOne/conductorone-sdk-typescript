/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * The OAuth2Field message.
 */
export type OAuth2Field = {};

/** @internal */
export const OAuth2Field$inboundSchema: z.ZodType<
  OAuth2Field,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type OAuth2Field$Outbound = {};

/** @internal */
export const OAuth2Field$outboundSchema: z.ZodType<
  OAuth2Field$Outbound,
  z.ZodTypeDef,
  OAuth2Field
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OAuth2Field$ {
  /** @deprecated use `OAuth2Field$inboundSchema` instead. */
  export const inboundSchema = OAuth2Field$inboundSchema;
  /** @deprecated use `OAuth2Field$outboundSchema` instead. */
  export const outboundSchema = OAuth2Field$outboundSchema;
  /** @deprecated use `OAuth2Field$Outbound` instead. */
  export type Outbound = OAuth2Field$Outbound;
}

export function oAuth2FieldToJSON(oAuth2Field: OAuth2Field): string {
  return JSON.stringify(OAuth2Field$outboundSchema.parse(oAuth2Field));
}

export function oAuth2FieldFromJSON(
  jsonString: string,
): SafeParseResult<OAuth2Field, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => OAuth2Field$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'OAuth2Field' from JSON`,
  );
}
