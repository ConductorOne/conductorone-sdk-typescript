/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
/** @internal */
export const WebhookListenerAuthHMAC$inboundSchema = z.object({});
/** @internal */
export const WebhookListenerAuthHMAC$outboundSchema = z.object({});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var WebhookListenerAuthHMAC$;
(function (WebhookListenerAuthHMAC$) {
    /** @deprecated use `WebhookListenerAuthHMAC$inboundSchema` instead. */
    WebhookListenerAuthHMAC$.inboundSchema = WebhookListenerAuthHMAC$inboundSchema;
    /** @deprecated use `WebhookListenerAuthHMAC$outboundSchema` instead. */
    WebhookListenerAuthHMAC$.outboundSchema = WebhookListenerAuthHMAC$outboundSchema;
})(WebhookListenerAuthHMAC$ || (WebhookListenerAuthHMAC$ = {}));
export function webhookListenerAuthHMACToJSON(webhookListenerAuthHMAC) {
    return JSON.stringify(WebhookListenerAuthHMAC$outboundSchema.parse(webhookListenerAuthHMAC));
}
export function webhookListenerAuthHMACFromJSON(jsonString) {
    return safeParse(jsonString, (x) => WebhookListenerAuthHMAC$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'WebhookListenerAuthHMAC' from JSON`);
}
