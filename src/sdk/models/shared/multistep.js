/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { ProvisionPolicy$inboundSchema, ProvisionPolicy$outboundSchema, } from "./provisionpolicy.js";
/** @internal */
export const MultiStep$inboundSchema = z.object({
    provisionSteps: z.nullable(z.array(z.lazy(() => ProvisionPolicy$inboundSchema))).optional(),
});
/** @internal */
export const MultiStep$outboundSchema = z.object({
    provisionSteps: z.nullable(z.array(z.lazy(() => ProvisionPolicy$outboundSchema))).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var MultiStep$;
(function (MultiStep$) {
    /** @deprecated use `MultiStep$inboundSchema` instead. */
    MultiStep$.inboundSchema = MultiStep$inboundSchema;
    /** @deprecated use `MultiStep$outboundSchema` instead. */
    MultiStep$.outboundSchema = MultiStep$outboundSchema;
})(MultiStep$ || (MultiStep$ = {}));
export function multiStepToJSON(multiStep) {
    return JSON.stringify(MultiStep$outboundSchema.parse(multiStep));
}
export function multiStepFromJSON(jsonString) {
    return safeParse(jsonString, (x) => MultiStep$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'MultiStep' from JSON`);
}
