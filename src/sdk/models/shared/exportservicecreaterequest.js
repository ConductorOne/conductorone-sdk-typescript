/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { ExportToDatasource$inboundSchema, ExportToDatasource$outboundSchema, } from "./exporttodatasource.js";
/** @internal */
export const ExportServiceCreateRequest$inboundSchema = z.object({
    datasource: z.nullable(ExportToDatasource$inboundSchema).optional(),
    displayName: z.nullable(z.string()).optional(),
});
/** @internal */
export const ExportServiceCreateRequest$outboundSchema = z.object({
    datasource: z.nullable(ExportToDatasource$outboundSchema).optional(),
    displayName: z.nullable(z.string()).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ExportServiceCreateRequest$;
(function (ExportServiceCreateRequest$) {
    /** @deprecated use `ExportServiceCreateRequest$inboundSchema` instead. */
    ExportServiceCreateRequest$.inboundSchema = ExportServiceCreateRequest$inboundSchema;
    /** @deprecated use `ExportServiceCreateRequest$outboundSchema` instead. */
    ExportServiceCreateRequest$.outboundSchema = ExportServiceCreateRequest$outboundSchema;
})(ExportServiceCreateRequest$ || (ExportServiceCreateRequest$ = {}));
export function exportServiceCreateRequestToJSON(exportServiceCreateRequest) {
    return JSON.stringify(ExportServiceCreateRequest$outboundSchema.parse(exportServiceCreateRequest));
}
export function exportServiceCreateRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => ExportServiceCreateRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ExportServiceCreateRequest' from JSON`);
}
