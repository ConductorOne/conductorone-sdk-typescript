/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { catchUnrecognizedEnum, } from "../../types/enums.js";
import { Approval$inboundSchema, Approval$outboundSchema, } from "./approval.js";
import { ApprovedAction$inboundSchema, ApprovedAction$outboundSchema, } from "./approvedaction.js";
import { DeniedAction$inboundSchema, DeniedAction$outboundSchema, } from "./deniedaction.js";
import { EscalationInstance$inboundSchema, EscalationInstance$outboundSchema, } from "./escalationinstance.js";
import { ReassignedAction$inboundSchema, ReassignedAction$outboundSchema, } from "./reassignedaction.js";
import { ReassignedByErrorAction$inboundSchema, ReassignedByErrorAction$outboundSchema, } from "./reassignedbyerroraction.js";
import { RestartAction$inboundSchema, RestartAction$outboundSchema, } from "./restartaction.js";
import { SkippedAction$inboundSchema, SkippedAction$outboundSchema, } from "./skippedaction.js";
/**
 * The state of the approval instance
 */
export const ApprovalInstanceState = {
    ApprovalInstanceStateUnspecified: "APPROVAL_INSTANCE_STATE_UNSPECIFIED",
    ApprovalInstanceStateInit: "APPROVAL_INSTANCE_STATE_INIT",
    ApprovalInstanceStateSendingNotifications: "APPROVAL_INSTANCE_STATE_SENDING_NOTIFICATIONS",
    ApprovalInstanceStateWaiting: "APPROVAL_INSTANCE_STATE_WAITING",
    ApprovalInstanceStateDone: "APPROVAL_INSTANCE_STATE_DONE",
};
/** @internal */
export const ApprovalInstanceState$inboundSchema = z
    .union([
    z.nativeEnum(ApprovalInstanceState),
    z.string().transform(catchUnrecognizedEnum),
]);
/** @internal */
export const ApprovalInstanceState$outboundSchema = z.union([
    z.nativeEnum(ApprovalInstanceState),
    z.string().and(z.custom()),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ApprovalInstanceState$;
(function (ApprovalInstanceState$) {
    /** @deprecated use `ApprovalInstanceState$inboundSchema` instead. */
    ApprovalInstanceState$.inboundSchema = ApprovalInstanceState$inboundSchema;
    /** @deprecated use `ApprovalInstanceState$outboundSchema` instead. */
    ApprovalInstanceState$.outboundSchema = ApprovalInstanceState$outboundSchema;
})(ApprovalInstanceState$ || (ApprovalInstanceState$ = {}));
/** @internal */
export const ApprovalInstance$inboundSchema = z.object({
    approval: z.nullable(Approval$inboundSchema).optional(),
    approved: z.nullable(ApprovedAction$inboundSchema).optional(),
    denied: z.nullable(DeniedAction$inboundSchema).optional(),
    escalationInstance: z.nullable(EscalationInstance$inboundSchema).optional(),
    reassigned: z.nullable(ReassignedAction$inboundSchema).optional(),
    reassignedByError: z.nullable(ReassignedByErrorAction$inboundSchema)
        .optional(),
    restarted: z.nullable(RestartAction$inboundSchema).optional(),
    skipped: z.nullable(SkippedAction$inboundSchema).optional(),
    state: z.nullable(ApprovalInstanceState$inboundSchema).optional(),
});
/** @internal */
export const ApprovalInstance$outboundSchema = z.object({
    approval: z.nullable(Approval$outboundSchema).optional(),
    approved: z.nullable(ApprovedAction$outboundSchema).optional(),
    denied: z.nullable(DeniedAction$outboundSchema).optional(),
    escalationInstance: z.nullable(EscalationInstance$outboundSchema).optional(),
    reassigned: z.nullable(ReassignedAction$outboundSchema).optional(),
    reassignedByError: z.nullable(ReassignedByErrorAction$outboundSchema)
        .optional(),
    restarted: z.nullable(RestartAction$outboundSchema).optional(),
    skipped: z.nullable(SkippedAction$outboundSchema).optional(),
    state: z.nullable(ApprovalInstanceState$outboundSchema).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ApprovalInstance$;
(function (ApprovalInstance$) {
    /** @deprecated use `ApprovalInstance$inboundSchema` instead. */
    ApprovalInstance$.inboundSchema = ApprovalInstance$inboundSchema;
    /** @deprecated use `ApprovalInstance$outboundSchema` instead. */
    ApprovalInstance$.outboundSchema = ApprovalInstance$outboundSchema;
})(ApprovalInstance$ || (ApprovalInstance$ = {}));
export function approvalInstanceToJSON(approvalInstance) {
    return JSON.stringify(ApprovalInstance$outboundSchema.parse(approvalInstance));
}
export function approvalInstanceFromJSON(jsonString) {
    return safeParse(jsonString, (x) => ApprovalInstance$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ApprovalInstance' from JSON`);
}
