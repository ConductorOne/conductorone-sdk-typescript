/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Policy$inboundSchema, Policy$outboundSchema, } from "./policy.js";
/** @internal */
export const SearchPoliciesResponse$inboundSchema = z.object({
    list: z.nullable(z.array(Policy$inboundSchema)).optional(),
    nextPageToken: z.nullable(z.string()).optional(),
});
/** @internal */
export const SearchPoliciesResponse$outboundSchema = z.object({
    list: z.nullable(z.array(Policy$outboundSchema)).optional(),
    nextPageToken: z.nullable(z.string()).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var SearchPoliciesResponse$;
(function (SearchPoliciesResponse$) {
    /** @deprecated use `SearchPoliciesResponse$inboundSchema` instead. */
    SearchPoliciesResponse$.inboundSchema = SearchPoliciesResponse$inboundSchema;
    /** @deprecated use `SearchPoliciesResponse$outboundSchema` instead. */
    SearchPoliciesResponse$.outboundSchema = SearchPoliciesResponse$outboundSchema;
})(SearchPoliciesResponse$ || (SearchPoliciesResponse$ = {}));
export function searchPoliciesResponseToJSON(searchPoliciesResponse) {
    return JSON.stringify(SearchPoliciesResponse$outboundSchema.parse(searchPoliciesResponse));
}
export function searchPoliciesResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => SearchPoliciesResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'SearchPoliciesResponse' from JSON`);
}
