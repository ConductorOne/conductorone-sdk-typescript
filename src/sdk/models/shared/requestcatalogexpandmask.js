/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
/** @internal */
export const RequestCatalogExpandMask$inboundSchema = z.object({
    paths: z.nullable(z.array(z.string())).optional(),
});
/** @internal */
export const RequestCatalogExpandMask$outboundSchema = z.object({
    paths: z.nullable(z.array(z.string())).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RequestCatalogExpandMask$;
(function (RequestCatalogExpandMask$) {
    /** @deprecated use `RequestCatalogExpandMask$inboundSchema` instead. */
    RequestCatalogExpandMask$.inboundSchema = RequestCatalogExpandMask$inboundSchema;
    /** @deprecated use `RequestCatalogExpandMask$outboundSchema` instead. */
    RequestCatalogExpandMask$.outboundSchema = RequestCatalogExpandMask$outboundSchema;
})(RequestCatalogExpandMask$ || (RequestCatalogExpandMask$ = {}));
export function requestCatalogExpandMaskToJSON(requestCatalogExpandMask) {
    return JSON.stringify(RequestCatalogExpandMask$outboundSchema.parse(requestCatalogExpandMask));
}
export function requestCatalogExpandMaskFromJSON(jsonString) {
    return safeParse(jsonString, (x) => RequestCatalogExpandMask$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'RequestCatalogExpandMask' from JSON`);
}
