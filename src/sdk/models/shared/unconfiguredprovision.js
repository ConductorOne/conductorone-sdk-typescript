/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
/** @internal */
export const UnconfiguredProvision$inboundSchema = z.object({});
/** @internal */
export const UnconfiguredProvision$outboundSchema = z.object({});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var UnconfiguredProvision$;
(function (UnconfiguredProvision$) {
    /** @deprecated use `UnconfiguredProvision$inboundSchema` instead. */
    UnconfiguredProvision$.inboundSchema = UnconfiguredProvision$inboundSchema;
    /** @deprecated use `UnconfiguredProvision$outboundSchema` instead. */
    UnconfiguredProvision$.outboundSchema = UnconfiguredProvision$outboundSchema;
})(UnconfiguredProvision$ || (UnconfiguredProvision$ = {}));
export function unconfiguredProvisionToJSON(unconfiguredProvision) {
    return JSON.stringify(UnconfiguredProvision$outboundSchema.parse(unconfiguredProvision));
}
export function unconfiguredProvisionFromJSON(jsonString) {
    return safeParse(jsonString, (x) => UnconfiguredProvision$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'UnconfiguredProvision' from JSON`);
}
