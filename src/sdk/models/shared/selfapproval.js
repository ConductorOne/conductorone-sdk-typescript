/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
/** @internal */
export const SelfApproval$inboundSchema = z.object({
    assignedUserIds: z.nullable(z.array(z.string())).optional(),
    fallback: z.nullable(z.boolean()).optional(),
    fallbackUserIds: z.nullable(z.array(z.string())).optional(),
});
/** @internal */
export const SelfApproval$outboundSchema = z.object({
    assignedUserIds: z.nullable(z.array(z.string())).optional(),
    fallback: z.nullable(z.boolean()).optional(),
    fallbackUserIds: z.nullable(z.array(z.string())).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var SelfApproval$;
(function (SelfApproval$) {
    /** @deprecated use `SelfApproval$inboundSchema` instead. */
    SelfApproval$.inboundSchema = SelfApproval$inboundSchema;
    /** @deprecated use `SelfApproval$outboundSchema` instead. */
    SelfApproval$.outboundSchema = SelfApproval$outboundSchema;
})(SelfApproval$ || (SelfApproval$ = {}));
export function selfApprovalToJSON(selfApproval) {
    return JSON.stringify(SelfApproval$outboundSchema.parse(selfApproval));
}
export function selfApprovalFromJSON(jsonString) {
    return safeParse(jsonString, (x) => SelfApproval$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'SelfApproval' from JSON`);
}
