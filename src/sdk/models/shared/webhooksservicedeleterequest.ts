/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * The WebhooksServiceDeleteRequest message.
 */
export type WebhooksServiceDeleteRequest = {};

/** @internal */
export const WebhooksServiceDeleteRequest$inboundSchema: z.ZodType<
  WebhooksServiceDeleteRequest,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type WebhooksServiceDeleteRequest$Outbound = {};

/** @internal */
export const WebhooksServiceDeleteRequest$outboundSchema: z.ZodType<
  WebhooksServiceDeleteRequest$Outbound,
  z.ZodTypeDef,
  WebhooksServiceDeleteRequest
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace WebhooksServiceDeleteRequest$ {
  /** @deprecated use `WebhooksServiceDeleteRequest$inboundSchema` instead. */
  export const inboundSchema = WebhooksServiceDeleteRequest$inboundSchema;
  /** @deprecated use `WebhooksServiceDeleteRequest$outboundSchema` instead. */
  export const outboundSchema = WebhooksServiceDeleteRequest$outboundSchema;
  /** @deprecated use `WebhooksServiceDeleteRequest$Outbound` instead. */
  export type Outbound = WebhooksServiceDeleteRequest$Outbound;
}

export function webhooksServiceDeleteRequestToJSON(
  webhooksServiceDeleteRequest: WebhooksServiceDeleteRequest,
): string {
  return JSON.stringify(
    WebhooksServiceDeleteRequest$outboundSchema.parse(
      webhooksServiceDeleteRequest,
    ),
  );
}

export function webhooksServiceDeleteRequestFromJSON(
  jsonString: string,
): SafeParseResult<WebhooksServiceDeleteRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => WebhooksServiceDeleteRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'WebhooksServiceDeleteRequest' from JSON`,
  );
}
