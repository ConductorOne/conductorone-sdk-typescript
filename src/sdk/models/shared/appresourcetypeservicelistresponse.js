/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";
import { collectExtraKeys as collectExtraKeys$, safeParse, } from "../../../lib/schemas.js";
import { AppResourceTypeView$inboundSchema, AppResourceTypeView$outboundSchema, } from "./appresourcetypeview.js";
/** @internal */
export const AppResourceTypeServiceListResponseExpanded$inboundSchema = collectExtraKeys$(z.object({
    "@type": z.string().optional(),
}).catchall(z.any()), "additionalProperties", true).transform((v) => {
    return remap$(v, {
        "@type": "atType",
    });
});
/** @internal */
export const AppResourceTypeServiceListResponseExpanded$outboundSchema = z.object({
    atType: z.string().optional(),
    additionalProperties: z.record(z.any()),
}).transform((v) => {
    return {
        ...v.additionalProperties,
        ...remap$(v, {
            atType: "@type",
            additionalProperties: null,
        }),
    };
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var AppResourceTypeServiceListResponseExpanded$;
(function (AppResourceTypeServiceListResponseExpanded$) {
    /** @deprecated use `AppResourceTypeServiceListResponseExpanded$inboundSchema` instead. */
    AppResourceTypeServiceListResponseExpanded$.inboundSchema = AppResourceTypeServiceListResponseExpanded$inboundSchema;
    /** @deprecated use `AppResourceTypeServiceListResponseExpanded$outboundSchema` instead. */
    AppResourceTypeServiceListResponseExpanded$.outboundSchema = AppResourceTypeServiceListResponseExpanded$outboundSchema;
})(AppResourceTypeServiceListResponseExpanded$ || (AppResourceTypeServiceListResponseExpanded$ = {}));
export function appResourceTypeServiceListResponseExpandedToJSON(appResourceTypeServiceListResponseExpanded) {
    return JSON.stringify(AppResourceTypeServiceListResponseExpanded$outboundSchema.parse(appResourceTypeServiceListResponseExpanded));
}
export function appResourceTypeServiceListResponseExpandedFromJSON(jsonString) {
    return safeParse(jsonString, (x) => AppResourceTypeServiceListResponseExpanded$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'AppResourceTypeServiceListResponseExpanded' from JSON`);
}
/** @internal */
export const AppResourceTypeServiceListResponse$inboundSchema = z.object({
    expanded: z.nullable(z.array(z.lazy(() => AppResourceTypeServiceListResponseExpanded$inboundSchema))).optional(),
    list: z.nullable(z.array(AppResourceTypeView$inboundSchema)).optional(),
    nextPageToken: z.nullable(z.string()).optional(),
});
/** @internal */
export const AppResourceTypeServiceListResponse$outboundSchema = z.object({
    expanded: z.nullable(z.array(z.lazy(() => AppResourceTypeServiceListResponseExpanded$outboundSchema))).optional(),
    list: z.nullable(z.array(AppResourceTypeView$outboundSchema)).optional(),
    nextPageToken: z.nullable(z.string()).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var AppResourceTypeServiceListResponse$;
(function (AppResourceTypeServiceListResponse$) {
    /** @deprecated use `AppResourceTypeServiceListResponse$inboundSchema` instead. */
    AppResourceTypeServiceListResponse$.inboundSchema = AppResourceTypeServiceListResponse$inboundSchema;
    /** @deprecated use `AppResourceTypeServiceListResponse$outboundSchema` instead. */
    AppResourceTypeServiceListResponse$.outboundSchema = AppResourceTypeServiceListResponse$outboundSchema;
})(AppResourceTypeServiceListResponse$ || (AppResourceTypeServiceListResponse$ = {}));
export function appResourceTypeServiceListResponseToJSON(appResourceTypeServiceListResponse) {
    return JSON.stringify(AppResourceTypeServiceListResponse$outboundSchema.parse(appResourceTypeServiceListResponse));
}
export function appResourceTypeServiceListResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => AppResourceTypeServiceListResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'AppResourceTypeServiceListResponse' from JSON`);
}
