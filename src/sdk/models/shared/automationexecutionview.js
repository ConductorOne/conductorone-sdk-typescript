/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { AutomationExecution$inboundSchema, AutomationExecution$outboundSchema, } from "./automationexecution.js";
/** @internal */
export const AutomationExecutionView$inboundSchema = z.object({
    automationExecution: z.nullable(AutomationExecution$inboundSchema).optional(),
    automationExecutionTriggerPath: z.nullable(z.string()).optional(),
    automationPath: z.nullable(z.string()).optional(),
});
/** @internal */
export const AutomationExecutionView$outboundSchema = z.object({
    automationExecution: z.nullable(AutomationExecution$outboundSchema)
        .optional(),
    automationExecutionTriggerPath: z.nullable(z.string()).optional(),
    automationPath: z.nullable(z.string()).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var AutomationExecutionView$;
(function (AutomationExecutionView$) {
    /** @deprecated use `AutomationExecutionView$inboundSchema` instead. */
    AutomationExecutionView$.inboundSchema = AutomationExecutionView$inboundSchema;
    /** @deprecated use `AutomationExecutionView$outboundSchema` instead. */
    AutomationExecutionView$.outboundSchema = AutomationExecutionView$outboundSchema;
})(AutomationExecutionView$ || (AutomationExecutionView$ = {}));
export function automationExecutionViewToJSON(automationExecutionView) {
    return JSON.stringify(AutomationExecutionView$outboundSchema.parse(automationExecutionView));
}
export function automationExecutionViewFromJSON(jsonString) {
    return safeParse(jsonString, (x) => AutomationExecutionView$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'AutomationExecutionView' from JSON`);
}
