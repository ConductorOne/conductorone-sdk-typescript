/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
/** @internal */
export const SetAppOwnersRequest$inboundSchema = z.object({
    userIds: z.nullable(z.array(z.string())).optional(),
});
/** @internal */
export const SetAppOwnersRequest$outboundSchema = z.object({
    userIds: z.nullable(z.array(z.string())).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var SetAppOwnersRequest$;
(function (SetAppOwnersRequest$) {
    /** @deprecated use `SetAppOwnersRequest$inboundSchema` instead. */
    SetAppOwnersRequest$.inboundSchema = SetAppOwnersRequest$inboundSchema;
    /** @deprecated use `SetAppOwnersRequest$outboundSchema` instead. */
    SetAppOwnersRequest$.outboundSchema = SetAppOwnersRequest$outboundSchema;
})(SetAppOwnersRequest$ || (SetAppOwnersRequest$ = {}));
export function setAppOwnersRequestToJSON(setAppOwnersRequest) {
    return JSON.stringify(SetAppOwnersRequest$outboundSchema.parse(setAppOwnersRequest));
}
export function setAppOwnersRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => SetAppOwnersRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'SetAppOwnersRequest' from JSON`);
}
