/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  AppEntitlementRef,
  AppEntitlementRef$inboundSchema,
  AppEntitlementRef$Outbound,
  AppEntitlementRef$outboundSchema,
} from "./appentitlementref.js";

/**
 * The RequestCatalogManagementServiceAddAppEntitlementsRequest object is used to add app requestable app entitlements to a request catalog.
 */
export type RequestCatalogManagementServiceAddAppEntitlementsRequest = {
  /**
   * List of entitlements to add to the request catalog.
   */
  appEntitlements: Array<AppEntitlementRef>;
  /**
   * Whether or not to create requests for newly added entitlements for users in the catalog.
   *
   * @remarks
   *  By default, this is false and no requests are created.
   */
  createRequests?: boolean | null | undefined;
};

/** @internal */
export const RequestCatalogManagementServiceAddAppEntitlementsRequest$inboundSchema:
  z.ZodType<
    RequestCatalogManagementServiceAddAppEntitlementsRequest,
    z.ZodTypeDef,
    unknown
  > = z.object({
    appEntitlements: z.array(AppEntitlementRef$inboundSchema),
    createRequests: z.nullable(z.boolean()).optional(),
  });

/** @internal */
export type RequestCatalogManagementServiceAddAppEntitlementsRequest$Outbound =
  {
    appEntitlements: Array<AppEntitlementRef$Outbound>;
    createRequests?: boolean | null | undefined;
  };

/** @internal */
export const RequestCatalogManagementServiceAddAppEntitlementsRequest$outboundSchema:
  z.ZodType<
    RequestCatalogManagementServiceAddAppEntitlementsRequest$Outbound,
    z.ZodTypeDef,
    RequestCatalogManagementServiceAddAppEntitlementsRequest
  > = z.object({
    appEntitlements: z.array(AppEntitlementRef$outboundSchema),
    createRequests: z.nullable(z.boolean()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RequestCatalogManagementServiceAddAppEntitlementsRequest$ {
  /** @deprecated use `RequestCatalogManagementServiceAddAppEntitlementsRequest$inboundSchema` instead. */
  export const inboundSchema =
    RequestCatalogManagementServiceAddAppEntitlementsRequest$inboundSchema;
  /** @deprecated use `RequestCatalogManagementServiceAddAppEntitlementsRequest$outboundSchema` instead. */
  export const outboundSchema =
    RequestCatalogManagementServiceAddAppEntitlementsRequest$outboundSchema;
  /** @deprecated use `RequestCatalogManagementServiceAddAppEntitlementsRequest$Outbound` instead. */
  export type Outbound =
    RequestCatalogManagementServiceAddAppEntitlementsRequest$Outbound;
}

export function requestCatalogManagementServiceAddAppEntitlementsRequestToJSON(
  requestCatalogManagementServiceAddAppEntitlementsRequest:
    RequestCatalogManagementServiceAddAppEntitlementsRequest,
): string {
  return JSON.stringify(
    RequestCatalogManagementServiceAddAppEntitlementsRequest$outboundSchema
      .parse(requestCatalogManagementServiceAddAppEntitlementsRequest),
  );
}

export function requestCatalogManagementServiceAddAppEntitlementsRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  RequestCatalogManagementServiceAddAppEntitlementsRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RequestCatalogManagementServiceAddAppEntitlementsRequest$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'RequestCatalogManagementServiceAddAppEntitlementsRequest' from JSON`,
  );
}
