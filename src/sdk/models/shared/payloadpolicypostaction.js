/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";
import { collectExtraKeys as collectExtraKeys$, safeParse, } from "../../../lib/schemas.js";
import { TaskView$inboundSchema, TaskView$outboundSchema, } from "./taskview.js";
/** @internal */
export const PayloadPolicyPostActionExpanded$inboundSchema = collectExtraKeys$(z.object({
    "@type": z.string().optional(),
}).catchall(z.any()), "additionalProperties", true).transform((v) => {
    return remap$(v, {
        "@type": "atType",
    });
});
/** @internal */
export const PayloadPolicyPostActionExpanded$outboundSchema = z.object({
    atType: z.string().optional(),
    additionalProperties: z.record(z.any()),
}).transform((v) => {
    return {
        ...v.additionalProperties,
        ...remap$(v, {
            atType: "@type",
            additionalProperties: null,
        }),
    };
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var PayloadPolicyPostActionExpanded$;
(function (PayloadPolicyPostActionExpanded$) {
    /** @deprecated use `PayloadPolicyPostActionExpanded$inboundSchema` instead. */
    PayloadPolicyPostActionExpanded$.inboundSchema = PayloadPolicyPostActionExpanded$inboundSchema;
    /** @deprecated use `PayloadPolicyPostActionExpanded$outboundSchema` instead. */
    PayloadPolicyPostActionExpanded$.outboundSchema = PayloadPolicyPostActionExpanded$outboundSchema;
})(PayloadPolicyPostActionExpanded$ || (PayloadPolicyPostActionExpanded$ = {}));
export function payloadPolicyPostActionExpandedToJSON(payloadPolicyPostActionExpanded) {
    return JSON.stringify(PayloadPolicyPostActionExpanded$outboundSchema.parse(payloadPolicyPostActionExpanded));
}
export function payloadPolicyPostActionExpandedFromJSON(jsonString) {
    return safeParse(jsonString, (x) => PayloadPolicyPostActionExpanded$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'PayloadPolicyPostActionExpanded' from JSON`);
}
/** @internal */
export const PayloadPolicyPostAction$inboundSchema = z.object({
    expanded: z.nullable(z.array(z.lazy(() => PayloadPolicyPostActionExpanded$inboundSchema))).optional(),
    taskView: z.nullable(TaskView$inboundSchema).optional(),
});
/** @internal */
export const PayloadPolicyPostAction$outboundSchema = z.object({
    expanded: z.nullable(z.array(z.lazy(() => PayloadPolicyPostActionExpanded$outboundSchema))).optional(),
    taskView: z.nullable(TaskView$outboundSchema).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var PayloadPolicyPostAction$;
(function (PayloadPolicyPostAction$) {
    /** @deprecated use `PayloadPolicyPostAction$inboundSchema` instead. */
    PayloadPolicyPostAction$.inboundSchema = PayloadPolicyPostAction$inboundSchema;
    /** @deprecated use `PayloadPolicyPostAction$outboundSchema` instead. */
    PayloadPolicyPostAction$.outboundSchema = PayloadPolicyPostAction$outboundSchema;
})(PayloadPolicyPostAction$ || (PayloadPolicyPostAction$ = {}));
export function payloadPolicyPostActionToJSON(payloadPolicyPostAction) {
    return JSON.stringify(PayloadPolicyPostAction$outboundSchema.parse(payloadPolicyPostAction));
}
export function payloadPolicyPostActionFromJSON(jsonString) {
    return safeParse(jsonString, (x) => PayloadPolicyPostAction$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'PayloadPolicyPostAction' from JSON`);
}
