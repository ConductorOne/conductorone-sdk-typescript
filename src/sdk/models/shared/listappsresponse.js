/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { App$inboundSchema, App$outboundSchema, } from "./app.js";
/** @internal */
export const ListAppsResponse$inboundSchema = z.object({
    list: z.nullable(z.array(App$inboundSchema)).optional(),
    nextPageToken: z.nullable(z.string()).optional(),
});
/** @internal */
export const ListAppsResponse$outboundSchema = z.object({
    list: z.nullable(z.array(App$outboundSchema)).optional(),
    nextPageToken: z.nullable(z.string()).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ListAppsResponse$;
(function (ListAppsResponse$) {
    /** @deprecated use `ListAppsResponse$inboundSchema` instead. */
    ListAppsResponse$.inboundSchema = ListAppsResponse$inboundSchema;
    /** @deprecated use `ListAppsResponse$outboundSchema` instead. */
    ListAppsResponse$.outboundSchema = ListAppsResponse$outboundSchema;
})(ListAppsResponse$ || (ListAppsResponse$ = {}));
export function listAppsResponseToJSON(listAppsResponse) {
    return JSON.stringify(ListAppsResponse$outboundSchema.parse(listAppsResponse));
}
export function listAppsResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => ListAppsResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ListAppsResponse' from JSON`);
}
