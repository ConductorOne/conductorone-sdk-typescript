/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * The WebhookListenerAuthHMAC message.
 */
export type WebhookListenerAuthHMAC = {};

/** @internal */
export const WebhookListenerAuthHMAC$inboundSchema: z.ZodType<
  WebhookListenerAuthHMAC,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type WebhookListenerAuthHMAC$Outbound = {};

/** @internal */
export const WebhookListenerAuthHMAC$outboundSchema: z.ZodType<
  WebhookListenerAuthHMAC$Outbound,
  z.ZodTypeDef,
  WebhookListenerAuthHMAC
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace WebhookListenerAuthHMAC$ {
  /** @deprecated use `WebhookListenerAuthHMAC$inboundSchema` instead. */
  export const inboundSchema = WebhookListenerAuthHMAC$inboundSchema;
  /** @deprecated use `WebhookListenerAuthHMAC$outboundSchema` instead. */
  export const outboundSchema = WebhookListenerAuthHMAC$outboundSchema;
  /** @deprecated use `WebhookListenerAuthHMAC$Outbound` instead. */
  export type Outbound = WebhookListenerAuthHMAC$Outbound;
}

export function webhookListenerAuthHMACToJSON(
  webhookListenerAuthHMAC: WebhookListenerAuthHMAC,
): string {
  return JSON.stringify(
    WebhookListenerAuthHMAC$outboundSchema.parse(webhookListenerAuthHMAC),
  );
}

export function webhookListenerAuthHMACFromJSON(
  jsonString: string,
): SafeParseResult<WebhookListenerAuthHMAC, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => WebhookListenerAuthHMAC$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'WebhookListenerAuthHMAC' from JSON`,
  );
}
