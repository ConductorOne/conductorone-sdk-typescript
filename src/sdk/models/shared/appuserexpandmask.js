/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
/** @internal */
export const AppUserExpandMask$inboundSchema = z.object({
    paths: z.nullable(z.array(z.string())).optional(),
});
/** @internal */
export const AppUserExpandMask$outboundSchema = z.object({
    paths: z.nullable(z.array(z.string())).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var AppUserExpandMask$;
(function (AppUserExpandMask$) {
    /** @deprecated use `AppUserExpandMask$inboundSchema` instead. */
    AppUserExpandMask$.inboundSchema = AppUserExpandMask$inboundSchema;
    /** @deprecated use `AppUserExpandMask$outboundSchema` instead. */
    AppUserExpandMask$.outboundSchema = AppUserExpandMask$outboundSchema;
})(AppUserExpandMask$ || (AppUserExpandMask$ = {}));
export function appUserExpandMaskToJSON(appUserExpandMask) {
    return JSON.stringify(AppUserExpandMask$outboundSchema.parse(appUserExpandMask));
}
export function appUserExpandMaskFromJSON(jsonString) {
    return safeParse(jsonString, (x) => AppUserExpandMask$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'AppUserExpandMask' from JSON`);
}
