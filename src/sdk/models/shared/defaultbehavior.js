/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
/** @internal */
export const DefaultBehavior$inboundSchema = z.object({
    connectorId: z.nullable(z.string()).optional(),
});
/** @internal */
export const DefaultBehavior$outboundSchema = z.object({
    connectorId: z.nullable(z.string()).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var DefaultBehavior$;
(function (DefaultBehavior$) {
    /** @deprecated use `DefaultBehavior$inboundSchema` instead. */
    DefaultBehavior$.inboundSchema = DefaultBehavior$inboundSchema;
    /** @deprecated use `DefaultBehavior$outboundSchema` instead. */
    DefaultBehavior$.outboundSchema = DefaultBehavior$outboundSchema;
})(DefaultBehavior$ || (DefaultBehavior$ = {}));
export function defaultBehaviorToJSON(defaultBehavior) {
    return JSON.stringify(DefaultBehavior$outboundSchema.parse(defaultBehavior));
}
export function defaultBehaviorFromJSON(jsonString) {
    return safeParse(jsonString, (x) => DefaultBehavior$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'DefaultBehavior' from JSON`);
}
