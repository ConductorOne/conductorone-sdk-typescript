/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  AppResource,
  AppResource$inboundSchema,
  AppResource$Outbound,
  AppResource$outboundSchema,
} from "./appresource.js";

/**
 * The app resource view returns an app resource with paths for items in the expand mask filled in when this response is returned and a request expand mask has "*" or "app_id" or "resource_type_id".
 */
export type AppResourceView = {
  /**
   * JSONPATH expression indicating the location of the App object in the array
   */
  appPath?: string | null | undefined;
  appResource?: AppResource | null | undefined;
  /**
   * JSONPATH expression indicating the location of the Parent Resource object in the array
   */
  parentResourcePath?: string | null | undefined;
  /**
   * JSONPATH expression indicating the location of the Parent Resource Type object in the array
   */
  parentResourceTypePath?: string | null | undefined;
  /**
   * JSONPATH expression indicating the location of the Resource Type object in the array
   */
  resourceTypePath?: string | null | undefined;
};

/** @internal */
export const AppResourceView$inboundSchema: z.ZodType<
  AppResourceView,
  z.ZodTypeDef,
  unknown
> = z.object({
  appPath: z.nullable(z.string()).optional(),
  appResource: z.nullable(AppResource$inboundSchema).optional(),
  parentResourcePath: z.nullable(z.string()).optional(),
  parentResourceTypePath: z.nullable(z.string()).optional(),
  resourceTypePath: z.nullable(z.string()).optional(),
});

/** @internal */
export type AppResourceView$Outbound = {
  appPath?: string | null | undefined;
  appResource?: AppResource$Outbound | null | undefined;
  parentResourcePath?: string | null | undefined;
  parentResourceTypePath?: string | null | undefined;
  resourceTypePath?: string | null | undefined;
};

/** @internal */
export const AppResourceView$outboundSchema: z.ZodType<
  AppResourceView$Outbound,
  z.ZodTypeDef,
  AppResourceView
> = z.object({
  appPath: z.nullable(z.string()).optional(),
  appResource: z.nullable(AppResource$outboundSchema).optional(),
  parentResourcePath: z.nullable(z.string()).optional(),
  parentResourceTypePath: z.nullable(z.string()).optional(),
  resourceTypePath: z.nullable(z.string()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppResourceView$ {
  /** @deprecated use `AppResourceView$inboundSchema` instead. */
  export const inboundSchema = AppResourceView$inboundSchema;
  /** @deprecated use `AppResourceView$outboundSchema` instead. */
  export const outboundSchema = AppResourceView$outboundSchema;
  /** @deprecated use `AppResourceView$Outbound` instead. */
  export type Outbound = AppResourceView$Outbound;
}

export function appResourceViewToJSON(
  appResourceView: AppResourceView,
): string {
  return JSON.stringify(AppResourceView$outboundSchema.parse(appResourceView));
}

export function appResourceViewFromJSON(
  jsonString: string,
): SafeParseResult<AppResourceView, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => AppResourceView$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'AppResourceView' from JSON`,
  );
}
