/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
/** @internal */
export const TaskAuditComment$inboundSchema = z.object({
    comment: z.nullable(z.string()).optional(),
    updatedAt: z.nullable(z.string().datetime({ offset: true }).transform(v => new Date(v))).optional(),
    updatedBy: z.nullable(z.string()).optional(),
});
/** @internal */
export const TaskAuditComment$outboundSchema = z.object({
    comment: z.nullable(z.string()).optional(),
    updatedAt: z.nullable(z.date().transform(v => v.toISOString())).optional(),
    updatedBy: z.nullable(z.string()).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var TaskAuditComment$;
(function (TaskAuditComment$) {
    /** @deprecated use `TaskAuditComment$inboundSchema` instead. */
    TaskAuditComment$.inboundSchema = TaskAuditComment$inboundSchema;
    /** @deprecated use `TaskAuditComment$outboundSchema` instead. */
    TaskAuditComment$.outboundSchema = TaskAuditComment$outboundSchema;
})(TaskAuditComment$ || (TaskAuditComment$ = {}));
export function taskAuditCommentToJSON(taskAuditComment) {
    return JSON.stringify(TaskAuditComment$outboundSchema.parse(taskAuditComment));
}
export function taskAuditCommentFromJSON(jsonString) {
    return safeParse(jsonString, (x) => TaskAuditComment$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'TaskAuditComment' from JSON`);
}
