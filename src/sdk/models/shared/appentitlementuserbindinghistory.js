/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
/** @internal */
export const AppEntitlementUserBindingHistory$inboundSchema = z.object({
    appEntitlementId: z.nullable(z.string()).optional(),
    appId: z.nullable(z.string()).optional(),
    appUserId: z.nullable(z.string()).optional(),
    grantedAt: z.nullable(z.string().datetime({ offset: true }).transform(v => new Date(v))).optional(),
    revokedAt: z.nullable(z.string().datetime({ offset: true }).transform(v => new Date(v))).optional(),
});
/** @internal */
export const AppEntitlementUserBindingHistory$outboundSchema = z.object({
    appEntitlementId: z.nullable(z.string()).optional(),
    appId: z.nullable(z.string()).optional(),
    appUserId: z.nullable(z.string()).optional(),
    grantedAt: z.nullable(z.date().transform(v => v.toISOString())).optional(),
    revokedAt: z.nullable(z.date().transform(v => v.toISOString())).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var AppEntitlementUserBindingHistory$;
(function (AppEntitlementUserBindingHistory$) {
    /** @deprecated use `AppEntitlementUserBindingHistory$inboundSchema` instead. */
    AppEntitlementUserBindingHistory$.inboundSchema = AppEntitlementUserBindingHistory$inboundSchema;
    /** @deprecated use `AppEntitlementUserBindingHistory$outboundSchema` instead. */
    AppEntitlementUserBindingHistory$.outboundSchema = AppEntitlementUserBindingHistory$outboundSchema;
})(AppEntitlementUserBindingHistory$ || (AppEntitlementUserBindingHistory$ = {}));
export function appEntitlementUserBindingHistoryToJSON(appEntitlementUserBindingHistory) {
    return JSON.stringify(AppEntitlementUserBindingHistory$outboundSchema.parse(appEntitlementUserBindingHistory));
}
export function appEntitlementUserBindingHistoryFromJSON(jsonString) {
    return safeParse(jsonString, (x) => AppEntitlementUserBindingHistory$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'AppEntitlementUserBindingHistory' from JSON`);
}
