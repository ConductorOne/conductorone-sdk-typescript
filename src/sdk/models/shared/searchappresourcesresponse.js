/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";
import { collectExtraKeys as collectExtraKeys$, safeParse, } from "../../../lib/schemas.js";
import { AppResourceView$inboundSchema, AppResourceView$outboundSchema, } from "./appresourceview.js";
/** @internal */
export const SearchAppResourcesResponseExpanded$inboundSchema = collectExtraKeys$(z.object({
    "@type": z.string().optional(),
}).catchall(z.any()), "additionalProperties", true).transform((v) => {
    return remap$(v, {
        "@type": "atType",
    });
});
/** @internal */
export const SearchAppResourcesResponseExpanded$outboundSchema = z.object({
    atType: z.string().optional(),
    additionalProperties: z.record(z.any()),
}).transform((v) => {
    return {
        ...v.additionalProperties,
        ...remap$(v, {
            atType: "@type",
            additionalProperties: null,
        }),
    };
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var SearchAppResourcesResponseExpanded$;
(function (SearchAppResourcesResponseExpanded$) {
    /** @deprecated use `SearchAppResourcesResponseExpanded$inboundSchema` instead. */
    SearchAppResourcesResponseExpanded$.inboundSchema = SearchAppResourcesResponseExpanded$inboundSchema;
    /** @deprecated use `SearchAppResourcesResponseExpanded$outboundSchema` instead. */
    SearchAppResourcesResponseExpanded$.outboundSchema = SearchAppResourcesResponseExpanded$outboundSchema;
})(SearchAppResourcesResponseExpanded$ || (SearchAppResourcesResponseExpanded$ = {}));
export function searchAppResourcesResponseExpandedToJSON(searchAppResourcesResponseExpanded) {
    return JSON.stringify(SearchAppResourcesResponseExpanded$outboundSchema.parse(searchAppResourcesResponseExpanded));
}
export function searchAppResourcesResponseExpandedFromJSON(jsonString) {
    return safeParse(jsonString, (x) => SearchAppResourcesResponseExpanded$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'SearchAppResourcesResponseExpanded' from JSON`);
}
/** @internal */
export const SearchAppResourcesResponse$inboundSchema = z.object({
    expanded: z.nullable(z.array(z.lazy(() => SearchAppResourcesResponseExpanded$inboundSchema))).optional(),
    list: z.nullable(z.array(AppResourceView$inboundSchema)).optional(),
    nextPageToken: z.nullable(z.string()).optional(),
});
/** @internal */
export const SearchAppResourcesResponse$outboundSchema = z.object({
    expanded: z.nullable(z.array(z.lazy(() => SearchAppResourcesResponseExpanded$outboundSchema))).optional(),
    list: z.nullable(z.array(AppResourceView$outboundSchema)).optional(),
    nextPageToken: z.nullable(z.string()).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var SearchAppResourcesResponse$;
(function (SearchAppResourcesResponse$) {
    /** @deprecated use `SearchAppResourcesResponse$inboundSchema` instead. */
    SearchAppResourcesResponse$.inboundSchema = SearchAppResourcesResponse$inboundSchema;
    /** @deprecated use `SearchAppResourcesResponse$outboundSchema` instead. */
    SearchAppResourcesResponse$.outboundSchema = SearchAppResourcesResponse$outboundSchema;
})(SearchAppResourcesResponse$ || (SearchAppResourcesResponse$ = {}));
export function searchAppResourcesResponseToJSON(searchAppResourcesResponse) {
    return JSON.stringify(SearchAppResourcesResponse$outboundSchema.parse(searchAppResourcesResponse));
}
export function searchAppResourcesResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => SearchAppResourcesResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'SearchAppResourcesResponse' from JSON`);
}
