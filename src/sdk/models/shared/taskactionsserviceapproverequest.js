/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { TaskExpandMask$inboundSchema, TaskExpandMask$outboundSchema, } from "./taskexpandmask.js";
/** @internal */
export const TaskActionsServiceApproveRequest$inboundSchema = z.object({
    comment: z.nullable(z.string()).optional(),
    expandMask: z.nullable(TaskExpandMask$inboundSchema).optional(),
    policyStepId: z.string(),
});
/** @internal */
export const TaskActionsServiceApproveRequest$outboundSchema = z.object({
    comment: z.nullable(z.string()).optional(),
    expandMask: z.nullable(TaskExpandMask$outboundSchema).optional(),
    policyStepId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var TaskActionsServiceApproveRequest$;
(function (TaskActionsServiceApproveRequest$) {
    /** @deprecated use `TaskActionsServiceApproveRequest$inboundSchema` instead. */
    TaskActionsServiceApproveRequest$.inboundSchema = TaskActionsServiceApproveRequest$inboundSchema;
    /** @deprecated use `TaskActionsServiceApproveRequest$outboundSchema` instead. */
    TaskActionsServiceApproveRequest$.outboundSchema = TaskActionsServiceApproveRequest$outboundSchema;
})(TaskActionsServiceApproveRequest$ || (TaskActionsServiceApproveRequest$ = {}));
export function taskActionsServiceApproveRequestToJSON(taskActionsServiceApproveRequest) {
    return JSON.stringify(TaskActionsServiceApproveRequest$outboundSchema.parse(taskActionsServiceApproveRequest));
}
export function taskActionsServiceApproveRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => TaskActionsServiceApproveRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'TaskActionsServiceApproveRequest' from JSON`);
}
