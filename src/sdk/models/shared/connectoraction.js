/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { ConnectorRef$inboundSchema, ConnectorRef$outboundSchema, } from "./connectorref.js";
/** @internal */
export const ConnectorAction$inboundSchema = z.object({
    actionName: z.nullable(z.string()).optional(),
    argsTemplate: z.nullable(z.record(z.any())).optional(),
    connectorRef: z.nullable(ConnectorRef$inboundSchema).optional(),
});
/** @internal */
export const ConnectorAction$outboundSchema = z.object({
    actionName: z.nullable(z.string()).optional(),
    argsTemplate: z.nullable(z.record(z.any())).optional(),
    connectorRef: z.nullable(ConnectorRef$outboundSchema).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ConnectorAction$;
(function (ConnectorAction$) {
    /** @deprecated use `ConnectorAction$inboundSchema` instead. */
    ConnectorAction$.inboundSchema = ConnectorAction$inboundSchema;
    /** @deprecated use `ConnectorAction$outboundSchema` instead. */
    ConnectorAction$.outboundSchema = ConnectorAction$outboundSchema;
})(ConnectorAction$ || (ConnectorAction$ = {}));
export function connectorActionToJSON(connectorAction) {
    return JSON.stringify(ConnectorAction$outboundSchema.parse(connectorAction));
}
export function connectorActionFromJSON(jsonString) {
    return safeParse(jsonString, (x) => ConnectorAction$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ConnectorAction' from JSON`);
}
