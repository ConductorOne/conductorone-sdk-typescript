/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
/** @internal */
export const TaskTypeCertifyInput$inboundSchema = z.object({
    outcomeTime: z.nullable(z.string().datetime({ offset: true }).transform(v => new Date(v))).optional(),
});
/** @internal */
export const TaskTypeCertifyInput$outboundSchema = z.object({
    outcomeTime: z.nullable(z.date().transform(v => v.toISOString())).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var TaskTypeCertifyInput$;
(function (TaskTypeCertifyInput$) {
    /** @deprecated use `TaskTypeCertifyInput$inboundSchema` instead. */
    TaskTypeCertifyInput$.inboundSchema = TaskTypeCertifyInput$inboundSchema;
    /** @deprecated use `TaskTypeCertifyInput$outboundSchema` instead. */
    TaskTypeCertifyInput$.outboundSchema = TaskTypeCertifyInput$outboundSchema;
})(TaskTypeCertifyInput$ || (TaskTypeCertifyInput$ = {}));
export function taskTypeCertifyInputToJSON(taskTypeCertifyInput) {
    return JSON.stringify(TaskTypeCertifyInput$outboundSchema.parse(taskTypeCertifyInput));
}
export function taskTypeCertifyInputFromJSON(jsonString) {
    return safeParse(jsonString, (x) => TaskTypeCertifyInput$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'TaskTypeCertifyInput' from JSON`);
}
