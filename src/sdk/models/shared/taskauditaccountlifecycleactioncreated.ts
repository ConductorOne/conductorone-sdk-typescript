/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * The TaskAuditAccountLifecycleActionCreated message.
 */
export type TaskAuditAccountLifecycleActionCreated = {
  /**
   * The batonActionDisplayName field.
   */
  batonActionDisplayName?: string | undefined;
  /**
   * The batonActionInvocationId field.
   */
  batonActionInvocationId?: string | undefined;
  /**
   * The batonActionName field.
   */
  batonActionName?: string | undefined;
  /**
   * The batonAppId field.
   */
  batonAppId?: string | undefined;
  /**
   * The batonConnectorId field.
   */
  batonConnectorId?: string | undefined;
};

/** @internal */
export const TaskAuditAccountLifecycleActionCreated$inboundSchema: z.ZodType<
  TaskAuditAccountLifecycleActionCreated,
  z.ZodTypeDef,
  unknown
> = z.object({
  batonActionDisplayName: z.string().optional(),
  batonActionInvocationId: z.string().optional(),
  batonActionName: z.string().optional(),
  batonAppId: z.string().optional(),
  batonConnectorId: z.string().optional(),
});

/** @internal */
export type TaskAuditAccountLifecycleActionCreated$Outbound = {
  batonActionDisplayName?: string | undefined;
  batonActionInvocationId?: string | undefined;
  batonActionName?: string | undefined;
  batonAppId?: string | undefined;
  batonConnectorId?: string | undefined;
};

/** @internal */
export const TaskAuditAccountLifecycleActionCreated$outboundSchema: z.ZodType<
  TaskAuditAccountLifecycleActionCreated$Outbound,
  z.ZodTypeDef,
  TaskAuditAccountLifecycleActionCreated
> = z.object({
  batonActionDisplayName: z.string().optional(),
  batonActionInvocationId: z.string().optional(),
  batonActionName: z.string().optional(),
  batonAppId: z.string().optional(),
  batonConnectorId: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TaskAuditAccountLifecycleActionCreated$ {
  /** @deprecated use `TaskAuditAccountLifecycleActionCreated$inboundSchema` instead. */
  export const inboundSchema =
    TaskAuditAccountLifecycleActionCreated$inboundSchema;
  /** @deprecated use `TaskAuditAccountLifecycleActionCreated$outboundSchema` instead. */
  export const outboundSchema =
    TaskAuditAccountLifecycleActionCreated$outboundSchema;
  /** @deprecated use `TaskAuditAccountLifecycleActionCreated$Outbound` instead. */
  export type Outbound = TaskAuditAccountLifecycleActionCreated$Outbound;
}

export function taskAuditAccountLifecycleActionCreatedToJSON(
  taskAuditAccountLifecycleActionCreated:
    TaskAuditAccountLifecycleActionCreated,
): string {
  return JSON.stringify(
    TaskAuditAccountLifecycleActionCreated$outboundSchema.parse(
      taskAuditAccountLifecycleActionCreated,
    ),
  );
}

export function taskAuditAccountLifecycleActionCreatedFromJSON(
  jsonString: string,
): SafeParseResult<TaskAuditAccountLifecycleActionCreated, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      TaskAuditAccountLifecycleActionCreated$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'TaskAuditAccountLifecycleActionCreated' from JSON`,
  );
}
