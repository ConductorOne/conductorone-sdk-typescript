/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { PersonalClient$inboundSchema, PersonalClient$outboundSchema, } from "./personalclient.js";
/** @internal */
export const PersonalClientServiceUpdateResponse$inboundSchema = z.object({
    client: z.nullable(PersonalClient$inboundSchema).optional(),
});
/** @internal */
export const PersonalClientServiceUpdateResponse$outboundSchema = z.object({
    client: z.nullable(PersonalClient$outboundSchema).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var PersonalClientServiceUpdateResponse$;
(function (PersonalClientServiceUpdateResponse$) {
    /** @deprecated use `PersonalClientServiceUpdateResponse$inboundSchema` instead. */
    PersonalClientServiceUpdateResponse$.inboundSchema = PersonalClientServiceUpdateResponse$inboundSchema;
    /** @deprecated use `PersonalClientServiceUpdateResponse$outboundSchema` instead. */
    PersonalClientServiceUpdateResponse$.outboundSchema = PersonalClientServiceUpdateResponse$outboundSchema;
})(PersonalClientServiceUpdateResponse$ || (PersonalClientServiceUpdateResponse$ = {}));
export function personalClientServiceUpdateResponseToJSON(personalClientServiceUpdateResponse) {
    return JSON.stringify(PersonalClientServiceUpdateResponse$outboundSchema.parse(personalClientServiceUpdateResponse));
}
export function personalClientServiceUpdateResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => PersonalClientServiceUpdateResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'PersonalClientServiceUpdateResponse' from JSON`);
}
