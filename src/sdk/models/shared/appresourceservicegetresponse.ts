/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";
import {
  collectExtraKeys as collectExtraKeys$,
  safeParse,
} from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  AppResourceView,
  AppResourceView$inboundSchema,
  AppResourceView$Outbound,
  AppResourceView$outboundSchema,
} from "./appresourceview.js";

/**
 * Contains an arbitrary serialized message along with a @type that describes the type of the serialized message.
 */
export type AppResourceServiceGetResponseExpanded = {
  /**
   * The type of the serialized message.
   */
  atType?: string | undefined;
  additionalProperties?: { [k: string]: any };
};

/**
 * The app resource service get response contains the app resource view and array of expanded items indicated by the request's expand mask.
 */
export type AppResourceServiceGetResponse = {
  appResourceView?: AppResourceView | null | undefined;
  /**
   * List of serialized related objects.
   */
  expanded?: Array<AppResourceServiceGetResponseExpanded> | null | undefined;
};

/** @internal */
export const AppResourceServiceGetResponseExpanded$inboundSchema: z.ZodType<
  AppResourceServiceGetResponseExpanded,
  z.ZodTypeDef,
  unknown
> = collectExtraKeys$(
  z.object({
    "@type": z.string().optional(),
  }).catchall(z.any()),
  "additionalProperties",
  true,
).transform((v) => {
  return remap$(v, {
    "@type": "atType",
  });
});

/** @internal */
export type AppResourceServiceGetResponseExpanded$Outbound = {
  "@type"?: string | undefined;
  [additionalProperties: string]: unknown;
};

/** @internal */
export const AppResourceServiceGetResponseExpanded$outboundSchema: z.ZodType<
  AppResourceServiceGetResponseExpanded$Outbound,
  z.ZodTypeDef,
  AppResourceServiceGetResponseExpanded
> = z.object({
  atType: z.string().optional(),
  additionalProperties: z.record(z.any()),
}).transform((v) => {
  return {
    ...v.additionalProperties,
    ...remap$(v, {
      atType: "@type",
      additionalProperties: null,
    }),
  };
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppResourceServiceGetResponseExpanded$ {
  /** @deprecated use `AppResourceServiceGetResponseExpanded$inboundSchema` instead. */
  export const inboundSchema =
    AppResourceServiceGetResponseExpanded$inboundSchema;
  /** @deprecated use `AppResourceServiceGetResponseExpanded$outboundSchema` instead. */
  export const outboundSchema =
    AppResourceServiceGetResponseExpanded$outboundSchema;
  /** @deprecated use `AppResourceServiceGetResponseExpanded$Outbound` instead. */
  export type Outbound = AppResourceServiceGetResponseExpanded$Outbound;
}

export function appResourceServiceGetResponseExpandedToJSON(
  appResourceServiceGetResponseExpanded: AppResourceServiceGetResponseExpanded,
): string {
  return JSON.stringify(
    AppResourceServiceGetResponseExpanded$outboundSchema.parse(
      appResourceServiceGetResponseExpanded,
    ),
  );
}

export function appResourceServiceGetResponseExpandedFromJSON(
  jsonString: string,
): SafeParseResult<AppResourceServiceGetResponseExpanded, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      AppResourceServiceGetResponseExpanded$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'AppResourceServiceGetResponseExpanded' from JSON`,
  );
}

/** @internal */
export const AppResourceServiceGetResponse$inboundSchema: z.ZodType<
  AppResourceServiceGetResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  appResourceView: z.nullable(AppResourceView$inboundSchema).optional(),
  expanded: z.nullable(
    z.array(z.lazy(() => AppResourceServiceGetResponseExpanded$inboundSchema)),
  ).optional(),
});

/** @internal */
export type AppResourceServiceGetResponse$Outbound = {
  appResourceView?: AppResourceView$Outbound | null | undefined;
  expanded?:
    | Array<AppResourceServiceGetResponseExpanded$Outbound>
    | null
    | undefined;
};

/** @internal */
export const AppResourceServiceGetResponse$outboundSchema: z.ZodType<
  AppResourceServiceGetResponse$Outbound,
  z.ZodTypeDef,
  AppResourceServiceGetResponse
> = z.object({
  appResourceView: z.nullable(AppResourceView$outboundSchema).optional(),
  expanded: z.nullable(
    z.array(z.lazy(() => AppResourceServiceGetResponseExpanded$outboundSchema)),
  ).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppResourceServiceGetResponse$ {
  /** @deprecated use `AppResourceServiceGetResponse$inboundSchema` instead. */
  export const inboundSchema = AppResourceServiceGetResponse$inboundSchema;
  /** @deprecated use `AppResourceServiceGetResponse$outboundSchema` instead. */
  export const outboundSchema = AppResourceServiceGetResponse$outboundSchema;
  /** @deprecated use `AppResourceServiceGetResponse$Outbound` instead. */
  export type Outbound = AppResourceServiceGetResponse$Outbound;
}

export function appResourceServiceGetResponseToJSON(
  appResourceServiceGetResponse: AppResourceServiceGetResponse,
): string {
  return JSON.stringify(
    AppResourceServiceGetResponse$outboundSchema.parse(
      appResourceServiceGetResponse,
    ),
  );
}

export function appResourceServiceGetResponseFromJSON(
  jsonString: string,
): SafeParseResult<AppResourceServiceGetResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => AppResourceServiceGetResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'AppResourceServiceGetResponse' from JSON`,
  );
}
