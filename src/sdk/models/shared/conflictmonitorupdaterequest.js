/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { NotificationConfig$inboundSchema, NotificationConfig$outboundSchema, } from "./notificationconfig.js";
/** @internal */
export const ConflictMonitorUpdateRequest$inboundSchema = z.object({
    description: z.nullable(z.string()).optional(),
    displayName: z.nullable(z.string()).optional(),
    notificationConfig: z.nullable(NotificationConfig$inboundSchema).optional(),
});
/** @internal */
export const ConflictMonitorUpdateRequest$outboundSchema = z.object({
    description: z.nullable(z.string()).optional(),
    displayName: z.nullable(z.string()).optional(),
    notificationConfig: z.nullable(NotificationConfig$outboundSchema).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ConflictMonitorUpdateRequest$;
(function (ConflictMonitorUpdateRequest$) {
    /** @deprecated use `ConflictMonitorUpdateRequest$inboundSchema` instead. */
    ConflictMonitorUpdateRequest$.inboundSchema = ConflictMonitorUpdateRequest$inboundSchema;
    /** @deprecated use `ConflictMonitorUpdateRequest$outboundSchema` instead. */
    ConflictMonitorUpdateRequest$.outboundSchema = ConflictMonitorUpdateRequest$outboundSchema;
})(ConflictMonitorUpdateRequest$ || (ConflictMonitorUpdateRequest$ = {}));
export function conflictMonitorUpdateRequestToJSON(conflictMonitorUpdateRequest) {
    return JSON.stringify(ConflictMonitorUpdateRequest$outboundSchema.parse(conflictMonitorUpdateRequest));
}
export function conflictMonitorUpdateRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => ConflictMonitorUpdateRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ConflictMonitorUpdateRequest' from JSON`);
}
