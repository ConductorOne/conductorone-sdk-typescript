/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  TaskExpandMask,
  TaskExpandMask$inboundSchema,
  TaskExpandMask$Outbound,
  TaskExpandMask$outboundSchema,
} from "./taskexpandmask.js";

/**
 * The TaskActionsServiceUpdateRequestDataRequest message.
 */
export type TaskActionsServiceUpdateRequestDataRequest = {
  data?: { [k: string]: any } | null | undefined;
  expandMask?: TaskExpandMask | null | undefined;
};

/** @internal */
export const TaskActionsServiceUpdateRequestDataRequest$inboundSchema:
  z.ZodType<TaskActionsServiceUpdateRequestDataRequest, z.ZodTypeDef, unknown> =
    z.object({
      data: z.nullable(z.record(z.any())).optional(),
      expandMask: z.nullable(TaskExpandMask$inboundSchema).optional(),
    });

/** @internal */
export type TaskActionsServiceUpdateRequestDataRequest$Outbound = {
  data?: { [k: string]: any } | null | undefined;
  expandMask?: TaskExpandMask$Outbound | null | undefined;
};

/** @internal */
export const TaskActionsServiceUpdateRequestDataRequest$outboundSchema:
  z.ZodType<
    TaskActionsServiceUpdateRequestDataRequest$Outbound,
    z.ZodTypeDef,
    TaskActionsServiceUpdateRequestDataRequest
  > = z.object({
    data: z.nullable(z.record(z.any())).optional(),
    expandMask: z.nullable(TaskExpandMask$outboundSchema).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TaskActionsServiceUpdateRequestDataRequest$ {
  /** @deprecated use `TaskActionsServiceUpdateRequestDataRequest$inboundSchema` instead. */
  export const inboundSchema =
    TaskActionsServiceUpdateRequestDataRequest$inboundSchema;
  /** @deprecated use `TaskActionsServiceUpdateRequestDataRequest$outboundSchema` instead. */
  export const outboundSchema =
    TaskActionsServiceUpdateRequestDataRequest$outboundSchema;
  /** @deprecated use `TaskActionsServiceUpdateRequestDataRequest$Outbound` instead. */
  export type Outbound = TaskActionsServiceUpdateRequestDataRequest$Outbound;
}

export function taskActionsServiceUpdateRequestDataRequestToJSON(
  taskActionsServiceUpdateRequestDataRequest:
    TaskActionsServiceUpdateRequestDataRequest,
): string {
  return JSON.stringify(
    TaskActionsServiceUpdateRequestDataRequest$outboundSchema.parse(
      taskActionsServiceUpdateRequestDataRequest,
    ),
  );
}

export function taskActionsServiceUpdateRequestDataRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  TaskActionsServiceUpdateRequestDataRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      TaskActionsServiceUpdateRequestDataRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'TaskActionsServiceUpdateRequestDataRequest' from JSON`,
  );
}
