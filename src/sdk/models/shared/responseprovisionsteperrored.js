/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
/** @internal */
export const ResponseProvisionStepErrored$inboundSchema = z.object({
    comment: z.nullable(z.string()).optional(),
});
/** @internal */
export const ResponseProvisionStepErrored$outboundSchema = z.object({
    comment: z.nullable(z.string()).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ResponseProvisionStepErrored$;
(function (ResponseProvisionStepErrored$) {
    /** @deprecated use `ResponseProvisionStepErrored$inboundSchema` instead. */
    ResponseProvisionStepErrored$.inboundSchema = ResponseProvisionStepErrored$inboundSchema;
    /** @deprecated use `ResponseProvisionStepErrored$outboundSchema` instead. */
    ResponseProvisionStepErrored$.outboundSchema = ResponseProvisionStepErrored$outboundSchema;
})(ResponseProvisionStepErrored$ || (ResponseProvisionStepErrored$ = {}));
export function responseProvisionStepErroredToJSON(responseProvisionStepErrored) {
    return JSON.stringify(ResponseProvisionStepErrored$outboundSchema.parse(responseProvisionStepErrored));
}
export function responseProvisionStepErroredFromJSON(jsonString) {
    return safeParse(jsonString, (x) => ResponseProvisionStepErrored$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ResponseProvisionStepErrored' from JSON`);
}
