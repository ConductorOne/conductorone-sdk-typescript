/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
/** @internal */
export const RequestCatalogManagementServiceAddAccessEntitlementsResponse$inboundSchema = z.object({});
/** @internal */
export const RequestCatalogManagementServiceAddAccessEntitlementsResponse$outboundSchema = z.object({});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RequestCatalogManagementServiceAddAccessEntitlementsResponse$;
(function (RequestCatalogManagementServiceAddAccessEntitlementsResponse$) {
    /** @deprecated use `RequestCatalogManagementServiceAddAccessEntitlementsResponse$inboundSchema` instead. */
    RequestCatalogManagementServiceAddAccessEntitlementsResponse$.inboundSchema = RequestCatalogManagementServiceAddAccessEntitlementsResponse$inboundSchema;
    /** @deprecated use `RequestCatalogManagementServiceAddAccessEntitlementsResponse$outboundSchema` instead. */
    RequestCatalogManagementServiceAddAccessEntitlementsResponse$.outboundSchema = RequestCatalogManagementServiceAddAccessEntitlementsResponse$outboundSchema;
})(RequestCatalogManagementServiceAddAccessEntitlementsResponse$ || (RequestCatalogManagementServiceAddAccessEntitlementsResponse$ = {}));
export function requestCatalogManagementServiceAddAccessEntitlementsResponseToJSON(requestCatalogManagementServiceAddAccessEntitlementsResponse) {
    return JSON.stringify(RequestCatalogManagementServiceAddAccessEntitlementsResponse$outboundSchema
        .parse(requestCatalogManagementServiceAddAccessEntitlementsResponse));
}
export function requestCatalogManagementServiceAddAccessEntitlementsResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => RequestCatalogManagementServiceAddAccessEntitlementsResponse$inboundSchema
        .parse(JSON.parse(x)), `Failed to parse 'RequestCatalogManagementServiceAddAccessEntitlementsResponse' from JSON`);
}
