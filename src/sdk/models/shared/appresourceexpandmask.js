/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
/** @internal */
export const AppResourceExpandMask$inboundSchema = z.object({
    paths: z.nullable(z.array(z.string())).optional(),
});
/** @internal */
export const AppResourceExpandMask$outboundSchema = z.object({
    paths: z.nullable(z.array(z.string())).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var AppResourceExpandMask$;
(function (AppResourceExpandMask$) {
    /** @deprecated use `AppResourceExpandMask$inboundSchema` instead. */
    AppResourceExpandMask$.inboundSchema = AppResourceExpandMask$inboundSchema;
    /** @deprecated use `AppResourceExpandMask$outboundSchema` instead. */
    AppResourceExpandMask$.outboundSchema = AppResourceExpandMask$outboundSchema;
})(AppResourceExpandMask$ || (AppResourceExpandMask$ = {}));
export function appResourceExpandMaskToJSON(appResourceExpandMask) {
    return JSON.stringify(AppResourceExpandMask$outboundSchema.parse(appResourceExpandMask));
}
export function appResourceExpandMaskFromJSON(jsonString) {
    return safeParse(jsonString, (x) => AppResourceExpandMask$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'AppResourceExpandMask' from JSON`);
}
