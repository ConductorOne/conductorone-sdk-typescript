/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
/** @internal */
export const RequestCatalogManagementServiceUpdateAppEntitlementsResponse$inboundSchema = z.object({});
/** @internal */
export const RequestCatalogManagementServiceUpdateAppEntitlementsResponse$outboundSchema = z.object({});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RequestCatalogManagementServiceUpdateAppEntitlementsResponse$;
(function (RequestCatalogManagementServiceUpdateAppEntitlementsResponse$) {
    /** @deprecated use `RequestCatalogManagementServiceUpdateAppEntitlementsResponse$inboundSchema` instead. */
    RequestCatalogManagementServiceUpdateAppEntitlementsResponse$.inboundSchema = RequestCatalogManagementServiceUpdateAppEntitlementsResponse$inboundSchema;
    /** @deprecated use `RequestCatalogManagementServiceUpdateAppEntitlementsResponse$outboundSchema` instead. */
    RequestCatalogManagementServiceUpdateAppEntitlementsResponse$.outboundSchema = RequestCatalogManagementServiceUpdateAppEntitlementsResponse$outboundSchema;
})(RequestCatalogManagementServiceUpdateAppEntitlementsResponse$ || (RequestCatalogManagementServiceUpdateAppEntitlementsResponse$ = {}));
export function requestCatalogManagementServiceUpdateAppEntitlementsResponseToJSON(requestCatalogManagementServiceUpdateAppEntitlementsResponse) {
    return JSON.stringify(RequestCatalogManagementServiceUpdateAppEntitlementsResponse$outboundSchema
        .parse(requestCatalogManagementServiceUpdateAppEntitlementsResponse));
}
export function requestCatalogManagementServiceUpdateAppEntitlementsResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => RequestCatalogManagementServiceUpdateAppEntitlementsResponse$inboundSchema
        .parse(JSON.parse(x)), `Failed to parse 'RequestCatalogManagementServiceUpdateAppEntitlementsResponse' from JSON`);
}
