/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
/** @internal */
export const ProvisionTarget$inboundSchema = z.object({
    appEntitlementId: z.nullable(z.string()).optional(),
    appId: z.nullable(z.string()).optional(),
    appUserId: z.nullable(z.string()).optional(),
    grantDuration: z.nullable(z.string()).optional(),
});
/** @internal */
export const ProvisionTarget$outboundSchema = z.object({
    appEntitlementId: z.nullable(z.string()).optional(),
    appId: z.nullable(z.string()).optional(),
    appUserId: z.nullable(z.string()).optional(),
    grantDuration: z.nullable(z.string()).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ProvisionTarget$;
(function (ProvisionTarget$) {
    /** @deprecated use `ProvisionTarget$inboundSchema` instead. */
    ProvisionTarget$.inboundSchema = ProvisionTarget$inboundSchema;
    /** @deprecated use `ProvisionTarget$outboundSchema` instead. */
    ProvisionTarget$.outboundSchema = ProvisionTarget$outboundSchema;
})(ProvisionTarget$ || (ProvisionTarget$ = {}));
export function provisionTargetToJSON(provisionTarget) {
    return JSON.stringify(ProvisionTarget$outboundSchema.parse(provisionTarget));
}
export function provisionTargetFromJSON(jsonString) {
    return safeParse(jsonString, (x) => ProvisionTarget$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ProvisionTarget' from JSON`);
}
