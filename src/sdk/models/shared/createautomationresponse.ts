/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  AppEntitlementAutomation,
  AppEntitlementAutomation$inboundSchema,
  AppEntitlementAutomation$Outbound,
  AppEntitlementAutomation$outboundSchema,
} from "./appentitlementautomation.js";

/**
 * The CreateAutomationResponse message.
 */
export type CreateAutomationResponse = {
  automation?: AppEntitlementAutomation | null | undefined;
};

/** @internal */
export const CreateAutomationResponse$inboundSchema: z.ZodType<
  CreateAutomationResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  automation: z.nullable(AppEntitlementAutomation$inboundSchema).optional(),
});

/** @internal */
export type CreateAutomationResponse$Outbound = {
  automation?: AppEntitlementAutomation$Outbound | null | undefined;
};

/** @internal */
export const CreateAutomationResponse$outboundSchema: z.ZodType<
  CreateAutomationResponse$Outbound,
  z.ZodTypeDef,
  CreateAutomationResponse
> = z.object({
  automation: z.nullable(AppEntitlementAutomation$outboundSchema).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateAutomationResponse$ {
  /** @deprecated use `CreateAutomationResponse$inboundSchema` instead. */
  export const inboundSchema = CreateAutomationResponse$inboundSchema;
  /** @deprecated use `CreateAutomationResponse$outboundSchema` instead. */
  export const outboundSchema = CreateAutomationResponse$outboundSchema;
  /** @deprecated use `CreateAutomationResponse$Outbound` instead. */
  export type Outbound = CreateAutomationResponse$Outbound;
}

export function createAutomationResponseToJSON(
  createAutomationResponse: CreateAutomationResponse,
): string {
  return JSON.stringify(
    CreateAutomationResponse$outboundSchema.parse(createAutomationResponse),
  );
}

export function createAutomationResponseFromJSON(
  jsonString: string,
): SafeParseResult<CreateAutomationResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateAutomationResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateAutomationResponse' from JSON`,
  );
}
