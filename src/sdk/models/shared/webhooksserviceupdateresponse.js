/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Webhook1$inboundSchema, Webhook1$outboundSchema, } from "./webhook1.js";
/** @internal */
export const WebhooksServiceUpdateResponse$inboundSchema = z.object({
    webhook: z.nullable(Webhook1$inboundSchema).optional(),
});
/** @internal */
export const WebhooksServiceUpdateResponse$outboundSchema = z.object({
    webhook: z.nullable(Webhook1$outboundSchema).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var WebhooksServiceUpdateResponse$;
(function (WebhooksServiceUpdateResponse$) {
    /** @deprecated use `WebhooksServiceUpdateResponse$inboundSchema` instead. */
    WebhooksServiceUpdateResponse$.inboundSchema = WebhooksServiceUpdateResponse$inboundSchema;
    /** @deprecated use `WebhooksServiceUpdateResponse$outboundSchema` instead. */
    WebhooksServiceUpdateResponse$.outboundSchema = WebhooksServiceUpdateResponse$outboundSchema;
})(WebhooksServiceUpdateResponse$ || (WebhooksServiceUpdateResponse$ = {}));
export function webhooksServiceUpdateResponseToJSON(webhooksServiceUpdateResponse) {
    return JSON.stringify(WebhooksServiceUpdateResponse$outboundSchema.parse(webhooksServiceUpdateResponse));
}
export function webhooksServiceUpdateResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => WebhooksServiceUpdateResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'WebhooksServiceUpdateResponse' from JSON`);
}
