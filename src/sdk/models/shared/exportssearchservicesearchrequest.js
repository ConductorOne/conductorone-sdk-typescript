/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { ExporterRef$inboundSchema, ExporterRef$outboundSchema, } from "./exporterref.js";
/** @internal */
export const ExportsSearchServiceSearchRequest$inboundSchema = z.object({
    displayName: z.nullable(z.string()).optional(),
    pageSize: z.nullable(z.number().int()).optional(),
    pageToken: z.nullable(z.string()).optional(),
    query: z.nullable(z.string()).optional(),
    refs: z.nullable(z.array(ExporterRef$inboundSchema)).optional(),
});
/** @internal */
export const ExportsSearchServiceSearchRequest$outboundSchema = z.object({
    displayName: z.nullable(z.string()).optional(),
    pageSize: z.nullable(z.number().int()).optional(),
    pageToken: z.nullable(z.string()).optional(),
    query: z.nullable(z.string()).optional(),
    refs: z.nullable(z.array(ExporterRef$outboundSchema)).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ExportsSearchServiceSearchRequest$;
(function (ExportsSearchServiceSearchRequest$) {
    /** @deprecated use `ExportsSearchServiceSearchRequest$inboundSchema` instead. */
    ExportsSearchServiceSearchRequest$.inboundSchema = ExportsSearchServiceSearchRequest$inboundSchema;
    /** @deprecated use `ExportsSearchServiceSearchRequest$outboundSchema` instead. */
    ExportsSearchServiceSearchRequest$.outboundSchema = ExportsSearchServiceSearchRequest$outboundSchema;
})(ExportsSearchServiceSearchRequest$ || (ExportsSearchServiceSearchRequest$ = {}));
export function exportsSearchServiceSearchRequestToJSON(exportsSearchServiceSearchRequest) {
    return JSON.stringify(ExportsSearchServiceSearchRequest$outboundSchema.parse(exportsSearchServiceSearchRequest));
}
export function exportsSearchServiceSearchRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => ExportsSearchServiceSearchRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ExportsSearchServiceSearchRequest' from JSON`);
}
