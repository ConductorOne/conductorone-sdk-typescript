/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
/** @internal */
export const UpdateOrgDomainRequest$inboundSchema = z.object({
    newDomains: z.nullable(z.array(z.string())).optional(),
});
/** @internal */
export const UpdateOrgDomainRequest$outboundSchema = z.object({
    newDomains: z.nullable(z.array(z.string())).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var UpdateOrgDomainRequest$;
(function (UpdateOrgDomainRequest$) {
    /** @deprecated use `UpdateOrgDomainRequest$inboundSchema` instead. */
    UpdateOrgDomainRequest$.inboundSchema = UpdateOrgDomainRequest$inboundSchema;
    /** @deprecated use `UpdateOrgDomainRequest$outboundSchema` instead. */
    UpdateOrgDomainRequest$.outboundSchema = UpdateOrgDomainRequest$outboundSchema;
})(UpdateOrgDomainRequest$ || (UpdateOrgDomainRequest$ = {}));
export function updateOrgDomainRequestToJSON(updateOrgDomainRequest) {
    return JSON.stringify(UpdateOrgDomainRequest$outboundSchema.parse(updateOrgDomainRequest));
}
export function updateOrgDomainRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => UpdateOrgDomainRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'UpdateOrgDomainRequest' from JSON`);
}
