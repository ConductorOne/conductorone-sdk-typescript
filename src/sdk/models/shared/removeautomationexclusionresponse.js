/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
/** @internal */
export const RemoveAutomationExclusionResponse$inboundSchema = z.object({});
/** @internal */
export const RemoveAutomationExclusionResponse$outboundSchema = z.object({});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RemoveAutomationExclusionResponse$;
(function (RemoveAutomationExclusionResponse$) {
    /** @deprecated use `RemoveAutomationExclusionResponse$inboundSchema` instead. */
    RemoveAutomationExclusionResponse$.inboundSchema = RemoveAutomationExclusionResponse$inboundSchema;
    /** @deprecated use `RemoveAutomationExclusionResponse$outboundSchema` instead. */
    RemoveAutomationExclusionResponse$.outboundSchema = RemoveAutomationExclusionResponse$outboundSchema;
})(RemoveAutomationExclusionResponse$ || (RemoveAutomationExclusionResponse$ = {}));
export function removeAutomationExclusionResponseToJSON(removeAutomationExclusionResponse) {
    return JSON.stringify(RemoveAutomationExclusionResponse$outboundSchema.parse(removeAutomationExclusionResponse));
}
export function removeAutomationExclusionResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => RemoveAutomationExclusionResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'RemoveAutomationExclusionResponse' from JSON`);
}
