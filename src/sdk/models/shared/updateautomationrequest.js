/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { AutomationInput$inboundSchema, AutomationInput$outboundSchema, } from "./automation.js";
/** @internal */
export const UpdateAutomationRequest$inboundSchema = z.object({
    automation: z.nullable(AutomationInput$inboundSchema).optional(),
    updateMask: z.nullable(z.string()).optional(),
});
/** @internal */
export const UpdateAutomationRequest$outboundSchema = z.object({
    automation: z.nullable(AutomationInput$outboundSchema).optional(),
    updateMask: z.nullable(z.string()).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var UpdateAutomationRequest$;
(function (UpdateAutomationRequest$) {
    /** @deprecated use `UpdateAutomationRequest$inboundSchema` instead. */
    UpdateAutomationRequest$.inboundSchema = UpdateAutomationRequest$inboundSchema;
    /** @deprecated use `UpdateAutomationRequest$outboundSchema` instead. */
    UpdateAutomationRequest$.outboundSchema = UpdateAutomationRequest$outboundSchema;
})(UpdateAutomationRequest$ || (UpdateAutomationRequest$ = {}));
export function updateAutomationRequestToJSON(updateAutomationRequest) {
    return JSON.stringify(UpdateAutomationRequest$outboundSchema.parse(updateAutomationRequest));
}
export function updateAutomationRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => UpdateAutomationRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'UpdateAutomationRequest' from JSON`);
}
