/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Automation$inboundSchema, Automation$outboundSchema, } from "./automation.js";
/** @internal */
export const UpdateAutomationResponse$inboundSchema = z.object({
    automation: z.nullable(Automation$inboundSchema).optional(),
    webhookHmacSecret: z.nullable(z.string()).optional(),
});
/** @internal */
export const UpdateAutomationResponse$outboundSchema = z.object({
    automation: z.nullable(Automation$outboundSchema).optional(),
    webhookHmacSecret: z.nullable(z.string()).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var UpdateAutomationResponse$;
(function (UpdateAutomationResponse$) {
    /** @deprecated use `UpdateAutomationResponse$inboundSchema` instead. */
    UpdateAutomationResponse$.inboundSchema = UpdateAutomationResponse$inboundSchema;
    /** @deprecated use `UpdateAutomationResponse$outboundSchema` instead. */
    UpdateAutomationResponse$.outboundSchema = UpdateAutomationResponse$outboundSchema;
})(UpdateAutomationResponse$ || (UpdateAutomationResponse$ = {}));
export function updateAutomationResponseToJSON(updateAutomationResponse) {
    return JSON.stringify(UpdateAutomationResponse$outboundSchema.parse(updateAutomationResponse));
}
export function updateAutomationResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => UpdateAutomationResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'UpdateAutomationResponse' from JSON`);
}
