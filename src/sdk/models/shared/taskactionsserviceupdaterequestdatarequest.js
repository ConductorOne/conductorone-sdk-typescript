/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { TaskExpandMask$inboundSchema, TaskExpandMask$outboundSchema, } from "./taskexpandmask.js";
/** @internal */
export const TaskActionsServiceUpdateRequestDataRequest$inboundSchema = z.object({
    data: z.nullable(z.record(z.any())).optional(),
    expandMask: z.nullable(TaskExpandMask$inboundSchema).optional(),
});
/** @internal */
export const TaskActionsServiceUpdateRequestDataRequest$outboundSchema = z.object({
    data: z.nullable(z.record(z.any())).optional(),
    expandMask: z.nullable(TaskExpandMask$outboundSchema).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var TaskActionsServiceUpdateRequestDataRequest$;
(function (TaskActionsServiceUpdateRequestDataRequest$) {
    /** @deprecated use `TaskActionsServiceUpdateRequestDataRequest$inboundSchema` instead. */
    TaskActionsServiceUpdateRequestDataRequest$.inboundSchema = TaskActionsServiceUpdateRequestDataRequest$inboundSchema;
    /** @deprecated use `TaskActionsServiceUpdateRequestDataRequest$outboundSchema` instead. */
    TaskActionsServiceUpdateRequestDataRequest$.outboundSchema = TaskActionsServiceUpdateRequestDataRequest$outboundSchema;
})(TaskActionsServiceUpdateRequestDataRequest$ || (TaskActionsServiceUpdateRequestDataRequest$ = {}));
export function taskActionsServiceUpdateRequestDataRequestToJSON(taskActionsServiceUpdateRequestDataRequest) {
    return JSON.stringify(TaskActionsServiceUpdateRequestDataRequest$outboundSchema.parse(taskActionsServiceUpdateRequestDataRequest));
}
export function taskActionsServiceUpdateRequestDataRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => TaskActionsServiceUpdateRequestDataRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'TaskActionsServiceUpdateRequestDataRequest' from JSON`);
}
