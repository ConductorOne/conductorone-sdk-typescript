/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
/** @internal */
export const DeleteAttributeValueRequest$inboundSchema = z.object({});
/** @internal */
export const DeleteAttributeValueRequest$outboundSchema = z.object({});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var DeleteAttributeValueRequest$;
(function (DeleteAttributeValueRequest$) {
    /** @deprecated use `DeleteAttributeValueRequest$inboundSchema` instead. */
    DeleteAttributeValueRequest$.inboundSchema = DeleteAttributeValueRequest$inboundSchema;
    /** @deprecated use `DeleteAttributeValueRequest$outboundSchema` instead. */
    DeleteAttributeValueRequest$.outboundSchema = DeleteAttributeValueRequest$outboundSchema;
})(DeleteAttributeValueRequest$ || (DeleteAttributeValueRequest$ = {}));
export function deleteAttributeValueRequestToJSON(deleteAttributeValueRequest) {
    return JSON.stringify(DeleteAttributeValueRequest$outboundSchema.parse(deleteAttributeValueRequest));
}
export function deleteAttributeValueRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => DeleteAttributeValueRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'DeleteAttributeValueRequest' from JSON`);
}
