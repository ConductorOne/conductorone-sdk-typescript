/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * The WebhooksServiceCreateRequest message.
 */
export type WebhooksServiceCreateRequest = {
  /**
   * The description field.
   */
  description?: string | null | undefined;
  /**
   * The displayName field.
   */
  displayName: string;
  /**
   * The url field.
   */
  url: string;
};

/** @internal */
export const WebhooksServiceCreateRequest$inboundSchema: z.ZodType<
  WebhooksServiceCreateRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  description: z.nullable(z.string()).optional(),
  displayName: z.string(),
  url: z.string(),
});

/** @internal */
export type WebhooksServiceCreateRequest$Outbound = {
  description?: string | null | undefined;
  displayName: string;
  url: string;
};

/** @internal */
export const WebhooksServiceCreateRequest$outboundSchema: z.ZodType<
  WebhooksServiceCreateRequest$Outbound,
  z.ZodTypeDef,
  WebhooksServiceCreateRequest
> = z.object({
  description: z.nullable(z.string()).optional(),
  displayName: z.string(),
  url: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace WebhooksServiceCreateRequest$ {
  /** @deprecated use `WebhooksServiceCreateRequest$inboundSchema` instead. */
  export const inboundSchema = WebhooksServiceCreateRequest$inboundSchema;
  /** @deprecated use `WebhooksServiceCreateRequest$outboundSchema` instead. */
  export const outboundSchema = WebhooksServiceCreateRequest$outboundSchema;
  /** @deprecated use `WebhooksServiceCreateRequest$Outbound` instead. */
  export type Outbound = WebhooksServiceCreateRequest$Outbound;
}

export function webhooksServiceCreateRequestToJSON(
  webhooksServiceCreateRequest: WebhooksServiceCreateRequest,
): string {
  return JSON.stringify(
    WebhooksServiceCreateRequest$outboundSchema.parse(
      webhooksServiceCreateRequest,
    ),
  );
}

export function webhooksServiceCreateRequestFromJSON(
  jsonString: string,
): SafeParseResult<WebhooksServiceCreateRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => WebhooksServiceCreateRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'WebhooksServiceCreateRequest' from JSON`,
  );
}
