/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
/** @internal */
export const OAuth2AuthorizedAs$inboundSchema = z.object({
    authEmail: z.nullable(z.string()).optional(),
    authorizedAt: z.nullable(z.string().datetime({ offset: true }).transform(v => new Date(v))).optional(),
});
/** @internal */
export const OAuth2AuthorizedAs$outboundSchema = z.object({
    authEmail: z.nullable(z.string()).optional(),
    authorizedAt: z.nullable(z.date().transform(v => v.toISOString())).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var OAuth2AuthorizedAs$;
(function (OAuth2AuthorizedAs$) {
    /** @deprecated use `OAuth2AuthorizedAs$inboundSchema` instead. */
    OAuth2AuthorizedAs$.inboundSchema = OAuth2AuthorizedAs$inboundSchema;
    /** @deprecated use `OAuth2AuthorizedAs$outboundSchema` instead. */
    OAuth2AuthorizedAs$.outboundSchema = OAuth2AuthorizedAs$outboundSchema;
})(OAuth2AuthorizedAs$ || (OAuth2AuthorizedAs$ = {}));
export function oAuth2AuthorizedAsToJSON(oAuth2AuthorizedAs) {
    return JSON.stringify(OAuth2AuthorizedAs$outboundSchema.parse(oAuth2AuthorizedAs));
}
export function oAuth2AuthorizedAsFromJSON(jsonString) {
    return safeParse(jsonString, (x) => OAuth2AuthorizedAs$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'OAuth2AuthorizedAs' from JSON`);
}
