/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";
import { collectExtraKeys as collectExtraKeys$, safeParse, } from "../../../lib/schemas.js";
import { TaskView$inboundSchema, TaskView$outboundSchema, } from "./taskview.js";
/** @internal */
export const TaskActionsServiceApproveResponseExpanded$inboundSchema = collectExtraKeys$(z.object({
    "@type": z.string().optional(),
}).catchall(z.any()), "additionalProperties", true).transform((v) => {
    return remap$(v, {
        "@type": "atType",
    });
});
/** @internal */
export const TaskActionsServiceApproveResponseExpanded$outboundSchema = z.object({
    atType: z.string().optional(),
    additionalProperties: z.record(z.any()),
}).transform((v) => {
    return {
        ...v.additionalProperties,
        ...remap$(v, {
            atType: "@type",
            additionalProperties: null,
        }),
    };
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var TaskActionsServiceApproveResponseExpanded$;
(function (TaskActionsServiceApproveResponseExpanded$) {
    /** @deprecated use `TaskActionsServiceApproveResponseExpanded$inboundSchema` instead. */
    TaskActionsServiceApproveResponseExpanded$.inboundSchema = TaskActionsServiceApproveResponseExpanded$inboundSchema;
    /** @deprecated use `TaskActionsServiceApproveResponseExpanded$outboundSchema` instead. */
    TaskActionsServiceApproveResponseExpanded$.outboundSchema = TaskActionsServiceApproveResponseExpanded$outboundSchema;
})(TaskActionsServiceApproveResponseExpanded$ || (TaskActionsServiceApproveResponseExpanded$ = {}));
export function taskActionsServiceApproveResponseExpandedToJSON(taskActionsServiceApproveResponseExpanded) {
    return JSON.stringify(TaskActionsServiceApproveResponseExpanded$outboundSchema.parse(taskActionsServiceApproveResponseExpanded));
}
export function taskActionsServiceApproveResponseExpandedFromJSON(jsonString) {
    return safeParse(jsonString, (x) => TaskActionsServiceApproveResponseExpanded$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'TaskActionsServiceApproveResponseExpanded' from JSON`);
}
/** @internal */
export const TaskActionsServiceApproveResponse$inboundSchema = z.object({
    expanded: z.nullable(z.array(z.lazy(() => TaskActionsServiceApproveResponseExpanded$inboundSchema))).optional(),
    taskView: z.nullable(TaskView$inboundSchema).optional(),
    ticketActionId: z.nullable(z.string()).optional(),
});
/** @internal */
export const TaskActionsServiceApproveResponse$outboundSchema = z.object({
    expanded: z.nullable(z.array(z.lazy(() => TaskActionsServiceApproveResponseExpanded$outboundSchema))).optional(),
    taskView: z.nullable(TaskView$outboundSchema).optional(),
    ticketActionId: z.nullable(z.string()).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var TaskActionsServiceApproveResponse$;
(function (TaskActionsServiceApproveResponse$) {
    /** @deprecated use `TaskActionsServiceApproveResponse$inboundSchema` instead. */
    TaskActionsServiceApproveResponse$.inboundSchema = TaskActionsServiceApproveResponse$inboundSchema;
    /** @deprecated use `TaskActionsServiceApproveResponse$outboundSchema` instead. */
    TaskActionsServiceApproveResponse$.outboundSchema = TaskActionsServiceApproveResponse$outboundSchema;
})(TaskActionsServiceApproveResponse$ || (TaskActionsServiceApproveResponse$ = {}));
export function taskActionsServiceApproveResponseToJSON(taskActionsServiceApproveResponse) {
    return JSON.stringify(TaskActionsServiceApproveResponse$outboundSchema.parse(taskActionsServiceApproveResponse));
}
export function taskActionsServiceApproveResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => TaskActionsServiceApproveResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'TaskActionsServiceApproveResponse' from JSON`);
}
