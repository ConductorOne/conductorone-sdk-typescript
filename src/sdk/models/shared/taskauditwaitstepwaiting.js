/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
/** @internal */
export const TaskAuditWaitStepWaiting$inboundSchema = z.object({
    condition: z.nullable(z.string()).optional(),
    stepId: z.nullable(z.string()).optional(),
});
/** @internal */
export const TaskAuditWaitStepWaiting$outboundSchema = z.object({
    condition: z.nullable(z.string()).optional(),
    stepId: z.nullable(z.string()).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var TaskAuditWaitStepWaiting$;
(function (TaskAuditWaitStepWaiting$) {
    /** @deprecated use `TaskAuditWaitStepWaiting$inboundSchema` instead. */
    TaskAuditWaitStepWaiting$.inboundSchema = TaskAuditWaitStepWaiting$inboundSchema;
    /** @deprecated use `TaskAuditWaitStepWaiting$outboundSchema` instead. */
    TaskAuditWaitStepWaiting$.outboundSchema = TaskAuditWaitStepWaiting$outboundSchema;
})(TaskAuditWaitStepWaiting$ || (TaskAuditWaitStepWaiting$ = {}));
export function taskAuditWaitStepWaitingToJSON(taskAuditWaitStepWaiting) {
    return JSON.stringify(TaskAuditWaitStepWaiting$outboundSchema.parse(taskAuditWaitStepWaiting));
}
export function taskAuditWaitStepWaitingFromJSON(jsonString) {
    return safeParse(jsonString, (x) => TaskAuditWaitStepWaiting$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'TaskAuditWaitStepWaiting' from JSON`);
}
