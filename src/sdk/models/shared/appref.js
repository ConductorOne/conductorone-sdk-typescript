/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
/** @internal */
export const AppRef$inboundSchema = z
    .object({
    id: z.nullable(z.string()).optional(),
});
/** @internal */
export const AppRef$outboundSchema = z.object({
    id: z.nullable(z.string()).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var AppRef$;
(function (AppRef$) {
    /** @deprecated use `AppRef$inboundSchema` instead. */
    AppRef$.inboundSchema = AppRef$inboundSchema;
    /** @deprecated use `AppRef$outboundSchema` instead. */
    AppRef$.outboundSchema = AppRef$outboundSchema;
})(AppRef$ || (AppRef$ = {}));
export function appRefToJSON(appRef) {
    return JSON.stringify(AppRef$outboundSchema.parse(appRef));
}
export function appRefFromJSON(jsonString) {
    return safeParse(jsonString, (x) => AppRef$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'AppRef' from JSON`);
}
