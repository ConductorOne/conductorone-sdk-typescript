/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
/** @internal */
export const ResponsePolicyApprovalStepApprove$inboundSchema = z.object({
    comment: z.nullable(z.string()).optional(),
});
/** @internal */
export const ResponsePolicyApprovalStepApprove$outboundSchema = z.object({
    comment: z.nullable(z.string()).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ResponsePolicyApprovalStepApprove$;
(function (ResponsePolicyApprovalStepApprove$) {
    /** @deprecated use `ResponsePolicyApprovalStepApprove$inboundSchema` instead. */
    ResponsePolicyApprovalStepApprove$.inboundSchema = ResponsePolicyApprovalStepApprove$inboundSchema;
    /** @deprecated use `ResponsePolicyApprovalStepApprove$outboundSchema` instead. */
    ResponsePolicyApprovalStepApprove$.outboundSchema = ResponsePolicyApprovalStepApprove$outboundSchema;
})(ResponsePolicyApprovalStepApprove$ || (ResponsePolicyApprovalStepApprove$ = {}));
export function responsePolicyApprovalStepApproveToJSON(responsePolicyApprovalStepApprove) {
    return JSON.stringify(ResponsePolicyApprovalStepApprove$outboundSchema.parse(responsePolicyApprovalStepApprove));
}
export function responsePolicyApprovalStepApproveFromJSON(jsonString) {
    return safeParse(jsonString, (x) => ResponsePolicyApprovalStepApprove$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ResponsePolicyApprovalStepApprove' from JSON`);
}
