/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { FunctionCommit$inboundSchema, FunctionCommit$outboundSchema, } from "./functioncommit.js";
/** @internal */
export const FunctionsServiceGetCommitResponse$inboundSchema = z.object({
    commit: z.nullable(FunctionCommit$inboundSchema).optional(),
    content: z.nullable(z.record(z.string())).optional(),
});
/** @internal */
export const FunctionsServiceGetCommitResponse$outboundSchema = z.object({
    commit: z.nullable(FunctionCommit$outboundSchema).optional(),
    content: z.nullable(z.record(z.string())).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var FunctionsServiceGetCommitResponse$;
(function (FunctionsServiceGetCommitResponse$) {
    /** @deprecated use `FunctionsServiceGetCommitResponse$inboundSchema` instead. */
    FunctionsServiceGetCommitResponse$.inboundSchema = FunctionsServiceGetCommitResponse$inboundSchema;
    /** @deprecated use `FunctionsServiceGetCommitResponse$outboundSchema` instead. */
    FunctionsServiceGetCommitResponse$.outboundSchema = FunctionsServiceGetCommitResponse$outboundSchema;
})(FunctionsServiceGetCommitResponse$ || (FunctionsServiceGetCommitResponse$ = {}));
export function functionsServiceGetCommitResponseToJSON(functionsServiceGetCommitResponse) {
    return JSON.stringify(FunctionsServiceGetCommitResponse$outboundSchema.parse(functionsServiceGetCommitResponse));
}
export function functionsServiceGetCommitResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => FunctionsServiceGetCommitResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'FunctionsServiceGetCommitResponse' from JSON`);
}
