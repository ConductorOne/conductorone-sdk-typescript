/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { RoleInput$inboundSchema, RoleInput$outboundSchema, } from "./roleinput.js";
/** @internal */
export const UpdateRoleRequest$inboundSchema = z.object({
    role: z.nullable(RoleInput$inboundSchema).optional(),
    updateMask: z.nullable(z.string()).optional(),
});
/** @internal */
export const UpdateRoleRequest$outboundSchema = z.object({
    role: z.nullable(RoleInput$outboundSchema).optional(),
    updateMask: z.nullable(z.string()).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var UpdateRoleRequest$;
(function (UpdateRoleRequest$) {
    /** @deprecated use `UpdateRoleRequest$inboundSchema` instead. */
    UpdateRoleRequest$.inboundSchema = UpdateRoleRequest$inboundSchema;
    /** @deprecated use `UpdateRoleRequest$outboundSchema` instead. */
    UpdateRoleRequest$.outboundSchema = UpdateRoleRequest$outboundSchema;
})(UpdateRoleRequest$ || (UpdateRoleRequest$ = {}));
export function updateRoleRequestToJSON(updateRoleRequest) {
    return JSON.stringify(UpdateRoleRequest$outboundSchema.parse(updateRoleRequest));
}
export function updateRoleRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => UpdateRoleRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'UpdateRoleRequest' from JSON`);
}
