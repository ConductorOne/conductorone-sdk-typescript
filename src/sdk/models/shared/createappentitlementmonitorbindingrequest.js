/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { catchUnrecognizedEnum, } from "../../types/enums.js";
/**
 * The entitlementGroup field.
 */
export const CreateAppEntitlementMonitorBindingRequestEntitlementGroup = {
    EntitlementGroupUnspecified: "ENTITLEMENT_GROUP_UNSPECIFIED",
    EntitlementGroupA: "ENTITLEMENT_GROUP_A",
    EntitlementGroupB: "ENTITLEMENT_GROUP_B",
};
/** @internal */
export const CreateAppEntitlementMonitorBindingRequestEntitlementGroup$inboundSchema = z
    .union([
    z.nativeEnum(CreateAppEntitlementMonitorBindingRequestEntitlementGroup),
    z.string().transform(catchUnrecognizedEnum),
]);
/** @internal */
export const CreateAppEntitlementMonitorBindingRequestEntitlementGroup$outboundSchema = z.union([
    z.nativeEnum(CreateAppEntitlementMonitorBindingRequestEntitlementGroup),
    z.string().and(z.custom()),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateAppEntitlementMonitorBindingRequestEntitlementGroup$;
(function (CreateAppEntitlementMonitorBindingRequestEntitlementGroup$) {
    /** @deprecated use `CreateAppEntitlementMonitorBindingRequestEntitlementGroup$inboundSchema` instead. */
    CreateAppEntitlementMonitorBindingRequestEntitlementGroup$.inboundSchema = CreateAppEntitlementMonitorBindingRequestEntitlementGroup$inboundSchema;
    /** @deprecated use `CreateAppEntitlementMonitorBindingRequestEntitlementGroup$outboundSchema` instead. */
    CreateAppEntitlementMonitorBindingRequestEntitlementGroup$.outboundSchema = CreateAppEntitlementMonitorBindingRequestEntitlementGroup$outboundSchema;
})(CreateAppEntitlementMonitorBindingRequestEntitlementGroup$ || (CreateAppEntitlementMonitorBindingRequestEntitlementGroup$ = {}));
/** @internal */
export const CreateAppEntitlementMonitorBindingRequest$inboundSchema = z.object({
    appEntitlementId: z.nullable(z.string()).optional(),
    appId: z.nullable(z.string()).optional(),
    entitlementGroup: z.nullable(CreateAppEntitlementMonitorBindingRequestEntitlementGroup$inboundSchema).optional(),
    monitorId: z.nullable(z.string()).optional(),
});
/** @internal */
export const CreateAppEntitlementMonitorBindingRequest$outboundSchema = z.object({
    appEntitlementId: z.nullable(z.string()).optional(),
    appId: z.nullable(z.string()).optional(),
    entitlementGroup: z.nullable(CreateAppEntitlementMonitorBindingRequestEntitlementGroup$outboundSchema).optional(),
    monitorId: z.nullable(z.string()).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateAppEntitlementMonitorBindingRequest$;
(function (CreateAppEntitlementMonitorBindingRequest$) {
    /** @deprecated use `CreateAppEntitlementMonitorBindingRequest$inboundSchema` instead. */
    CreateAppEntitlementMonitorBindingRequest$.inboundSchema = CreateAppEntitlementMonitorBindingRequest$inboundSchema;
    /** @deprecated use `CreateAppEntitlementMonitorBindingRequest$outboundSchema` instead. */
    CreateAppEntitlementMonitorBindingRequest$.outboundSchema = CreateAppEntitlementMonitorBindingRequest$outboundSchema;
})(CreateAppEntitlementMonitorBindingRequest$ || (CreateAppEntitlementMonitorBindingRequest$ = {}));
export function createAppEntitlementMonitorBindingRequestToJSON(createAppEntitlementMonitorBindingRequest) {
    return JSON.stringify(CreateAppEntitlementMonitorBindingRequest$outboundSchema.parse(createAppEntitlementMonitorBindingRequest));
}
export function createAppEntitlementMonitorBindingRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CreateAppEntitlementMonitorBindingRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CreateAppEntitlementMonitorBindingRequest' from JSON`);
}
