/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * The request message for setting the app entitlement owners.
 */
export type SetAppEntitlementOwnersRequest = {
  /**
   * The user_ids field for the users to set as an owner of the app entitlement.
   */
  userIds?: Array<string> | null | undefined;
};

/** @internal */
export const SetAppEntitlementOwnersRequest$inboundSchema: z.ZodType<
  SetAppEntitlementOwnersRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  userIds: z.nullable(z.array(z.string())).optional(),
});

/** @internal */
export type SetAppEntitlementOwnersRequest$Outbound = {
  userIds?: Array<string> | null | undefined;
};

/** @internal */
export const SetAppEntitlementOwnersRequest$outboundSchema: z.ZodType<
  SetAppEntitlementOwnersRequest$Outbound,
  z.ZodTypeDef,
  SetAppEntitlementOwnersRequest
> = z.object({
  userIds: z.nullable(z.array(z.string())).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SetAppEntitlementOwnersRequest$ {
  /** @deprecated use `SetAppEntitlementOwnersRequest$inboundSchema` instead. */
  export const inboundSchema = SetAppEntitlementOwnersRequest$inboundSchema;
  /** @deprecated use `SetAppEntitlementOwnersRequest$outboundSchema` instead. */
  export const outboundSchema = SetAppEntitlementOwnersRequest$outboundSchema;
  /** @deprecated use `SetAppEntitlementOwnersRequest$Outbound` instead. */
  export type Outbound = SetAppEntitlementOwnersRequest$Outbound;
}

export function setAppEntitlementOwnersRequestToJSON(
  setAppEntitlementOwnersRequest: SetAppEntitlementOwnersRequest,
): string {
  return JSON.stringify(
    SetAppEntitlementOwnersRequest$outboundSchema.parse(
      setAppEntitlementOwnersRequest,
    ),
  );
}

export function setAppEntitlementOwnersRequestFromJSON(
  jsonString: string,
): SafeParseResult<SetAppEntitlementOwnersRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => SetAppEntitlementOwnersRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'SetAppEntitlementOwnersRequest' from JSON`,
  );
}
