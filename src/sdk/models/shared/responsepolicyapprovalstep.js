/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { ResponsePolicyApprovalReplacePolicy$inboundSchema, ResponsePolicyApprovalReplacePolicy$outboundSchema, } from "./responsepolicyapprovalreplacepolicy.js";
import { ResponsePolicyApprovalStepApprove$inboundSchema, ResponsePolicyApprovalStepApprove$outboundSchema, } from "./responsepolicyapprovalstepapprove.js";
import { ResponsePolicyApprovalStepDeny$inboundSchema, ResponsePolicyApprovalStepDeny$outboundSchema, } from "./responsepolicyapprovalstepdeny.js";
import { ResponsePolicyApprovalStepReassign$inboundSchema, ResponsePolicyApprovalStepReassign$outboundSchema, } from "./responsepolicyapprovalstepreassign.js";
/** @internal */
export const ResponsePolicyApprovalStep$inboundSchema = z.object({
    approve: z.nullable(ResponsePolicyApprovalStepApprove$inboundSchema)
        .optional(),
    deny: z.nullable(ResponsePolicyApprovalStepDeny$inboundSchema).optional(),
    reassign: z.nullable(ResponsePolicyApprovalStepReassign$inboundSchema)
        .optional(),
    replacePolicy: z.nullable(ResponsePolicyApprovalReplacePolicy$inboundSchema)
        .optional(),
    version: z.nullable(z.string()).optional(),
});
/** @internal */
export const ResponsePolicyApprovalStep$outboundSchema = z.object({
    approve: z.nullable(ResponsePolicyApprovalStepApprove$outboundSchema)
        .optional(),
    deny: z.nullable(ResponsePolicyApprovalStepDeny$outboundSchema).optional(),
    reassign: z.nullable(ResponsePolicyApprovalStepReassign$outboundSchema)
        .optional(),
    replacePolicy: z.nullable(ResponsePolicyApprovalReplacePolicy$outboundSchema)
        .optional(),
    version: z.nullable(z.string()).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ResponsePolicyApprovalStep$;
(function (ResponsePolicyApprovalStep$) {
    /** @deprecated use `ResponsePolicyApprovalStep$inboundSchema` instead. */
    ResponsePolicyApprovalStep$.inboundSchema = ResponsePolicyApprovalStep$inboundSchema;
    /** @deprecated use `ResponsePolicyApprovalStep$outboundSchema` instead. */
    ResponsePolicyApprovalStep$.outboundSchema = ResponsePolicyApprovalStep$outboundSchema;
})(ResponsePolicyApprovalStep$ || (ResponsePolicyApprovalStep$ = {}));
export function responsePolicyApprovalStepToJSON(responsePolicyApprovalStep) {
    return JSON.stringify(ResponsePolicyApprovalStep$outboundSchema.parse(responsePolicyApprovalStep));
}
export function responsePolicyApprovalStepFromJSON(jsonString) {
    return safeParse(jsonString, (x) => ResponsePolicyApprovalStep$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ResponsePolicyApprovalStep' from JSON`);
}
