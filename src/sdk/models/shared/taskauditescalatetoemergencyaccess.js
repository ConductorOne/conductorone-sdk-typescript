/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
/** @internal */
export const TaskAuditEscalateToEmergencyAccess$inboundSchema = z.object({
    oldPolicyId: z.nullable(z.string()).optional(),
    oldPolicyStepId: z.nullable(z.string()).optional(),
});
/** @internal */
export const TaskAuditEscalateToEmergencyAccess$outboundSchema = z.object({
    oldPolicyId: z.nullable(z.string()).optional(),
    oldPolicyStepId: z.nullable(z.string()).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var TaskAuditEscalateToEmergencyAccess$;
(function (TaskAuditEscalateToEmergencyAccess$) {
    /** @deprecated use `TaskAuditEscalateToEmergencyAccess$inboundSchema` instead. */
    TaskAuditEscalateToEmergencyAccess$.inboundSchema = TaskAuditEscalateToEmergencyAccess$inboundSchema;
    /** @deprecated use `TaskAuditEscalateToEmergencyAccess$outboundSchema` instead. */
    TaskAuditEscalateToEmergencyAccess$.outboundSchema = TaskAuditEscalateToEmergencyAccess$outboundSchema;
})(TaskAuditEscalateToEmergencyAccess$ || (TaskAuditEscalateToEmergencyAccess$ = {}));
export function taskAuditEscalateToEmergencyAccessToJSON(taskAuditEscalateToEmergencyAccess) {
    return JSON.stringify(TaskAuditEscalateToEmergencyAccess$outboundSchema.parse(taskAuditEscalateToEmergencyAccess));
}
export function taskAuditEscalateToEmergencyAccessFromJSON(jsonString) {
    return safeParse(jsonString, (x) => TaskAuditEscalateToEmergencyAccess$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'TaskAuditEscalateToEmergencyAccess' from JSON`);
}
