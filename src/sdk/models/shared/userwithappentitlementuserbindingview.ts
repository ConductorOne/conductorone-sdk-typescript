/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  User,
  User$inboundSchema,
  User$Outbound,
  User$outboundSchema,
} from "./user.js";

/**
 * The UserWithAppEntitlementUserBindingView message.
 */
export type UserWithAppEntitlementUserBindingView = {
  /**
   * The appEntitlementId field.
   */
  appEntitlementId?: string | null | undefined;
  /**
   * The appId field.
   */
  appId?: string | null | undefined;
  /**
   * The appUserId field.
   */
  appUserId?: string | null | undefined;
  user?: User | null | undefined;
};

/** @internal */
export const UserWithAppEntitlementUserBindingView$inboundSchema: z.ZodType<
  UserWithAppEntitlementUserBindingView,
  z.ZodTypeDef,
  unknown
> = z.object({
  appEntitlementId: z.nullable(z.string()).optional(),
  appId: z.nullable(z.string()).optional(),
  appUserId: z.nullable(z.string()).optional(),
  user: z.nullable(User$inboundSchema).optional(),
});

/** @internal */
export type UserWithAppEntitlementUserBindingView$Outbound = {
  appEntitlementId?: string | null | undefined;
  appId?: string | null | undefined;
  appUserId?: string | null | undefined;
  user?: User$Outbound | null | undefined;
};

/** @internal */
export const UserWithAppEntitlementUserBindingView$outboundSchema: z.ZodType<
  UserWithAppEntitlementUserBindingView$Outbound,
  z.ZodTypeDef,
  UserWithAppEntitlementUserBindingView
> = z.object({
  appEntitlementId: z.nullable(z.string()).optional(),
  appId: z.nullable(z.string()).optional(),
  appUserId: z.nullable(z.string()).optional(),
  user: z.nullable(User$outboundSchema).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UserWithAppEntitlementUserBindingView$ {
  /** @deprecated use `UserWithAppEntitlementUserBindingView$inboundSchema` instead. */
  export const inboundSchema =
    UserWithAppEntitlementUserBindingView$inboundSchema;
  /** @deprecated use `UserWithAppEntitlementUserBindingView$outboundSchema` instead. */
  export const outboundSchema =
    UserWithAppEntitlementUserBindingView$outboundSchema;
  /** @deprecated use `UserWithAppEntitlementUserBindingView$Outbound` instead. */
  export type Outbound = UserWithAppEntitlementUserBindingView$Outbound;
}

export function userWithAppEntitlementUserBindingViewToJSON(
  userWithAppEntitlementUserBindingView: UserWithAppEntitlementUserBindingView,
): string {
  return JSON.stringify(
    UserWithAppEntitlementUserBindingView$outboundSchema.parse(
      userWithAppEntitlementUserBindingView,
    ),
  );
}

export function userWithAppEntitlementUserBindingViewFromJSON(
  jsonString: string,
): SafeParseResult<UserWithAppEntitlementUserBindingView, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      UserWithAppEntitlementUserBindingView$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UserWithAppEntitlementUserBindingView' from JSON`,
  );
}
