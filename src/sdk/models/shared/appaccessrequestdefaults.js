/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { catchUnrecognizedEnum, } from "../../types/enums.js";
/**
 * The last applied state of the app access request defaults.
 */
export const State = {
    AppAccessRequestDefaultsLastApplyStateUnspecified: "APP_ACCESS_REQUEST_DEFAULTS_LAST_APPLY_STATE_UNSPECIFIED",
    AppAccessRequestDefaultsLastApplyStateRunning: "APP_ACCESS_REQUEST_DEFAULTS_LAST_APPLY_STATE_RUNNING",
    AppAccessRequestDefaultsLastApplyStateSuccess: "APP_ACCESS_REQUEST_DEFAULTS_LAST_APPLY_STATE_SUCCESS",
    AppAccessRequestDefaultsLastApplyStateFailed: "APP_ACCESS_REQUEST_DEFAULTS_LAST_APPLY_STATE_FAILED",
    AppAccessRequestDefaultsLastApplyStateCanceling: "APP_ACCESS_REQUEST_DEFAULTS_LAST_APPLY_STATE_CANCELING",
    AppAccessRequestDefaultsLastApplyStateCancelSuccess: "APP_ACCESS_REQUEST_DEFAULTS_LAST_APPLY_STATE_CANCEL_SUCCESS",
    AppAccessRequestDefaultsLastApplyStateCancelError: "APP_ACCESS_REQUEST_DEFAULTS_LAST_APPLY_STATE_CANCEL_ERROR",
};
/** @internal */
export const DurationUnset$inboundSchema = z.object({});
/** @internal */
export const DurationUnset$outboundSchema = z.object({});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var DurationUnset$;
(function (DurationUnset$) {
    /** @deprecated use `DurationUnset$inboundSchema` instead. */
    DurationUnset$.inboundSchema = DurationUnset$inboundSchema;
    /** @deprecated use `DurationUnset$outboundSchema` instead. */
    DurationUnset$.outboundSchema = DurationUnset$outboundSchema;
})(DurationUnset$ || (DurationUnset$ = {}));
export function durationUnsetToJSON(durationUnset) {
    return JSON.stringify(DurationUnset$outboundSchema.parse(durationUnset));
}
export function durationUnsetFromJSON(jsonString) {
    return safeParse(jsonString, (x) => DurationUnset$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'DurationUnset' from JSON`);
}
/** @internal */
export const State$inboundSchema = z
    .union([
    z.nativeEnum(State),
    z.string().transform(catchUnrecognizedEnum),
]);
/** @internal */
export const State$outboundSchema = z
    .union([
    z.nativeEnum(State),
    z.string().and(z.custom()),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var State$;
(function (State$) {
    /** @deprecated use `State$inboundSchema` instead. */
    State$.inboundSchema = State$inboundSchema;
    /** @deprecated use `State$outboundSchema` instead. */
    State$.outboundSchema = State$outboundSchema;
})(State$ || (State$ = {}));
/** @internal */
export const AppAccessRequestDefaults$inboundSchema = z.object({
    appId: z.nullable(z.string()).optional(),
    catalogIds: z.nullable(z.array(z.string())).optional(),
    defaultsEnabled: z.nullable(z.boolean()).optional(),
    durationGrant: z.nullable(z.string()).optional(),
    durationUnset: z.nullable(z.lazy(() => DurationUnset$inboundSchema))
        .optional(),
    emergencyGrantEnabled: z.nullable(z.boolean()).optional(),
    emergencyGrantPolicyId: z.nullable(z.string()).optional(),
    requestPolicyId: z.nullable(z.string()).optional(),
    resourceTypeIds: z.nullable(z.array(z.string())).optional(),
    state: z.nullable(State$inboundSchema).optional(),
});
/** @internal */
export const AppAccessRequestDefaults$outboundSchema = z.object({
    appId: z.nullable(z.string()).optional(),
    catalogIds: z.nullable(z.array(z.string())).optional(),
    defaultsEnabled: z.nullable(z.boolean()).optional(),
    durationGrant: z.nullable(z.string()).optional(),
    durationUnset: z.nullable(z.lazy(() => DurationUnset$outboundSchema))
        .optional(),
    emergencyGrantEnabled: z.nullable(z.boolean()).optional(),
    emergencyGrantPolicyId: z.nullable(z.string()).optional(),
    requestPolicyId: z.nullable(z.string()).optional(),
    resourceTypeIds: z.nullable(z.array(z.string())).optional(),
    state: z.nullable(State$outboundSchema).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var AppAccessRequestDefaults$;
(function (AppAccessRequestDefaults$) {
    /** @deprecated use `AppAccessRequestDefaults$inboundSchema` instead. */
    AppAccessRequestDefaults$.inboundSchema = AppAccessRequestDefaults$inboundSchema;
    /** @deprecated use `AppAccessRequestDefaults$outboundSchema` instead. */
    AppAccessRequestDefaults$.outboundSchema = AppAccessRequestDefaults$outboundSchema;
})(AppAccessRequestDefaults$ || (AppAccessRequestDefaults$ = {}));
export function appAccessRequestDefaultsToJSON(appAccessRequestDefaults) {
    return JSON.stringify(AppAccessRequestDefaults$outboundSchema.parse(appAccessRequestDefaults));
}
export function appAccessRequestDefaultsFromJSON(jsonString) {
    return safeParse(jsonString, (x) => AppAccessRequestDefaults$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'AppAccessRequestDefaults' from JSON`);
}
/** @internal */
export const AppAccessRequestDefaults1$inboundSchema = z.object({
    catalogIds: z.nullable(z.array(z.string())).optional(),
    defaultsEnabled: z.nullable(z.boolean()).optional(),
    durationGrant: z.nullable(z.string()).optional(),
    durationUnset: z.nullable(z.lazy(() => DurationUnset$inboundSchema))
        .optional(),
    emergencyGrantEnabled: z.nullable(z.boolean()).optional(),
    emergencyGrantPolicyId: z.nullable(z.string()).optional(),
    requestPolicyId: z.nullable(z.string()).optional(),
    resourceTypeIds: z.nullable(z.array(z.string())).optional(),
    state: z.nullable(State$inboundSchema).optional(),
});
/** @internal */
export const AppAccessRequestDefaults1$outboundSchema = z.object({
    catalogIds: z.nullable(z.array(z.string())).optional(),
    defaultsEnabled: z.nullable(z.boolean()).optional(),
    durationGrant: z.nullable(z.string()).optional(),
    durationUnset: z.nullable(z.lazy(() => DurationUnset$outboundSchema))
        .optional(),
    emergencyGrantEnabled: z.nullable(z.boolean()).optional(),
    emergencyGrantPolicyId: z.nullable(z.string()).optional(),
    requestPolicyId: z.nullable(z.string()).optional(),
    resourceTypeIds: z.nullable(z.array(z.string())).optional(),
    state: z.nullable(State$outboundSchema).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var AppAccessRequestDefaults1$;
(function (AppAccessRequestDefaults1$) {
    /** @deprecated use `AppAccessRequestDefaults1$inboundSchema` instead. */
    AppAccessRequestDefaults1$.inboundSchema = AppAccessRequestDefaults1$inboundSchema;
    /** @deprecated use `AppAccessRequestDefaults1$outboundSchema` instead. */
    AppAccessRequestDefaults1$.outboundSchema = AppAccessRequestDefaults1$outboundSchema;
})(AppAccessRequestDefaults1$ || (AppAccessRequestDefaults1$ = {}));
export function appAccessRequestDefaults1ToJSON(appAccessRequestDefaults1) {
    return JSON.stringify(AppAccessRequestDefaults1$outboundSchema.parse(appAccessRequestDefaults1));
}
export function appAccessRequestDefaults1FromJSON(jsonString) {
    return safeParse(jsonString, (x) => AppAccessRequestDefaults1$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'AppAccessRequestDefaults1' from JSON`);
}
