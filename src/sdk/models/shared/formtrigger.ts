/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  FormInput,
  FormInput$inboundSchema,
  FormInput$Outbound,
  FormInput$outboundSchema,
} from "./forminput.js";

/**
 * The FormTrigger message.
 */
export type FormTrigger = {
  form?: FormInput | null | undefined;
};

/** @internal */
export const FormTrigger$inboundSchema: z.ZodType<
  FormTrigger,
  z.ZodTypeDef,
  unknown
> = z.object({
  form: z.nullable(FormInput$inboundSchema).optional(),
});

/** @internal */
export type FormTrigger$Outbound = {
  form?: FormInput$Outbound | null | undefined;
};

/** @internal */
export const FormTrigger$outboundSchema: z.ZodType<
  FormTrigger$Outbound,
  z.ZodTypeDef,
  FormTrigger
> = z.object({
  form: z.nullable(FormInput$outboundSchema).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FormTrigger$ {
  /** @deprecated use `FormTrigger$inboundSchema` instead. */
  export const inboundSchema = FormTrigger$inboundSchema;
  /** @deprecated use `FormTrigger$outboundSchema` instead. */
  export const outboundSchema = FormTrigger$outboundSchema;
  /** @deprecated use `FormTrigger$Outbound` instead. */
  export type Outbound = FormTrigger$Outbound;
}

export function formTriggerToJSON(formTrigger: FormTrigger): string {
  return JSON.stringify(FormTrigger$outboundSchema.parse(formTrigger));
}

export function formTriggerFromJSON(
  jsonString: string,
): SafeParseResult<FormTrigger, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => FormTrigger$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FormTrigger' from JSON`,
  );
}
