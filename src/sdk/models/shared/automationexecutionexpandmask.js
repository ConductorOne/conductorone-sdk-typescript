/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
/** @internal */
export const AutomationExecutionExpandMask$inboundSchema = z.object({
    paths: z.nullable(z.array(z.string())).optional(),
});
/** @internal */
export const AutomationExecutionExpandMask$outboundSchema = z.object({
    paths: z.nullable(z.array(z.string())).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var AutomationExecutionExpandMask$;
(function (AutomationExecutionExpandMask$) {
    /** @deprecated use `AutomationExecutionExpandMask$inboundSchema` instead. */
    AutomationExecutionExpandMask$.inboundSchema = AutomationExecutionExpandMask$inboundSchema;
    /** @deprecated use `AutomationExecutionExpandMask$outboundSchema` instead. */
    AutomationExecutionExpandMask$.outboundSchema = AutomationExecutionExpandMask$outboundSchema;
})(AutomationExecutionExpandMask$ || (AutomationExecutionExpandMask$ = {}));
export function automationExecutionExpandMaskToJSON(automationExecutionExpandMask) {
    return JSON.stringify(AutomationExecutionExpandMask$outboundSchema.parse(automationExecutionExpandMask));
}
export function automationExecutionExpandMaskFromJSON(jsonString) {
    return safeParse(jsonString, (x) => AutomationExecutionExpandMask$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'AutomationExecutionExpandMask' from JSON`);
}
