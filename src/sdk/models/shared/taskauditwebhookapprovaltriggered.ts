/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * The TaskAuditWebhookApprovalTriggered message.
 */
export type TaskAuditWebhookApprovalTriggered = {
  /**
   * The webhookId field.
   */
  webhookId?: string | null | undefined;
  /**
   * The webhookInstanceId field.
   */
  webhookInstanceId?: string | null | undefined;
  /**
   * The webhookName field.
   */
  webhookName?: string | null | undefined;
  /**
   * The webhookUrl field.
   */
  webhookUrl?: string | null | undefined;
};

/** @internal */
export const TaskAuditWebhookApprovalTriggered$inboundSchema: z.ZodType<
  TaskAuditWebhookApprovalTriggered,
  z.ZodTypeDef,
  unknown
> = z.object({
  webhookId: z.nullable(z.string()).optional(),
  webhookInstanceId: z.nullable(z.string()).optional(),
  webhookName: z.nullable(z.string()).optional(),
  webhookUrl: z.nullable(z.string()).optional(),
});

/** @internal */
export type TaskAuditWebhookApprovalTriggered$Outbound = {
  webhookId?: string | null | undefined;
  webhookInstanceId?: string | null | undefined;
  webhookName?: string | null | undefined;
  webhookUrl?: string | null | undefined;
};

/** @internal */
export const TaskAuditWebhookApprovalTriggered$outboundSchema: z.ZodType<
  TaskAuditWebhookApprovalTriggered$Outbound,
  z.ZodTypeDef,
  TaskAuditWebhookApprovalTriggered
> = z.object({
  webhookId: z.nullable(z.string()).optional(),
  webhookInstanceId: z.nullable(z.string()).optional(),
  webhookName: z.nullable(z.string()).optional(),
  webhookUrl: z.nullable(z.string()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TaskAuditWebhookApprovalTriggered$ {
  /** @deprecated use `TaskAuditWebhookApprovalTriggered$inboundSchema` instead. */
  export const inboundSchema = TaskAuditWebhookApprovalTriggered$inboundSchema;
  /** @deprecated use `TaskAuditWebhookApprovalTriggered$outboundSchema` instead. */
  export const outboundSchema =
    TaskAuditWebhookApprovalTriggered$outboundSchema;
  /** @deprecated use `TaskAuditWebhookApprovalTriggered$Outbound` instead. */
  export type Outbound = TaskAuditWebhookApprovalTriggered$Outbound;
}

export function taskAuditWebhookApprovalTriggeredToJSON(
  taskAuditWebhookApprovalTriggered: TaskAuditWebhookApprovalTriggered,
): string {
  return JSON.stringify(
    TaskAuditWebhookApprovalTriggered$outboundSchema.parse(
      taskAuditWebhookApprovalTriggered,
    ),
  );
}

export function taskAuditWebhookApprovalTriggeredFromJSON(
  jsonString: string,
): SafeParseResult<TaskAuditWebhookApprovalTriggered, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => TaskAuditWebhookApprovalTriggered$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'TaskAuditWebhookApprovalTriggered' from JSON`,
  );
}
