/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * The AppManagedStateBindingRef message.
 */
export type AppManagedStateBindingRef = {
  /**
   * The appId field.
   */
  appId?: string | null | undefined;
  /**
   * The resourceId field.
   */
  resourceId?: string | null | undefined;
  /**
   * The resourceTypeId field.
   */
  resourceTypeId?: string | null | undefined;
};

/** @internal */
export const AppManagedStateBindingRef$inboundSchema: z.ZodType<
  AppManagedStateBindingRef,
  z.ZodTypeDef,
  unknown
> = z.object({
  appId: z.nullable(z.string()).optional(),
  resourceId: z.nullable(z.string()).optional(),
  resourceTypeId: z.nullable(z.string()).optional(),
});

/** @internal */
export type AppManagedStateBindingRef$Outbound = {
  appId?: string | null | undefined;
  resourceId?: string | null | undefined;
  resourceTypeId?: string | null | undefined;
};

/** @internal */
export const AppManagedStateBindingRef$outboundSchema: z.ZodType<
  AppManagedStateBindingRef$Outbound,
  z.ZodTypeDef,
  AppManagedStateBindingRef
> = z.object({
  appId: z.nullable(z.string()).optional(),
  resourceId: z.nullable(z.string()).optional(),
  resourceTypeId: z.nullable(z.string()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppManagedStateBindingRef$ {
  /** @deprecated use `AppManagedStateBindingRef$inboundSchema` instead. */
  export const inboundSchema = AppManagedStateBindingRef$inboundSchema;
  /** @deprecated use `AppManagedStateBindingRef$outboundSchema` instead. */
  export const outboundSchema = AppManagedStateBindingRef$outboundSchema;
  /** @deprecated use `AppManagedStateBindingRef$Outbound` instead. */
  export type Outbound = AppManagedStateBindingRef$Outbound;
}

export function appManagedStateBindingRefToJSON(
  appManagedStateBindingRef: AppManagedStateBindingRef,
): string {
  return JSON.stringify(
    AppManagedStateBindingRef$outboundSchema.parse(appManagedStateBindingRef),
  );
}

export function appManagedStateBindingRefFromJSON(
  jsonString: string,
): SafeParseResult<AppManagedStateBindingRef, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => AppManagedStateBindingRef$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'AppManagedStateBindingRef' from JSON`,
  );
}
