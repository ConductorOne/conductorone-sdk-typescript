/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * The DirectoryAccountFilterAll message.
 */
export type DirectoryAccountFilterAll = {};

/** @internal */
export const DirectoryAccountFilterAll$inboundSchema: z.ZodType<
  DirectoryAccountFilterAll,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type DirectoryAccountFilterAll$Outbound = {};

/** @internal */
export const DirectoryAccountFilterAll$outboundSchema: z.ZodType<
  DirectoryAccountFilterAll$Outbound,
  z.ZodTypeDef,
  DirectoryAccountFilterAll
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DirectoryAccountFilterAll$ {
  /** @deprecated use `DirectoryAccountFilterAll$inboundSchema` instead. */
  export const inboundSchema = DirectoryAccountFilterAll$inboundSchema;
  /** @deprecated use `DirectoryAccountFilterAll$outboundSchema` instead. */
  export const outboundSchema = DirectoryAccountFilterAll$outboundSchema;
  /** @deprecated use `DirectoryAccountFilterAll$Outbound` instead. */
  export type Outbound = DirectoryAccountFilterAll$Outbound;
}

export function directoryAccountFilterAllToJSON(
  directoryAccountFilterAll: DirectoryAccountFilterAll,
): string {
  return JSON.stringify(
    DirectoryAccountFilterAll$outboundSchema.parse(directoryAccountFilterAll),
  );
}

export function directoryAccountFilterAllFromJSON(
  jsonString: string,
): SafeParseResult<DirectoryAccountFilterAll, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DirectoryAccountFilterAll$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DirectoryAccountFilterAll' from JSON`,
  );
}
