/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { StepUpMicrosoftSettings$inboundSchema, StepUpMicrosoftSettings$outboundSchema, } from "./stepupmicrosoftsettings.js";
import { StepUpOAuth2Settings$inboundSchema, StepUpOAuth2Settings$outboundSchema, } from "./stepupoauth2settings.js";
/** @internal */
export const StepUpProviderInput$inboundSchema = z.object({
    clientId: z.nullable(z.string()).optional(),
    createdAt: z.nullable(z.string().datetime({ offset: true }).transform(v => new Date(v))).optional(),
    displayName: z.nullable(z.string()).optional(),
    enabled: z.nullable(z.boolean()).optional(),
    issuerUrl: z.nullable(z.string()).optional(),
    lastTestedAt: z.nullable(z.string().datetime({ offset: true }).transform(v => new Date(v))).optional(),
    microsoft: z.nullable(StepUpMicrosoftSettings$inboundSchema).optional(),
    oauth2: z.nullable(StepUpOAuth2Settings$inboundSchema).optional(),
    updatedAt: z.nullable(z.string().datetime({ offset: true }).transform(v => new Date(v))).optional(),
});
/** @internal */
export const StepUpProviderInput$outboundSchema = z.object({
    clientId: z.nullable(z.string()).optional(),
    createdAt: z.nullable(z.date().transform(v => v.toISOString())).optional(),
    displayName: z.nullable(z.string()).optional(),
    enabled: z.nullable(z.boolean()).optional(),
    issuerUrl: z.nullable(z.string()).optional(),
    lastTestedAt: z.nullable(z.date().transform(v => v.toISOString())).optional(),
    microsoft: z.nullable(StepUpMicrosoftSettings$outboundSchema).optional(),
    oauth2: z.nullable(StepUpOAuth2Settings$outboundSchema).optional(),
    updatedAt: z.nullable(z.date().transform(v => v.toISOString())).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var StepUpProviderInput$;
(function (StepUpProviderInput$) {
    /** @deprecated use `StepUpProviderInput$inboundSchema` instead. */
    StepUpProviderInput$.inboundSchema = StepUpProviderInput$inboundSchema;
    /** @deprecated use `StepUpProviderInput$outboundSchema` instead. */
    StepUpProviderInput$.outboundSchema = StepUpProviderInput$outboundSchema;
})(StepUpProviderInput$ || (StepUpProviderInput$ = {}));
export function stepUpProviderInputToJSON(stepUpProviderInput) {
    return JSON.stringify(StepUpProviderInput$outboundSchema.parse(stepUpProviderInput));
}
export function stepUpProviderInputFromJSON(jsonString) {
    return safeParse(jsonString, (x) => StepUpProviderInput$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'StepUpProviderInput' from JSON`);
}
