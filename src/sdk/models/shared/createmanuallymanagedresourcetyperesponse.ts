/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { remap as remap$ } from "../../../lib/primitives.js";
import {
  collectExtraKeys as collectExtraKeys$,
  safeParse,
} from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  AppResourceType,
  AppResourceType$inboundSchema,
  AppResourceType$Outbound,
  AppResourceType$outboundSchema,
} from "./appresourcetype.js";

/**
 * Contains an arbitrary serialized message along with a @type that describes the type of the serialized message.
 */
export type CreateManuallyManagedResourceTypeResponseExpanded = {
  /**
   * The type of the serialized message.
   */
  atType?: string | undefined;
  additionalProperties?: { [k: string]: any } | undefined;
};

/**
 * The CreateManuallyManagedResourceTypeResponse message.
 */
export type CreateManuallyManagedResourceTypeResponse = {
  appResourceType?: AppResourceType | null | undefined;
  /**
   * The expanded field.
   */
  expanded?:
    | Array<CreateManuallyManagedResourceTypeResponseExpanded>
    | null
    | undefined;
};

/** @internal */
export const CreateManuallyManagedResourceTypeResponseExpanded$inboundSchema:
  z.ZodType<
    CreateManuallyManagedResourceTypeResponseExpanded,
    z.ZodTypeDef,
    unknown
  > = collectExtraKeys$(
    z.object({
      "@type": z.string().optional(),
    }).catchall(z.any()),
    "additionalProperties",
    true,
  ).transform((v) => {
    return remap$(v, {
      "@type": "atType",
    });
  });

/** @internal */
export type CreateManuallyManagedResourceTypeResponseExpanded$Outbound = {
  "@type"?: string | undefined;
  [additionalProperties: string]: unknown;
};

/** @internal */
export const CreateManuallyManagedResourceTypeResponseExpanded$outboundSchema:
  z.ZodType<
    CreateManuallyManagedResourceTypeResponseExpanded$Outbound,
    z.ZodTypeDef,
    CreateManuallyManagedResourceTypeResponseExpanded
  > = z.object({
    atType: z.string().optional(),
    additionalProperties: z.record(z.any()).optional(),
  }).transform((v) => {
    return {
      ...v.additionalProperties,
      ...remap$(v, {
        atType: "@type",
        additionalProperties: null,
      }),
    };
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateManuallyManagedResourceTypeResponseExpanded$ {
  /** @deprecated use `CreateManuallyManagedResourceTypeResponseExpanded$inboundSchema` instead. */
  export const inboundSchema =
    CreateManuallyManagedResourceTypeResponseExpanded$inboundSchema;
  /** @deprecated use `CreateManuallyManagedResourceTypeResponseExpanded$outboundSchema` instead. */
  export const outboundSchema =
    CreateManuallyManagedResourceTypeResponseExpanded$outboundSchema;
  /** @deprecated use `CreateManuallyManagedResourceTypeResponseExpanded$Outbound` instead. */
  export type Outbound =
    CreateManuallyManagedResourceTypeResponseExpanded$Outbound;
}

export function createManuallyManagedResourceTypeResponseExpandedToJSON(
  createManuallyManagedResourceTypeResponseExpanded:
    CreateManuallyManagedResourceTypeResponseExpanded,
): string {
  return JSON.stringify(
    CreateManuallyManagedResourceTypeResponseExpanded$outboundSchema.parse(
      createManuallyManagedResourceTypeResponseExpanded,
    ),
  );
}

export function createManuallyManagedResourceTypeResponseExpandedFromJSON(
  jsonString: string,
): SafeParseResult<
  CreateManuallyManagedResourceTypeResponseExpanded,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      CreateManuallyManagedResourceTypeResponseExpanded$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'CreateManuallyManagedResourceTypeResponseExpanded' from JSON`,
  );
}

/** @internal */
export const CreateManuallyManagedResourceTypeResponse$inboundSchema: z.ZodType<
  CreateManuallyManagedResourceTypeResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  appResourceType: z.nullable(AppResourceType$inboundSchema).optional(),
  expanded: z.nullable(
    z.array(z.lazy(() =>
      CreateManuallyManagedResourceTypeResponseExpanded$inboundSchema
    )),
  ).optional(),
});

/** @internal */
export type CreateManuallyManagedResourceTypeResponse$Outbound = {
  appResourceType?: AppResourceType$Outbound | null | undefined;
  expanded?:
    | Array<CreateManuallyManagedResourceTypeResponseExpanded$Outbound>
    | null
    | undefined;
};

/** @internal */
export const CreateManuallyManagedResourceTypeResponse$outboundSchema:
  z.ZodType<
    CreateManuallyManagedResourceTypeResponse$Outbound,
    z.ZodTypeDef,
    CreateManuallyManagedResourceTypeResponse
  > = z.object({
    appResourceType: z.nullable(AppResourceType$outboundSchema).optional(),
    expanded: z.nullable(
      z.array(z.lazy(() =>
        CreateManuallyManagedResourceTypeResponseExpanded$outboundSchema
      )),
    ).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateManuallyManagedResourceTypeResponse$ {
  /** @deprecated use `CreateManuallyManagedResourceTypeResponse$inboundSchema` instead. */
  export const inboundSchema =
    CreateManuallyManagedResourceTypeResponse$inboundSchema;
  /** @deprecated use `CreateManuallyManagedResourceTypeResponse$outboundSchema` instead. */
  export const outboundSchema =
    CreateManuallyManagedResourceTypeResponse$outboundSchema;
  /** @deprecated use `CreateManuallyManagedResourceTypeResponse$Outbound` instead. */
  export type Outbound = CreateManuallyManagedResourceTypeResponse$Outbound;
}

export function createManuallyManagedResourceTypeResponseToJSON(
  createManuallyManagedResourceTypeResponse:
    CreateManuallyManagedResourceTypeResponse,
): string {
  return JSON.stringify(
    CreateManuallyManagedResourceTypeResponse$outboundSchema.parse(
      createManuallyManagedResourceTypeResponse,
    ),
  );
}

export function createManuallyManagedResourceTypeResponseFromJSON(
  jsonString: string,
): SafeParseResult<
  CreateManuallyManagedResourceTypeResponse,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      CreateManuallyManagedResourceTypeResponse$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'CreateManuallyManagedResourceTypeResponse' from JSON`,
  );
}
