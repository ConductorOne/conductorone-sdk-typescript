/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import {
  catchUnrecognizedEnum,
  OpenEnum,
  Unrecognized,
} from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  AppEntitlementExpandMask,
  AppEntitlementExpandMask$inboundSchema,
  AppEntitlementExpandMask$Outbound,
  AppEntitlementExpandMask$outboundSchema,
} from "./appentitlementexpandmask.js";
import {
  ProvisionPolicyInput,
  ProvisionPolicyInput$inboundSchema,
  ProvisionPolicyInput$Outbound,
  ProvisionPolicyInput$outboundSchema,
} from "./provisionpolicyinput.js";

export type CreateAppEntitlementRequestDurationUnset = {};

/**
 * The purpose field.
 */
export const CreateAppEntitlementRequestPurpose = {
  AppEntitlementPurposeValueUnspecified:
    "APP_ENTITLEMENT_PURPOSE_VALUE_UNSPECIFIED",
  AppEntitlementPurposeValueAssignment:
    "APP_ENTITLEMENT_PURPOSE_VALUE_ASSIGNMENT",
  AppEntitlementPurposeValuePermission:
    "APP_ENTITLEMENT_PURPOSE_VALUE_PERMISSION",
} as const;
/**
 * The purpose field.
 */
export type CreateAppEntitlementRequestPurpose = OpenEnum<
  typeof CreateAppEntitlementRequestPurpose
>;

/**
 * The CreateAppEntitlementRequest message.
 *
 * @remarks
 *
 * This message contains a oneof named max_grant_duration. Only a single field of the following list may be set at a time:
 *   - durationUnset
 *   - durationGrant
 */
export type CreateAppEntitlementRequest = {
  /**
   * The alias field.
   */
  alias?: string | null | undefined;
  /**
   * The appEntitlementOwnerIds field.
   */
  appEntitlementOwnerIds?: Array<string> | null | undefined;
  /**
   * The appResourceId field.
   */
  appResourceId?: string | null | undefined;
  /**
   * The appResourceTypeId field.
   */
  appResourceTypeId?: string | null | undefined;
  /**
   * The certifyPolicyId field.
   */
  certifyPolicyId?: string | null | undefined;
  /**
   * The complianceFrameworkValueIds field.
   */
  complianceFrameworkValueIds?: Array<string> | null | undefined;
  /**
   * The description field.
   */
  description?: string | null | undefined;
  /**
   * The displayName field.
   */
  displayName: string;
  durationGrant?: string | null | undefined;
  durationUnset?: CreateAppEntitlementRequestDurationUnset | null | undefined;
  /**
   * The emergencyGrantEnabled field.
   */
  emergencyGrantEnabled?: boolean | null | undefined;
  /**
   * The emergencyGrantPolicyId field.
   */
  emergencyGrantPolicyId?: string | null | undefined;
  expandMask?: AppEntitlementExpandMask | null | undefined;
  /**
   * The grantPolicyId field.
   */
  grantPolicyId?: string | null | undefined;
  /**
   * If supplied, it's implied that the entitlement is created before sync and needs to be merged with connector entitlement.
   */
  matchBatonId?: string | null | undefined;
  /**
   * The overrideAccessRequestsDefaults field.
   */
  overrideAccessRequestsDefaults?: boolean | null | undefined;
  provisionPolicy?: ProvisionPolicyInput | null | undefined;
  /**
   * The purpose field.
   */
  purpose?: CreateAppEntitlementRequestPurpose | null | undefined;
  /**
   * The revokePolicyId field.
   */
  revokePolicyId?: string | null | undefined;
  /**
   * The riskLevelValueId field.
   */
  riskLevelValueId?: string | null | undefined;
  /**
   * The slug field.
   */
  slug?: string | null | undefined;
};

/** @internal */
export const CreateAppEntitlementRequestDurationUnset$inboundSchema: z.ZodType<
  CreateAppEntitlementRequestDurationUnset,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type CreateAppEntitlementRequestDurationUnset$Outbound = {};

/** @internal */
export const CreateAppEntitlementRequestDurationUnset$outboundSchema: z.ZodType<
  CreateAppEntitlementRequestDurationUnset$Outbound,
  z.ZodTypeDef,
  CreateAppEntitlementRequestDurationUnset
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateAppEntitlementRequestDurationUnset$ {
  /** @deprecated use `CreateAppEntitlementRequestDurationUnset$inboundSchema` instead. */
  export const inboundSchema =
    CreateAppEntitlementRequestDurationUnset$inboundSchema;
  /** @deprecated use `CreateAppEntitlementRequestDurationUnset$outboundSchema` instead. */
  export const outboundSchema =
    CreateAppEntitlementRequestDurationUnset$outboundSchema;
  /** @deprecated use `CreateAppEntitlementRequestDurationUnset$Outbound` instead. */
  export type Outbound = CreateAppEntitlementRequestDurationUnset$Outbound;
}

export function createAppEntitlementRequestDurationUnsetToJSON(
  createAppEntitlementRequestDurationUnset:
    CreateAppEntitlementRequestDurationUnset,
): string {
  return JSON.stringify(
    CreateAppEntitlementRequestDurationUnset$outboundSchema.parse(
      createAppEntitlementRequestDurationUnset,
    ),
  );
}

export function createAppEntitlementRequestDurationUnsetFromJSON(
  jsonString: string,
): SafeParseResult<
  CreateAppEntitlementRequestDurationUnset,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      CreateAppEntitlementRequestDurationUnset$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'CreateAppEntitlementRequestDurationUnset' from JSON`,
  );
}

/** @internal */
export const CreateAppEntitlementRequestPurpose$inboundSchema: z.ZodType<
  CreateAppEntitlementRequestPurpose,
  z.ZodTypeDef,
  unknown
> = z
  .union([
    z.nativeEnum(CreateAppEntitlementRequestPurpose),
    z.string().transform(catchUnrecognizedEnum),
  ]);

/** @internal */
export const CreateAppEntitlementRequestPurpose$outboundSchema: z.ZodType<
  CreateAppEntitlementRequestPurpose,
  z.ZodTypeDef,
  CreateAppEntitlementRequestPurpose
> = z.union([
  z.nativeEnum(CreateAppEntitlementRequestPurpose),
  z.string().and(z.custom<Unrecognized<string>>()),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateAppEntitlementRequestPurpose$ {
  /** @deprecated use `CreateAppEntitlementRequestPurpose$inboundSchema` instead. */
  export const inboundSchema = CreateAppEntitlementRequestPurpose$inboundSchema;
  /** @deprecated use `CreateAppEntitlementRequestPurpose$outboundSchema` instead. */
  export const outboundSchema =
    CreateAppEntitlementRequestPurpose$outboundSchema;
}

/** @internal */
export const CreateAppEntitlementRequest$inboundSchema: z.ZodType<
  CreateAppEntitlementRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  alias: z.nullable(z.string()).optional(),
  appEntitlementOwnerIds: z.nullable(z.array(z.string())).optional(),
  appResourceId: z.nullable(z.string()).optional(),
  appResourceTypeId: z.nullable(z.string()).optional(),
  certifyPolicyId: z.nullable(z.string()).optional(),
  complianceFrameworkValueIds: z.nullable(z.array(z.string())).optional(),
  description: z.nullable(z.string()).optional(),
  displayName: z.string(),
  durationGrant: z.nullable(z.string()).optional(),
  durationUnset: z.nullable(
    z.lazy(() => CreateAppEntitlementRequestDurationUnset$inboundSchema),
  ).optional(),
  emergencyGrantEnabled: z.nullable(z.boolean()).optional(),
  emergencyGrantPolicyId: z.nullable(z.string()).optional(),
  expandMask: z.nullable(AppEntitlementExpandMask$inboundSchema).optional(),
  grantPolicyId: z.nullable(z.string()).optional(),
  matchBatonId: z.nullable(z.string()).optional(),
  overrideAccessRequestsDefaults: z.nullable(z.boolean()).optional(),
  provisionPolicy: z.nullable(ProvisionPolicyInput$inboundSchema).optional(),
  purpose: z.nullable(CreateAppEntitlementRequestPurpose$inboundSchema)
    .optional(),
  revokePolicyId: z.nullable(z.string()).optional(),
  riskLevelValueId: z.nullable(z.string()).optional(),
  slug: z.nullable(z.string()).optional(),
});

/** @internal */
export type CreateAppEntitlementRequest$Outbound = {
  alias?: string | null | undefined;
  appEntitlementOwnerIds?: Array<string> | null | undefined;
  appResourceId?: string | null | undefined;
  appResourceTypeId?: string | null | undefined;
  certifyPolicyId?: string | null | undefined;
  complianceFrameworkValueIds?: Array<string> | null | undefined;
  description?: string | null | undefined;
  displayName: string;
  durationGrant?: string | null | undefined;
  durationUnset?:
    | CreateAppEntitlementRequestDurationUnset$Outbound
    | null
    | undefined;
  emergencyGrantEnabled?: boolean | null | undefined;
  emergencyGrantPolicyId?: string | null | undefined;
  expandMask?: AppEntitlementExpandMask$Outbound | null | undefined;
  grantPolicyId?: string | null | undefined;
  matchBatonId?: string | null | undefined;
  overrideAccessRequestsDefaults?: boolean | null | undefined;
  provisionPolicy?: ProvisionPolicyInput$Outbound | null | undefined;
  purpose?: string | null | undefined;
  revokePolicyId?: string | null | undefined;
  riskLevelValueId?: string | null | undefined;
  slug?: string | null | undefined;
};

/** @internal */
export const CreateAppEntitlementRequest$outboundSchema: z.ZodType<
  CreateAppEntitlementRequest$Outbound,
  z.ZodTypeDef,
  CreateAppEntitlementRequest
> = z.object({
  alias: z.nullable(z.string()).optional(),
  appEntitlementOwnerIds: z.nullable(z.array(z.string())).optional(),
  appResourceId: z.nullable(z.string()).optional(),
  appResourceTypeId: z.nullable(z.string()).optional(),
  certifyPolicyId: z.nullable(z.string()).optional(),
  complianceFrameworkValueIds: z.nullable(z.array(z.string())).optional(),
  description: z.nullable(z.string()).optional(),
  displayName: z.string(),
  durationGrant: z.nullable(z.string()).optional(),
  durationUnset: z.nullable(
    z.lazy(() => CreateAppEntitlementRequestDurationUnset$outboundSchema),
  ).optional(),
  emergencyGrantEnabled: z.nullable(z.boolean()).optional(),
  emergencyGrantPolicyId: z.nullable(z.string()).optional(),
  expandMask: z.nullable(AppEntitlementExpandMask$outboundSchema).optional(),
  grantPolicyId: z.nullable(z.string()).optional(),
  matchBatonId: z.nullable(z.string()).optional(),
  overrideAccessRequestsDefaults: z.nullable(z.boolean()).optional(),
  provisionPolicy: z.nullable(ProvisionPolicyInput$outboundSchema).optional(),
  purpose: z.nullable(CreateAppEntitlementRequestPurpose$outboundSchema)
    .optional(),
  revokePolicyId: z.nullable(z.string()).optional(),
  riskLevelValueId: z.nullable(z.string()).optional(),
  slug: z.nullable(z.string()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateAppEntitlementRequest$ {
  /** @deprecated use `CreateAppEntitlementRequest$inboundSchema` instead. */
  export const inboundSchema = CreateAppEntitlementRequest$inboundSchema;
  /** @deprecated use `CreateAppEntitlementRequest$outboundSchema` instead. */
  export const outboundSchema = CreateAppEntitlementRequest$outboundSchema;
  /** @deprecated use `CreateAppEntitlementRequest$Outbound` instead. */
  export type Outbound = CreateAppEntitlementRequest$Outbound;
}

export function createAppEntitlementRequestToJSON(
  createAppEntitlementRequest: CreateAppEntitlementRequest,
): string {
  return JSON.stringify(
    CreateAppEntitlementRequest$outboundSchema.parse(
      createAppEntitlementRequest,
    ),
  );
}

export function createAppEntitlementRequestFromJSON(
  jsonString: string,
): SafeParseResult<CreateAppEntitlementRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateAppEntitlementRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateAppEntitlementRequest' from JSON`,
  );
}
