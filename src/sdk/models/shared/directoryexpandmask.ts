/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * The fields to be included in the directory response.
 */
export type DirectoryExpandMask = {
  /**
   * An array of fields to be included in the directory response.
   */
  paths?: Array<string> | null | undefined;
};

/** @internal */
export const DirectoryExpandMask$inboundSchema: z.ZodType<
  DirectoryExpandMask,
  z.ZodTypeDef,
  unknown
> = z.object({
  paths: z.nullable(z.array(z.string())).optional(),
});

/** @internal */
export type DirectoryExpandMask$Outbound = {
  paths?: Array<string> | null | undefined;
};

/** @internal */
export const DirectoryExpandMask$outboundSchema: z.ZodType<
  DirectoryExpandMask$Outbound,
  z.ZodTypeDef,
  DirectoryExpandMask
> = z.object({
  paths: z.nullable(z.array(z.string())).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DirectoryExpandMask$ {
  /** @deprecated use `DirectoryExpandMask$inboundSchema` instead. */
  export const inboundSchema = DirectoryExpandMask$inboundSchema;
  /** @deprecated use `DirectoryExpandMask$outboundSchema` instead. */
  export const outboundSchema = DirectoryExpandMask$outboundSchema;
  /** @deprecated use `DirectoryExpandMask$Outbound` instead. */
  export type Outbound = DirectoryExpandMask$Outbound;
}

export function directoryExpandMaskToJSON(
  directoryExpandMask: DirectoryExpandMask,
): string {
  return JSON.stringify(
    DirectoryExpandMask$outboundSchema.parse(directoryExpandMask),
  );
}

export function directoryExpandMaskFromJSON(
  jsonString: string,
): SafeParseResult<DirectoryExpandMask, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DirectoryExpandMask$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DirectoryExpandMask' from JSON`,
  );
}
