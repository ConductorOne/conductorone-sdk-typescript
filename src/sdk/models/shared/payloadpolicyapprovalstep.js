/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";
import { collectExtraKeys as collectExtraKeys$, safeParse, } from "../../../lib/schemas.js";
import { TaskView$inboundSchema, TaskView$outboundSchema, } from "./taskview.js";
/** @internal */
export const PayloadPolicyApprovalStepExpanded$inboundSchema = collectExtraKeys$(z.object({
    "@type": z.string().optional(),
}).catchall(z.any()), "additionalProperties", true).transform((v) => {
    return remap$(v, {
        "@type": "atType",
    });
});
/** @internal */
export const PayloadPolicyApprovalStepExpanded$outboundSchema = z.object({
    atType: z.string().optional(),
    additionalProperties: z.record(z.any()),
}).transform((v) => {
    return {
        ...v.additionalProperties,
        ...remap$(v, {
            atType: "@type",
            additionalProperties: null,
        }),
    };
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var PayloadPolicyApprovalStepExpanded$;
(function (PayloadPolicyApprovalStepExpanded$) {
    /** @deprecated use `PayloadPolicyApprovalStepExpanded$inboundSchema` instead. */
    PayloadPolicyApprovalStepExpanded$.inboundSchema = PayloadPolicyApprovalStepExpanded$inboundSchema;
    /** @deprecated use `PayloadPolicyApprovalStepExpanded$outboundSchema` instead. */
    PayloadPolicyApprovalStepExpanded$.outboundSchema = PayloadPolicyApprovalStepExpanded$outboundSchema;
})(PayloadPolicyApprovalStepExpanded$ || (PayloadPolicyApprovalStepExpanded$ = {}));
export function payloadPolicyApprovalStepExpandedToJSON(payloadPolicyApprovalStepExpanded) {
    return JSON.stringify(PayloadPolicyApprovalStepExpanded$outboundSchema.parse(payloadPolicyApprovalStepExpanded));
}
export function payloadPolicyApprovalStepExpandedFromJSON(jsonString) {
    return safeParse(jsonString, (x) => PayloadPolicyApprovalStepExpanded$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'PayloadPolicyApprovalStepExpanded' from JSON`);
}
/** @internal */
export const PayloadPolicyApprovalStep$inboundSchema = z.object({
    expanded: z.nullable(z.array(z.lazy(() => PayloadPolicyApprovalStepExpanded$inboundSchema))).optional(),
    taskView: z.nullable(TaskView$inboundSchema).optional(),
});
/** @internal */
export const PayloadPolicyApprovalStep$outboundSchema = z.object({
    expanded: z.nullable(z.array(z.lazy(() => PayloadPolicyApprovalStepExpanded$outboundSchema))).optional(),
    taskView: z.nullable(TaskView$outboundSchema).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var PayloadPolicyApprovalStep$;
(function (PayloadPolicyApprovalStep$) {
    /** @deprecated use `PayloadPolicyApprovalStep$inboundSchema` instead. */
    PayloadPolicyApprovalStep$.inboundSchema = PayloadPolicyApprovalStep$inboundSchema;
    /** @deprecated use `PayloadPolicyApprovalStep$outboundSchema` instead. */
    PayloadPolicyApprovalStep$.outboundSchema = PayloadPolicyApprovalStep$outboundSchema;
})(PayloadPolicyApprovalStep$ || (PayloadPolicyApprovalStep$ = {}));
export function payloadPolicyApprovalStepToJSON(payloadPolicyApprovalStep) {
    return JSON.stringify(PayloadPolicyApprovalStep$outboundSchema.parse(payloadPolicyApprovalStep));
}
export function payloadPolicyApprovalStepFromJSON(jsonString) {
    return safeParse(jsonString, (x) => PayloadPolicyApprovalStep$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'PayloadPolicyApprovalStep' from JSON`);
}
