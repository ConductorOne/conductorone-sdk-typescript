/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
/** @internal */
export const TextField$inboundSchema = z.object({
    multiline: z.nullable(z.boolean()).optional(),
});
/** @internal */
export const TextField$outboundSchema = z.object({
    multiline: z.nullable(z.boolean()).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var TextField$;
(function (TextField$) {
    /** @deprecated use `TextField$inboundSchema` instead. */
    TextField$.inboundSchema = TextField$inboundSchema;
    /** @deprecated use `TextField$outboundSchema` instead. */
    TextField$.outboundSchema = TextField$outboundSchema;
})(TextField$ || (TextField$ = {}));
export function textFieldToJSON(textField) {
    return JSON.stringify(TextField$outboundSchema.parse(textField));
}
export function textFieldFromJSON(jsonString) {
    return safeParse(jsonString, (x) => TextField$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'TextField' from JSON`);
}
