/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { User$inboundSchema, User$outboundSchema, } from "./user.js";
/** @internal */
export const TaskAuditMetaData$inboundSchema = z.object({
    user: z.nullable(User$inboundSchema).optional(),
});
/** @internal */
export const TaskAuditMetaData$outboundSchema = z.object({
    user: z.nullable(User$outboundSchema).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var TaskAuditMetaData$;
(function (TaskAuditMetaData$) {
    /** @deprecated use `TaskAuditMetaData$inboundSchema` instead. */
    TaskAuditMetaData$.inboundSchema = TaskAuditMetaData$inboundSchema;
    /** @deprecated use `TaskAuditMetaData$outboundSchema` instead. */
    TaskAuditMetaData$.outboundSchema = TaskAuditMetaData$outboundSchema;
})(TaskAuditMetaData$ || (TaskAuditMetaData$ = {}));
export function taskAuditMetaDataToJSON(taskAuditMetaData) {
    return JSON.stringify(TaskAuditMetaData$outboundSchema.parse(taskAuditMetaData));
}
export function taskAuditMetaDataFromJSON(jsonString) {
    return safeParse(jsonString, (x) => TaskAuditMetaData$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'TaskAuditMetaData' from JSON`);
}
