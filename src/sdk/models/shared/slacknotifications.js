/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
/** @internal */
export const SlackNotifications$inboundSchema = z.object({
    channelId: z.nullable(z.string()).optional(),
    channelName: z.nullable(z.string()).optional(),
    enabled: z.nullable(z.boolean()).optional(),
});
/** @internal */
export const SlackNotifications$outboundSchema = z.object({
    channelId: z.nullable(z.string()).optional(),
    channelName: z.nullable(z.string()).optional(),
    enabled: z.nullable(z.boolean()).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var SlackNotifications$;
(function (SlackNotifications$) {
    /** @deprecated use `SlackNotifications$inboundSchema` instead. */
    SlackNotifications$.inboundSchema = SlackNotifications$inboundSchema;
    /** @deprecated use `SlackNotifications$outboundSchema` instead. */
    SlackNotifications$.outboundSchema = SlackNotifications$outboundSchema;
})(SlackNotifications$ || (SlackNotifications$ = {}));
export function slackNotificationsToJSON(slackNotifications) {
    return JSON.stringify(SlackNotifications$outboundSchema.parse(slackNotifications));
}
export function slackNotificationsFromJSON(jsonString) {
    return safeParse(jsonString, (x) => SlackNotifications$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'SlackNotifications' from JSON`);
}
