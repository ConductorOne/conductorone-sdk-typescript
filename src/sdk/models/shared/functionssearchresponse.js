/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { FunctionT$inboundSchema, FunctionT$outboundSchema, } from "./function.js";
/** @internal */
export const FunctionsSearchResponse$inboundSchema = z.object({
    list: z.nullable(z.array(FunctionT$inboundSchema)).optional(),
    nextPageToken: z.nullable(z.string()).optional(),
});
/** @internal */
export const FunctionsSearchResponse$outboundSchema = z.object({
    list: z.nullable(z.array(FunctionT$outboundSchema)).optional(),
    nextPageToken: z.nullable(z.string()).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var FunctionsSearchResponse$;
(function (FunctionsSearchResponse$) {
    /** @deprecated use `FunctionsSearchResponse$inboundSchema` instead. */
    FunctionsSearchResponse$.inboundSchema = FunctionsSearchResponse$inboundSchema;
    /** @deprecated use `FunctionsSearchResponse$outboundSchema` instead. */
    FunctionsSearchResponse$.outboundSchema = FunctionsSearchResponse$outboundSchema;
})(FunctionsSearchResponse$ || (FunctionsSearchResponse$ = {}));
export function functionsSearchResponseToJSON(functionsSearchResponse) {
    return JSON.stringify(FunctionsSearchResponse$outboundSchema.parse(functionsSearchResponse));
}
export function functionsSearchResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => FunctionsSearchResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'FunctionsSearchResponse' from JSON`);
}
