/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
/** @internal */
export const TaskAuditWaitStepUntilTime$inboundSchema = z.object({
    stepId: z.nullable(z.string()).optional(),
    untilTime: z.nullable(z.string().datetime({ offset: true }).transform(v => new Date(v))).optional(),
});
/** @internal */
export const TaskAuditWaitStepUntilTime$outboundSchema = z.object({
    stepId: z.nullable(z.string()).optional(),
    untilTime: z.nullable(z.date().transform(v => v.toISOString())).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var TaskAuditWaitStepUntilTime$;
(function (TaskAuditWaitStepUntilTime$) {
    /** @deprecated use `TaskAuditWaitStepUntilTime$inboundSchema` instead. */
    TaskAuditWaitStepUntilTime$.inboundSchema = TaskAuditWaitStepUntilTime$inboundSchema;
    /** @deprecated use `TaskAuditWaitStepUntilTime$outboundSchema` instead. */
    TaskAuditWaitStepUntilTime$.outboundSchema = TaskAuditWaitStepUntilTime$outboundSchema;
})(TaskAuditWaitStepUntilTime$ || (TaskAuditWaitStepUntilTime$ = {}));
export function taskAuditWaitStepUntilTimeToJSON(taskAuditWaitStepUntilTime) {
    return JSON.stringify(TaskAuditWaitStepUntilTime$outboundSchema.parse(taskAuditWaitStepUntilTime));
}
export function taskAuditWaitStepUntilTimeFromJSON(jsonString) {
    return safeParse(jsonString, (x) => TaskAuditWaitStepUntilTime$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'TaskAuditWaitStepUntilTime' from JSON`);
}
