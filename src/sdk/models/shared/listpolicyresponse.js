/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Policy$inboundSchema, Policy$outboundSchema, } from "./policy.js";
/** @internal */
export const ListPolicyResponse$inboundSchema = z.object({
    list: z.nullable(z.array(Policy$inboundSchema)).optional(),
    nextPageToken: z.nullable(z.string()).optional(),
});
/** @internal */
export const ListPolicyResponse$outboundSchema = z.object({
    list: z.nullable(z.array(Policy$outboundSchema)).optional(),
    nextPageToken: z.nullable(z.string()).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ListPolicyResponse$;
(function (ListPolicyResponse$) {
    /** @deprecated use `ListPolicyResponse$inboundSchema` instead. */
    ListPolicyResponse$.inboundSchema = ListPolicyResponse$inboundSchema;
    /** @deprecated use `ListPolicyResponse$outboundSchema` instead. */
    ListPolicyResponse$.outboundSchema = ListPolicyResponse$outboundSchema;
})(ListPolicyResponse$ || (ListPolicyResponse$ = {}));
export function listPolicyResponseToJSON(listPolicyResponse) {
    return JSON.stringify(ListPolicyResponse$outboundSchema.parse(listPolicyResponse));
}
export function listPolicyResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => ListPolicyResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ListPolicyResponse' from JSON`);
}
