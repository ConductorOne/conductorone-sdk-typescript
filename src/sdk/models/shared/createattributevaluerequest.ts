/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * The CreateAttributeValueRequest message.
 */
export type CreateAttributeValueRequest = {
  /**
   * The attributeTypeId field.
   */
  attributeTypeId?: string | null | undefined;
  /**
   * The value field.
   */
  value?: string | null | undefined;
};

/** @internal */
export const CreateAttributeValueRequest$inboundSchema: z.ZodType<
  CreateAttributeValueRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  attributeTypeId: z.nullable(z.string()).optional(),
  value: z.nullable(z.string()).optional(),
});

/** @internal */
export type CreateAttributeValueRequest$Outbound = {
  attributeTypeId?: string | null | undefined;
  value?: string | null | undefined;
};

/** @internal */
export const CreateAttributeValueRequest$outboundSchema: z.ZodType<
  CreateAttributeValueRequest$Outbound,
  z.ZodTypeDef,
  CreateAttributeValueRequest
> = z.object({
  attributeTypeId: z.nullable(z.string()).optional(),
  value: z.nullable(z.string()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateAttributeValueRequest$ {
  /** @deprecated use `CreateAttributeValueRequest$inboundSchema` instead. */
  export const inboundSchema = CreateAttributeValueRequest$inboundSchema;
  /** @deprecated use `CreateAttributeValueRequest$outboundSchema` instead. */
  export const outboundSchema = CreateAttributeValueRequest$outboundSchema;
  /** @deprecated use `CreateAttributeValueRequest$Outbound` instead. */
  export type Outbound = CreateAttributeValueRequest$Outbound;
}

export function createAttributeValueRequestToJSON(
  createAttributeValueRequest: CreateAttributeValueRequest,
): string {
  return JSON.stringify(
    CreateAttributeValueRequest$outboundSchema.parse(
      createAttributeValueRequest,
    ),
  );
}

export function createAttributeValueRequestFromJSON(
  jsonString: string,
): SafeParseResult<CreateAttributeValueRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateAttributeValueRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateAttributeValueRequest' from JSON`,
  );
}
