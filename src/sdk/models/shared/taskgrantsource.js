/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
/** @internal */
export const TaskGrantSource$inboundSchema = z.object({
    conversationId: z.nullable(z.string()).optional(),
    externalUrl: z.nullable(z.string()).optional(),
    integrationId: z.nullable(z.string()).optional(),
    requestId: z.nullable(z.string()).optional(),
});
/** @internal */
export const TaskGrantSource$outboundSchema = z.object({
    conversationId: z.nullable(z.string()).optional(),
    externalUrl: z.nullable(z.string()).optional(),
    integrationId: z.nullable(z.string()).optional(),
    requestId: z.nullable(z.string()).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var TaskGrantSource$;
(function (TaskGrantSource$) {
    /** @deprecated use `TaskGrantSource$inboundSchema` instead. */
    TaskGrantSource$.inboundSchema = TaskGrantSource$inboundSchema;
    /** @deprecated use `TaskGrantSource$outboundSchema` instead. */
    TaskGrantSource$.outboundSchema = TaskGrantSource$outboundSchema;
})(TaskGrantSource$ || (TaskGrantSource$ = {}));
export function taskGrantSourceToJSON(taskGrantSource) {
    return JSON.stringify(TaskGrantSource$outboundSchema.parse(taskGrantSource));
}
export function taskGrantSourceFromJSON(jsonString) {
    return safeParse(jsonString, (x) => TaskGrantSource$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'TaskGrantSource' from JSON`);
}
