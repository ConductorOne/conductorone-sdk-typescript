/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
/** @internal */
export const WaitDuration$inboundSchema = z.object({
    duration: z.nullable(z.string()).optional(),
});
/** @internal */
export const WaitDuration$outboundSchema = z.object({
    duration: z.nullable(z.string()).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var WaitDuration$;
(function (WaitDuration$) {
    /** @deprecated use `WaitDuration$inboundSchema` instead. */
    WaitDuration$.inboundSchema = WaitDuration$inboundSchema;
    /** @deprecated use `WaitDuration$outboundSchema` instead. */
    WaitDuration$.outboundSchema = WaitDuration$outboundSchema;
})(WaitDuration$ || (WaitDuration$ = {}));
export function waitDurationToJSON(waitDuration) {
    return JSON.stringify(WaitDuration$outboundSchema.parse(waitDuration));
}
export function waitDurationFromJSON(jsonString) {
    return safeParse(jsonString, (x) => WaitDuration$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'WaitDuration' from JSON`);
}
