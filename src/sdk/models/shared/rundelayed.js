/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
/** @internal */
export const RunDelayed$inboundSchema = z.object({
    coldStartDelayDays: z.number().int(),
});
/** @internal */
export const RunDelayed$outboundSchema = z.object({
    coldStartDelayDays: z.number().int(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RunDelayed$;
(function (RunDelayed$) {
    /** @deprecated use `RunDelayed$inboundSchema` instead. */
    RunDelayed$.inboundSchema = RunDelayed$inboundSchema;
    /** @deprecated use `RunDelayed$outboundSchema` instead. */
    RunDelayed$.outboundSchema = RunDelayed$outboundSchema;
})(RunDelayed$ || (RunDelayed$ = {}));
export function runDelayedToJSON(runDelayed) {
    return JSON.stringify(RunDelayed$outboundSchema.parse(runDelayed));
}
export function runDelayedFromJSON(jsonString) {
    return safeParse(jsonString, (x) => RunDelayed$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'RunDelayed' from JSON`);
}
