/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { FacetRange$inboundSchema, FacetRange$outboundSchema, } from "./facetrange.js";
/** @internal */
export const FacetRangeItem$inboundSchema = z.object({
    ranges: z.nullable(z.array(FacetRange$inboundSchema)).optional(),
});
/** @internal */
export const FacetRangeItem$outboundSchema = z.object({
    ranges: z.nullable(z.array(FacetRange$outboundSchema)).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var FacetRangeItem$;
(function (FacetRangeItem$) {
    /** @deprecated use `FacetRangeItem$inboundSchema` instead. */
    FacetRangeItem$.inboundSchema = FacetRangeItem$inboundSchema;
    /** @deprecated use `FacetRangeItem$outboundSchema` instead. */
    FacetRangeItem$.outboundSchema = FacetRangeItem$outboundSchema;
})(FacetRangeItem$ || (FacetRangeItem$ = {}));
export function facetRangeItemToJSON(facetRangeItem) {
    return JSON.stringify(FacetRangeItem$outboundSchema.parse(facetRangeItem));
}
export function facetRangeItemFromJSON(jsonString) {
    return safeParse(jsonString, (x) => FacetRangeItem$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'FacetRangeItem' from JSON`);
}
