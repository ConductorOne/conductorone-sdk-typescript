/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

export enum SearchPoliciesRequestPolicyTypes {
    PolicyTypeUnspecified = "POLICY_TYPE_UNSPECIFIED",
    PolicyTypeGrant = "POLICY_TYPE_GRANT",
    PolicyTypeRevoke = "POLICY_TYPE_REVOKE",
    PolicyTypeCertify = "POLICY_TYPE_CERTIFY",
    PolicyTypeAccessRequest = "POLICY_TYPE_ACCESS_REQUEST",
    PolicyTypeProvision = "POLICY_TYPE_PROVISION",
}

/**
 *  Search Policies by a few properties.
 *
 * @remarks
 *
 */
export class SearchPoliciesRequest extends SpeakeasyBase {
    /**
     *  Search for policies with an exact match on the display name.
     *
     * @remarks
     *
     */
    @SpeakeasyMetadata()
    @Expose({ name: "displayName" })
    displayName?: string;

    /**
     *  The pageSize where 10 <= pageSize <= 100.
     *
     * @remarks
     *
     */
    @SpeakeasyMetadata()
    @Expose({ name: "pageSize" })
    pageSize?: number;

    /**
     *  The pageToken field.
     *
     * @remarks
     *
     */
    @SpeakeasyMetadata()
    @Expose({ name: "pageToken" })
    pageToken?: string;

    /**
     *  The policy type to search on. This can be POLICY_TYPE_GRANT, POLICY_TYPE_REVOKE, POLICY_TYPE_CERTIFY, POLICY_TYPE_ACCESS_REQUEST, or POLICY_TYPE_PROVISION.
     *
     * @remarks
     *
     */
    @SpeakeasyMetadata()
    @Expose({ name: "policyTypes" })
    policyTypes?: SearchPoliciesRequestPolicyTypes[];

    /**
     *  Query the policies with a fuzzy search on display name and description.
     *
     * @remarks
     *
     */
    @SpeakeasyMetadata()
    @Expose({ name: "query" })
    query?: string;
}
