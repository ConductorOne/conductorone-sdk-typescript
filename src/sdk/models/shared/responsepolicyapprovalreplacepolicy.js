/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { PolicyStep$inboundSchema, PolicyStep$outboundSchema, } from "./policystep.js";
/** @internal */
export const ResponsePolicyApprovalReplacePolicy$inboundSchema = z.object({
    comment: z.nullable(z.string()).optional(),
    policySteps: z.nullable(z.array(PolicyStep$inboundSchema)).optional(),
});
/** @internal */
export const ResponsePolicyApprovalReplacePolicy$outboundSchema = z.object({
    comment: z.nullable(z.string()).optional(),
    policySteps: z.nullable(z.array(PolicyStep$outboundSchema)).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ResponsePolicyApprovalReplacePolicy$;
(function (ResponsePolicyApprovalReplacePolicy$) {
    /** @deprecated use `ResponsePolicyApprovalReplacePolicy$inboundSchema` instead. */
    ResponsePolicyApprovalReplacePolicy$.inboundSchema = ResponsePolicyApprovalReplacePolicy$inboundSchema;
    /** @deprecated use `ResponsePolicyApprovalReplacePolicy$outboundSchema` instead. */
    ResponsePolicyApprovalReplacePolicy$.outboundSchema = ResponsePolicyApprovalReplacePolicy$outboundSchema;
})(ResponsePolicyApprovalReplacePolicy$ || (ResponsePolicyApprovalReplacePolicy$ = {}));
export function responsePolicyApprovalReplacePolicyToJSON(responsePolicyApprovalReplacePolicy) {
    return JSON.stringify(ResponsePolicyApprovalReplacePolicy$outboundSchema.parse(responsePolicyApprovalReplacePolicy));
}
export function responsePolicyApprovalReplacePolicyFromJSON(jsonString) {
    return safeParse(jsonString, (x) => ResponsePolicyApprovalReplacePolicy$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ResponsePolicyApprovalReplacePolicy' from JSON`);
}
