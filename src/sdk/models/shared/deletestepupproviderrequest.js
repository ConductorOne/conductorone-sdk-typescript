/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
/** @internal */
export const DeleteStepUpProviderRequest$inboundSchema = z.object({});
/** @internal */
export const DeleteStepUpProviderRequest$outboundSchema = z.object({});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var DeleteStepUpProviderRequest$;
(function (DeleteStepUpProviderRequest$) {
    /** @deprecated use `DeleteStepUpProviderRequest$inboundSchema` instead. */
    DeleteStepUpProviderRequest$.inboundSchema = DeleteStepUpProviderRequest$inboundSchema;
    /** @deprecated use `DeleteStepUpProviderRequest$outboundSchema` instead. */
    DeleteStepUpProviderRequest$.outboundSchema = DeleteStepUpProviderRequest$outboundSchema;
})(DeleteStepUpProviderRequest$ || (DeleteStepUpProviderRequest$ = {}));
export function deleteStepUpProviderRequestToJSON(deleteStepUpProviderRequest) {
    return JSON.stringify(DeleteStepUpProviderRequest$outboundSchema.parse(deleteStepUpProviderRequest));
}
export function deleteStepUpProviderRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => DeleteStepUpProviderRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'DeleteStepUpProviderRequest' from JSON`);
}
