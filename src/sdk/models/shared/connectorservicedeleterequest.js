/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
/** @internal */
export const ConnectorServiceDeleteRequest$inboundSchema = z.object({});
/** @internal */
export const ConnectorServiceDeleteRequest$outboundSchema = z.object({});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ConnectorServiceDeleteRequest$;
(function (ConnectorServiceDeleteRequest$) {
    /** @deprecated use `ConnectorServiceDeleteRequest$inboundSchema` instead. */
    ConnectorServiceDeleteRequest$.inboundSchema = ConnectorServiceDeleteRequest$inboundSchema;
    /** @deprecated use `ConnectorServiceDeleteRequest$outboundSchema` instead. */
    ConnectorServiceDeleteRequest$.outboundSchema = ConnectorServiceDeleteRequest$outboundSchema;
})(ConnectorServiceDeleteRequest$ || (ConnectorServiceDeleteRequest$ = {}));
export function connectorServiceDeleteRequestToJSON(connectorServiceDeleteRequest) {
    return JSON.stringify(ConnectorServiceDeleteRequest$outboundSchema.parse(connectorServiceDeleteRequest));
}
export function connectorServiceDeleteRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => ConnectorServiceDeleteRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ConnectorServiceDeleteRequest' from JSON`);
}
