/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * The TaskAuditEscalateToEmergencyAccess message.
 */
export type TaskAuditEscalateToEmergencyAccess = {
  /**
   * The oldPolicyId field.
   */
  oldPolicyId?: string | null | undefined;
  /**
   * The oldPolicyStepId field.
   */
  oldPolicyStepId?: string | null | undefined;
};

/** @internal */
export const TaskAuditEscalateToEmergencyAccess$inboundSchema: z.ZodType<
  TaskAuditEscalateToEmergencyAccess,
  z.ZodTypeDef,
  unknown
> = z.object({
  oldPolicyId: z.nullable(z.string()).optional(),
  oldPolicyStepId: z.nullable(z.string()).optional(),
});

/** @internal */
export type TaskAuditEscalateToEmergencyAccess$Outbound = {
  oldPolicyId?: string | null | undefined;
  oldPolicyStepId?: string | null | undefined;
};

/** @internal */
export const TaskAuditEscalateToEmergencyAccess$outboundSchema: z.ZodType<
  TaskAuditEscalateToEmergencyAccess$Outbound,
  z.ZodTypeDef,
  TaskAuditEscalateToEmergencyAccess
> = z.object({
  oldPolicyId: z.nullable(z.string()).optional(),
  oldPolicyStepId: z.nullable(z.string()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TaskAuditEscalateToEmergencyAccess$ {
  /** @deprecated use `TaskAuditEscalateToEmergencyAccess$inboundSchema` instead. */
  export const inboundSchema = TaskAuditEscalateToEmergencyAccess$inboundSchema;
  /** @deprecated use `TaskAuditEscalateToEmergencyAccess$outboundSchema` instead. */
  export const outboundSchema =
    TaskAuditEscalateToEmergencyAccess$outboundSchema;
  /** @deprecated use `TaskAuditEscalateToEmergencyAccess$Outbound` instead. */
  export type Outbound = TaskAuditEscalateToEmergencyAccess$Outbound;
}

export function taskAuditEscalateToEmergencyAccessToJSON(
  taskAuditEscalateToEmergencyAccess: TaskAuditEscalateToEmergencyAccess,
): string {
  return JSON.stringify(
    TaskAuditEscalateToEmergencyAccess$outboundSchema.parse(
      taskAuditEscalateToEmergencyAccess,
    ),
  );
}

export function taskAuditEscalateToEmergencyAccessFromJSON(
  jsonString: string,
): SafeParseResult<TaskAuditEscalateToEmergencyAccess, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      TaskAuditEscalateToEmergencyAccess$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'TaskAuditEscalateToEmergencyAccess' from JSON`,
  );
}
