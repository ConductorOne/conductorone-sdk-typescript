/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
/** @internal */
export const AppOwnerApproval$inboundSchema = z.object({
    allowSelfApproval: z.nullable(z.boolean()).optional(),
});
/** @internal */
export const AppOwnerApproval$outboundSchema = z.object({
    allowSelfApproval: z.nullable(z.boolean()).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var AppOwnerApproval$;
(function (AppOwnerApproval$) {
    /** @deprecated use `AppOwnerApproval$inboundSchema` instead. */
    AppOwnerApproval$.inboundSchema = AppOwnerApproval$inboundSchema;
    /** @deprecated use `AppOwnerApproval$outboundSchema` instead. */
    AppOwnerApproval$.outboundSchema = AppOwnerApproval$outboundSchema;
})(AppOwnerApproval$ || (AppOwnerApproval$ = {}));
export function appOwnerApprovalToJSON(appOwnerApproval) {
    return JSON.stringify(AppOwnerApproval$outboundSchema.parse(appOwnerApproval));
}
export function appOwnerApprovalFromJSON(jsonString) {
    return safeParse(jsonString, (x) => AppOwnerApproval$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'AppOwnerApproval' from JSON`);
}
