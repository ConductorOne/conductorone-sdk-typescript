/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { TaskExpandMask$inboundSchema, TaskExpandMask$outboundSchema, } from "./taskexpandmask.js";
import { TaskGrantSource$inboundSchema, TaskGrantSource$outboundSchema, } from "./taskgrantsource.js";
/** @internal */
export const TaskServiceCreateGrantRequest$inboundSchema = z.object({
    appEntitlementId: z.string(),
    appId: z.string(),
    appUserId: z.nullable(z.string()).optional(),
    description: z.nullable(z.string()).optional(),
    emergencyAccess: z.nullable(z.boolean()).optional(),
    expandMask: z.nullable(TaskExpandMask$inboundSchema).optional(),
    grantDuration: z.nullable(z.string()).optional(),
    identityUserId: z.nullable(z.string()).optional(),
    requestData: z.nullable(z.record(z.any())).optional(),
    source: z.nullable(TaskGrantSource$inboundSchema).optional(),
});
/** @internal */
export const TaskServiceCreateGrantRequest$outboundSchema = z.object({
    appEntitlementId: z.string(),
    appId: z.string(),
    appUserId: z.nullable(z.string()).optional(),
    description: z.nullable(z.string()).optional(),
    emergencyAccess: z.nullable(z.boolean()).optional(),
    expandMask: z.nullable(TaskExpandMask$outboundSchema).optional(),
    grantDuration: z.nullable(z.string()).optional(),
    identityUserId: z.nullable(z.string()).optional(),
    requestData: z.nullable(z.record(z.any())).optional(),
    source: z.nullable(TaskGrantSource$outboundSchema).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var TaskServiceCreateGrantRequest$;
(function (TaskServiceCreateGrantRequest$) {
    /** @deprecated use `TaskServiceCreateGrantRequest$inboundSchema` instead. */
    TaskServiceCreateGrantRequest$.inboundSchema = TaskServiceCreateGrantRequest$inboundSchema;
    /** @deprecated use `TaskServiceCreateGrantRequest$outboundSchema` instead. */
    TaskServiceCreateGrantRequest$.outboundSchema = TaskServiceCreateGrantRequest$outboundSchema;
})(TaskServiceCreateGrantRequest$ || (TaskServiceCreateGrantRequest$ = {}));
export function taskServiceCreateGrantRequestToJSON(taskServiceCreateGrantRequest) {
    return JSON.stringify(TaskServiceCreateGrantRequest$outboundSchema.parse(taskServiceCreateGrantRequest));
}
export function taskServiceCreateGrantRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => TaskServiceCreateGrantRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'TaskServiceCreateGrantRequest' from JSON`);
}
