/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";
import { collectExtraKeys as collectExtraKeys$, safeParse, } from "../../../lib/schemas.js";
import { AppUserView$inboundSchema, AppUserView$outboundSchema, } from "./appuserview.js";
/** @internal */
export const AppUserServiceSearchResponseExpanded$inboundSchema = collectExtraKeys$(z.object({
    "@type": z.string().optional(),
}).catchall(z.any()), "additionalProperties", true).transform((v) => {
    return remap$(v, {
        "@type": "atType",
    });
});
/** @internal */
export const AppUserServiceSearchResponseExpanded$outboundSchema = z.object({
    atType: z.string().optional(),
    additionalProperties: z.record(z.any()),
}).transform((v) => {
    return {
        ...v.additionalProperties,
        ...remap$(v, {
            atType: "@type",
            additionalProperties: null,
        }),
    };
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var AppUserServiceSearchResponseExpanded$;
(function (AppUserServiceSearchResponseExpanded$) {
    /** @deprecated use `AppUserServiceSearchResponseExpanded$inboundSchema` instead. */
    AppUserServiceSearchResponseExpanded$.inboundSchema = AppUserServiceSearchResponseExpanded$inboundSchema;
    /** @deprecated use `AppUserServiceSearchResponseExpanded$outboundSchema` instead. */
    AppUserServiceSearchResponseExpanded$.outboundSchema = AppUserServiceSearchResponseExpanded$outboundSchema;
})(AppUserServiceSearchResponseExpanded$ || (AppUserServiceSearchResponseExpanded$ = {}));
export function appUserServiceSearchResponseExpandedToJSON(appUserServiceSearchResponseExpanded) {
    return JSON.stringify(AppUserServiceSearchResponseExpanded$outboundSchema.parse(appUserServiceSearchResponseExpanded));
}
export function appUserServiceSearchResponseExpandedFromJSON(jsonString) {
    return safeParse(jsonString, (x) => AppUserServiceSearchResponseExpanded$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'AppUserServiceSearchResponseExpanded' from JSON`);
}
/** @internal */
export const AppUserServiceSearchResponse$inboundSchema = z.object({
    expanded: z.nullable(z.array(z.lazy(() => AppUserServiceSearchResponseExpanded$inboundSchema))).optional(),
    list: z.nullable(z.array(AppUserView$inboundSchema)).optional(),
    nextPageToken: z.nullable(z.string()).optional(),
});
/** @internal */
export const AppUserServiceSearchResponse$outboundSchema = z.object({
    expanded: z.nullable(z.array(z.lazy(() => AppUserServiceSearchResponseExpanded$outboundSchema))).optional(),
    list: z.nullable(z.array(AppUserView$outboundSchema)).optional(),
    nextPageToken: z.nullable(z.string()).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var AppUserServiceSearchResponse$;
(function (AppUserServiceSearchResponse$) {
    /** @deprecated use `AppUserServiceSearchResponse$inboundSchema` instead. */
    AppUserServiceSearchResponse$.inboundSchema = AppUserServiceSearchResponse$inboundSchema;
    /** @deprecated use `AppUserServiceSearchResponse$outboundSchema` instead. */
    AppUserServiceSearchResponse$.outboundSchema = AppUserServiceSearchResponse$outboundSchema;
})(AppUserServiceSearchResponse$ || (AppUserServiceSearchResponse$ = {}));
export function appUserServiceSearchResponseToJSON(appUserServiceSearchResponse) {
    return JSON.stringify(AppUserServiceSearchResponse$outboundSchema.parse(appUserServiceSearchResponse));
}
export function appUserServiceSearchResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => AppUserServiceSearchResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'AppUserServiceSearchResponse' from JSON`);
}
