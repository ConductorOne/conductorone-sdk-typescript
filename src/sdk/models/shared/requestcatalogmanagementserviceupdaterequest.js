/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { RequestCatalogInput$inboundSchema, RequestCatalogInput$outboundSchema, } from "./requestcatalog.js";
import { RequestCatalogExpandMask$inboundSchema, RequestCatalogExpandMask$outboundSchema, } from "./requestcatalogexpandmask.js";
/** @internal */
export const RequestCatalogManagementServiceUpdateRequest$inboundSchema = z.object({
    catalog: z.nullable(RequestCatalogInput$inboundSchema).optional(),
    expandMask: z.nullable(RequestCatalogExpandMask$inboundSchema).optional(),
    updateMask: z.nullable(z.string()).optional(),
});
/** @internal */
export const RequestCatalogManagementServiceUpdateRequest$outboundSchema = z.object({
    catalog: z.nullable(RequestCatalogInput$outboundSchema).optional(),
    expandMask: z.nullable(RequestCatalogExpandMask$outboundSchema).optional(),
    updateMask: z.nullable(z.string()).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RequestCatalogManagementServiceUpdateRequest$;
(function (RequestCatalogManagementServiceUpdateRequest$) {
    /** @deprecated use `RequestCatalogManagementServiceUpdateRequest$inboundSchema` instead. */
    RequestCatalogManagementServiceUpdateRequest$.inboundSchema = RequestCatalogManagementServiceUpdateRequest$inboundSchema;
    /** @deprecated use `RequestCatalogManagementServiceUpdateRequest$outboundSchema` instead. */
    RequestCatalogManagementServiceUpdateRequest$.outboundSchema = RequestCatalogManagementServiceUpdateRequest$outboundSchema;
})(RequestCatalogManagementServiceUpdateRequest$ || (RequestCatalogManagementServiceUpdateRequest$ = {}));
export function requestCatalogManagementServiceUpdateRequestToJSON(requestCatalogManagementServiceUpdateRequest) {
    return JSON.stringify(RequestCatalogManagementServiceUpdateRequest$outboundSchema.parse(requestCatalogManagementServiceUpdateRequest));
}
export function requestCatalogManagementServiceUpdateRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => RequestCatalogManagementServiceUpdateRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'RequestCatalogManagementServiceUpdateRequest' from JSON`);
}
