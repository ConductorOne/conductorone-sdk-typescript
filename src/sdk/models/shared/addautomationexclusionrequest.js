/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
/** @internal */
export const AddAutomationExclusionRequest$inboundSchema = z.object({
    userIds: z.nullable(z.array(z.string())).optional(),
});
/** @internal */
export const AddAutomationExclusionRequest$outboundSchema = z.object({
    userIds: z.nullable(z.array(z.string())).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var AddAutomationExclusionRequest$;
(function (AddAutomationExclusionRequest$) {
    /** @deprecated use `AddAutomationExclusionRequest$inboundSchema` instead. */
    AddAutomationExclusionRequest$.inboundSchema = AddAutomationExclusionRequest$inboundSchema;
    /** @deprecated use `AddAutomationExclusionRequest$outboundSchema` instead. */
    AddAutomationExclusionRequest$.outboundSchema = AddAutomationExclusionRequest$outboundSchema;
})(AddAutomationExclusionRequest$ || (AddAutomationExclusionRequest$ = {}));
export function addAutomationExclusionRequestToJSON(addAutomationExclusionRequest) {
    return JSON.stringify(AddAutomationExclusionRequest$outboundSchema.parse(addAutomationExclusionRequest));
}
export function addAutomationExclusionRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => AddAutomationExclusionRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'AddAutomationExclusionRequest' from JSON`);
}
