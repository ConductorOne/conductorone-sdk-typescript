/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { UserRef$inboundSchema, UserRef$outboundSchema, } from "./userref.js";
/** @internal */
export const PersonalClientSearchServiceSearchRequest$inboundSchema = z.object({
    pageSize: z.nullable(z.number().int()).optional(),
    pageToken: z.nullable(z.string()).optional(),
    query: z.nullable(z.string()).optional(),
    users: z.nullable(z.array(UserRef$inboundSchema)).optional(),
});
/** @internal */
export const PersonalClientSearchServiceSearchRequest$outboundSchema = z.object({
    pageSize: z.nullable(z.number().int()).optional(),
    pageToken: z.nullable(z.string()).optional(),
    query: z.nullable(z.string()).optional(),
    users: z.nullable(z.array(UserRef$outboundSchema)).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var PersonalClientSearchServiceSearchRequest$;
(function (PersonalClientSearchServiceSearchRequest$) {
    /** @deprecated use `PersonalClientSearchServiceSearchRequest$inboundSchema` instead. */
    PersonalClientSearchServiceSearchRequest$.inboundSchema = PersonalClientSearchServiceSearchRequest$inboundSchema;
    /** @deprecated use `PersonalClientSearchServiceSearchRequest$outboundSchema` instead. */
    PersonalClientSearchServiceSearchRequest$.outboundSchema = PersonalClientSearchServiceSearchRequest$outboundSchema;
})(PersonalClientSearchServiceSearchRequest$ || (PersonalClientSearchServiceSearchRequest$ = {}));
export function personalClientSearchServiceSearchRequestToJSON(personalClientSearchServiceSearchRequest) {
    return JSON.stringify(PersonalClientSearchServiceSearchRequest$outboundSchema.parse(personalClientSearchServiceSearchRequest));
}
export function personalClientSearchServiceSearchRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => PersonalClientSearchServiceSearchRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'PersonalClientSearchServiceSearchRequest' from JSON`);
}
