/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Exporter$inboundSchema, Exporter$outboundSchema, } from "./exporter.js";
/** @internal */
export const ExportServiceGetResponse$inboundSchema = z.object({
    exporter: z.nullable(Exporter$inboundSchema).optional(),
});
/** @internal */
export const ExportServiceGetResponse$outboundSchema = z.object({
    exporter: z.nullable(Exporter$outboundSchema).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ExportServiceGetResponse$;
(function (ExportServiceGetResponse$) {
    /** @deprecated use `ExportServiceGetResponse$inboundSchema` instead. */
    ExportServiceGetResponse$.inboundSchema = ExportServiceGetResponse$inboundSchema;
    /** @deprecated use `ExportServiceGetResponse$outboundSchema` instead. */
    ExportServiceGetResponse$.outboundSchema = ExportServiceGetResponse$outboundSchema;
})(ExportServiceGetResponse$ || (ExportServiceGetResponse$ = {}));
export function exportServiceGetResponseToJSON(exportServiceGetResponse) {
    return JSON.stringify(ExportServiceGetResponse$outboundSchema.parse(exportServiceGetResponse));
}
export function exportServiceGetResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => ExportServiceGetResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ExportServiceGetResponse' from JSON`);
}
