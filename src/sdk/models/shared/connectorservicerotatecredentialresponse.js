/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { ConnectorCredential$inboundSchema, ConnectorCredential$outboundSchema, } from "./connectorcredential.js";
/** @internal */
export const ConnectorServiceRotateCredentialResponse$inboundSchema = z.object({
    credential: z.nullable(ConnectorCredential$inboundSchema).optional(),
});
/** @internal */
export const ConnectorServiceRotateCredentialResponse$outboundSchema = z.object({
    credential: z.nullable(ConnectorCredential$outboundSchema).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ConnectorServiceRotateCredentialResponse$;
(function (ConnectorServiceRotateCredentialResponse$) {
    /** @deprecated use `ConnectorServiceRotateCredentialResponse$inboundSchema` instead. */
    ConnectorServiceRotateCredentialResponse$.inboundSchema = ConnectorServiceRotateCredentialResponse$inboundSchema;
    /** @deprecated use `ConnectorServiceRotateCredentialResponse$outboundSchema` instead. */
    ConnectorServiceRotateCredentialResponse$.outboundSchema = ConnectorServiceRotateCredentialResponse$outboundSchema;
})(ConnectorServiceRotateCredentialResponse$ || (ConnectorServiceRotateCredentialResponse$ = {}));
export function connectorServiceRotateCredentialResponseToJSON(connectorServiceRotateCredentialResponse) {
    return JSON.stringify(ConnectorServiceRotateCredentialResponse$outboundSchema.parse(connectorServiceRotateCredentialResponse));
}
export function connectorServiceRotateCredentialResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => ConnectorServiceRotateCredentialResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ConnectorServiceRotateCredentialResponse' from JSON`);
}
