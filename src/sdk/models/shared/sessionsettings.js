/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { CIDRRestriction$inboundSchema, CIDRRestriction$outboundSchema, } from "./cidrrestriction.js";
/** @internal */
export const SessionSettings$inboundSchema = z.object({
    connectorSource: z.nullable(CIDRRestriction$inboundSchema).optional(),
    maxSessionLength: z.nullable(z.string()).optional(),
    pccAdminSource: z.nullable(CIDRRestriction$inboundSchema).optional(),
    pccUserSource: z.nullable(CIDRRestriction$inboundSchema).optional(),
    ssoAdminSource: z.nullable(CIDRRestriction$inboundSchema).optional(),
    ssoUserSource: z.nullable(CIDRRestriction$inboundSchema).optional(),
});
/** @internal */
export const SessionSettings$outboundSchema = z.object({
    connectorSource: z.nullable(CIDRRestriction$outboundSchema).optional(),
    maxSessionLength: z.nullable(z.string()).optional(),
    pccAdminSource: z.nullable(CIDRRestriction$outboundSchema).optional(),
    pccUserSource: z.nullable(CIDRRestriction$outboundSchema).optional(),
    ssoAdminSource: z.nullable(CIDRRestriction$outboundSchema).optional(),
    ssoUserSource: z.nullable(CIDRRestriction$outboundSchema).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var SessionSettings$;
(function (SessionSettings$) {
    /** @deprecated use `SessionSettings$inboundSchema` instead. */
    SessionSettings$.inboundSchema = SessionSettings$inboundSchema;
    /** @deprecated use `SessionSettings$outboundSchema` instead. */
    SessionSettings$.outboundSchema = SessionSettings$outboundSchema;
})(SessionSettings$ || (SessionSettings$ = {}));
export function sessionSettingsToJSON(sessionSettings) {
    return JSON.stringify(SessionSettings$outboundSchema.parse(sessionSettings));
}
export function sessionSettingsFromJSON(jsonString) {
    return safeParse(jsonString, (x) => SessionSettings$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'SessionSettings' from JSON`);
}
