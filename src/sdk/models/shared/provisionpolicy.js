/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { ConnectorProvision$inboundSchema, ConnectorProvision$outboundSchema, } from "./connectorprovision.js";
import { DelegatedProvision$inboundSchema, DelegatedProvision$outboundSchema, } from "./delegatedprovision.js";
import { ExternalTicketProvision$inboundSchema, ExternalTicketProvision$outboundSchema, } from "./externalticketprovision.js";
import { ManualProvision$inboundSchema, ManualProvision$outboundSchema, } from "./manualprovision.js";
import { MultiStep$inboundSchema, MultiStep$outboundSchema, } from "./multistep.js";
import { UnconfiguredProvision$inboundSchema, UnconfiguredProvision$outboundSchema, } from "./unconfiguredprovision.js";
import { WebhookProvision$inboundSchema, WebhookProvision$outboundSchema, } from "./webhookprovision.js";
/** @internal */
export const ProvisionPolicy$inboundSchema = z.object({
    connector: z.nullable(ConnectorProvision$inboundSchema).optional(),
    delegated: z.nullable(DelegatedProvision$inboundSchema).optional(),
    externalTicket: z.nullable(ExternalTicketProvision$inboundSchema).optional(),
    manual: z.nullable(ManualProvision$inboundSchema).optional(),
    multiStep: z.nullable(z.lazy(() => MultiStep$inboundSchema)).optional(),
    unconfigured: z.nullable(UnconfiguredProvision$inboundSchema).optional(),
    webhook: z.nullable(WebhookProvision$inboundSchema).optional(),
});
/** @internal */
export const ProvisionPolicy$outboundSchema = z.object({
    connector: z.nullable(ConnectorProvision$outboundSchema).optional(),
    delegated: z.nullable(DelegatedProvision$outboundSchema).optional(),
    externalTicket: z.nullable(ExternalTicketProvision$outboundSchema).optional(),
    manual: z.nullable(ManualProvision$outboundSchema).optional(),
    multiStep: z.nullable(z.lazy(() => MultiStep$outboundSchema)).optional(),
    unconfigured: z.nullable(UnconfiguredProvision$outboundSchema).optional(),
    webhook: z.nullable(WebhookProvision$outboundSchema).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ProvisionPolicy$;
(function (ProvisionPolicy$) {
    /** @deprecated use `ProvisionPolicy$inboundSchema` instead. */
    ProvisionPolicy$.inboundSchema = ProvisionPolicy$inboundSchema;
    /** @deprecated use `ProvisionPolicy$outboundSchema` instead. */
    ProvisionPolicy$.outboundSchema = ProvisionPolicy$outboundSchema;
})(ProvisionPolicy$ || (ProvisionPolicy$ = {}));
export function provisionPolicyToJSON(provisionPolicy) {
    return JSON.stringify(ProvisionPolicy$outboundSchema.parse(provisionPolicy));
}
export function provisionPolicyFromJSON(jsonString) {
    return safeParse(jsonString, (x) => ProvisionPolicy$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ProvisionPolicy' from JSON`);
}
