/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
/** @internal */
export const ResponseProvisionStepComplete$inboundSchema = z.object({
    comment: z.nullable(z.string()).optional(),
});
/** @internal */
export const ResponseProvisionStepComplete$outboundSchema = z.object({
    comment: z.nullable(z.string()).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ResponseProvisionStepComplete$;
(function (ResponseProvisionStepComplete$) {
    /** @deprecated use `ResponseProvisionStepComplete$inboundSchema` instead. */
    ResponseProvisionStepComplete$.inboundSchema = ResponseProvisionStepComplete$inboundSchema;
    /** @deprecated use `ResponseProvisionStepComplete$outboundSchema` instead. */
    ResponseProvisionStepComplete$.outboundSchema = ResponseProvisionStepComplete$outboundSchema;
})(ResponseProvisionStepComplete$ || (ResponseProvisionStepComplete$ = {}));
export function responseProvisionStepCompleteToJSON(responseProvisionStepComplete) {
    return JSON.stringify(ResponseProvisionStepComplete$outboundSchema.parse(responseProvisionStepComplete));
}
export function responseProvisionStepCompleteFromJSON(jsonString) {
    return safeParse(jsonString, (x) => ResponseProvisionStepComplete$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ResponseProvisionStepComplete' from JSON`);
}
