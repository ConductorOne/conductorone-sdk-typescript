/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  AppEntitlementExpandMask,
  AppEntitlementExpandMask$inboundSchema,
  AppEntitlementExpandMask$Outbound,
  AppEntitlementExpandMask$outboundSchema,
} from "./appentitlementexpandmask.js";
import {
  AppEntitlementRef,
  AppEntitlementRef$inboundSchema,
  AppEntitlementRef$Outbound,
  AppEntitlementRef$outboundSchema,
} from "./appentitlementref.js";

/**
 * The AppEntitlementSearchServiceSearchGrantsRequest message.
 */
export type AppEntitlementSearchServiceSearchGrantsRequest = {
  /**
   * Search for grants contained in any of these apps.
   */
  appIds?: Array<string> | null | undefined;
  /**
   * Search for grants that are granted to any of these app user ids.
   */
  appUserIds?: Array<string> | null | undefined;
  /**
   * Search for grants of an entitlement
   */
  entitlementRefs?: Array<AppEntitlementRef> | null | undefined;
  expandMask?: AppEntitlementExpandMask | null | undefined;
  /**
   * The pageSize where 0 <= pageSize <= 100. Values < 10 will be set to 10. A value of 0 returns the default page size (currently 25)
   */
  pageSize?: number | null | undefined;
  /**
   * The pageToken field.
   */
  pageToken?: string | null | undefined;
  /**
   * Search for grants within a resource.
   */
  resourceIds?: Array<string> | null | undefined;
  /**
   * Search grants for given resource types.
   */
  resourceTypeIds?: Array<string> | null | undefined;
  /**
   * Search for grants of a user
   */
  userId?: string | null | undefined;
};

/** @internal */
export const AppEntitlementSearchServiceSearchGrantsRequest$inboundSchema:
  z.ZodType<
    AppEntitlementSearchServiceSearchGrantsRequest,
    z.ZodTypeDef,
    unknown
  > = z.object({
    appIds: z.nullable(z.array(z.string())).optional(),
    appUserIds: z.nullable(z.array(z.string())).optional(),
    entitlementRefs: z.nullable(z.array(AppEntitlementRef$inboundSchema))
      .optional(),
    expandMask: z.nullable(AppEntitlementExpandMask$inboundSchema).optional(),
    pageSize: z.nullable(z.number().int()).optional(),
    pageToken: z.nullable(z.string()).optional(),
    resourceIds: z.nullable(z.array(z.string())).optional(),
    resourceTypeIds: z.nullable(z.array(z.string())).optional(),
    userId: z.nullable(z.string()).optional(),
  });

/** @internal */
export type AppEntitlementSearchServiceSearchGrantsRequest$Outbound = {
  appIds?: Array<string> | null | undefined;
  appUserIds?: Array<string> | null | undefined;
  entitlementRefs?: Array<AppEntitlementRef$Outbound> | null | undefined;
  expandMask?: AppEntitlementExpandMask$Outbound | null | undefined;
  pageSize?: number | null | undefined;
  pageToken?: string | null | undefined;
  resourceIds?: Array<string> | null | undefined;
  resourceTypeIds?: Array<string> | null | undefined;
  userId?: string | null | undefined;
};

/** @internal */
export const AppEntitlementSearchServiceSearchGrantsRequest$outboundSchema:
  z.ZodType<
    AppEntitlementSearchServiceSearchGrantsRequest$Outbound,
    z.ZodTypeDef,
    AppEntitlementSearchServiceSearchGrantsRequest
  > = z.object({
    appIds: z.nullable(z.array(z.string())).optional(),
    appUserIds: z.nullable(z.array(z.string())).optional(),
    entitlementRefs: z.nullable(z.array(AppEntitlementRef$outboundSchema))
      .optional(),
    expandMask: z.nullable(AppEntitlementExpandMask$outboundSchema).optional(),
    pageSize: z.nullable(z.number().int()).optional(),
    pageToken: z.nullable(z.string()).optional(),
    resourceIds: z.nullable(z.array(z.string())).optional(),
    resourceTypeIds: z.nullable(z.array(z.string())).optional(),
    userId: z.nullable(z.string()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppEntitlementSearchServiceSearchGrantsRequest$ {
  /** @deprecated use `AppEntitlementSearchServiceSearchGrantsRequest$inboundSchema` instead. */
  export const inboundSchema =
    AppEntitlementSearchServiceSearchGrantsRequest$inboundSchema;
  /** @deprecated use `AppEntitlementSearchServiceSearchGrantsRequest$outboundSchema` instead. */
  export const outboundSchema =
    AppEntitlementSearchServiceSearchGrantsRequest$outboundSchema;
  /** @deprecated use `AppEntitlementSearchServiceSearchGrantsRequest$Outbound` instead. */
  export type Outbound =
    AppEntitlementSearchServiceSearchGrantsRequest$Outbound;
}

export function appEntitlementSearchServiceSearchGrantsRequestToJSON(
  appEntitlementSearchServiceSearchGrantsRequest:
    AppEntitlementSearchServiceSearchGrantsRequest,
): string {
  return JSON.stringify(
    AppEntitlementSearchServiceSearchGrantsRequest$outboundSchema.parse(
      appEntitlementSearchServiceSearchGrantsRequest,
    ),
  );
}

export function appEntitlementSearchServiceSearchGrantsRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  AppEntitlementSearchServiceSearchGrantsRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      AppEntitlementSearchServiceSearchGrantsRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'AppEntitlementSearchServiceSearchGrantsRequest' from JSON`,
  );
}
