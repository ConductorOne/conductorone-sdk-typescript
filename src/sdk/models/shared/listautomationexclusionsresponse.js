/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { UserWithAppEntitlementUserBindingView$inboundSchema, UserWithAppEntitlementUserBindingView$outboundSchema, } from "./userwithappentitlementuserbindingview.js";
/** @internal */
export const ListAutomationExclusionsResponse$inboundSchema = z.object({
    list: z.nullable(z.array(UserWithAppEntitlementUserBindingView$inboundSchema))
        .optional(),
    nextPageToken: z.nullable(z.string()).optional(),
});
/** @internal */
export const ListAutomationExclusionsResponse$outboundSchema = z.object({
    list: z.nullable(z.array(UserWithAppEntitlementUserBindingView$outboundSchema)).optional(),
    nextPageToken: z.nullable(z.string()).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ListAutomationExclusionsResponse$;
(function (ListAutomationExclusionsResponse$) {
    /** @deprecated use `ListAutomationExclusionsResponse$inboundSchema` instead. */
    ListAutomationExclusionsResponse$.inboundSchema = ListAutomationExclusionsResponse$inboundSchema;
    /** @deprecated use `ListAutomationExclusionsResponse$outboundSchema` instead. */
    ListAutomationExclusionsResponse$.outboundSchema = ListAutomationExclusionsResponse$outboundSchema;
})(ListAutomationExclusionsResponse$ || (ListAutomationExclusionsResponse$ = {}));
export function listAutomationExclusionsResponseToJSON(listAutomationExclusionsResponse) {
    return JSON.stringify(ListAutomationExclusionsResponse$outboundSchema.parse(listAutomationExclusionsResponse));
}
export function listAutomationExclusionsResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => ListAutomationExclusionsResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ListAutomationExclusionsResponse' from JSON`);
}
