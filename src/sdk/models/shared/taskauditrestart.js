/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
/** @internal */
export const TaskAuditRestart$inboundSchema = z.object({
    oldPolicyStepId: z.nullable(z.string()).optional(),
});
/** @internal */
export const TaskAuditRestart$outboundSchema = z.object({
    oldPolicyStepId: z.nullable(z.string()).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var TaskAuditRestart$;
(function (TaskAuditRestart$) {
    /** @deprecated use `TaskAuditRestart$inboundSchema` instead. */
    TaskAuditRestart$.inboundSchema = TaskAuditRestart$inboundSchema;
    /** @deprecated use `TaskAuditRestart$outboundSchema` instead. */
    TaskAuditRestart$.outboundSchema = TaskAuditRestart$outboundSchema;
})(TaskAuditRestart$ || (TaskAuditRestart$ = {}));
export function taskAuditRestartToJSON(taskAuditRestart) {
    return JSON.stringify(TaskAuditRestart$outboundSchema.parse(taskAuditRestart));
}
export function taskAuditRestartFromJSON(jsonString) {
    return safeParse(jsonString, (x) => TaskAuditRestart$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'TaskAuditRestart' from JSON`);
}
