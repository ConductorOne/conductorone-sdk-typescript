/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { AppResource$inboundSchema, AppResource$outboundSchema, } from "./appresource.js";
/** @internal */
export const AppResourceView$inboundSchema = z.object({
    appPath: z.nullable(z.string()).optional(),
    appResource: z.nullable(AppResource$inboundSchema).optional(),
    parentResourcePath: z.nullable(z.string()).optional(),
    parentResourceTypePath: z.nullable(z.string()).optional(),
    resourceTypePath: z.nullable(z.string()).optional(),
});
/** @internal */
export const AppResourceView$outboundSchema = z.object({
    appPath: z.nullable(z.string()).optional(),
    appResource: z.nullable(AppResource$outboundSchema).optional(),
    parentResourcePath: z.nullable(z.string()).optional(),
    parentResourceTypePath: z.nullable(z.string()).optional(),
    resourceTypePath: z.nullable(z.string()).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var AppResourceView$;
(function (AppResourceView$) {
    /** @deprecated use `AppResourceView$inboundSchema` instead. */
    AppResourceView$.inboundSchema = AppResourceView$inboundSchema;
    /** @deprecated use `AppResourceView$outboundSchema` instead. */
    AppResourceView$.outboundSchema = AppResourceView$outboundSchema;
})(AppResourceView$ || (AppResourceView$ = {}));
export function appResourceViewToJSON(appResourceView) {
    return JSON.stringify(AppResourceView$outboundSchema.parse(appResourceView));
}
export function appResourceViewFromJSON(jsonString) {
    return safeParse(jsonString, (x) => AppResourceView$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'AppResourceView' from JSON`);
}
