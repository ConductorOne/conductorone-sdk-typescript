/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AppEntitlement, AppEntitlementInput } from "./appentitlement";
import { Expose, Transform, Type } from "class-transformer";

/**
 *  The RequestCatalog is used for managing which entitlements are requestable, and who can request them.
 *
 * @remarks
 *
 */
export class RequestCatalog extends SpeakeasyBase {
    /**
     *  An array of app entitlements that, if the user has, can view the contents of this catalog.
     *
     * @remarks
     *
     */
    @SpeakeasyMetadata({ elemType: AppEntitlement })
    @Expose({ name: "accessEntitlements" })
    @Type(() => AppEntitlement)
    accessEntitlements?: AppEntitlement[];

    /**
     *  The Apps contained in this request catalog.
     *
     * @remarks
     *
     */
    @SpeakeasyMetadata()
    @Expose({ name: "appIds" })
    appIds?: string[];

    @SpeakeasyMetadata()
    @Expose({ name: "createdAt" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    createdAt?: Date;

    /**
     *  The id of the user this request catalog was created by.
     *
     * @remarks
     *
     */
    @SpeakeasyMetadata()
    @Expose({ name: "createdByUserId" })
    createdByUserId?: string;

    /**
     *  The description of the request catalog.
     *
     * @remarks
     *
     */
    @SpeakeasyMetadata()
    @Expose({ name: "description" })
    description?: string;

    /**
     *  The display name of the request catalog.
     *
     * @remarks
     *
     */
    @SpeakeasyMetadata()
    @Expose({ name: "displayName" })
    displayName?: string;

    /**
     *  The id of the request catalog.
     *
     * @remarks
     *
     */
    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id?: string;

    /**
     *  Whether or not this catalog is published.
     *
     * @remarks
     *
     */
    @SpeakeasyMetadata()
    @Expose({ name: "published" })
    published?: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "updatedAt" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    updatedAt?: Date;

    /**
     *  If this is true, the access entitlement requirement is ignored.
     *
     * @remarks
     *
     */
    @SpeakeasyMetadata()
    @Expose({ name: "visibleToEveryone" })
    visibleToEveryone?: boolean;
}

/**
 *  The RequestCatalog is used for managing which entitlements are requestable, and who can request them.
 *
 * @remarks
 *
 */
export class RequestCatalogInput extends SpeakeasyBase {
    /**
     *  An array of app entitlements that, if the user has, can view the contents of this catalog.
     *
     * @remarks
     *
     */
    @SpeakeasyMetadata({ elemType: AppEntitlementInput })
    @Expose({ name: "accessEntitlements" })
    @Type(() => AppEntitlementInput)
    accessEntitlements?: AppEntitlementInput[];

    /**
     *  The Apps contained in this request catalog.
     *
     * @remarks
     *
     */
    @SpeakeasyMetadata()
    @Expose({ name: "appIds" })
    appIds?: string[];

    /**
     *  The id of the user this request catalog was created by.
     *
     * @remarks
     *
     */
    @SpeakeasyMetadata()
    @Expose({ name: "createdByUserId" })
    createdByUserId?: string;

    /**
     *  The description of the request catalog.
     *
     * @remarks
     *
     */
    @SpeakeasyMetadata()
    @Expose({ name: "description" })
    description?: string;

    /**
     *  The display name of the request catalog.
     *
     * @remarks
     *
     */
    @SpeakeasyMetadata()
    @Expose({ name: "displayName" })
    displayName?: string;

    /**
     *  The id of the request catalog.
     *
     * @remarks
     *
     */
    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id?: string;

    /**
     *  Whether or not this catalog is published.
     *
     * @remarks
     *
     */
    @SpeakeasyMetadata()
    @Expose({ name: "published" })
    published?: boolean;

    /**
     *  If this is true, the access entitlement requirement is ignored.
     *
     * @remarks
     *
     */
    @SpeakeasyMetadata()
    @Expose({ name: "visibleToEveryone" })
    visibleToEveryone?: boolean;
}
