/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
/** @internal */
export const EntitlementOwnerApproval$inboundSchema = z.object({
    allowSelfApproval: z.nullable(z.boolean()).optional(),
    fallback: z.nullable(z.boolean()).optional(),
    fallbackUserIds: z.nullable(z.array(z.string())).optional(),
});
/** @internal */
export const EntitlementOwnerApproval$outboundSchema = z.object({
    allowSelfApproval: z.nullable(z.boolean()).optional(),
    fallback: z.nullable(z.boolean()).optional(),
    fallbackUserIds: z.nullable(z.array(z.string())).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var EntitlementOwnerApproval$;
(function (EntitlementOwnerApproval$) {
    /** @deprecated use `EntitlementOwnerApproval$inboundSchema` instead. */
    EntitlementOwnerApproval$.inboundSchema = EntitlementOwnerApproval$inboundSchema;
    /** @deprecated use `EntitlementOwnerApproval$outboundSchema` instead. */
    EntitlementOwnerApproval$.outboundSchema = EntitlementOwnerApproval$outboundSchema;
})(EntitlementOwnerApproval$ || (EntitlementOwnerApproval$ = {}));
export function entitlementOwnerApprovalToJSON(entitlementOwnerApproval) {
    return JSON.stringify(EntitlementOwnerApproval$outboundSchema.parse(entitlementOwnerApproval));
}
export function entitlementOwnerApprovalFromJSON(jsonString) {
    return safeParse(jsonString, (x) => EntitlementOwnerApproval$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'EntitlementOwnerApproval' from JSON`);
}
