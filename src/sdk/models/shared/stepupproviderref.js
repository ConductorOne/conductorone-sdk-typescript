/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
/** @internal */
export const StepUpProviderRef$inboundSchema = z.object({
    id: z.nullable(z.string()).optional(),
});
/** @internal */
export const StepUpProviderRef$outboundSchema = z.object({
    id: z.nullable(z.string()).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var StepUpProviderRef$;
(function (StepUpProviderRef$) {
    /** @deprecated use `StepUpProviderRef$inboundSchema` instead. */
    StepUpProviderRef$.inboundSchema = StepUpProviderRef$inboundSchema;
    /** @deprecated use `StepUpProviderRef$outboundSchema` instead. */
    StepUpProviderRef$.outboundSchema = StepUpProviderRef$outboundSchema;
})(StepUpProviderRef$ || (StepUpProviderRef$ = {}));
export function stepUpProviderRefToJSON(stepUpProviderRef) {
    return JSON.stringify(StepUpProviderRef$outboundSchema.parse(stepUpProviderRef));
}
export function stepUpProviderRefFromJSON(jsonString) {
    return safeParse(jsonString, (x) => StepUpProviderRef$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'StepUpProviderRef' from JSON`);
}
