/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { User$inboundSchema, User$outboundSchema, } from "./user.js";
/** @internal */
export const TaskAuditPolicyApprovalReassigned$inboundSchema = z.object({
    newPolicyStepId: z.nullable(z.string()).optional(),
    newUsers: z.nullable(z.array(z.string())).optional(),
    oldPolicyStepId: z.nullable(z.string()).optional(),
    users: z.nullable(z.array(User$inboundSchema)).optional(),
});
/** @internal */
export const TaskAuditPolicyApprovalReassigned$outboundSchema = z.object({
    newPolicyStepId: z.nullable(z.string()).optional(),
    newUsers: z.nullable(z.array(z.string())).optional(),
    oldPolicyStepId: z.nullable(z.string()).optional(),
    users: z.nullable(z.array(User$outboundSchema)).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var TaskAuditPolicyApprovalReassigned$;
(function (TaskAuditPolicyApprovalReassigned$) {
    /** @deprecated use `TaskAuditPolicyApprovalReassigned$inboundSchema` instead. */
    TaskAuditPolicyApprovalReassigned$.inboundSchema = TaskAuditPolicyApprovalReassigned$inboundSchema;
    /** @deprecated use `TaskAuditPolicyApprovalReassigned$outboundSchema` instead. */
    TaskAuditPolicyApprovalReassigned$.outboundSchema = TaskAuditPolicyApprovalReassigned$outboundSchema;
})(TaskAuditPolicyApprovalReassigned$ || (TaskAuditPolicyApprovalReassigned$ = {}));
export function taskAuditPolicyApprovalReassignedToJSON(taskAuditPolicyApprovalReassigned) {
    return JSON.stringify(TaskAuditPolicyApprovalReassigned$outboundSchema.parse(taskAuditPolicyApprovalReassigned));
}
export function taskAuditPolicyApprovalReassignedFromJSON(jsonString) {
    return safeParse(jsonString, (x) => TaskAuditPolicyApprovalReassigned$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'TaskAuditPolicyApprovalReassigned' from JSON`);
}
