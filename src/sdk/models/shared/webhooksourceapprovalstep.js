/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
/** @internal */
export const WebhookSourceApprovalStep$inboundSchema = z.object({
    ticketId: z.nullable(z.string()).optional(),
});
/** @internal */
export const WebhookSourceApprovalStep$outboundSchema = z.object({
    ticketId: z.nullable(z.string()).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var WebhookSourceApprovalStep$;
(function (WebhookSourceApprovalStep$) {
    /** @deprecated use `WebhookSourceApprovalStep$inboundSchema` instead. */
    WebhookSourceApprovalStep$.inboundSchema = WebhookSourceApprovalStep$inboundSchema;
    /** @deprecated use `WebhookSourceApprovalStep$outboundSchema` instead. */
    WebhookSourceApprovalStep$.outboundSchema = WebhookSourceApprovalStep$outboundSchema;
})(WebhookSourceApprovalStep$ || (WebhookSourceApprovalStep$ = {}));
export function webhookSourceApprovalStepToJSON(webhookSourceApprovalStep) {
    return JSON.stringify(WebhookSourceApprovalStep$outboundSchema.parse(webhookSourceApprovalStep));
}
export function webhookSourceApprovalStepFromJSON(jsonString) {
    return safeParse(jsonString, (x) => WebhookSourceApprovalStep$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'WebhookSourceApprovalStep' from JSON`);
}
