/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { App$inboundSchema, App$outboundSchema, } from "./app.js";
/** @internal */
export const UpdateAppResponse$inboundSchema = z.object({
    app: z.nullable(App$inboundSchema).optional(),
});
/** @internal */
export const UpdateAppResponse$outboundSchema = z.object({
    app: z.nullable(App$outboundSchema).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var UpdateAppResponse$;
(function (UpdateAppResponse$) {
    /** @deprecated use `UpdateAppResponse$inboundSchema` instead. */
    UpdateAppResponse$.inboundSchema = UpdateAppResponse$inboundSchema;
    /** @deprecated use `UpdateAppResponse$outboundSchema` instead. */
    UpdateAppResponse$.outboundSchema = UpdateAppResponse$outboundSchema;
})(UpdateAppResponse$ || (UpdateAppResponse$ = {}));
export function updateAppResponseToJSON(updateAppResponse) {
    return JSON.stringify(UpdateAppResponse$outboundSchema.parse(updateAppResponse));
}
export function updateAppResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => UpdateAppResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'UpdateAppResponse' from JSON`);
}
