/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
/** @internal */
export const EmailNotifications$inboundSchema = z.object({
    enabled: z.nullable(z.boolean()).optional(),
    identityUserIds: z.nullable(z.array(z.string())).optional(),
});
/** @internal */
export const EmailNotifications$outboundSchema = z.object({
    enabled: z.nullable(z.boolean()).optional(),
    identityUserIds: z.nullable(z.array(z.string())).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var EmailNotifications$;
(function (EmailNotifications$) {
    /** @deprecated use `EmailNotifications$inboundSchema` instead. */
    EmailNotifications$.inboundSchema = EmailNotifications$inboundSchema;
    /** @deprecated use `EmailNotifications$outboundSchema` instead. */
    EmailNotifications$.outboundSchema = EmailNotifications$outboundSchema;
})(EmailNotifications$ || (EmailNotifications$ = {}));
export function emailNotificationsToJSON(emailNotifications) {
    return JSON.stringify(EmailNotifications$outboundSchema.parse(emailNotifications));
}
export function emailNotificationsFromJSON(jsonString) {
    return safeParse(jsonString, (x) => EmailNotifications$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'EmailNotifications' from JSON`);
}
