/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

/**
 * ConnectorCredential is used by a connector to authenticate with conductor one.
 */
export class ConnectorCredential extends SpeakeasyBase {
    /**
     * The appId of the app the connector is attached to.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "appId" })
    appId?: string;

    /**
     * The client id of the ConnectorCredential.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "clientId" })
    clientId?: string;

    /**
     * The connectorId of the connector the credential is associated with.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "connectorId" })
    connectorId?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "createdAt" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    createdAt?: Date;

    @SpeakeasyMetadata()
    @Expose({ name: "deletedAt" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    deletedAt?: Date;

    /**
     * The display name of the ConnectorCredential.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "displayName" })
    displayName?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "expiresTime" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    expiresTime?: Date;

    /**
     * The id of the ConnectorCredential.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "lastUsedAt" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    lastUsedAt?: Date;

    @SpeakeasyMetadata()
    @Expose({ name: "updatedAt" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    updatedAt?: Date;
}
