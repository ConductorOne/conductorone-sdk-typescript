/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { objectToClass, SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { PolicyPostActions } from "./policypostactions";
import { PolicySteps } from "./policysteps";
import { Expose, Transform, Type } from "class-transformer";

/**
 * The policyType field.
 */
export enum PolicyPolicyType {
    PolicyTypeUnspecified = "POLICY_TYPE_UNSPECIFIED",
    PolicyTypeGrant = "POLICY_TYPE_GRANT",
    PolicyTypeRevoke = "POLICY_TYPE_REVOKE",
    PolicyTypeCertify = "POLICY_TYPE_CERTIFY",
    PolicyTypeAccessRequest = "POLICY_TYPE_ACCESS_REQUEST",
    PolicyTypeProvision = "POLICY_TYPE_PROVISION",
}

/**
 * The Policy message.
 */
export class Policy extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "createdAt" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    createdAt?: Date;

    @SpeakeasyMetadata()
    @Expose({ name: "deletedAt" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    deletedAt?: Date;

    /**
     * The description field.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "description" })
    description?: string;

    /**
     * The displayName field.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "displayName" })
    displayName?: string;

    /**
     * The id field.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id?: string;

    /**
     * The policySteps field.
     */
    @SpeakeasyMetadata({ elemType: PolicySteps })
    @Expose({ name: "policySteps" })
    @Transform(
        ({ value }) => {
            const obj: Record<string, PolicySteps> = {};
            for (const key in value) {
                obj[key] = objectToClass(value[key], PolicySteps);
            }
            return obj;
        },
        { toClassOnly: true }
    )
    policySteps?: Record<string, PolicySteps>;

    /**
     * The policyType field.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "policyType" })
    policyType?: PolicyPolicyType;

    /**
     * The postActions field.
     */
    @SpeakeasyMetadata({ elemType: PolicyPostActions })
    @Expose({ name: "postActions" })
    @Type(() => PolicyPostActions)
    postActions?: PolicyPostActions[];

    /**
     * The reassignTasksToDelegates field.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "reassignTasksToDelegates" })
    reassignTasksToDelegates?: boolean;

    /**
     * The systemBuiltin field.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "systemBuiltin" })
    systemBuiltin?: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "updatedAt" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    updatedAt?: Date;
}
