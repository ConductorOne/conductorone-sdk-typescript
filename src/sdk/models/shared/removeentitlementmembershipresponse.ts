/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * The RemoveEntitlementMembershipResponse message.
 */
export type RemoveEntitlementMembershipResponse = {
  /**
   * The ID of the revoke task created to remove the user from the entitlement, if the entitlement is an access profile (aka. catalog).
   *
   * @remarks
   *  It's aka. the JML task.
   */
  revokeTaskId?: string | null | undefined;
};

/** @internal */
export const RemoveEntitlementMembershipResponse$inboundSchema: z.ZodType<
  RemoveEntitlementMembershipResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  revokeTaskId: z.nullable(z.string()).optional(),
});

/** @internal */
export type RemoveEntitlementMembershipResponse$Outbound = {
  revokeTaskId?: string | null | undefined;
};

/** @internal */
export const RemoveEntitlementMembershipResponse$outboundSchema: z.ZodType<
  RemoveEntitlementMembershipResponse$Outbound,
  z.ZodTypeDef,
  RemoveEntitlementMembershipResponse
> = z.object({
  revokeTaskId: z.nullable(z.string()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RemoveEntitlementMembershipResponse$ {
  /** @deprecated use `RemoveEntitlementMembershipResponse$inboundSchema` instead. */
  export const inboundSchema =
    RemoveEntitlementMembershipResponse$inboundSchema;
  /** @deprecated use `RemoveEntitlementMembershipResponse$outboundSchema` instead. */
  export const outboundSchema =
    RemoveEntitlementMembershipResponse$outboundSchema;
  /** @deprecated use `RemoveEntitlementMembershipResponse$Outbound` instead. */
  export type Outbound = RemoveEntitlementMembershipResponse$Outbound;
}

export function removeEntitlementMembershipResponseToJSON(
  removeEntitlementMembershipResponse: RemoveEntitlementMembershipResponse,
): string {
  return JSON.stringify(
    RemoveEntitlementMembershipResponse$outboundSchema.parse(
      removeEntitlementMembershipResponse,
    ),
  );
}

export function removeEntitlementMembershipResponseFromJSON(
  jsonString: string,
): SafeParseResult<RemoveEntitlementMembershipResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      RemoveEntitlementMembershipResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'RemoveEntitlementMembershipResponse' from JSON`,
  );
}
