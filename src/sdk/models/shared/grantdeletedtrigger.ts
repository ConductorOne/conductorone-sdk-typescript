/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  GrantTriggerFilter,
  GrantTriggerFilter$inboundSchema,
  GrantTriggerFilter$Outbound,
  GrantTriggerFilter$outboundSchema,
} from "./granttriggerfilter.js";

/**
 * The GrantDeletedTrigger message.
 */
export type GrantDeletedTrigger = {
  grantTriggerFilter?: GrantTriggerFilter | null | undefined;
};

/** @internal */
export const GrantDeletedTrigger$inboundSchema: z.ZodType<
  GrantDeletedTrigger,
  z.ZodTypeDef,
  unknown
> = z.object({
  grantTriggerFilter: z.nullable(GrantTriggerFilter$inboundSchema).optional(),
});

/** @internal */
export type GrantDeletedTrigger$Outbound = {
  grantTriggerFilter?: GrantTriggerFilter$Outbound | null | undefined;
};

/** @internal */
export const GrantDeletedTrigger$outboundSchema: z.ZodType<
  GrantDeletedTrigger$Outbound,
  z.ZodTypeDef,
  GrantDeletedTrigger
> = z.object({
  grantTriggerFilter: z.nullable(GrantTriggerFilter$outboundSchema).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GrantDeletedTrigger$ {
  /** @deprecated use `GrantDeletedTrigger$inboundSchema` instead. */
  export const inboundSchema = GrantDeletedTrigger$inboundSchema;
  /** @deprecated use `GrantDeletedTrigger$outboundSchema` instead. */
  export const outboundSchema = GrantDeletedTrigger$outboundSchema;
  /** @deprecated use `GrantDeletedTrigger$Outbound` instead. */
  export type Outbound = GrantDeletedTrigger$Outbound;
}

export function grantDeletedTriggerToJSON(
  grantDeletedTrigger: GrantDeletedTrigger,
): string {
  return JSON.stringify(
    GrantDeletedTrigger$outboundSchema.parse(grantDeletedTrigger),
  );
}

export function grantDeletedTriggerFromJSON(
  jsonString: string,
): SafeParseResult<GrantDeletedTrigger, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GrantDeletedTrigger$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GrantDeletedTrigger' from JSON`,
  );
}
