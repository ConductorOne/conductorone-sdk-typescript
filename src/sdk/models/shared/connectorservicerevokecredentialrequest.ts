/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * ConnectorServiceRevokeCredentialRequest is a request for revoking connector credentials. It uses URL values for input.
 */
export type ConnectorServiceRevokeCredentialRequest = {};

/** @internal */
export const ConnectorServiceRevokeCredentialRequest$inboundSchema: z.ZodType<
  ConnectorServiceRevokeCredentialRequest,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type ConnectorServiceRevokeCredentialRequest$Outbound = {};

/** @internal */
export const ConnectorServiceRevokeCredentialRequest$outboundSchema: z.ZodType<
  ConnectorServiceRevokeCredentialRequest$Outbound,
  z.ZodTypeDef,
  ConnectorServiceRevokeCredentialRequest
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConnectorServiceRevokeCredentialRequest$ {
  /** @deprecated use `ConnectorServiceRevokeCredentialRequest$inboundSchema` instead. */
  export const inboundSchema =
    ConnectorServiceRevokeCredentialRequest$inboundSchema;
  /** @deprecated use `ConnectorServiceRevokeCredentialRequest$outboundSchema` instead. */
  export const outboundSchema =
    ConnectorServiceRevokeCredentialRequest$outboundSchema;
  /** @deprecated use `ConnectorServiceRevokeCredentialRequest$Outbound` instead. */
  export type Outbound = ConnectorServiceRevokeCredentialRequest$Outbound;
}

export function connectorServiceRevokeCredentialRequestToJSON(
  connectorServiceRevokeCredentialRequest:
    ConnectorServiceRevokeCredentialRequest,
): string {
  return JSON.stringify(
    ConnectorServiceRevokeCredentialRequest$outboundSchema.parse(
      connectorServiceRevokeCredentialRequest,
    ),
  );
}

export function connectorServiceRevokeCredentialRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  ConnectorServiceRevokeCredentialRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      ConnectorServiceRevokeCredentialRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'ConnectorServiceRevokeCredentialRequest' from JSON`,
  );
}
