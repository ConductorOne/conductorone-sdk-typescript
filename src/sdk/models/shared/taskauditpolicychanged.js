/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
/** @internal */
export const TaskAuditPolicyChanged$inboundSchema = z.object({
    newPolicyId: z.nullable(z.string()).optional(),
    oldPolicyId: z.nullable(z.string()).optional(),
});
/** @internal */
export const TaskAuditPolicyChanged$outboundSchema = z.object({
    newPolicyId: z.nullable(z.string()).optional(),
    oldPolicyId: z.nullable(z.string()).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var TaskAuditPolicyChanged$;
(function (TaskAuditPolicyChanged$) {
    /** @deprecated use `TaskAuditPolicyChanged$inboundSchema` instead. */
    TaskAuditPolicyChanged$.inboundSchema = TaskAuditPolicyChanged$inboundSchema;
    /** @deprecated use `TaskAuditPolicyChanged$outboundSchema` instead. */
    TaskAuditPolicyChanged$.outboundSchema = TaskAuditPolicyChanged$outboundSchema;
})(TaskAuditPolicyChanged$ || (TaskAuditPolicyChanged$ = {}));
export function taskAuditPolicyChangedToJSON(taskAuditPolicyChanged) {
    return JSON.stringify(TaskAuditPolicyChanged$outboundSchema.parse(taskAuditPolicyChanged));
}
export function taskAuditPolicyChangedFromJSON(jsonString) {
    return safeParse(jsonString, (x) => TaskAuditPolicyChanged$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'TaskAuditPolicyChanged' from JSON`);
}
