/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { ConnectorInput$inboundSchema, ConnectorInput$outboundSchema, } from "./connector.js";
import { ConnectorExpandMask$inboundSchema, ConnectorExpandMask$outboundSchema, } from "./connectorexpandmask.js";
/** @internal */
export const ConnectorServiceUpdateDelegatedRequest$inboundSchema = z.object({
    connector: z.nullable(ConnectorInput$inboundSchema).optional(),
    expandMask: z.nullable(ConnectorExpandMask$inboundSchema).optional(),
    updateMask: z.nullable(z.string()).optional(),
});
/** @internal */
export const ConnectorServiceUpdateDelegatedRequest$outboundSchema = z.object({
    connector: z.nullable(ConnectorInput$outboundSchema).optional(),
    expandMask: z.nullable(ConnectorExpandMask$outboundSchema).optional(),
    updateMask: z.nullable(z.string()).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ConnectorServiceUpdateDelegatedRequest$;
(function (ConnectorServiceUpdateDelegatedRequest$) {
    /** @deprecated use `ConnectorServiceUpdateDelegatedRequest$inboundSchema` instead. */
    ConnectorServiceUpdateDelegatedRequest$.inboundSchema = ConnectorServiceUpdateDelegatedRequest$inboundSchema;
    /** @deprecated use `ConnectorServiceUpdateDelegatedRequest$outboundSchema` instead. */
    ConnectorServiceUpdateDelegatedRequest$.outboundSchema = ConnectorServiceUpdateDelegatedRequest$outboundSchema;
})(ConnectorServiceUpdateDelegatedRequest$ || (ConnectorServiceUpdateDelegatedRequest$ = {}));
export function connectorServiceUpdateDelegatedRequestToJSON(connectorServiceUpdateDelegatedRequest) {
    return JSON.stringify(ConnectorServiceUpdateDelegatedRequest$outboundSchema.parse(connectorServiceUpdateDelegatedRequest));
}
export function connectorServiceUpdateDelegatedRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => ConnectorServiceUpdateDelegatedRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ConnectorServiceUpdateDelegatedRequest' from JSON`);
}
