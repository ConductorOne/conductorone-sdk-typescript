/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { EmailNotifications$inboundSchema, EmailNotifications$outboundSchema, } from "./emailnotifications.js";
import { SlackNotifications$inboundSchema, SlackNotifications$outboundSchema, } from "./slacknotifications.js";
/** @internal */
export const NotificationConfig$inboundSchema = z.object({
    emailNotifications: z.nullable(EmailNotifications$inboundSchema).optional(),
    slackNotifications: z.nullable(SlackNotifications$inboundSchema).optional(),
});
/** @internal */
export const NotificationConfig$outboundSchema = z.object({
    emailNotifications: z.nullable(EmailNotifications$outboundSchema).optional(),
    slackNotifications: z.nullable(SlackNotifications$outboundSchema).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var NotificationConfig$;
(function (NotificationConfig$) {
    /** @deprecated use `NotificationConfig$inboundSchema` instead. */
    NotificationConfig$.inboundSchema = NotificationConfig$inboundSchema;
    /** @deprecated use `NotificationConfig$outboundSchema` instead. */
    NotificationConfig$.outboundSchema = NotificationConfig$outboundSchema;
})(NotificationConfig$ || (NotificationConfig$ = {}));
export function notificationConfigToJSON(notificationConfig) {
    return JSON.stringify(NotificationConfig$outboundSchema.parse(notificationConfig));
}
export function notificationConfigFromJSON(jsonString) {
    return safeParse(jsonString, (x) => NotificationConfig$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'NotificationConfig' from JSON`);
}
