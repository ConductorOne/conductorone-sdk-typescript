/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
/** @internal */
export const TaskAuditHardReset$inboundSchema = z.object({
    oldPolicyStepId: z.nullable(z.string()).optional(),
});
/** @internal */
export const TaskAuditHardReset$outboundSchema = z.object({
    oldPolicyStepId: z.nullable(z.string()).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var TaskAuditHardReset$;
(function (TaskAuditHardReset$) {
    /** @deprecated use `TaskAuditHardReset$inboundSchema` instead. */
    TaskAuditHardReset$.inboundSchema = TaskAuditHardReset$inboundSchema;
    /** @deprecated use `TaskAuditHardReset$outboundSchema` instead. */
    TaskAuditHardReset$.outboundSchema = TaskAuditHardReset$outboundSchema;
})(TaskAuditHardReset$ || (TaskAuditHardReset$ = {}));
export function taskAuditHardResetToJSON(taskAuditHardReset) {
    return JSON.stringify(TaskAuditHardReset$outboundSchema.parse(taskAuditHardReset));
}
export function taskAuditHardResetFromJSON(jsonString) {
    return safeParse(jsonString, (x) => TaskAuditHardReset$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'TaskAuditHardReset' from JSON`);
}
