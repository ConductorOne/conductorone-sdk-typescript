/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
/** @internal */
export const WaitForDuration$inboundSchema = z.object({
    duration: z.nullable(z.string()).optional(),
});
/** @internal */
export const WaitForDuration$outboundSchema = z.object({
    duration: z.nullable(z.string()).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var WaitForDuration$;
(function (WaitForDuration$) {
    /** @deprecated use `WaitForDuration$inboundSchema` instead. */
    WaitForDuration$.inboundSchema = WaitForDuration$inboundSchema;
    /** @deprecated use `WaitForDuration$outboundSchema` instead. */
    WaitForDuration$.outboundSchema = WaitForDuration$outboundSchema;
})(WaitForDuration$ || (WaitForDuration$ = {}));
export function waitForDurationToJSON(waitForDuration) {
    return JSON.stringify(WaitForDuration$outboundSchema.parse(waitForDuration));
}
export function waitForDurationFromJSON(jsonString) {
    return safeParse(jsonString, (x) => WaitForDuration$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'WaitForDuration' from JSON`);
}
