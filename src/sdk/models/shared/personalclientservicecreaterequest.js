/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
/** @internal */
export const PersonalClientServiceCreateRequest$inboundSchema = z.object({
    allowSourceCidr: z.nullable(z.array(z.string())).optional(),
    displayName: z.nullable(z.string()).optional(),
    expires: z.nullable(z.string()).optional(),
    scopedRoles: z.nullable(z.array(z.string())).optional(),
});
/** @internal */
export const PersonalClientServiceCreateRequest$outboundSchema = z.object({
    allowSourceCidr: z.nullable(z.array(z.string())).optional(),
    displayName: z.nullable(z.string()).optional(),
    expires: z.nullable(z.string()).optional(),
    scopedRoles: z.nullable(z.array(z.string())).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var PersonalClientServiceCreateRequest$;
(function (PersonalClientServiceCreateRequest$) {
    /** @deprecated use `PersonalClientServiceCreateRequest$inboundSchema` instead. */
    PersonalClientServiceCreateRequest$.inboundSchema = PersonalClientServiceCreateRequest$inboundSchema;
    /** @deprecated use `PersonalClientServiceCreateRequest$outboundSchema` instead. */
    PersonalClientServiceCreateRequest$.outboundSchema = PersonalClientServiceCreateRequest$outboundSchema;
})(PersonalClientServiceCreateRequest$ || (PersonalClientServiceCreateRequest$ = {}));
export function personalClientServiceCreateRequestToJSON(personalClientServiceCreateRequest) {
    return JSON.stringify(PersonalClientServiceCreateRequest$outboundSchema.parse(personalClientServiceCreateRequest));
}
export function personalClientServiceCreateRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => PersonalClientServiceCreateRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'PersonalClientServiceCreateRequest' from JSON`);
}
