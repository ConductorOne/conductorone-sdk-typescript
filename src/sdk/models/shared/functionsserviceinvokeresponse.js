/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
/** @internal */
export const FunctionsServiceInvokeResponse$inboundSchema = z.object({
    json: z.nullable(z.string()).optional(),
});
/** @internal */
export const FunctionsServiceInvokeResponse$outboundSchema = z.object({
    json: z.nullable(z.string()).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var FunctionsServiceInvokeResponse$;
(function (FunctionsServiceInvokeResponse$) {
    /** @deprecated use `FunctionsServiceInvokeResponse$inboundSchema` instead. */
    FunctionsServiceInvokeResponse$.inboundSchema = FunctionsServiceInvokeResponse$inboundSchema;
    /** @deprecated use `FunctionsServiceInvokeResponse$outboundSchema` instead. */
    FunctionsServiceInvokeResponse$.outboundSchema = FunctionsServiceInvokeResponse$outboundSchema;
})(FunctionsServiceInvokeResponse$ || (FunctionsServiceInvokeResponse$ = {}));
export function functionsServiceInvokeResponseToJSON(functionsServiceInvokeResponse) {
    return JSON.stringify(FunctionsServiceInvokeResponse$outboundSchema.parse(functionsServiceInvokeResponse));
}
export function functionsServiceInvokeResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => FunctionsServiceInvokeResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'FunctionsServiceInvokeResponse' from JSON`);
}
