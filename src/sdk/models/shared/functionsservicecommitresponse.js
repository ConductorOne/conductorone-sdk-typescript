/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { FunctionCommit$inboundSchema, FunctionCommit$outboundSchema, } from "./functioncommit.js";
/** @internal */
export const FunctionsServiceCommitResponse$inboundSchema = z.object({
    commit: z.nullable(FunctionCommit$inboundSchema).optional(),
});
/** @internal */
export const FunctionsServiceCommitResponse$outboundSchema = z.object({
    commit: z.nullable(FunctionCommit$outboundSchema).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var FunctionsServiceCommitResponse$;
(function (FunctionsServiceCommitResponse$) {
    /** @deprecated use `FunctionsServiceCommitResponse$inboundSchema` instead. */
    FunctionsServiceCommitResponse$.inboundSchema = FunctionsServiceCommitResponse$inboundSchema;
    /** @deprecated use `FunctionsServiceCommitResponse$outboundSchema` instead. */
    FunctionsServiceCommitResponse$.outboundSchema = FunctionsServiceCommitResponse$outboundSchema;
})(FunctionsServiceCommitResponse$ || (FunctionsServiceCommitResponse$ = {}));
export function functionsServiceCommitResponseToJSON(functionsServiceCommitResponse) {
    return JSON.stringify(FunctionsServiceCommitResponse$outboundSchema.parse(functionsServiceCommitResponse));
}
export function functionsServiceCommitResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => FunctionsServiceCommitResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'FunctionsServiceCommitResponse' from JSON`);
}
