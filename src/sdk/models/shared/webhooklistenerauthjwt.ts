/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * The WebhookListenerAuthJWT message.
 */
export type WebhookListenerAuthJWT = {
  /**
   * The jwksUrl field.
   */
  jwksUrl?: string | null | undefined;
};

/** @internal */
export const WebhookListenerAuthJWT$inboundSchema: z.ZodType<
  WebhookListenerAuthJWT,
  z.ZodTypeDef,
  unknown
> = z.object({
  jwksUrl: z.nullable(z.string()).optional(),
});

/** @internal */
export type WebhookListenerAuthJWT$Outbound = {
  jwksUrl?: string | null | undefined;
};

/** @internal */
export const WebhookListenerAuthJWT$outboundSchema: z.ZodType<
  WebhookListenerAuthJWT$Outbound,
  z.ZodTypeDef,
  WebhookListenerAuthJWT
> = z.object({
  jwksUrl: z.nullable(z.string()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace WebhookListenerAuthJWT$ {
  /** @deprecated use `WebhookListenerAuthJWT$inboundSchema` instead. */
  export const inboundSchema = WebhookListenerAuthJWT$inboundSchema;
  /** @deprecated use `WebhookListenerAuthJWT$outboundSchema` instead. */
  export const outboundSchema = WebhookListenerAuthJWT$outboundSchema;
  /** @deprecated use `WebhookListenerAuthJWT$Outbound` instead. */
  export type Outbound = WebhookListenerAuthJWT$Outbound;
}

export function webhookListenerAuthJWTToJSON(
  webhookListenerAuthJWT: WebhookListenerAuthJWT,
): string {
  return JSON.stringify(
    WebhookListenerAuthJWT$outboundSchema.parse(webhookListenerAuthJWT),
  );
}

export function webhookListenerAuthJWTFromJSON(
  jsonString: string,
): SafeParseResult<WebhookListenerAuthJWT, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => WebhookListenerAuthJWT$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'WebhookListenerAuthJWT' from JSON`,
  );
}
