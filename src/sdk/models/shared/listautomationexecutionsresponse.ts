/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  AutomationExecution,
  AutomationExecution$inboundSchema,
  AutomationExecution$Outbound,
  AutomationExecution$outboundSchema,
} from "./automationexecution.js";

/**
 * The ListAutomationExecutionsResponse message.
 */
export type ListAutomationExecutionsResponse = {
  /**
   * The automationExecutions field.
   */
  automationExecutions?: Array<AutomationExecution> | null | undefined;
  /**
   * The nextPageToken field.
   */
  nextPageToken?: string | null | undefined;
};

/** @internal */
export const ListAutomationExecutionsResponse$inboundSchema: z.ZodType<
  ListAutomationExecutionsResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  automationExecutions: z.nullable(z.array(AutomationExecution$inboundSchema))
    .optional(),
  nextPageToken: z.nullable(z.string()).optional(),
});

/** @internal */
export type ListAutomationExecutionsResponse$Outbound = {
  automationExecutions?: Array<AutomationExecution$Outbound> | null | undefined;
  nextPageToken?: string | null | undefined;
};

/** @internal */
export const ListAutomationExecutionsResponse$outboundSchema: z.ZodType<
  ListAutomationExecutionsResponse$Outbound,
  z.ZodTypeDef,
  ListAutomationExecutionsResponse
> = z.object({
  automationExecutions: z.nullable(z.array(AutomationExecution$outboundSchema))
    .optional(),
  nextPageToken: z.nullable(z.string()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListAutomationExecutionsResponse$ {
  /** @deprecated use `ListAutomationExecutionsResponse$inboundSchema` instead. */
  export const inboundSchema = ListAutomationExecutionsResponse$inboundSchema;
  /** @deprecated use `ListAutomationExecutionsResponse$outboundSchema` instead. */
  export const outboundSchema = ListAutomationExecutionsResponse$outboundSchema;
  /** @deprecated use `ListAutomationExecutionsResponse$Outbound` instead. */
  export type Outbound = ListAutomationExecutionsResponse$Outbound;
}

export function listAutomationExecutionsResponseToJSON(
  listAutomationExecutionsResponse: ListAutomationExecutionsResponse,
): string {
  return JSON.stringify(
    ListAutomationExecutionsResponse$outboundSchema.parse(
      listAutomationExecutionsResponse,
    ),
  );
}

export function listAutomationExecutionsResponseFromJSON(
  jsonString: string,
): SafeParseResult<ListAutomationExecutionsResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ListAutomationExecutionsResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ListAutomationExecutionsResponse' from JSON`,
  );
}
