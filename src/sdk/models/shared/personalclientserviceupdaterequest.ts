/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  PersonalClientInput,
  PersonalClientInput$inboundSchema,
  PersonalClientInput$Outbound,
  PersonalClientInput$outboundSchema,
} from "./personalclientinput.js";

/**
 * The PersonalClientServiceUpdateRequest message.
 */
export type PersonalClientServiceUpdateRequest = {
  client?: PersonalClientInput | null | undefined;
  updateMask?: string | null | undefined;
};

/** @internal */
export const PersonalClientServiceUpdateRequest$inboundSchema: z.ZodType<
  PersonalClientServiceUpdateRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  client: z.nullable(PersonalClientInput$inboundSchema).optional(),
  updateMask: z.nullable(z.string()).optional(),
});

/** @internal */
export type PersonalClientServiceUpdateRequest$Outbound = {
  client?: PersonalClientInput$Outbound | null | undefined;
  updateMask?: string | null | undefined;
};

/** @internal */
export const PersonalClientServiceUpdateRequest$outboundSchema: z.ZodType<
  PersonalClientServiceUpdateRequest$Outbound,
  z.ZodTypeDef,
  PersonalClientServiceUpdateRequest
> = z.object({
  client: z.nullable(PersonalClientInput$outboundSchema).optional(),
  updateMask: z.nullable(z.string()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PersonalClientServiceUpdateRequest$ {
  /** @deprecated use `PersonalClientServiceUpdateRequest$inboundSchema` instead. */
  export const inboundSchema = PersonalClientServiceUpdateRequest$inboundSchema;
  /** @deprecated use `PersonalClientServiceUpdateRequest$outboundSchema` instead. */
  export const outboundSchema =
    PersonalClientServiceUpdateRequest$outboundSchema;
  /** @deprecated use `PersonalClientServiceUpdateRequest$Outbound` instead. */
  export type Outbound = PersonalClientServiceUpdateRequest$Outbound;
}

export function personalClientServiceUpdateRequestToJSON(
  personalClientServiceUpdateRequest: PersonalClientServiceUpdateRequest,
): string {
  return JSON.stringify(
    PersonalClientServiceUpdateRequest$outboundSchema.parse(
      personalClientServiceUpdateRequest,
    ),
  );
}

export function personalClientServiceUpdateRequestFromJSON(
  jsonString: string,
): SafeParseResult<PersonalClientServiceUpdateRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      PersonalClientServiceUpdateRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PersonalClientServiceUpdateRequest' from JSON`,
  );
}
