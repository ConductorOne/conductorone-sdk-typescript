/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
/** @internal */
export const ResponseTest$inboundSchema = z.object({
    version: z.nullable(z.string()).optional(),
});
/** @internal */
export const ResponseTest$outboundSchema = z.object({
    version: z.nullable(z.string()).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ResponseTest$;
(function (ResponseTest$) {
    /** @deprecated use `ResponseTest$inboundSchema` instead. */
    ResponseTest$.inboundSchema = ResponseTest$inboundSchema;
    /** @deprecated use `ResponseTest$outboundSchema` instead. */
    ResponseTest$.outboundSchema = ResponseTest$outboundSchema;
})(ResponseTest$ || (ResponseTest$ = {}));
export function responseTestToJSON(responseTest) {
    return JSON.stringify(ResponseTest$outboundSchema.parse(responseTest));
}
export function responseTestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => ResponseTest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ResponseTest' from JSON`);
}
