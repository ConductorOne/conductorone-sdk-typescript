/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
/** @internal */
export const WebhookSourceTest$inboundSchema = z.object({});
/** @internal */
export const WebhookSourceTest$outboundSchema = z.object({});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var WebhookSourceTest$;
(function (WebhookSourceTest$) {
    /** @deprecated use `WebhookSourceTest$inboundSchema` instead. */
    WebhookSourceTest$.inboundSchema = WebhookSourceTest$inboundSchema;
    /** @deprecated use `WebhookSourceTest$outboundSchema` instead. */
    WebhookSourceTest$.outboundSchema = WebhookSourceTest$outboundSchema;
})(WebhookSourceTest$ || (WebhookSourceTest$ = {}));
export function webhookSourceTestToJSON(webhookSourceTest) {
    return JSON.stringify(WebhookSourceTest$outboundSchema.parse(webhookSourceTest));
}
export function webhookSourceTestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => WebhookSourceTest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'WebhookSourceTest' from JSON`);
}
