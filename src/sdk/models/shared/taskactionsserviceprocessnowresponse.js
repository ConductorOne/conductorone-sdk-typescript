/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";
import { collectExtraKeys as collectExtraKeys$, safeParse, } from "../../../lib/schemas.js";
import { TaskView$inboundSchema, TaskView$outboundSchema, } from "./taskview.js";
/** @internal */
export const TaskActionsServiceProcessNowResponseExpanded$inboundSchema = collectExtraKeys$(z.object({
    "@type": z.string().optional(),
}).catchall(z.any()), "additionalProperties", true).transform((v) => {
    return remap$(v, {
        "@type": "atType",
    });
});
/** @internal */
export const TaskActionsServiceProcessNowResponseExpanded$outboundSchema = z.object({
    atType: z.string().optional(),
    additionalProperties: z.record(z.any()),
}).transform((v) => {
    return {
        ...v.additionalProperties,
        ...remap$(v, {
            atType: "@type",
            additionalProperties: null,
        }),
    };
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var TaskActionsServiceProcessNowResponseExpanded$;
(function (TaskActionsServiceProcessNowResponseExpanded$) {
    /** @deprecated use `TaskActionsServiceProcessNowResponseExpanded$inboundSchema` instead. */
    TaskActionsServiceProcessNowResponseExpanded$.inboundSchema = TaskActionsServiceProcessNowResponseExpanded$inboundSchema;
    /** @deprecated use `TaskActionsServiceProcessNowResponseExpanded$outboundSchema` instead. */
    TaskActionsServiceProcessNowResponseExpanded$.outboundSchema = TaskActionsServiceProcessNowResponseExpanded$outboundSchema;
})(TaskActionsServiceProcessNowResponseExpanded$ || (TaskActionsServiceProcessNowResponseExpanded$ = {}));
export function taskActionsServiceProcessNowResponseExpandedToJSON(taskActionsServiceProcessNowResponseExpanded) {
    return JSON.stringify(TaskActionsServiceProcessNowResponseExpanded$outboundSchema.parse(taskActionsServiceProcessNowResponseExpanded));
}
export function taskActionsServiceProcessNowResponseExpandedFromJSON(jsonString) {
    return safeParse(jsonString, (x) => TaskActionsServiceProcessNowResponseExpanded$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'TaskActionsServiceProcessNowResponseExpanded' from JSON`);
}
/** @internal */
export const TaskActionsServiceProcessNowResponse$inboundSchema = z.object({
    expanded: z.nullable(z.array(z.lazy(() => TaskActionsServiceProcessNowResponseExpanded$inboundSchema))).optional(),
    taskView: z.nullable(TaskView$inboundSchema).optional(),
});
/** @internal */
export const TaskActionsServiceProcessNowResponse$outboundSchema = z.object({
    expanded: z.nullable(z.array(z.lazy(() => TaskActionsServiceProcessNowResponseExpanded$outboundSchema))).optional(),
    taskView: z.nullable(TaskView$outboundSchema).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var TaskActionsServiceProcessNowResponse$;
(function (TaskActionsServiceProcessNowResponse$) {
    /** @deprecated use `TaskActionsServiceProcessNowResponse$inboundSchema` instead. */
    TaskActionsServiceProcessNowResponse$.inboundSchema = TaskActionsServiceProcessNowResponse$inboundSchema;
    /** @deprecated use `TaskActionsServiceProcessNowResponse$outboundSchema` instead. */
    TaskActionsServiceProcessNowResponse$.outboundSchema = TaskActionsServiceProcessNowResponse$outboundSchema;
})(TaskActionsServiceProcessNowResponse$ || (TaskActionsServiceProcessNowResponse$ = {}));
export function taskActionsServiceProcessNowResponseToJSON(taskActionsServiceProcessNowResponse) {
    return JSON.stringify(TaskActionsServiceProcessNowResponse$outboundSchema.parse(taskActionsServiceProcessNowResponse));
}
export function taskActionsServiceProcessNowResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => TaskActionsServiceProcessNowResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'TaskActionsServiceProcessNowResponse' from JSON`);
}
