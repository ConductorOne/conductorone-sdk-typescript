/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
/** @internal */
export const ExportServiceDeleteRequest$inboundSchema = z.object({});
/** @internal */
export const ExportServiceDeleteRequest$outboundSchema = z.object({});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ExportServiceDeleteRequest$;
(function (ExportServiceDeleteRequest$) {
    /** @deprecated use `ExportServiceDeleteRequest$inboundSchema` instead. */
    ExportServiceDeleteRequest$.inboundSchema = ExportServiceDeleteRequest$inboundSchema;
    /** @deprecated use `ExportServiceDeleteRequest$outboundSchema` instead. */
    ExportServiceDeleteRequest$.outboundSchema = ExportServiceDeleteRequest$outboundSchema;
})(ExportServiceDeleteRequest$ || (ExportServiceDeleteRequest$ = {}));
export function exportServiceDeleteRequestToJSON(exportServiceDeleteRequest) {
    return JSON.stringify(ExportServiceDeleteRequest$outboundSchema.parse(exportServiceDeleteRequest));
}
export function exportServiceDeleteRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => ExportServiceDeleteRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ExportServiceDeleteRequest' from JSON`);
}
