/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
/** @internal */
export const AppGroupApproval$inboundSchema = z.object({
    allowSelfApproval: z.nullable(z.boolean()).optional(),
    appGroupId: z.nullable(z.string()).optional(),
    appId: z.nullable(z.string()).optional(),
    fallback: z.nullable(z.boolean()).optional(),
    fallbackUserIds: z.nullable(z.array(z.string())).optional(),
});
/** @internal */
export const AppGroupApproval$outboundSchema = z.object({
    allowSelfApproval: z.nullable(z.boolean()).optional(),
    appGroupId: z.nullable(z.string()).optional(),
    appId: z.nullable(z.string()).optional(),
    fallback: z.nullable(z.boolean()).optional(),
    fallbackUserIds: z.nullable(z.array(z.string())).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var AppGroupApproval$;
(function (AppGroupApproval$) {
    /** @deprecated use `AppGroupApproval$inboundSchema` instead. */
    AppGroupApproval$.inboundSchema = AppGroupApproval$inboundSchema;
    /** @deprecated use `AppGroupApproval$outboundSchema` instead. */
    AppGroupApproval$.outboundSchema = AppGroupApproval$outboundSchema;
})(AppGroupApproval$ || (AppGroupApproval$ = {}));
export function appGroupApprovalToJSON(appGroupApproval) {
    return JSON.stringify(AppGroupApproval$outboundSchema.parse(appGroupApproval));
}
export function appGroupApprovalFromJSON(jsonString) {
    return safeParse(jsonString, (x) => AppGroupApproval$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'AppGroupApproval' from JSON`);
}
