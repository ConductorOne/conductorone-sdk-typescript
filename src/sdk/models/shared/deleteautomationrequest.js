/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
/** @internal */
export const DeleteAutomationRequest$inboundSchema = z.object({});
/** @internal */
export const DeleteAutomationRequest$outboundSchema = z.object({});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var DeleteAutomationRequest$;
(function (DeleteAutomationRequest$) {
    /** @deprecated use `DeleteAutomationRequest$inboundSchema` instead. */
    DeleteAutomationRequest$.inboundSchema = DeleteAutomationRequest$inboundSchema;
    /** @deprecated use `DeleteAutomationRequest$outboundSchema` instead. */
    DeleteAutomationRequest$.outboundSchema = DeleteAutomationRequest$outboundSchema;
})(DeleteAutomationRequest$ || (DeleteAutomationRequest$ = {}));
export function deleteAutomationRequestToJSON(deleteAutomationRequest) {
    return JSON.stringify(DeleteAutomationRequest$outboundSchema.parse(deleteAutomationRequest));
}
export function deleteAutomationRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => DeleteAutomationRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'DeleteAutomationRequest' from JSON`);
}
