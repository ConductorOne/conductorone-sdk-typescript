/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  RequestCatalogInput,
  RequestCatalogInput$inboundSchema,
  RequestCatalogInput$Outbound,
  RequestCatalogInput$outboundSchema,
} from "./requestcatalog.js";
import {
  RequestCatalogExpandMask,
  RequestCatalogExpandMask$inboundSchema,
  RequestCatalogExpandMask$Outbound,
  RequestCatalogExpandMask$outboundSchema,
} from "./requestcatalogexpandmask.js";

/**
 * Update a request catalog object by ID.
 */
export type RequestCatalogManagementServiceUpdateRequest = {
  catalog?: RequestCatalogInput | null | undefined;
  expandMask?: RequestCatalogExpandMask | null | undefined;
  updateMask?: string | null | undefined;
};

/** @internal */
export const RequestCatalogManagementServiceUpdateRequest$inboundSchema:
  z.ZodType<
    RequestCatalogManagementServiceUpdateRequest,
    z.ZodTypeDef,
    unknown
  > = z.object({
    catalog: z.nullable(RequestCatalogInput$inboundSchema).optional(),
    expandMask: z.nullable(RequestCatalogExpandMask$inboundSchema).optional(),
    updateMask: z.nullable(z.string()).optional(),
  });

/** @internal */
export type RequestCatalogManagementServiceUpdateRequest$Outbound = {
  catalog?: RequestCatalogInput$Outbound | null | undefined;
  expandMask?: RequestCatalogExpandMask$Outbound | null | undefined;
  updateMask?: string | null | undefined;
};

/** @internal */
export const RequestCatalogManagementServiceUpdateRequest$outboundSchema:
  z.ZodType<
    RequestCatalogManagementServiceUpdateRequest$Outbound,
    z.ZodTypeDef,
    RequestCatalogManagementServiceUpdateRequest
  > = z.object({
    catalog: z.nullable(RequestCatalogInput$outboundSchema).optional(),
    expandMask: z.nullable(RequestCatalogExpandMask$outboundSchema).optional(),
    updateMask: z.nullable(z.string()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RequestCatalogManagementServiceUpdateRequest$ {
  /** @deprecated use `RequestCatalogManagementServiceUpdateRequest$inboundSchema` instead. */
  export const inboundSchema =
    RequestCatalogManagementServiceUpdateRequest$inboundSchema;
  /** @deprecated use `RequestCatalogManagementServiceUpdateRequest$outboundSchema` instead. */
  export const outboundSchema =
    RequestCatalogManagementServiceUpdateRequest$outboundSchema;
  /** @deprecated use `RequestCatalogManagementServiceUpdateRequest$Outbound` instead. */
  export type Outbound = RequestCatalogManagementServiceUpdateRequest$Outbound;
}

export function requestCatalogManagementServiceUpdateRequestToJSON(
  requestCatalogManagementServiceUpdateRequest:
    RequestCatalogManagementServiceUpdateRequest,
): string {
  return JSON.stringify(
    RequestCatalogManagementServiceUpdateRequest$outboundSchema.parse(
      requestCatalogManagementServiceUpdateRequest,
    ),
  );
}

export function requestCatalogManagementServiceUpdateRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  RequestCatalogManagementServiceUpdateRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RequestCatalogManagementServiceUpdateRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RequestCatalogManagementServiceUpdateRequest' from JSON`,
  );
}
