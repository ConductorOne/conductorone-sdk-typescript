/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
/** @internal */
export const ExecuteAutomationResponse$inboundSchema = z.object({
    executionId: z.nullable(z.string().transform(v => parseInt(v, 10)))
        .optional(),
});
/** @internal */
export const ExecuteAutomationResponse$outboundSchema = z.object({
    executionId: z.nullable(z.number().int().transform(v => `${v}`)).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ExecuteAutomationResponse$;
(function (ExecuteAutomationResponse$) {
    /** @deprecated use `ExecuteAutomationResponse$inboundSchema` instead. */
    ExecuteAutomationResponse$.inboundSchema = ExecuteAutomationResponse$inboundSchema;
    /** @deprecated use `ExecuteAutomationResponse$outboundSchema` instead. */
    ExecuteAutomationResponse$.outboundSchema = ExecuteAutomationResponse$outboundSchema;
})(ExecuteAutomationResponse$ || (ExecuteAutomationResponse$ = {}));
export function executeAutomationResponseToJSON(executeAutomationResponse) {
    return JSON.stringify(ExecuteAutomationResponse$outboundSchema.parse(executeAutomationResponse));
}
export function executeAutomationResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => ExecuteAutomationResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ExecuteAutomationResponse' from JSON`);
}
