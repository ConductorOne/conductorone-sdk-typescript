/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * The UserCreatedTrigger message.
 */
export type UserCreatedTrigger = {
  /**
   * The condition field.
   */
  condition?: string | null | undefined;
};

/** @internal */
export const UserCreatedTrigger$inboundSchema: z.ZodType<
  UserCreatedTrigger,
  z.ZodTypeDef,
  unknown
> = z.object({
  condition: z.nullable(z.string()).optional(),
});

/** @internal */
export type UserCreatedTrigger$Outbound = {
  condition?: string | null | undefined;
};

/** @internal */
export const UserCreatedTrigger$outboundSchema: z.ZodType<
  UserCreatedTrigger$Outbound,
  z.ZodTypeDef,
  UserCreatedTrigger
> = z.object({
  condition: z.nullable(z.string()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UserCreatedTrigger$ {
  /** @deprecated use `UserCreatedTrigger$inboundSchema` instead. */
  export const inboundSchema = UserCreatedTrigger$inboundSchema;
  /** @deprecated use `UserCreatedTrigger$outboundSchema` instead. */
  export const outboundSchema = UserCreatedTrigger$outboundSchema;
  /** @deprecated use `UserCreatedTrigger$Outbound` instead. */
  export type Outbound = UserCreatedTrigger$Outbound;
}

export function userCreatedTriggerToJSON(
  userCreatedTrigger: UserCreatedTrigger,
): string {
  return JSON.stringify(
    UserCreatedTrigger$outboundSchema.parse(userCreatedTrigger),
  );
}

export function userCreatedTriggerFromJSON(
  jsonString: string,
): SafeParseResult<UserCreatedTrigger, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UserCreatedTrigger$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UserCreatedTrigger' from JSON`,
  );
}
