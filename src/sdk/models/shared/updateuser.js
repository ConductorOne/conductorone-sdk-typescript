/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { catchUnrecognizedEnum, } from "../../types/enums.js";
import { UserRef$inboundSchema, UserRef$outboundSchema, } from "./userref.js";
/**
 * The userStatusEnum field.
 *
 * @remarks
 * This field is part of the `user_status` oneof.
 * See the documentation for `c1.api.automations.v1.UpdateUser` for more details.
 */
export const UserStatusEnum = {
    Unknown: "UNKNOWN",
    Enabled: "ENABLED",
    Disabled: "DISABLED",
    Deleted: "DELETED",
};
/** @internal */
export const UserStatusEnum$inboundSchema = z
    .union([
    z.nativeEnum(UserStatusEnum),
    z.string().transform(catchUnrecognizedEnum),
]);
/** @internal */
export const UserStatusEnum$outboundSchema = z.union([
    z.nativeEnum(UserStatusEnum),
    z.string().and(z.custom()),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var UserStatusEnum$;
(function (UserStatusEnum$) {
    /** @deprecated use `UserStatusEnum$inboundSchema` instead. */
    UserStatusEnum$.inboundSchema = UserStatusEnum$inboundSchema;
    /** @deprecated use `UserStatusEnum$outboundSchema` instead. */
    UserStatusEnum$.outboundSchema = UserStatusEnum$outboundSchema;
})(UserStatusEnum$ || (UserStatusEnum$ = {}));
/** @internal */
export const UpdateUser$inboundSchema = z.object({
    useSubjectUser: z.nullable(z.boolean()).optional(),
    userIdCel: z.nullable(z.string()).optional(),
    userRef: z.nullable(UserRef$inboundSchema).optional(),
    userStatusCel: z.nullable(z.string()).optional(),
    userStatusEnum: z.nullable(UserStatusEnum$inboundSchema).optional(),
});
/** @internal */
export const UpdateUser$outboundSchema = z.object({
    useSubjectUser: z.nullable(z.boolean()).optional(),
    userIdCel: z.nullable(z.string()).optional(),
    userRef: z.nullable(UserRef$outboundSchema).optional(),
    userStatusCel: z.nullable(z.string()).optional(),
    userStatusEnum: z.nullable(UserStatusEnum$outboundSchema).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var UpdateUser$;
(function (UpdateUser$) {
    /** @deprecated use `UpdateUser$inboundSchema` instead. */
    UpdateUser$.inboundSchema = UpdateUser$inboundSchema;
    /** @deprecated use `UpdateUser$outboundSchema` instead. */
    UpdateUser$.outboundSchema = UpdateUser$outboundSchema;
})(UpdateUser$ || (UpdateUser$ = {}));
export function updateUserToJSON(updateUser) {
    return JSON.stringify(UpdateUser$outboundSchema.parse(updateUser));
}
export function updateUserFromJSON(jsonString) {
    return safeParse(jsonString, (x) => UpdateUser$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'UpdateUser' from JSON`);
}
