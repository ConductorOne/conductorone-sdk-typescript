/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  PersonalClient,
  PersonalClient$inboundSchema,
  PersonalClient$Outbound,
  PersonalClient$outboundSchema,
} from "./personalclient.js";

/**
 * The PersonalClientServiceCreateResponse message contains the created personal client and client secret.
 */
export type PersonalClientServiceCreateResponse = {
  client?: PersonalClient | null | undefined;
  /**
   * The client secret that corresponds to the personal client. Make sure to save this, because it cannot be returned or queried again.
   */
  clientSecret?: string | null | undefined;
};

/** @internal */
export const PersonalClientServiceCreateResponse$inboundSchema: z.ZodType<
  PersonalClientServiceCreateResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  client: z.nullable(PersonalClient$inboundSchema).optional(),
  clientSecret: z.nullable(z.string()).optional(),
});

/** @internal */
export type PersonalClientServiceCreateResponse$Outbound = {
  client?: PersonalClient$Outbound | null | undefined;
  clientSecret?: string | null | undefined;
};

/** @internal */
export const PersonalClientServiceCreateResponse$outboundSchema: z.ZodType<
  PersonalClientServiceCreateResponse$Outbound,
  z.ZodTypeDef,
  PersonalClientServiceCreateResponse
> = z.object({
  client: z.nullable(PersonalClient$outboundSchema).optional(),
  clientSecret: z.nullable(z.string()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PersonalClientServiceCreateResponse$ {
  /** @deprecated use `PersonalClientServiceCreateResponse$inboundSchema` instead. */
  export const inboundSchema =
    PersonalClientServiceCreateResponse$inboundSchema;
  /** @deprecated use `PersonalClientServiceCreateResponse$outboundSchema` instead. */
  export const outboundSchema =
    PersonalClientServiceCreateResponse$outboundSchema;
  /** @deprecated use `PersonalClientServiceCreateResponse$Outbound` instead. */
  export type Outbound = PersonalClientServiceCreateResponse$Outbound;
}

export function personalClientServiceCreateResponseToJSON(
  personalClientServiceCreateResponse: PersonalClientServiceCreateResponse,
): string {
  return JSON.stringify(
    PersonalClientServiceCreateResponse$outboundSchema.parse(
      personalClientServiceCreateResponse,
    ),
  );
}

export function personalClientServiceCreateResponseFromJSON(
  jsonString: string,
): SafeParseResult<PersonalClientServiceCreateResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      PersonalClientServiceCreateResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PersonalClientServiceCreateResponse' from JSON`,
  );
}
