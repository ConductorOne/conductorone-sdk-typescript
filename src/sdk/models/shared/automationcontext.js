/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
/** @internal */
export const AutomationContext$inboundSchema = z.object({
    context: z.nullable(z.record(z.any())).optional(),
});
/** @internal */
export const AutomationContext$outboundSchema = z.object({
    context: z.nullable(z.record(z.any())).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var AutomationContext$;
(function (AutomationContext$) {
    /** @deprecated use `AutomationContext$inboundSchema` instead. */
    AutomationContext$.inboundSchema = AutomationContext$inboundSchema;
    /** @deprecated use `AutomationContext$outboundSchema` instead. */
    AutomationContext$.outboundSchema = AutomationContext$outboundSchema;
})(AutomationContext$ || (AutomationContext$ = {}));
export function automationContextToJSON(automationContext) {
    return JSON.stringify(AutomationContext$outboundSchema.parse(automationContext));
}
export function automationContextFromJSON(jsonString) {
    return safeParse(jsonString, (x) => AutomationContext$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'AutomationContext' from JSON`);
}
