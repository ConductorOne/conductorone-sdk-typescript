/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { EditorMarker$inboundSchema, EditorMarker$outboundSchema, } from "./editormarker.js";
/** @internal */
export const EditorValidateResponse$inboundSchema = z.object({
    markers: z.nullable(z.array(EditorMarker$inboundSchema)).optional(),
});
/** @internal */
export const EditorValidateResponse$outboundSchema = z.object({
    markers: z.nullable(z.array(EditorMarker$outboundSchema)).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var EditorValidateResponse$;
(function (EditorValidateResponse$) {
    /** @deprecated use `EditorValidateResponse$inboundSchema` instead. */
    EditorValidateResponse$.inboundSchema = EditorValidateResponse$inboundSchema;
    /** @deprecated use `EditorValidateResponse$outboundSchema` instead. */
    EditorValidateResponse$.outboundSchema = EditorValidateResponse$outboundSchema;
})(EditorValidateResponse$ || (EditorValidateResponse$ = {}));
export function editorValidateResponseToJSON(editorValidateResponse) {
    return JSON.stringify(EditorValidateResponse$outboundSchema.parse(editorValidateResponse));
}
export function editorValidateResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => EditorValidateResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'EditorValidateResponse' from JSON`);
}
