/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
/** @internal */
export const SaveToVault$inboundSchema = z.object({
    vaultIds: z.nullable(z.array(z.string())).optional(),
});
/** @internal */
export const SaveToVault$outboundSchema = z.object({
    vaultIds: z.nullable(z.array(z.string())).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var SaveToVault$;
(function (SaveToVault$) {
    /** @deprecated use `SaveToVault$inboundSchema` instead. */
    SaveToVault$.inboundSchema = SaveToVault$inboundSchema;
    /** @deprecated use `SaveToVault$outboundSchema` instead. */
    SaveToVault$.outboundSchema = SaveToVault$outboundSchema;
})(SaveToVault$ || (SaveToVault$ = {}));
export function saveToVaultToJSON(saveToVault) {
    return JSON.stringify(SaveToVault$outboundSchema.parse(saveToVault));
}
export function saveToVaultFromJSON(jsonString) {
    return safeParse(jsonString, (x) => SaveToVault$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'SaveToVault' from JSON`);
}
