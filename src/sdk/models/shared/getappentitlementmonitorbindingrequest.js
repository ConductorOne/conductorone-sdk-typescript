/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { catchUnrecognizedEnum, } from "../../types/enums.js";
/**
 * The entitlementGroup field.
 */
export const GetAppEntitlementMonitorBindingRequestEntitlementGroup = {
    EntitlementGroupUnspecified: "ENTITLEMENT_GROUP_UNSPECIFIED",
    EntitlementGroupA: "ENTITLEMENT_GROUP_A",
    EntitlementGroupB: "ENTITLEMENT_GROUP_B",
};
/** @internal */
export const GetAppEntitlementMonitorBindingRequestEntitlementGroup$inboundSchema = z
    .union([
    z.nativeEnum(GetAppEntitlementMonitorBindingRequestEntitlementGroup),
    z.string().transform(catchUnrecognizedEnum),
]);
/** @internal */
export const GetAppEntitlementMonitorBindingRequestEntitlementGroup$outboundSchema = z.union([
    z.nativeEnum(GetAppEntitlementMonitorBindingRequestEntitlementGroup),
    z.string().and(z.custom()),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetAppEntitlementMonitorBindingRequestEntitlementGroup$;
(function (GetAppEntitlementMonitorBindingRequestEntitlementGroup$) {
    /** @deprecated use `GetAppEntitlementMonitorBindingRequestEntitlementGroup$inboundSchema` instead. */
    GetAppEntitlementMonitorBindingRequestEntitlementGroup$.inboundSchema = GetAppEntitlementMonitorBindingRequestEntitlementGroup$inboundSchema;
    /** @deprecated use `GetAppEntitlementMonitorBindingRequestEntitlementGroup$outboundSchema` instead. */
    GetAppEntitlementMonitorBindingRequestEntitlementGroup$.outboundSchema = GetAppEntitlementMonitorBindingRequestEntitlementGroup$outboundSchema;
})(GetAppEntitlementMonitorBindingRequestEntitlementGroup$ || (GetAppEntitlementMonitorBindingRequestEntitlementGroup$ = {}));
/** @internal */
export const GetAppEntitlementMonitorBindingRequest$inboundSchema = z.object({
    appEntitlementId: z.nullable(z.string()).optional(),
    appId: z.nullable(z.string()).optional(),
    entitlementGroup: z.nullable(GetAppEntitlementMonitorBindingRequestEntitlementGroup$inboundSchema).optional(),
    monitorId: z.nullable(z.string()).optional(),
});
/** @internal */
export const GetAppEntitlementMonitorBindingRequest$outboundSchema = z.object({
    appEntitlementId: z.nullable(z.string()).optional(),
    appId: z.nullable(z.string()).optional(),
    entitlementGroup: z.nullable(GetAppEntitlementMonitorBindingRequestEntitlementGroup$outboundSchema).optional(),
    monitorId: z.nullable(z.string()).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetAppEntitlementMonitorBindingRequest$;
(function (GetAppEntitlementMonitorBindingRequest$) {
    /** @deprecated use `GetAppEntitlementMonitorBindingRequest$inboundSchema` instead. */
    GetAppEntitlementMonitorBindingRequest$.inboundSchema = GetAppEntitlementMonitorBindingRequest$inboundSchema;
    /** @deprecated use `GetAppEntitlementMonitorBindingRequest$outboundSchema` instead. */
    GetAppEntitlementMonitorBindingRequest$.outboundSchema = GetAppEntitlementMonitorBindingRequest$outboundSchema;
})(GetAppEntitlementMonitorBindingRequest$ || (GetAppEntitlementMonitorBindingRequest$ = {}));
export function getAppEntitlementMonitorBindingRequestToJSON(getAppEntitlementMonitorBindingRequest) {
    return JSON.stringify(GetAppEntitlementMonitorBindingRequest$outboundSchema.parse(getAppEntitlementMonitorBindingRequest));
}
export function getAppEntitlementMonitorBindingRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => GetAppEntitlementMonitorBindingRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetAppEntitlementMonitorBindingRequest' from JSON`);
}
