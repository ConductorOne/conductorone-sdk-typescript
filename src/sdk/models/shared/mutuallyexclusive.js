/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
/** @internal */
export const MutuallyExclusive$inboundSchema = z.object({});
/** @internal */
export const MutuallyExclusive$outboundSchema = z.object({});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var MutuallyExclusive$;
(function (MutuallyExclusive$) {
    /** @deprecated use `MutuallyExclusive$inboundSchema` instead. */
    MutuallyExclusive$.inboundSchema = MutuallyExclusive$inboundSchema;
    /** @deprecated use `MutuallyExclusive$outboundSchema` instead. */
    MutuallyExclusive$.outboundSchema = MutuallyExclusive$outboundSchema;
})(MutuallyExclusive$ || (MutuallyExclusive$ = {}));
export function mutuallyExclusiveToJSON(mutuallyExclusive) {
    return JSON.stringify(MutuallyExclusive$outboundSchema.parse(mutuallyExclusive));
}
export function mutuallyExclusiveFromJSON(jsonString) {
    return safeParse(jsonString, (x) => MutuallyExclusive$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'MutuallyExclusive' from JSON`);
}
