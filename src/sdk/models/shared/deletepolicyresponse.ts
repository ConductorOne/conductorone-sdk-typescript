/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * Empty response with a status code indicating success.
 */
export type DeletePolicyResponse = {};

/** @internal */
export const DeletePolicyResponse$inboundSchema: z.ZodType<
  DeletePolicyResponse,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type DeletePolicyResponse$Outbound = {};

/** @internal */
export const DeletePolicyResponse$outboundSchema: z.ZodType<
  DeletePolicyResponse$Outbound,
  z.ZodTypeDef,
  DeletePolicyResponse
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeletePolicyResponse$ {
  /** @deprecated use `DeletePolicyResponse$inboundSchema` instead. */
  export const inboundSchema = DeletePolicyResponse$inboundSchema;
  /** @deprecated use `DeletePolicyResponse$outboundSchema` instead. */
  export const outboundSchema = DeletePolicyResponse$outboundSchema;
  /** @deprecated use `DeletePolicyResponse$Outbound` instead. */
  export type Outbound = DeletePolicyResponse$Outbound;
}

export function deletePolicyResponseToJSON(
  deletePolicyResponse: DeletePolicyResponse,
): string {
  return JSON.stringify(
    DeletePolicyResponse$outboundSchema.parse(deletePolicyResponse),
  );
}

export function deletePolicyResponseFromJSON(
  jsonString: string,
): SafeParseResult<DeletePolicyResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DeletePolicyResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeletePolicyResponse' from JSON`,
  );
}
