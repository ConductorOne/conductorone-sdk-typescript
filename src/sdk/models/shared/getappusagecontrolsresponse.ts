/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  AppUsageControls,
  AppUsageControls$inboundSchema,
  AppUsageControls$Outbound,
  AppUsageControls$outboundSchema,
} from "./appusagecontrols.js";

/**
 * The GetAppUsageControlsResponse message contains the retrieved AppUsageControls object.
 */
export type GetAppUsageControlsResponse = {
  appUsageControls?: AppUsageControls | null | undefined;
  /**
   * HasUsageData is false if the access entitlement for this app has no usage data.
   */
  hasUsageData?: boolean | null | undefined;
};

/** @internal */
export const GetAppUsageControlsResponse$inboundSchema: z.ZodType<
  GetAppUsageControlsResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  appUsageControls: z.nullable(AppUsageControls$inboundSchema).optional(),
  hasUsageData: z.nullable(z.boolean()).optional(),
});

/** @internal */
export type GetAppUsageControlsResponse$Outbound = {
  appUsageControls?: AppUsageControls$Outbound | null | undefined;
  hasUsageData?: boolean | null | undefined;
};

/** @internal */
export const GetAppUsageControlsResponse$outboundSchema: z.ZodType<
  GetAppUsageControlsResponse$Outbound,
  z.ZodTypeDef,
  GetAppUsageControlsResponse
> = z.object({
  appUsageControls: z.nullable(AppUsageControls$outboundSchema).optional(),
  hasUsageData: z.nullable(z.boolean()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetAppUsageControlsResponse$ {
  /** @deprecated use `GetAppUsageControlsResponse$inboundSchema` instead. */
  export const inboundSchema = GetAppUsageControlsResponse$inboundSchema;
  /** @deprecated use `GetAppUsageControlsResponse$outboundSchema` instead. */
  export const outboundSchema = GetAppUsageControlsResponse$outboundSchema;
  /** @deprecated use `GetAppUsageControlsResponse$Outbound` instead. */
  export type Outbound = GetAppUsageControlsResponse$Outbound;
}

export function getAppUsageControlsResponseToJSON(
  getAppUsageControlsResponse: GetAppUsageControlsResponse,
): string {
  return JSON.stringify(
    GetAppUsageControlsResponse$outboundSchema.parse(
      getAppUsageControlsResponse,
    ),
  );
}

export function getAppUsageControlsResponseFromJSON(
  jsonString: string,
): SafeParseResult<GetAppUsageControlsResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetAppUsageControlsResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetAppUsageControlsResponse' from JSON`,
  );
}
