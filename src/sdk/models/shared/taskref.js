/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
/** @internal */
export const TaskRef$inboundSchema = z.object({
    id: z.nullable(z.string()).optional(),
});
/** @internal */
export const TaskRef$outboundSchema = z.object({
    id: z.nullable(z.string()).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var TaskRef$;
(function (TaskRef$) {
    /** @deprecated use `TaskRef$inboundSchema` instead. */
    TaskRef$.inboundSchema = TaskRef$inboundSchema;
    /** @deprecated use `TaskRef$outboundSchema` instead. */
    TaskRef$.outboundSchema = TaskRef$outboundSchema;
})(TaskRef$ || (TaskRef$ = {}));
export function taskRefToJSON(taskRef) {
    return JSON.stringify(TaskRef$outboundSchema.parse(taskRef));
}
export function taskRefFromJSON(jsonString) {
    return safeParse(jsonString, (x) => TaskRef$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'TaskRef' from JSON`);
}
