/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { TaskExpandMask$inboundSchema, TaskExpandMask$outboundSchema, } from "./taskexpandmask.js";
/** @internal */
export const TaskActionsServiceApproveWithStepUpRequest$inboundSchema = z.object({
    comment: z.nullable(z.string()).optional(),
    expandMask: z.nullable(TaskExpandMask$inboundSchema).optional(),
    policyStepId: z.string(),
    stepUpTransactionId: z.string(),
});
/** @internal */
export const TaskActionsServiceApproveWithStepUpRequest$outboundSchema = z.object({
    comment: z.nullable(z.string()).optional(),
    expandMask: z.nullable(TaskExpandMask$outboundSchema).optional(),
    policyStepId: z.string(),
    stepUpTransactionId: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var TaskActionsServiceApproveWithStepUpRequest$;
(function (TaskActionsServiceApproveWithStepUpRequest$) {
    /** @deprecated use `TaskActionsServiceApproveWithStepUpRequest$inboundSchema` instead. */
    TaskActionsServiceApproveWithStepUpRequest$.inboundSchema = TaskActionsServiceApproveWithStepUpRequest$inboundSchema;
    /** @deprecated use `TaskActionsServiceApproveWithStepUpRequest$outboundSchema` instead. */
    TaskActionsServiceApproveWithStepUpRequest$.outboundSchema = TaskActionsServiceApproveWithStepUpRequest$outboundSchema;
})(TaskActionsServiceApproveWithStepUpRequest$ || (TaskActionsServiceApproveWithStepUpRequest$ = {}));
export function taskActionsServiceApproveWithStepUpRequestToJSON(taskActionsServiceApproveWithStepUpRequest) {
    return JSON.stringify(TaskActionsServiceApproveWithStepUpRequest$outboundSchema.parse(taskActionsServiceApproveWithStepUpRequest));
}
export function taskActionsServiceApproveWithStepUpRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => TaskActionsServiceApproveWithStepUpRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'TaskActionsServiceApproveWithStepUpRequest' from JSON`);
}
