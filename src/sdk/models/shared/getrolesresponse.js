/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Role$inboundSchema, Role$outboundSchema, } from "./role.js";
/** @internal */
export const GetRolesResponse$inboundSchema = z.object({
    role: z.nullable(Role$inboundSchema).optional(),
});
/** @internal */
export const GetRolesResponse$outboundSchema = z.object({
    role: z.nullable(Role$outboundSchema).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetRolesResponse$;
(function (GetRolesResponse$) {
    /** @deprecated use `GetRolesResponse$inboundSchema` instead. */
    GetRolesResponse$.inboundSchema = GetRolesResponse$inboundSchema;
    /** @deprecated use `GetRolesResponse$outboundSchema` instead. */
    GetRolesResponse$.outboundSchema = GetRolesResponse$outboundSchema;
})(GetRolesResponse$ || (GetRolesResponse$ = {}));
export function getRolesResponseToJSON(getRolesResponse) {
    return JSON.stringify(GetRolesResponse$outboundSchema.parse(getRolesResponse));
}
export function getRolesResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => GetRolesResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetRolesResponse' from JSON`);
}
