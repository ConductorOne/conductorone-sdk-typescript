/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
/** @internal */
export const UpdateStepUpProviderSecretRequest$inboundSchema = z.object({
    clientSecret: z.nullable(z.string()).optional(),
});
/** @internal */
export const UpdateStepUpProviderSecretRequest$outboundSchema = z.object({
    clientSecret: z.nullable(z.string()).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var UpdateStepUpProviderSecretRequest$;
(function (UpdateStepUpProviderSecretRequest$) {
    /** @deprecated use `UpdateStepUpProviderSecretRequest$inboundSchema` instead. */
    UpdateStepUpProviderSecretRequest$.inboundSchema = UpdateStepUpProviderSecretRequest$inboundSchema;
    /** @deprecated use `UpdateStepUpProviderSecretRequest$outboundSchema` instead. */
    UpdateStepUpProviderSecretRequest$.outboundSchema = UpdateStepUpProviderSecretRequest$outboundSchema;
})(UpdateStepUpProviderSecretRequest$ || (UpdateStepUpProviderSecretRequest$ = {}));
export function updateStepUpProviderSecretRequestToJSON(updateStepUpProviderSecretRequest) {
    return JSON.stringify(UpdateStepUpProviderSecretRequest$outboundSchema.parse(updateStepUpProviderSecretRequest));
}
export function updateStepUpProviderSecretRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => UpdateStepUpProviderSecretRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'UpdateStepUpProviderSecretRequest' from JSON`);
}
