/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

/**
 * The status field.
 */
export enum ConnectorStatusStatus {
    SyncStatusUnspecified = "SYNC_STATUS_UNSPECIFIED",
    SyncStatusRunning = "SYNC_STATUS_RUNNING",
    SyncStatusDone = "SYNC_STATUS_DONE",
    SyncStatusError = "SYNC_STATUS_ERROR",
}

/**
 * The ConnectorStatus message.
 */
export class ConnectorStatus extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "completedAt" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    completedAt?: Date;

    /**
     * The lastError field.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "lastError" })
    lastError?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "startedAt" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    startedAt?: Date;

    /**
     * The status field.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "status" })
    status?: ConnectorStatusStatus;

    @SpeakeasyMetadata()
    @Expose({ name: "updatedAt" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    updatedAt?: Date;
}
