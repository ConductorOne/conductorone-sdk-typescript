/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  AppUsageControls,
  AppUsageControls$inboundSchema,
  AppUsageControls$Outbound,
  AppUsageControls$outboundSchema,
} from "./appusagecontrols.js";

/**
 * The UpdateAppUsageControlsResponse message contains the updated AppUsageControls object.
 */
export type UpdateAppUsageControlsResponse = {
  appUsageControls?: AppUsageControls | null | undefined;
};

/** @internal */
export const UpdateAppUsageControlsResponse$inboundSchema: z.ZodType<
  UpdateAppUsageControlsResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  appUsageControls: z.nullable(AppUsageControls$inboundSchema).optional(),
});

/** @internal */
export type UpdateAppUsageControlsResponse$Outbound = {
  appUsageControls?: AppUsageControls$Outbound | null | undefined;
};

/** @internal */
export const UpdateAppUsageControlsResponse$outboundSchema: z.ZodType<
  UpdateAppUsageControlsResponse$Outbound,
  z.ZodTypeDef,
  UpdateAppUsageControlsResponse
> = z.object({
  appUsageControls: z.nullable(AppUsageControls$outboundSchema).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateAppUsageControlsResponse$ {
  /** @deprecated use `UpdateAppUsageControlsResponse$inboundSchema` instead. */
  export const inboundSchema = UpdateAppUsageControlsResponse$inboundSchema;
  /** @deprecated use `UpdateAppUsageControlsResponse$outboundSchema` instead. */
  export const outboundSchema = UpdateAppUsageControlsResponse$outboundSchema;
  /** @deprecated use `UpdateAppUsageControlsResponse$Outbound` instead. */
  export type Outbound = UpdateAppUsageControlsResponse$Outbound;
}

export function updateAppUsageControlsResponseToJSON(
  updateAppUsageControlsResponse: UpdateAppUsageControlsResponse,
): string {
  return JSON.stringify(
    UpdateAppUsageControlsResponse$outboundSchema.parse(
      updateAppUsageControlsResponse,
    ),
  );
}

export function updateAppUsageControlsResponseFromJSON(
  jsonString: string,
): SafeParseResult<UpdateAppUsageControlsResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateAppUsageControlsResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateAppUsageControlsResponse' from JSON`,
  );
}
