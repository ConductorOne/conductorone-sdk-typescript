/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
/** @internal */
export const ExternalTicketProvision$inboundSchema = z.object({
    appId: z.nullable(z.string()).optional(),
    connectorId: z.nullable(z.string()).optional(),
    externalTicketProvisionerConfigId: z.nullable(z.string()).optional(),
    instructions: z.nullable(z.string()).optional(),
});
/** @internal */
export const ExternalTicketProvision$outboundSchema = z.object({
    appId: z.nullable(z.string()).optional(),
    connectorId: z.nullable(z.string()).optional(),
    externalTicketProvisionerConfigId: z.nullable(z.string()).optional(),
    instructions: z.nullable(z.string()).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ExternalTicketProvision$;
(function (ExternalTicketProvision$) {
    /** @deprecated use `ExternalTicketProvision$inboundSchema` instead. */
    ExternalTicketProvision$.inboundSchema = ExternalTicketProvision$inboundSchema;
    /** @deprecated use `ExternalTicketProvision$outboundSchema` instead. */
    ExternalTicketProvision$.outboundSchema = ExternalTicketProvision$outboundSchema;
})(ExternalTicketProvision$ || (ExternalTicketProvision$ = {}));
export function externalTicketProvisionToJSON(externalTicketProvision) {
    return JSON.stringify(ExternalTicketProvision$outboundSchema.parse(externalTicketProvision));
}
export function externalTicketProvisionFromJSON(jsonString) {
    return safeParse(jsonString, (x) => ExternalTicketProvision$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ExternalTicketProvision' from JSON`);
}
