/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { AppEntitlementAutomationInput$inboundSchema, AppEntitlementAutomationInput$outboundSchema, } from "./appentitlementautomationinput.js";
/** @internal */
export const CreateAutomationRequest$inboundSchema = z.object({
    automation: z.nullable(AppEntitlementAutomationInput$inboundSchema)
        .optional(),
});
/** @internal */
export const CreateAutomationRequest$outboundSchema = z.object({
    automation: z.nullable(AppEntitlementAutomationInput$outboundSchema)
        .optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateAutomationRequest$;
(function (CreateAutomationRequest$) {
    /** @deprecated use `CreateAutomationRequest$inboundSchema` instead. */
    CreateAutomationRequest$.inboundSchema = CreateAutomationRequest$inboundSchema;
    /** @deprecated use `CreateAutomationRequest$outboundSchema` instead. */
    CreateAutomationRequest$.outboundSchema = CreateAutomationRequest$outboundSchema;
})(CreateAutomationRequest$ || (CreateAutomationRequest$ = {}));
export function createAutomationRequestToJSON(createAutomationRequest) {
    return JSON.stringify(CreateAutomationRequest$outboundSchema.parse(createAutomationRequest));
}
export function createAutomationRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CreateAutomationRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CreateAutomationRequest' from JSON`);
}
