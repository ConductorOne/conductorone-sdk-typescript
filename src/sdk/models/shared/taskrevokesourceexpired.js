/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
/** @internal */
export const TaskRevokeSourceExpired$inboundSchema = z.object({
    expiredAt: z.nullable(z.string().datetime({ offset: true }).transform(v => new Date(v))).optional(),
});
/** @internal */
export const TaskRevokeSourceExpired$outboundSchema = z.object({
    expiredAt: z.nullable(z.date().transform(v => v.toISOString())).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var TaskRevokeSourceExpired$;
(function (TaskRevokeSourceExpired$) {
    /** @deprecated use `TaskRevokeSourceExpired$inboundSchema` instead. */
    TaskRevokeSourceExpired$.inboundSchema = TaskRevokeSourceExpired$inboundSchema;
    /** @deprecated use `TaskRevokeSourceExpired$outboundSchema` instead. */
    TaskRevokeSourceExpired$.outboundSchema = TaskRevokeSourceExpired$outboundSchema;
})(TaskRevokeSourceExpired$ || (TaskRevokeSourceExpired$ = {}));
export function taskRevokeSourceExpiredToJSON(taskRevokeSourceExpired) {
    return JSON.stringify(TaskRevokeSourceExpired$outboundSchema.parse(taskRevokeSourceExpired));
}
export function taskRevokeSourceExpiredFromJSON(jsonString) {
    return safeParse(jsonString, (x) => TaskRevokeSourceExpired$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'TaskRevokeSourceExpired' from JSON`);
}
