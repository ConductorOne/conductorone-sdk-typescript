/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { AppEntitlementInput$inboundSchema, AppEntitlementInput$outboundSchema, } from "./appentitlement.js";
import { AppEntitlementExpandMask$inboundSchema, AppEntitlementExpandMask$outboundSchema, } from "./appentitlementexpandmask.js";
/** @internal */
export const UpdateAppEntitlementRequest$inboundSchema = z.object({
    entitlement: z.nullable(AppEntitlementInput$inboundSchema).optional(),
    expandMask: z.nullable(AppEntitlementExpandMask$inboundSchema).optional(),
    overrideAccessRequestsDefaults: z.nullable(z.boolean()).optional(),
    updateMask: z.nullable(z.string()).optional(),
});
/** @internal */
export const UpdateAppEntitlementRequest$outboundSchema = z.object({
    entitlement: z.nullable(AppEntitlementInput$outboundSchema).optional(),
    expandMask: z.nullable(AppEntitlementExpandMask$outboundSchema).optional(),
    overrideAccessRequestsDefaults: z.nullable(z.boolean()).optional(),
    updateMask: z.nullable(z.string()).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var UpdateAppEntitlementRequest$;
(function (UpdateAppEntitlementRequest$) {
    /** @deprecated use `UpdateAppEntitlementRequest$inboundSchema` instead. */
    UpdateAppEntitlementRequest$.inboundSchema = UpdateAppEntitlementRequest$inboundSchema;
    /** @deprecated use `UpdateAppEntitlementRequest$outboundSchema` instead. */
    UpdateAppEntitlementRequest$.outboundSchema = UpdateAppEntitlementRequest$outboundSchema;
})(UpdateAppEntitlementRequest$ || (UpdateAppEntitlementRequest$ = {}));
export function updateAppEntitlementRequestToJSON(updateAppEntitlementRequest) {
    return JSON.stringify(UpdateAppEntitlementRequest$outboundSchema.parse(updateAppEntitlementRequest));
}
export function updateAppEntitlementRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => UpdateAppEntitlementRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'UpdateAppEntitlementRequest' from JSON`);
}
