/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { App$inboundSchema, App$outboundSchema, } from "./app.js";
/** @internal */
export const CreateAppResponse$inboundSchema = z.object({
    app: z.nullable(App$inboundSchema).optional(),
});
/** @internal */
export const CreateAppResponse$outboundSchema = z.object({
    app: z.nullable(App$outboundSchema).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateAppResponse$;
(function (CreateAppResponse$) {
    /** @deprecated use `CreateAppResponse$inboundSchema` instead. */
    CreateAppResponse$.inboundSchema = CreateAppResponse$inboundSchema;
    /** @deprecated use `CreateAppResponse$outboundSchema` instead. */
    CreateAppResponse$.outboundSchema = CreateAppResponse$outboundSchema;
})(CreateAppResponse$ || (CreateAppResponse$ = {}));
export function createAppResponseToJSON(createAppResponse) {
    return JSON.stringify(CreateAppResponse$outboundSchema.parse(createAppResponse));
}
export function createAppResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CreateAppResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CreateAppResponse' from JSON`);
}
