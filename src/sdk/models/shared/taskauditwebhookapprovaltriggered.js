/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
/** @internal */
export const TaskAuditWebhookApprovalTriggered$inboundSchema = z.object({
    webhookId: z.nullable(z.string()).optional(),
    webhookInstanceId: z.nullable(z.string()).optional(),
    webhookName: z.nullable(z.string()).optional(),
    webhookUrl: z.nullable(z.string()).optional(),
});
/** @internal */
export const TaskAuditWebhookApprovalTriggered$outboundSchema = z.object({
    webhookId: z.nullable(z.string()).optional(),
    webhookInstanceId: z.nullable(z.string()).optional(),
    webhookName: z.nullable(z.string()).optional(),
    webhookUrl: z.nullable(z.string()).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var TaskAuditWebhookApprovalTriggered$;
(function (TaskAuditWebhookApprovalTriggered$) {
    /** @deprecated use `TaskAuditWebhookApprovalTriggered$inboundSchema` instead. */
    TaskAuditWebhookApprovalTriggered$.inboundSchema = TaskAuditWebhookApprovalTriggered$inboundSchema;
    /** @deprecated use `TaskAuditWebhookApprovalTriggered$outboundSchema` instead. */
    TaskAuditWebhookApprovalTriggered$.outboundSchema = TaskAuditWebhookApprovalTriggered$outboundSchema;
})(TaskAuditWebhookApprovalTriggered$ || (TaskAuditWebhookApprovalTriggered$ = {}));
export function taskAuditWebhookApprovalTriggeredToJSON(taskAuditWebhookApprovalTriggered) {
    return JSON.stringify(TaskAuditWebhookApprovalTriggered$outboundSchema.parse(taskAuditWebhookApprovalTriggered));
}
export function taskAuditWebhookApprovalTriggeredFromJSON(jsonString) {
    return safeParse(jsonString, (x) => TaskAuditWebhookApprovalTriggered$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'TaskAuditWebhookApprovalTriggered' from JSON`);
}
