/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
/** @internal */
export const RequestCatalogManagementServiceDeleteResponse$inboundSchema = z.object({});
/** @internal */
export const RequestCatalogManagementServiceDeleteResponse$outboundSchema = z.object({});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RequestCatalogManagementServiceDeleteResponse$;
(function (RequestCatalogManagementServiceDeleteResponse$) {
    /** @deprecated use `RequestCatalogManagementServiceDeleteResponse$inboundSchema` instead. */
    RequestCatalogManagementServiceDeleteResponse$.inboundSchema = RequestCatalogManagementServiceDeleteResponse$inboundSchema;
    /** @deprecated use `RequestCatalogManagementServiceDeleteResponse$outboundSchema` instead. */
    RequestCatalogManagementServiceDeleteResponse$.outboundSchema = RequestCatalogManagementServiceDeleteResponse$outboundSchema;
})(RequestCatalogManagementServiceDeleteResponse$ || (RequestCatalogManagementServiceDeleteResponse$ = {}));
export function requestCatalogManagementServiceDeleteResponseToJSON(requestCatalogManagementServiceDeleteResponse) {
    return JSON.stringify(RequestCatalogManagementServiceDeleteResponse$outboundSchema.parse(requestCatalogManagementServiceDeleteResponse));
}
export function requestCatalogManagementServiceDeleteResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => RequestCatalogManagementServiceDeleteResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'RequestCatalogManagementServiceDeleteResponse' from JSON`);
}
