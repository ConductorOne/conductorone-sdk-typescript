/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { AppEntitlementRef$inboundSchema, AppEntitlementRef$outboundSchema, } from "./appentitlementref.js";
import { AppEntitlementUserBindingExpandHistoryMask$inboundSchema, AppEntitlementUserBindingExpandHistoryMask$outboundSchema, } from "./appentitlementuserbindingexpandhistorymask.js";
import { AppUserRef$inboundSchema, AppUserRef$outboundSchema, } from "./appuserref.js";
/** @internal */
export const SearchPastGrantsRequest$inboundSchema = z.object({
    appEntitlementRefs: z.nullable(z.array(AppEntitlementRef$inboundSchema))
        .optional(),
    appIds: z.nullable(z.array(z.string())).optional(),
    appUserRefs: z.nullable(z.array(AppUserRef$inboundSchema)).optional(),
    expandMask: z.nullable(AppEntitlementUserBindingExpandHistoryMask$inboundSchema).optional(),
    pageSize: z.nullable(z.number().int()).optional(),
    pageToken: z.nullable(z.string()).optional(),
});
/** @internal */
export const SearchPastGrantsRequest$outboundSchema = z.object({
    appEntitlementRefs: z.nullable(z.array(AppEntitlementRef$outboundSchema))
        .optional(),
    appIds: z.nullable(z.array(z.string())).optional(),
    appUserRefs: z.nullable(z.array(AppUserRef$outboundSchema)).optional(),
    expandMask: z.nullable(AppEntitlementUserBindingExpandHistoryMask$outboundSchema).optional(),
    pageSize: z.nullable(z.number().int()).optional(),
    pageToken: z.nullable(z.string()).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var SearchPastGrantsRequest$;
(function (SearchPastGrantsRequest$) {
    /** @deprecated use `SearchPastGrantsRequest$inboundSchema` instead. */
    SearchPastGrantsRequest$.inboundSchema = SearchPastGrantsRequest$inboundSchema;
    /** @deprecated use `SearchPastGrantsRequest$outboundSchema` instead. */
    SearchPastGrantsRequest$.outboundSchema = SearchPastGrantsRequest$outboundSchema;
})(SearchPastGrantsRequest$ || (SearchPastGrantsRequest$ = {}));
export function searchPastGrantsRequestToJSON(searchPastGrantsRequest) {
    return JSON.stringify(SearchPastGrantsRequest$outboundSchema.parse(searchPastGrantsRequest));
}
export function searchPastGrantsRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => SearchPastGrantsRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'SearchPastGrantsRequest' from JSON`);
}
