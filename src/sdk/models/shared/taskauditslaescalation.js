/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
/** @internal */
export const TaskAuditSLAEscalation$inboundSchema = z.object({
    message: z.nullable(z.string()).optional(),
});
/** @internal */
export const TaskAuditSLAEscalation$outboundSchema = z.object({
    message: z.nullable(z.string()).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var TaskAuditSLAEscalation$;
(function (TaskAuditSLAEscalation$) {
    /** @deprecated use `TaskAuditSLAEscalation$inboundSchema` instead. */
    TaskAuditSLAEscalation$.inboundSchema = TaskAuditSLAEscalation$inboundSchema;
    /** @deprecated use `TaskAuditSLAEscalation$outboundSchema` instead. */
    TaskAuditSLAEscalation$.outboundSchema = TaskAuditSLAEscalation$outboundSchema;
})(TaskAuditSLAEscalation$ || (TaskAuditSLAEscalation$ = {}));
export function taskAuditSLAEscalationToJSON(taskAuditSLAEscalation) {
    return JSON.stringify(TaskAuditSLAEscalation$outboundSchema.parse(taskAuditSLAEscalation));
}
export function taskAuditSLAEscalationFromJSON(jsonString) {
    return safeParse(jsonString, (x) => TaskAuditSLAEscalation$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'TaskAuditSLAEscalation' from JSON`);
}
