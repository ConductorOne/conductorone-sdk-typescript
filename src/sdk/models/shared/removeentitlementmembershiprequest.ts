/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * The RemoveEntitlementMembershipRequest message.
 */
export type RemoveEntitlementMembershipRequest = {
  /**
   * The appUserId field.
   */
  appUserId?: string | null | undefined;
};

/** @internal */
export const RemoveEntitlementMembershipRequest$inboundSchema: z.ZodType<
  RemoveEntitlementMembershipRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  appUserId: z.nullable(z.string()).optional(),
});

/** @internal */
export type RemoveEntitlementMembershipRequest$Outbound = {
  appUserId?: string | null | undefined;
};

/** @internal */
export const RemoveEntitlementMembershipRequest$outboundSchema: z.ZodType<
  RemoveEntitlementMembershipRequest$Outbound,
  z.ZodTypeDef,
  RemoveEntitlementMembershipRequest
> = z.object({
  appUserId: z.nullable(z.string()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RemoveEntitlementMembershipRequest$ {
  /** @deprecated use `RemoveEntitlementMembershipRequest$inboundSchema` instead. */
  export const inboundSchema = RemoveEntitlementMembershipRequest$inboundSchema;
  /** @deprecated use `RemoveEntitlementMembershipRequest$outboundSchema` instead. */
  export const outboundSchema =
    RemoveEntitlementMembershipRequest$outboundSchema;
  /** @deprecated use `RemoveEntitlementMembershipRequest$Outbound` instead. */
  export type Outbound = RemoveEntitlementMembershipRequest$Outbound;
}

export function removeEntitlementMembershipRequestToJSON(
  removeEntitlementMembershipRequest: RemoveEntitlementMembershipRequest,
): string {
  return JSON.stringify(
    RemoveEntitlementMembershipRequest$outboundSchema.parse(
      removeEntitlementMembershipRequest,
    ),
  );
}

export function removeEntitlementMembershipRequestFromJSON(
  jsonString: string,
): SafeParseResult<RemoveEntitlementMembershipRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      RemoveEntitlementMembershipRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'RemoveEntitlementMembershipRequest' from JSON`,
  );
}
