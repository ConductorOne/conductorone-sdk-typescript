/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { catchUnrecognizedEnum, } from "../../types/enums.js";
/**
 * The resourceType field.
 */
export const ResourceType = {
    Role: "ROLE",
    Group: "GROUP",
    License: "LICENSE",
    Project: "PROJECT",
    Catalog: "CATALOG",
    Custom: "CUSTOM",
    Vault: "VAULT",
};
/** @internal */
export const ResourceType$inboundSchema = z
    .union([
    z.nativeEnum(ResourceType),
    z.string().transform(catchUnrecognizedEnum),
]);
/** @internal */
export const ResourceType$outboundSchema = z.union([
    z.nativeEnum(ResourceType),
    z.string().and(z.custom()),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ResourceType$;
(function (ResourceType$) {
    /** @deprecated use `ResourceType$inboundSchema` instead. */
    ResourceType$.inboundSchema = ResourceType$inboundSchema;
    /** @deprecated use `ResourceType$outboundSchema` instead. */
    ResourceType$.outboundSchema = ResourceType$outboundSchema;
})(ResourceType$ || (ResourceType$ = {}));
/** @internal */
export const CreateManuallyManagedResourceTypeRequest$inboundSchema = z.object({
    displayName: z.string(),
    resourceType: ResourceType$inboundSchema,
});
/** @internal */
export const CreateManuallyManagedResourceTypeRequest$outboundSchema = z.object({
    displayName: z.string(),
    resourceType: ResourceType$outboundSchema,
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateManuallyManagedResourceTypeRequest$;
(function (CreateManuallyManagedResourceTypeRequest$) {
    /** @deprecated use `CreateManuallyManagedResourceTypeRequest$inboundSchema` instead. */
    CreateManuallyManagedResourceTypeRequest$.inboundSchema = CreateManuallyManagedResourceTypeRequest$inboundSchema;
    /** @deprecated use `CreateManuallyManagedResourceTypeRequest$outboundSchema` instead. */
    CreateManuallyManagedResourceTypeRequest$.outboundSchema = CreateManuallyManagedResourceTypeRequest$outboundSchema;
})(CreateManuallyManagedResourceTypeRequest$ || (CreateManuallyManagedResourceTypeRequest$ = {}));
export function createManuallyManagedResourceTypeRequestToJSON(createManuallyManagedResourceTypeRequest) {
    return JSON.stringify(CreateManuallyManagedResourceTypeRequest$outboundSchema.parse(createManuallyManagedResourceTypeRequest));
}
export function createManuallyManagedResourceTypeRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CreateManuallyManagedResourceTypeRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CreateManuallyManagedResourceTypeRequest' from JSON`);
}
