/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * The UserAttributeMappingSource message.
 */
export type UserAttributeMappingSource = {
  /**
   * The appId field.
   */
  appId?: string | null | undefined;
  /**
   * The appUserId field.
   */
  appUserId?: string | null | undefined;
  /**
   * The appUserProfileAttributeKey field.
   */
  appUserProfileAttributeKey?: string | null | undefined;
  /**
   * The userAttributeMappingId field.
   */
  userAttributeMappingId?: string | null | undefined;
  /**
   * The value field.
   */
  value?: string | null | undefined;
};

/** @internal */
export const UserAttributeMappingSource$inboundSchema: z.ZodType<
  UserAttributeMappingSource,
  z.ZodTypeDef,
  unknown
> = z.object({
  appId: z.nullable(z.string()).optional(),
  appUserId: z.nullable(z.string()).optional(),
  appUserProfileAttributeKey: z.nullable(z.string()).optional(),
  userAttributeMappingId: z.nullable(z.string()).optional(),
  value: z.nullable(z.string()).optional(),
});

/** @internal */
export type UserAttributeMappingSource$Outbound = {
  appId?: string | null | undefined;
  appUserId?: string | null | undefined;
  appUserProfileAttributeKey?: string | null | undefined;
  userAttributeMappingId?: string | null | undefined;
  value?: string | null | undefined;
};

/** @internal */
export const UserAttributeMappingSource$outboundSchema: z.ZodType<
  UserAttributeMappingSource$Outbound,
  z.ZodTypeDef,
  UserAttributeMappingSource
> = z.object({
  appId: z.nullable(z.string()).optional(),
  appUserId: z.nullable(z.string()).optional(),
  appUserProfileAttributeKey: z.nullable(z.string()).optional(),
  userAttributeMappingId: z.nullable(z.string()).optional(),
  value: z.nullable(z.string()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UserAttributeMappingSource$ {
  /** @deprecated use `UserAttributeMappingSource$inboundSchema` instead. */
  export const inboundSchema = UserAttributeMappingSource$inboundSchema;
  /** @deprecated use `UserAttributeMappingSource$outboundSchema` instead. */
  export const outboundSchema = UserAttributeMappingSource$outboundSchema;
  /** @deprecated use `UserAttributeMappingSource$Outbound` instead. */
  export type Outbound = UserAttributeMappingSource$Outbound;
}

export function userAttributeMappingSourceToJSON(
  userAttributeMappingSource: UserAttributeMappingSource,
): string {
  return JSON.stringify(
    UserAttributeMappingSource$outboundSchema.parse(userAttributeMappingSource),
  );
}

export function userAttributeMappingSourceFromJSON(
  jsonString: string,
): SafeParseResult<UserAttributeMappingSource, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UserAttributeMappingSource$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UserAttributeMappingSource' from JSON`,
  );
}
