/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
/** @internal */
export const FormCompletedAction$inboundSchema = z.object({
    completedAt: z.nullable(z.string().datetime({ offset: true }).transform(v => new Date(v))).optional(),
    userId: z.nullable(z.string()).optional(),
});
/** @internal */
export const FormCompletedAction$outboundSchema = z.object({
    completedAt: z.nullable(z.date().transform(v => v.toISOString())).optional(),
    userId: z.nullable(z.string()).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var FormCompletedAction$;
(function (FormCompletedAction$) {
    /** @deprecated use `FormCompletedAction$inboundSchema` instead. */
    FormCompletedAction$.inboundSchema = FormCompletedAction$inboundSchema;
    /** @deprecated use `FormCompletedAction$outboundSchema` instead. */
    FormCompletedAction$.outboundSchema = FormCompletedAction$outboundSchema;
})(FormCompletedAction$ || (FormCompletedAction$ = {}));
export function formCompletedActionToJSON(formCompletedAction) {
    return JSON.stringify(FormCompletedAction$outboundSchema.parse(formCompletedAction));
}
export function formCompletedActionFromJSON(jsonString) {
    return safeParse(jsonString, (x) => FormCompletedAction$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'FormCompletedAction' from JSON`);
}
