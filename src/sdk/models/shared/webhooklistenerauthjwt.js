/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
/** @internal */
export const WebhookListenerAuthJWT$inboundSchema = z.object({
    jwksUrl: z.nullable(z.string()).optional(),
});
/** @internal */
export const WebhookListenerAuthJWT$outboundSchema = z.object({
    jwksUrl: z.nullable(z.string()).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var WebhookListenerAuthJWT$;
(function (WebhookListenerAuthJWT$) {
    /** @deprecated use `WebhookListenerAuthJWT$inboundSchema` instead. */
    WebhookListenerAuthJWT$.inboundSchema = WebhookListenerAuthJWT$inboundSchema;
    /** @deprecated use `WebhookListenerAuthJWT$outboundSchema` instead. */
    WebhookListenerAuthJWT$.outboundSchema = WebhookListenerAuthJWT$outboundSchema;
})(WebhookListenerAuthJWT$ || (WebhookListenerAuthJWT$ = {}));
export function webhookListenerAuthJWTToJSON(webhookListenerAuthJWT) {
    return JSON.stringify(WebhookListenerAuthJWT$outboundSchema.parse(webhookListenerAuthJWT));
}
export function webhookListenerAuthJWTFromJSON(jsonString) {
    return safeParse(jsonString, (x) => WebhookListenerAuthJWT$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'WebhookListenerAuthJWT' from JSON`);
}
