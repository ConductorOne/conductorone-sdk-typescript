/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { remap as remap$ } from "../../../lib/primitives.js";
import {
  collectExtraKeys as collectExtraKeys$,
  safeParse,
} from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  TaskView,
  TaskView$inboundSchema,
  TaskView$Outbound,
  TaskView$outboundSchema,
} from "./taskview.js";

/**
 * Contains an arbitrary serialized message along with a @type that describes the type of the serialized message.
 */
export type TaskServiceCreateOffboardingResponseExpanded = {
  /**
   * The type of the serialized message.
   */
  atType?: string | undefined;
  additionalProperties?: { [k: string]: any } | undefined;
};

/**
 * The TaskServiceCreateOffboardingResponse message.
 */
export type TaskServiceCreateOffboardingResponse = {
  /**
   * The expanded field.
   */
  expanded?:
    | Array<TaskServiceCreateOffboardingResponseExpanded>
    | null
    | undefined;
  taskView?: TaskView | null | undefined;
};

/** @internal */
export const TaskServiceCreateOffboardingResponseExpanded$inboundSchema:
  z.ZodType<
    TaskServiceCreateOffboardingResponseExpanded,
    z.ZodTypeDef,
    unknown
  > = collectExtraKeys$(
    z.object({
      "@type": z.string().optional(),
    }).catchall(z.any()),
    "additionalProperties",
    true,
  ).transform((v) => {
    return remap$(v, {
      "@type": "atType",
    });
  });

/** @internal */
export type TaskServiceCreateOffboardingResponseExpanded$Outbound = {
  "@type"?: string | undefined;
  [additionalProperties: string]: unknown;
};

/** @internal */
export const TaskServiceCreateOffboardingResponseExpanded$outboundSchema:
  z.ZodType<
    TaskServiceCreateOffboardingResponseExpanded$Outbound,
    z.ZodTypeDef,
    TaskServiceCreateOffboardingResponseExpanded
  > = z.object({
    atType: z.string().optional(),
    additionalProperties: z.record(z.any()).optional(),
  }).transform((v) => {
    return {
      ...v.additionalProperties,
      ...remap$(v, {
        atType: "@type",
        additionalProperties: null,
      }),
    };
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TaskServiceCreateOffboardingResponseExpanded$ {
  /** @deprecated use `TaskServiceCreateOffboardingResponseExpanded$inboundSchema` instead. */
  export const inboundSchema =
    TaskServiceCreateOffboardingResponseExpanded$inboundSchema;
  /** @deprecated use `TaskServiceCreateOffboardingResponseExpanded$outboundSchema` instead. */
  export const outboundSchema =
    TaskServiceCreateOffboardingResponseExpanded$outboundSchema;
  /** @deprecated use `TaskServiceCreateOffboardingResponseExpanded$Outbound` instead. */
  export type Outbound = TaskServiceCreateOffboardingResponseExpanded$Outbound;
}

export function taskServiceCreateOffboardingResponseExpandedToJSON(
  taskServiceCreateOffboardingResponseExpanded:
    TaskServiceCreateOffboardingResponseExpanded,
): string {
  return JSON.stringify(
    TaskServiceCreateOffboardingResponseExpanded$outboundSchema.parse(
      taskServiceCreateOffboardingResponseExpanded,
    ),
  );
}

export function taskServiceCreateOffboardingResponseExpandedFromJSON(
  jsonString: string,
): SafeParseResult<
  TaskServiceCreateOffboardingResponseExpanded,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      TaskServiceCreateOffboardingResponseExpanded$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'TaskServiceCreateOffboardingResponseExpanded' from JSON`,
  );
}

/** @internal */
export const TaskServiceCreateOffboardingResponse$inboundSchema: z.ZodType<
  TaskServiceCreateOffboardingResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  expanded: z.nullable(
    z.array(z.lazy(() =>
      TaskServiceCreateOffboardingResponseExpanded$inboundSchema
    )),
  ).optional(),
  taskView: z.nullable(TaskView$inboundSchema).optional(),
});

/** @internal */
export type TaskServiceCreateOffboardingResponse$Outbound = {
  expanded?:
    | Array<TaskServiceCreateOffboardingResponseExpanded$Outbound>
    | null
    | undefined;
  taskView?: TaskView$Outbound | null | undefined;
};

/** @internal */
export const TaskServiceCreateOffboardingResponse$outboundSchema: z.ZodType<
  TaskServiceCreateOffboardingResponse$Outbound,
  z.ZodTypeDef,
  TaskServiceCreateOffboardingResponse
> = z.object({
  expanded: z.nullable(
    z.array(z.lazy(() =>
      TaskServiceCreateOffboardingResponseExpanded$outboundSchema
    )),
  ).optional(),
  taskView: z.nullable(TaskView$outboundSchema).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TaskServiceCreateOffboardingResponse$ {
  /** @deprecated use `TaskServiceCreateOffboardingResponse$inboundSchema` instead. */
  export const inboundSchema =
    TaskServiceCreateOffboardingResponse$inboundSchema;
  /** @deprecated use `TaskServiceCreateOffboardingResponse$outboundSchema` instead. */
  export const outboundSchema =
    TaskServiceCreateOffboardingResponse$outboundSchema;
  /** @deprecated use `TaskServiceCreateOffboardingResponse$Outbound` instead. */
  export type Outbound = TaskServiceCreateOffboardingResponse$Outbound;
}

export function taskServiceCreateOffboardingResponseToJSON(
  taskServiceCreateOffboardingResponse: TaskServiceCreateOffboardingResponse,
): string {
  return JSON.stringify(
    TaskServiceCreateOffboardingResponse$outboundSchema.parse(
      taskServiceCreateOffboardingResponse,
    ),
  );
}

export function taskServiceCreateOffboardingResponseFromJSON(
  jsonString: string,
): SafeParseResult<TaskServiceCreateOffboardingResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      TaskServiceCreateOffboardingResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'TaskServiceCreateOffboardingResponse' from JSON`,
  );
}
