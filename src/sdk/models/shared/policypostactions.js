/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
/** @internal */
export const PolicyPostActions$inboundSchema = z.object({
    certifyRemediateImmediately: z.nullable(z.boolean()).optional(),
});
/** @internal */
export const PolicyPostActions$outboundSchema = z.object({
    certifyRemediateImmediately: z.nullable(z.boolean()).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var PolicyPostActions$;
(function (PolicyPostActions$) {
    /** @deprecated use `PolicyPostActions$inboundSchema` instead. */
    PolicyPostActions$.inboundSchema = PolicyPostActions$inboundSchema;
    /** @deprecated use `PolicyPostActions$outboundSchema` instead. */
    PolicyPostActions$.outboundSchema = PolicyPostActions$outboundSchema;
})(PolicyPostActions$ || (PolicyPostActions$ = {}));
export function policyPostActionsToJSON(policyPostActions) {
    return JSON.stringify(PolicyPostActions$outboundSchema.parse(policyPostActions));
}
export function policyPostActionsFromJSON(jsonString) {
    return safeParse(jsonString, (x) => PolicyPostActions$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'PolicyPostActions' from JSON`);
}
