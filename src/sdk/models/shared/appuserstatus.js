/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { catchUnrecognizedEnum, } from "../../types/enums.js";
/**
 * The application user status field.
 */
export const AppUserStatusStatus = {
    StatusUnspecified: "STATUS_UNSPECIFIED",
    StatusEnabled: "STATUS_ENABLED",
    StatusDisabled: "STATUS_DISABLED",
    StatusDeleted: "STATUS_DELETED",
};
/** @internal */
export const AppUserStatusStatus$inboundSchema = z
    .union([
    z.nativeEnum(AppUserStatusStatus),
    z.string().transform(catchUnrecognizedEnum),
]);
/** @internal */
export const AppUserStatusStatus$outboundSchema = z.union([
    z.nativeEnum(AppUserStatusStatus),
    z.string().and(z.custom()),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var AppUserStatusStatus$;
(function (AppUserStatusStatus$) {
    /** @deprecated use `AppUserStatusStatus$inboundSchema` instead. */
    AppUserStatusStatus$.inboundSchema = AppUserStatusStatus$inboundSchema;
    /** @deprecated use `AppUserStatusStatus$outboundSchema` instead. */
    AppUserStatusStatus$.outboundSchema = AppUserStatusStatus$outboundSchema;
})(AppUserStatusStatus$ || (AppUserStatusStatus$ = {}));
/** @internal */
export const AppUserStatus$inboundSchema = z.object({
    details: z.nullable(z.string()).optional(),
    status: z.nullable(AppUserStatusStatus$inboundSchema).optional(),
});
/** @internal */
export const AppUserStatus$outboundSchema = z.object({
    details: z.nullable(z.string()).optional(),
    status: z.nullable(AppUserStatusStatus$outboundSchema).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var AppUserStatus$;
(function (AppUserStatus$) {
    /** @deprecated use `AppUserStatus$inboundSchema` instead. */
    AppUserStatus$.inboundSchema = AppUserStatus$inboundSchema;
    /** @deprecated use `AppUserStatus$outboundSchema` instead. */
    AppUserStatus$.outboundSchema = AppUserStatus$outboundSchema;
})(AppUserStatus$ || (AppUserStatus$ = {}));
export function appUserStatusToJSON(appUserStatus) {
    return JSON.stringify(AppUserStatus$outboundSchema.parse(appUserStatus));
}
export function appUserStatusFromJSON(jsonString) {
    return safeParse(jsonString, (x) => AppUserStatus$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'AppUserStatus' from JSON`);
}
