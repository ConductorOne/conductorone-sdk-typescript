/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { AppEntitlementRef$inboundSchema, AppEntitlementRef$outboundSchema, } from "./appentitlementref.js";
import { UserRef$inboundSchema, UserRef$outboundSchema, } from "./userref.js";
/** @internal */
export const GrantEntitlements$inboundSchema = z.object({
    appEntitlementRefs: z.nullable(z.array(AppEntitlementRef$inboundSchema))
        .optional(),
    appEntitlementRefsCel: z.nullable(z.string()).optional(),
    useSubjectUser: z.nullable(z.boolean()).optional(),
    userIdCel: z.nullable(z.string()).optional(),
    userRef: z.nullable(UserRef$inboundSchema).optional(),
});
/** @internal */
export const GrantEntitlements$outboundSchema = z.object({
    appEntitlementRefs: z.nullable(z.array(AppEntitlementRef$outboundSchema))
        .optional(),
    appEntitlementRefsCel: z.nullable(z.string()).optional(),
    useSubjectUser: z.nullable(z.boolean()).optional(),
    userIdCel: z.nullable(z.string()).optional(),
    userRef: z.nullable(UserRef$outboundSchema).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GrantEntitlements$;
(function (GrantEntitlements$) {
    /** @deprecated use `GrantEntitlements$inboundSchema` instead. */
    GrantEntitlements$.inboundSchema = GrantEntitlements$inboundSchema;
    /** @deprecated use `GrantEntitlements$outboundSchema` instead. */
    GrantEntitlements$.outboundSchema = GrantEntitlements$outboundSchema;
})(GrantEntitlements$ || (GrantEntitlements$ = {}));
export function grantEntitlementsToJSON(grantEntitlements) {
    return JSON.stringify(GrantEntitlements$outboundSchema.parse(grantEntitlements));
}
export function grantEntitlementsFromJSON(jsonString) {
    return safeParse(jsonString, (x) => GrantEntitlements$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GrantEntitlements' from JSON`);
}
