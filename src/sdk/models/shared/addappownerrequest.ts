/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * Empty request body. Just placeholder for the add app owner request which uses URL values for input.
 */
export type AddAppOwnerRequest = {};

/** @internal */
export const AddAppOwnerRequest$inboundSchema: z.ZodType<
  AddAppOwnerRequest,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type AddAppOwnerRequest$Outbound = {};

/** @internal */
export const AddAppOwnerRequest$outboundSchema: z.ZodType<
  AddAppOwnerRequest$Outbound,
  z.ZodTypeDef,
  AddAppOwnerRequest
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AddAppOwnerRequest$ {
  /** @deprecated use `AddAppOwnerRequest$inboundSchema` instead. */
  export const inboundSchema = AddAppOwnerRequest$inboundSchema;
  /** @deprecated use `AddAppOwnerRequest$outboundSchema` instead. */
  export const outboundSchema = AddAppOwnerRequest$outboundSchema;
  /** @deprecated use `AddAppOwnerRequest$Outbound` instead. */
  export type Outbound = AddAppOwnerRequest$Outbound;
}

export function addAppOwnerRequestToJSON(
  addAppOwnerRequest: AddAppOwnerRequest,
): string {
  return JSON.stringify(
    AddAppOwnerRequest$outboundSchema.parse(addAppOwnerRequest),
  );
}

export function addAppOwnerRequestFromJSON(
  jsonString: string,
): SafeParseResult<AddAppOwnerRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => AddAppOwnerRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'AddAppOwnerRequest' from JSON`,
  );
}
