/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { safeParse } from "../../../lib/schemas.js";
import {
  catchUnrecognizedEnum,
  OpenEnum,
  Unrecognized,
} from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type DurationUnset = {};

/**
 * The last applied state of the app access request defaults.
 */
export const State = {
  AppAccessRequestDefaultsLastApplyStateUnspecified:
    "APP_ACCESS_REQUEST_DEFAULTS_LAST_APPLY_STATE_UNSPECIFIED",
  AppAccessRequestDefaultsLastApplyStateRunning:
    "APP_ACCESS_REQUEST_DEFAULTS_LAST_APPLY_STATE_RUNNING",
  AppAccessRequestDefaultsLastApplyStateSuccess:
    "APP_ACCESS_REQUEST_DEFAULTS_LAST_APPLY_STATE_SUCCESS",
  AppAccessRequestDefaultsLastApplyStateFailed:
    "APP_ACCESS_REQUEST_DEFAULTS_LAST_APPLY_STATE_FAILED",
  AppAccessRequestDefaultsLastApplyStateCanceling:
    "APP_ACCESS_REQUEST_DEFAULTS_LAST_APPLY_STATE_CANCELING",
  AppAccessRequestDefaultsLastApplyStateCancelSuccess:
    "APP_ACCESS_REQUEST_DEFAULTS_LAST_APPLY_STATE_CANCEL_SUCCESS",
  AppAccessRequestDefaultsLastApplyStateCancelError:
    "APP_ACCESS_REQUEST_DEFAULTS_LAST_APPLY_STATE_CANCEL_ERROR",
} as const;
/**
 * The last applied state of the app access request defaults.
 */
export type State = OpenEnum<typeof State>;

/**
 * The AppAccessRequestDefaults message.
 *
 * @remarks
 *
 * This message contains a oneof named max_grant_duration. Only a single field of the following list may be set at a time:
 *   - durationUnset
 *   - durationGrant
 */
export type AppAccessRequestDefaults = {
  /**
   * The app id for the app access request rule
   */
  appId?: string | null | undefined;
  /**
   * The request catalog ids for the app access request rule.
   */
  catalogIds?: Array<string> | null | undefined;
  /**
   * If true the app level request configuration will be applied to specified resource types.
   */
  defaultsEnabled?: boolean | null | undefined;
  durationGrant?: string | null | undefined;
  durationUnset?: DurationUnset | null | undefined;
  /**
   * If emergency grants are enabled for this app access request rule.
   */
  emergencyGrantEnabled?: boolean | null | undefined;
  /**
   * The policy id for the emergency grant policy.
   */
  emergencyGrantPolicyId?: string | null | undefined;
  /**
   * The requestPolicyId field.
   */
  requestPolicyId?: string | null | undefined;
  /**
   * The app resource type ids for which the app access request defaults are applied.
   */
  resourceTypeIds?: Array<string> | null | undefined;
  /**
   * The last applied state of the app access request defaults.
   */
  state?: State | null | undefined;
};

/**
 * The AppAccessRequestDefaults message.
 *
 * @remarks
 *
 * This message contains a oneof named max_grant_duration. Only a single field of the following list may be set at a time:
 *   - durationUnset
 *   - durationGrant
 */
export type AppAccessRequestDefaults1 = {
  /**
   * The request catalog ids for the app access request rule.
   */
  catalogIds?: Array<string> | null | undefined;
  /**
   * If true the app level request configuration will be applied to specified resource types.
   */
  defaultsEnabled?: boolean | null | undefined;
  durationGrant?: string | null | undefined;
  durationUnset?: DurationUnset | null | undefined;
  /**
   * If emergency grants are enabled for this app access request rule.
   */
  emergencyGrantEnabled?: boolean | null | undefined;
  /**
   * The policy id for the emergency grant policy.
   */
  emergencyGrantPolicyId?: string | null | undefined;
  /**
   * The requestPolicyId field.
   */
  requestPolicyId?: string | null | undefined;
  /**
   * The app resource type ids for which the app access request defaults are applied.
   */
  resourceTypeIds?: Array<string> | null | undefined;
  /**
   * The last applied state of the app access request defaults.
   */
  state?: State | null | undefined;
};

/** @internal */
export const DurationUnset$inboundSchema: z.ZodType<
  DurationUnset,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type DurationUnset$Outbound = {};

/** @internal */
export const DurationUnset$outboundSchema: z.ZodType<
  DurationUnset$Outbound,
  z.ZodTypeDef,
  DurationUnset
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DurationUnset$ {
  /** @deprecated use `DurationUnset$inboundSchema` instead. */
  export const inboundSchema = DurationUnset$inboundSchema;
  /** @deprecated use `DurationUnset$outboundSchema` instead. */
  export const outboundSchema = DurationUnset$outboundSchema;
  /** @deprecated use `DurationUnset$Outbound` instead. */
  export type Outbound = DurationUnset$Outbound;
}

export function durationUnsetToJSON(durationUnset: DurationUnset): string {
  return JSON.stringify(DurationUnset$outboundSchema.parse(durationUnset));
}

export function durationUnsetFromJSON(
  jsonString: string,
): SafeParseResult<DurationUnset, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DurationUnset$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DurationUnset' from JSON`,
  );
}

/** @internal */
export const State$inboundSchema: z.ZodType<State, z.ZodTypeDef, unknown> = z
  .union([
    z.nativeEnum(State),
    z.string().transform(catchUnrecognizedEnum),
  ]);

/** @internal */
export const State$outboundSchema: z.ZodType<State, z.ZodTypeDef, State> = z
  .union([
    z.nativeEnum(State),
    z.string().and(z.custom<Unrecognized<string>>()),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace State$ {
  /** @deprecated use `State$inboundSchema` instead. */
  export const inboundSchema = State$inboundSchema;
  /** @deprecated use `State$outboundSchema` instead. */
  export const outboundSchema = State$outboundSchema;
}

/** @internal */
export const AppAccessRequestDefaults$inboundSchema: z.ZodType<
  AppAccessRequestDefaults,
  z.ZodTypeDef,
  unknown
> = z.object({
  appId: z.nullable(z.string()).optional(),
  catalogIds: z.nullable(z.array(z.string())).optional(),
  defaultsEnabled: z.nullable(z.boolean()).optional(),
  durationGrant: z.nullable(z.string()).optional(),
  durationUnset: z.nullable(z.lazy(() => DurationUnset$inboundSchema))
    .optional(),
  emergencyGrantEnabled: z.nullable(z.boolean()).optional(),
  emergencyGrantPolicyId: z.nullable(z.string()).optional(),
  requestPolicyId: z.nullable(z.string()).optional(),
  resourceTypeIds: z.nullable(z.array(z.string())).optional(),
  state: z.nullable(State$inboundSchema).optional(),
});

/** @internal */
export type AppAccessRequestDefaults$Outbound = {
  appId?: string | null | undefined;
  catalogIds?: Array<string> | null | undefined;
  defaultsEnabled?: boolean | null | undefined;
  durationGrant?: string | null | undefined;
  durationUnset?: DurationUnset$Outbound | null | undefined;
  emergencyGrantEnabled?: boolean | null | undefined;
  emergencyGrantPolicyId?: string | null | undefined;
  requestPolicyId?: string | null | undefined;
  resourceTypeIds?: Array<string> | null | undefined;
  state?: string | null | undefined;
};

/** @internal */
export const AppAccessRequestDefaults$outboundSchema: z.ZodType<
  AppAccessRequestDefaults$Outbound,
  z.ZodTypeDef,
  AppAccessRequestDefaults
> = z.object({
  appId: z.nullable(z.string()).optional(),
  catalogIds: z.nullable(z.array(z.string())).optional(),
  defaultsEnabled: z.nullable(z.boolean()).optional(),
  durationGrant: z.nullable(z.string()).optional(),
  durationUnset: z.nullable(z.lazy(() => DurationUnset$outboundSchema))
    .optional(),
  emergencyGrantEnabled: z.nullable(z.boolean()).optional(),
  emergencyGrantPolicyId: z.nullable(z.string()).optional(),
  requestPolicyId: z.nullable(z.string()).optional(),
  resourceTypeIds: z.nullable(z.array(z.string())).optional(),
  state: z.nullable(State$outboundSchema).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppAccessRequestDefaults$ {
  /** @deprecated use `AppAccessRequestDefaults$inboundSchema` instead. */
  export const inboundSchema = AppAccessRequestDefaults$inboundSchema;
  /** @deprecated use `AppAccessRequestDefaults$outboundSchema` instead. */
  export const outboundSchema = AppAccessRequestDefaults$outboundSchema;
  /** @deprecated use `AppAccessRequestDefaults$Outbound` instead. */
  export type Outbound = AppAccessRequestDefaults$Outbound;
}

export function appAccessRequestDefaultsToJSON(
  appAccessRequestDefaults: AppAccessRequestDefaults,
): string {
  return JSON.stringify(
    AppAccessRequestDefaults$outboundSchema.parse(appAccessRequestDefaults),
  );
}

export function appAccessRequestDefaultsFromJSON(
  jsonString: string,
): SafeParseResult<AppAccessRequestDefaults, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => AppAccessRequestDefaults$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'AppAccessRequestDefaults' from JSON`,
  );
}

/** @internal */
export const AppAccessRequestDefaults1$inboundSchema: z.ZodType<
  AppAccessRequestDefaults1,
  z.ZodTypeDef,
  unknown
> = z.object({
  catalogIds: z.nullable(z.array(z.string())).optional(),
  defaultsEnabled: z.nullable(z.boolean()).optional(),
  durationGrant: z.nullable(z.string()).optional(),
  durationUnset: z.nullable(z.lazy(() => DurationUnset$inboundSchema))
    .optional(),
  emergencyGrantEnabled: z.nullable(z.boolean()).optional(),
  emergencyGrantPolicyId: z.nullable(z.string()).optional(),
  requestPolicyId: z.nullable(z.string()).optional(),
  resourceTypeIds: z.nullable(z.array(z.string())).optional(),
  state: z.nullable(State$inboundSchema).optional(),
});

/** @internal */
export type AppAccessRequestDefaults1$Outbound = {
  catalogIds?: Array<string> | null | undefined;
  defaultsEnabled?: boolean | null | undefined;
  durationGrant?: string | null | undefined;
  durationUnset?: DurationUnset$Outbound | null | undefined;
  emergencyGrantEnabled?: boolean | null | undefined;
  emergencyGrantPolicyId?: string | null | undefined;
  requestPolicyId?: string | null | undefined;
  resourceTypeIds?: Array<string> | null | undefined;
  state?: string | null | undefined;
};

/** @internal */
export const AppAccessRequestDefaults1$outboundSchema: z.ZodType<
  AppAccessRequestDefaults1$Outbound,
  z.ZodTypeDef,
  AppAccessRequestDefaults1
> = z.object({
  catalogIds: z.nullable(z.array(z.string())).optional(),
  defaultsEnabled: z.nullable(z.boolean()).optional(),
  durationGrant: z.nullable(z.string()).optional(),
  durationUnset: z.nullable(z.lazy(() => DurationUnset$outboundSchema))
    .optional(),
  emergencyGrantEnabled: z.nullable(z.boolean()).optional(),
  emergencyGrantPolicyId: z.nullable(z.string()).optional(),
  requestPolicyId: z.nullable(z.string()).optional(),
  resourceTypeIds: z.nullable(z.array(z.string())).optional(),
  state: z.nullable(State$outboundSchema).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppAccessRequestDefaults1$ {
  /** @deprecated use `AppAccessRequestDefaults1$inboundSchema` instead. */
  export const inboundSchema = AppAccessRequestDefaults1$inboundSchema;
  /** @deprecated use `AppAccessRequestDefaults1$outboundSchema` instead. */
  export const outboundSchema = AppAccessRequestDefaults1$outboundSchema;
  /** @deprecated use `AppAccessRequestDefaults1$Outbound` instead. */
  export type Outbound = AppAccessRequestDefaults1$Outbound;
}

export function appAccessRequestDefaults1ToJSON(
  appAccessRequestDefaults1: AppAccessRequestDefaults1,
): string {
  return JSON.stringify(
    AppAccessRequestDefaults1$outboundSchema.parse(appAccessRequestDefaults1),
  );
}

export function appAccessRequestDefaults1FromJSON(
  jsonString: string,
): SafeParseResult<AppAccessRequestDefaults1, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => AppAccessRequestDefaults1$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'AppAccessRequestDefaults1' from JSON`,
  );
}
