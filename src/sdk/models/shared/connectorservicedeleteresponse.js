/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
/** @internal */
export const ConnectorServiceDeleteResponse$inboundSchema = z.object({});
/** @internal */
export const ConnectorServiceDeleteResponse$outboundSchema = z.object({});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ConnectorServiceDeleteResponse$;
(function (ConnectorServiceDeleteResponse$) {
    /** @deprecated use `ConnectorServiceDeleteResponse$inboundSchema` instead. */
    ConnectorServiceDeleteResponse$.inboundSchema = ConnectorServiceDeleteResponse$inboundSchema;
    /** @deprecated use `ConnectorServiceDeleteResponse$outboundSchema` instead. */
    ConnectorServiceDeleteResponse$.outboundSchema = ConnectorServiceDeleteResponse$outboundSchema;
})(ConnectorServiceDeleteResponse$ || (ConnectorServiceDeleteResponse$ = {}));
export function connectorServiceDeleteResponseToJSON(connectorServiceDeleteResponse) {
    return JSON.stringify(ConnectorServiceDeleteResponse$outboundSchema.parse(connectorServiceDeleteResponse));
}
export function connectorServiceDeleteResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => ConnectorServiceDeleteResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ConnectorServiceDeleteResponse' from JSON`);
}
