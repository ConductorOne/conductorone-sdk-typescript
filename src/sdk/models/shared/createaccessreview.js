/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { UserRef$inboundSchema, UserRef$outboundSchema, } from "./userref.js";
/** @internal */
export const CreateAccessReview$inboundSchema = z.object({
    accessReviewTemplateCel: z.nullable(z.string()).optional(),
    accessReviewTemplateId: z.nullable(z.string()).optional(),
    campaignName: z.nullable(z.string()).optional(),
    useSubjectUser: z.nullable(z.boolean()).optional(),
    userIdsCel: z.nullable(z.string()).optional(),
    userRefs: z.nullable(z.array(UserRef$inboundSchema)).optional(),
});
/** @internal */
export const CreateAccessReview$outboundSchema = z.object({
    accessReviewTemplateCel: z.nullable(z.string()).optional(),
    accessReviewTemplateId: z.nullable(z.string()).optional(),
    campaignName: z.nullable(z.string()).optional(),
    useSubjectUser: z.nullable(z.boolean()).optional(),
    userIdsCel: z.nullable(z.string()).optional(),
    userRefs: z.nullable(z.array(UserRef$outboundSchema)).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateAccessReview$;
(function (CreateAccessReview$) {
    /** @deprecated use `CreateAccessReview$inboundSchema` instead. */
    CreateAccessReview$.inboundSchema = CreateAccessReview$inboundSchema;
    /** @deprecated use `CreateAccessReview$outboundSchema` instead. */
    CreateAccessReview$.outboundSchema = CreateAccessReview$outboundSchema;
})(CreateAccessReview$ || (CreateAccessReview$ = {}));
export function createAccessReviewToJSON(createAccessReview) {
    return JSON.stringify(CreateAccessReview$outboundSchema.parse(createAccessReview));
}
export function createAccessReviewFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CreateAccessReview$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CreateAccessReview' from JSON`);
}
