/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { FunctionT$inboundSchema, FunctionT$outboundSchema, } from "./function.js";
import { FunctionCommit$inboundSchema, FunctionCommit$outboundSchema, } from "./functioncommit.js";
/** @internal */
export const FunctionsServiceCreateFunctionResponse$inboundSchema = z.object({
    commit: z.nullable(FunctionCommit$inboundSchema).optional(),
    function: z.nullable(FunctionT$inboundSchema).optional(),
});
/** @internal */
export const FunctionsServiceCreateFunctionResponse$outboundSchema = z.object({
    commit: z.nullable(FunctionCommit$outboundSchema).optional(),
    function: z.nullable(FunctionT$outboundSchema).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var FunctionsServiceCreateFunctionResponse$;
(function (FunctionsServiceCreateFunctionResponse$) {
    /** @deprecated use `FunctionsServiceCreateFunctionResponse$inboundSchema` instead. */
    FunctionsServiceCreateFunctionResponse$.inboundSchema = FunctionsServiceCreateFunctionResponse$inboundSchema;
    /** @deprecated use `FunctionsServiceCreateFunctionResponse$outboundSchema` instead. */
    FunctionsServiceCreateFunctionResponse$.outboundSchema = FunctionsServiceCreateFunctionResponse$outboundSchema;
})(FunctionsServiceCreateFunctionResponse$ || (FunctionsServiceCreateFunctionResponse$ = {}));
export function functionsServiceCreateFunctionResponseToJSON(functionsServiceCreateFunctionResponse) {
    return JSON.stringify(FunctionsServiceCreateFunctionResponse$outboundSchema.parse(functionsServiceCreateFunctionResponse));
}
export function functionsServiceCreateFunctionResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => FunctionsServiceCreateFunctionResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'FunctionsServiceCreateFunctionResponse' from JSON`);
}
