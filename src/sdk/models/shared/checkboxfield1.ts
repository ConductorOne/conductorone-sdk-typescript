/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * The CheckboxField message.
 */
export type CheckboxField1 = {
  /**
   * The checked field.
   */
  checked?: boolean | null | undefined;
};

/** @internal */
export const CheckboxField1$inboundSchema: z.ZodType<
  CheckboxField1,
  z.ZodTypeDef,
  unknown
> = z.object({
  checked: z.nullable(z.boolean()).optional(),
});

/** @internal */
export type CheckboxField1$Outbound = {
  checked?: boolean | null | undefined;
};

/** @internal */
export const CheckboxField1$outboundSchema: z.ZodType<
  CheckboxField1$Outbound,
  z.ZodTypeDef,
  CheckboxField1
> = z.object({
  checked: z.nullable(z.boolean()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CheckboxField1$ {
  /** @deprecated use `CheckboxField1$inboundSchema` instead. */
  export const inboundSchema = CheckboxField1$inboundSchema;
  /** @deprecated use `CheckboxField1$outboundSchema` instead. */
  export const outboundSchema = CheckboxField1$outboundSchema;
  /** @deprecated use `CheckboxField1$Outbound` instead. */
  export type Outbound = CheckboxField1$Outbound;
}

export function checkboxField1ToJSON(checkboxField1: CheckboxField1): string {
  return JSON.stringify(CheckboxField1$outboundSchema.parse(checkboxField1));
}

export function checkboxField1FromJSON(
  jsonString: string,
): SafeParseResult<CheckboxField1, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CheckboxField1$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CheckboxField1' from JSON`,
  );
}
