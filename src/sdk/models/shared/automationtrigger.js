/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { AppUserCreatedTrigger$inboundSchema, AppUserCreatedTrigger$outboundSchema, } from "./appusercreatedtrigger.js";
import { AppUserUpdatedTrigger$inboundSchema, AppUserUpdatedTrigger$outboundSchema, } from "./appuserupdatedtrigger.js";
import { FormTrigger$inboundSchema, FormTrigger$outboundSchema, } from "./formtrigger.js";
import { GrantDeletedTrigger$inboundSchema, GrantDeletedTrigger$outboundSchema, } from "./grantdeletedtrigger.js";
import { GrantFoundTrigger$inboundSchema, GrantFoundTrigger$outboundSchema, } from "./grantfoundtrigger.js";
import { ManualAutomationTrigger$inboundSchema, ManualAutomationTrigger$outboundSchema, } from "./manualautomationtrigger.js";
import { ScheduleTrigger$inboundSchema, ScheduleTrigger$outboundSchema, } from "./scheduletrigger.js";
import { UsageBasedRevocationTrigger$inboundSchema, UsageBasedRevocationTrigger$outboundSchema, } from "./usagebasedrevocationtrigger.js";
import { UserCreatedTrigger$inboundSchema, UserCreatedTrigger$outboundSchema, } from "./usercreatedtrigger.js";
import { UserProfileChangeTrigger$inboundSchema, UserProfileChangeTrigger$outboundSchema, } from "./userprofilechangetrigger.js";
import { WebhookAutomationTrigger$inboundSchema, WebhookAutomationTrigger$outboundSchema, } from "./webhookautomationtrigger.js";
/** @internal */
export const AutomationTrigger$inboundSchema = z.object({
    appUserCreated: z.nullable(AppUserCreatedTrigger$inboundSchema).optional(),
    appUserUpdated: z.nullable(AppUserUpdatedTrigger$inboundSchema).optional(),
    form: z.nullable(FormTrigger$inboundSchema).optional(),
    grantDeleted: z.nullable(GrantDeletedTrigger$inboundSchema).optional(),
    grantFound: z.nullable(GrantFoundTrigger$inboundSchema).optional(),
    manual: z.nullable(ManualAutomationTrigger$inboundSchema).optional(),
    schedule: z.nullable(ScheduleTrigger$inboundSchema).optional(),
    usageBasedRevocation: z.nullable(UsageBasedRevocationTrigger$inboundSchema)
        .optional(),
    userCreated: z.nullable(UserCreatedTrigger$inboundSchema).optional(),
    userProfileChange: z.nullable(UserProfileChangeTrigger$inboundSchema)
        .optional(),
    webhook: z.nullable(WebhookAutomationTrigger$inboundSchema).optional(),
});
/** @internal */
export const AutomationTrigger$outboundSchema = z.object({
    appUserCreated: z.nullable(AppUserCreatedTrigger$outboundSchema).optional(),
    appUserUpdated: z.nullable(AppUserUpdatedTrigger$outboundSchema).optional(),
    form: z.nullable(FormTrigger$outboundSchema).optional(),
    grantDeleted: z.nullable(GrantDeletedTrigger$outboundSchema).optional(),
    grantFound: z.nullable(GrantFoundTrigger$outboundSchema).optional(),
    manual: z.nullable(ManualAutomationTrigger$outboundSchema).optional(),
    schedule: z.nullable(ScheduleTrigger$outboundSchema).optional(),
    usageBasedRevocation: z.nullable(UsageBasedRevocationTrigger$outboundSchema)
        .optional(),
    userCreated: z.nullable(UserCreatedTrigger$outboundSchema).optional(),
    userProfileChange: z.nullable(UserProfileChangeTrigger$outboundSchema)
        .optional(),
    webhook: z.nullable(WebhookAutomationTrigger$outboundSchema).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var AutomationTrigger$;
(function (AutomationTrigger$) {
    /** @deprecated use `AutomationTrigger$inboundSchema` instead. */
    AutomationTrigger$.inboundSchema = AutomationTrigger$inboundSchema;
    /** @deprecated use `AutomationTrigger$outboundSchema` instead. */
    AutomationTrigger$.outboundSchema = AutomationTrigger$outboundSchema;
})(AutomationTrigger$ || (AutomationTrigger$ = {}));
export function automationTriggerToJSON(automationTrigger) {
    return JSON.stringify(AutomationTrigger$outboundSchema.parse(automationTrigger));
}
export function automationTriggerFromJSON(jsonString) {
    return safeParse(jsonString, (x) => AutomationTrigger$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'AutomationTrigger' from JSON`);
}
