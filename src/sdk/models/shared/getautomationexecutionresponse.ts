/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  AutomationExecution,
  AutomationExecution$inboundSchema,
  AutomationExecution$Outbound,
  AutomationExecution$outboundSchema,
} from "./automationexecution.js";

/**
 * The GetAutomationExecutionResponse message.
 */
export type GetAutomationExecutionResponse = {
  automationExecution?: AutomationExecution | null | undefined;
};

/** @internal */
export const GetAutomationExecutionResponse$inboundSchema: z.ZodType<
  GetAutomationExecutionResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  automationExecution: z.nullable(AutomationExecution$inboundSchema).optional(),
});

/** @internal */
export type GetAutomationExecutionResponse$Outbound = {
  automationExecution?: AutomationExecution$Outbound | null | undefined;
};

/** @internal */
export const GetAutomationExecutionResponse$outboundSchema: z.ZodType<
  GetAutomationExecutionResponse$Outbound,
  z.ZodTypeDef,
  GetAutomationExecutionResponse
> = z.object({
  automationExecution: z.nullable(AutomationExecution$outboundSchema)
    .optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetAutomationExecutionResponse$ {
  /** @deprecated use `GetAutomationExecutionResponse$inboundSchema` instead. */
  export const inboundSchema = GetAutomationExecutionResponse$inboundSchema;
  /** @deprecated use `GetAutomationExecutionResponse$outboundSchema` instead. */
  export const outboundSchema = GetAutomationExecutionResponse$outboundSchema;
  /** @deprecated use `GetAutomationExecutionResponse$Outbound` instead. */
  export type Outbound = GetAutomationExecutionResponse$Outbound;
}

export function getAutomationExecutionResponseToJSON(
  getAutomationExecutionResponse: GetAutomationExecutionResponse,
): string {
  return JSON.stringify(
    GetAutomationExecutionResponse$outboundSchema.parse(
      getAutomationExecutionResponse,
    ),
  );
}

export function getAutomationExecutionResponseFromJSON(
  jsonString: string,
): SafeParseResult<GetAutomationExecutionResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetAutomationExecutionResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetAutomationExecutionResponse' from JSON`,
  );
}
