/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { User$inboundSchema, User$outboundSchema, } from "./user.js";
/** @internal */
export const ListAppOwnersResponse$inboundSchema = z.object({
    list: z.nullable(z.array(User$inboundSchema)).optional(),
    nextPageToken: z.nullable(z.string()).optional(),
});
/** @internal */
export const ListAppOwnersResponse$outboundSchema = z.object({
    list: z.nullable(z.array(User$outboundSchema)).optional(),
    nextPageToken: z.nullable(z.string()).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ListAppOwnersResponse$;
(function (ListAppOwnersResponse$) {
    /** @deprecated use `ListAppOwnersResponse$inboundSchema` instead. */
    ListAppOwnersResponse$.inboundSchema = ListAppOwnersResponse$inboundSchema;
    /** @deprecated use `ListAppOwnersResponse$outboundSchema` instead. */
    ListAppOwnersResponse$.outboundSchema = ListAppOwnersResponse$outboundSchema;
})(ListAppOwnersResponse$ || (ListAppOwnersResponse$ = {}));
export function listAppOwnersResponseToJSON(listAppOwnersResponse) {
    return JSON.stringify(ListAppOwnersResponse$outboundSchema.parse(listAppOwnersResponse));
}
export function listAppOwnersResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => ListAppOwnersResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ListAppOwnersResponse' from JSON`);
}
