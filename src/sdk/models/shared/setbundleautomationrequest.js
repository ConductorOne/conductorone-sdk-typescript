/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { BundleAutomationRuleEntitlement$inboundSchema, BundleAutomationRuleEntitlement$outboundSchema, } from "./bundleautomationruleentitlement.js";
/** @internal */
export const SetBundleAutomationRequest$inboundSchema = z.object({
    createTasks: z.nullable(z.boolean()).optional(),
    disableCircuitBreaker: z.nullable(z.boolean()).optional(),
    enabled: z.nullable(z.boolean()).optional(),
    entitlements: z.nullable(BundleAutomationRuleEntitlement$inboundSchema)
        .optional(),
});
/** @internal */
export const SetBundleAutomationRequest$outboundSchema = z.object({
    createTasks: z.nullable(z.boolean()).optional(),
    disableCircuitBreaker: z.nullable(z.boolean()).optional(),
    enabled: z.nullable(z.boolean()).optional(),
    entitlements: z.nullable(BundleAutomationRuleEntitlement$outboundSchema)
        .optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var SetBundleAutomationRequest$;
(function (SetBundleAutomationRequest$) {
    /** @deprecated use `SetBundleAutomationRequest$inboundSchema` instead. */
    SetBundleAutomationRequest$.inboundSchema = SetBundleAutomationRequest$inboundSchema;
    /** @deprecated use `SetBundleAutomationRequest$outboundSchema` instead. */
    SetBundleAutomationRequest$.outboundSchema = SetBundleAutomationRequest$outboundSchema;
})(SetBundleAutomationRequest$ || (SetBundleAutomationRequest$ = {}));
export function setBundleAutomationRequestToJSON(setBundleAutomationRequest) {
    return JSON.stringify(SetBundleAutomationRequest$outboundSchema.parse(setBundleAutomationRequest));
}
export function setBundleAutomationRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => SetBundleAutomationRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'SetBundleAutomationRequest' from JSON`);
}
