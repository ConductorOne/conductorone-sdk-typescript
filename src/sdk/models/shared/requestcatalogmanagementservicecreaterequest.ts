/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import {
  catchUnrecognizedEnum,
  OpenEnum,
  Unrecognized,
} from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  RequestCatalogExpandMask,
  RequestCatalogExpandMask$inboundSchema,
  RequestCatalogExpandMask$Outbound,
  RequestCatalogExpandMask$outboundSchema,
} from "./requestcatalogexpandmask.js";

/**
 * Defines how to handle the request policies of the entitlements in the catalog during enrollment.
 */
export const RequestCatalogManagementServiceCreateRequestEnrollmentBehavior = {
  RequestCatalogEnrollmentBehaviorUnspecified:
    "REQUEST_CATALOG_ENROLLMENT_BEHAVIOR_UNSPECIFIED",
  RequestCatalogEnrollmentBehaviorBypassEntitlementRequestPolicy:
    "REQUEST_CATALOG_ENROLLMENT_BEHAVIOR_BYPASS_ENTITLEMENT_REQUEST_POLICY",
  RequestCatalogEnrollmentBehaviorEnforceEntitlementRequestPolicy:
    "REQUEST_CATALOG_ENROLLMENT_BEHAVIOR_ENFORCE_ENTITLEMENT_REQUEST_POLICY",
} as const;
/**
 * Defines how to handle the request policies of the entitlements in the catalog during enrollment.
 */
export type RequestCatalogManagementServiceCreateRequestEnrollmentBehavior =
  OpenEnum<
    typeof RequestCatalogManagementServiceCreateRequestEnrollmentBehavior
  >;

/**
 * Defines how to handle the revocation of the entitlements in the catalog during unenrollment.
 */
export const RequestCatalogManagementServiceCreateRequestUnenrollmentBehavior =
  {
    RequestCatalogUnenrollmentBehaviorUnspecified:
      "REQUEST_CATALOG_UNENROLLMENT_BEHAVIOR_UNSPECIFIED",
    RequestCatalogUnenrollmentBehaviorLeaveAccessAsIs:
      "REQUEST_CATALOG_UNENROLLMENT_BEHAVIOR_LEAVE_ACCESS_AS_IS",
    RequestCatalogUnenrollmentBehaviorRevokeAll:
      "REQUEST_CATALOG_UNENROLLMENT_BEHAVIOR_REVOKE_ALL",
    RequestCatalogUnenrollmentBehaviorRevokeUnjustified:
      "REQUEST_CATALOG_UNENROLLMENT_BEHAVIOR_REVOKE_UNJUSTIFIED",
  } as const;
/**
 * Defines how to handle the revocation of the entitlements in the catalog during unenrollment.
 */
export type RequestCatalogManagementServiceCreateRequestUnenrollmentBehavior =
  OpenEnum<
    typeof RequestCatalogManagementServiceCreateRequestUnenrollmentBehavior
  >;

/**
 * Defines how to handle the revoke policies of the entitlements in the catalog during unenrollment.
 */
export const RequestCatalogManagementServiceCreateRequestUnenrollmentEntitlementBehavior =
  {
    RequestCatalogUnenrollmentEntitlementBehaviorUnspecified:
      "REQUEST_CATALOG_UNENROLLMENT_ENTITLEMENT_BEHAVIOR_UNSPECIFIED",
    RequestCatalogUnenrollmentEntitlementBehaviorBypass:
      "REQUEST_CATALOG_UNENROLLMENT_ENTITLEMENT_BEHAVIOR_BYPASS",
    RequestCatalogUnenrollmentEntitlementBehaviorEnforce:
      "REQUEST_CATALOG_UNENROLLMENT_ENTITLEMENT_BEHAVIOR_ENFORCE",
  } as const;
/**
 * Defines how to handle the revoke policies of the entitlements in the catalog during unenrollment.
 */
export type RequestCatalogManagementServiceCreateRequestUnenrollmentEntitlementBehavior =
  OpenEnum<
    typeof RequestCatalogManagementServiceCreateRequestUnenrollmentEntitlementBehavior
  >;

/**
 * Create a request catalog.
 */
export type RequestCatalogManagementServiceCreateRequest = {
  /**
   * The description of the new request catalog.
   */
  description?: string | null | undefined;
  /**
   * The display name of the new request catalog.
   */
  displayName: string;
  /**
   * Defines how to handle the request policies of the entitlements in the catalog during enrollment.
   */
  enrollmentBehavior?:
    | RequestCatalogManagementServiceCreateRequestEnrollmentBehavior
    | null
    | undefined;
  expandMask?: RequestCatalogExpandMask | null | undefined;
  /**
   * Whether or not the new catalog should be created as published.
   */
  published?: boolean | null | undefined;
  /**
   * Whether all the entitlements in the catalog can be requests at once. Your tenant must have the bundles feature to use this.
   */
  requestBundle?: boolean | null | undefined;
  /**
   * Defines how to handle the revocation of the entitlements in the catalog during unenrollment.
   */
  unenrollmentBehavior?:
    | RequestCatalogManagementServiceCreateRequestUnenrollmentBehavior
    | null
    | undefined;
  /**
   * Defines how to handle the revoke policies of the entitlements in the catalog during unenrollment.
   */
  unenrollmentEntitlementBehavior?:
    | RequestCatalogManagementServiceCreateRequestUnenrollmentEntitlementBehavior
    | null
    | undefined;
  /**
   * Whether or not the new catalog is visible to everyone by default.
   */
  visibleToEveryone?: boolean | null | undefined;
};

/** @internal */
export const RequestCatalogManagementServiceCreateRequestEnrollmentBehavior$inboundSchema:
  z.ZodType<
    RequestCatalogManagementServiceCreateRequestEnrollmentBehavior,
    z.ZodTypeDef,
    unknown
  > = z
    .union([
      z.nativeEnum(
        RequestCatalogManagementServiceCreateRequestEnrollmentBehavior,
      ),
      z.string().transform(catchUnrecognizedEnum),
    ]);

/** @internal */
export const RequestCatalogManagementServiceCreateRequestEnrollmentBehavior$outboundSchema:
  z.ZodType<
    RequestCatalogManagementServiceCreateRequestEnrollmentBehavior,
    z.ZodTypeDef,
    RequestCatalogManagementServiceCreateRequestEnrollmentBehavior
  > = z.union([
    z.nativeEnum(
      RequestCatalogManagementServiceCreateRequestEnrollmentBehavior,
    ),
    z.string().and(z.custom<Unrecognized<string>>()),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RequestCatalogManagementServiceCreateRequestEnrollmentBehavior$ {
  /** @deprecated use `RequestCatalogManagementServiceCreateRequestEnrollmentBehavior$inboundSchema` instead. */
  export const inboundSchema =
    RequestCatalogManagementServiceCreateRequestEnrollmentBehavior$inboundSchema;
  /** @deprecated use `RequestCatalogManagementServiceCreateRequestEnrollmentBehavior$outboundSchema` instead. */
  export const outboundSchema =
    RequestCatalogManagementServiceCreateRequestEnrollmentBehavior$outboundSchema;
}

/** @internal */
export const RequestCatalogManagementServiceCreateRequestUnenrollmentBehavior$inboundSchema:
  z.ZodType<
    RequestCatalogManagementServiceCreateRequestUnenrollmentBehavior,
    z.ZodTypeDef,
    unknown
  > = z
    .union([
      z.nativeEnum(
        RequestCatalogManagementServiceCreateRequestUnenrollmentBehavior,
      ),
      z.string().transform(catchUnrecognizedEnum),
    ]);

/** @internal */
export const RequestCatalogManagementServiceCreateRequestUnenrollmentBehavior$outboundSchema:
  z.ZodType<
    RequestCatalogManagementServiceCreateRequestUnenrollmentBehavior,
    z.ZodTypeDef,
    RequestCatalogManagementServiceCreateRequestUnenrollmentBehavior
  > = z.union([
    z.nativeEnum(
      RequestCatalogManagementServiceCreateRequestUnenrollmentBehavior,
    ),
    z.string().and(z.custom<Unrecognized<string>>()),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RequestCatalogManagementServiceCreateRequestUnenrollmentBehavior$ {
  /** @deprecated use `RequestCatalogManagementServiceCreateRequestUnenrollmentBehavior$inboundSchema` instead. */
  export const inboundSchema =
    RequestCatalogManagementServiceCreateRequestUnenrollmentBehavior$inboundSchema;
  /** @deprecated use `RequestCatalogManagementServiceCreateRequestUnenrollmentBehavior$outboundSchema` instead. */
  export const outboundSchema =
    RequestCatalogManagementServiceCreateRequestUnenrollmentBehavior$outboundSchema;
}

/** @internal */
export const RequestCatalogManagementServiceCreateRequestUnenrollmentEntitlementBehavior$inboundSchema:
  z.ZodType<
    RequestCatalogManagementServiceCreateRequestUnenrollmentEntitlementBehavior,
    z.ZodTypeDef,
    unknown
  > = z
    .union([
      z.nativeEnum(
        RequestCatalogManagementServiceCreateRequestUnenrollmentEntitlementBehavior,
      ),
      z.string().transform(catchUnrecognizedEnum),
    ]);

/** @internal */
export const RequestCatalogManagementServiceCreateRequestUnenrollmentEntitlementBehavior$outboundSchema:
  z.ZodType<
    RequestCatalogManagementServiceCreateRequestUnenrollmentEntitlementBehavior,
    z.ZodTypeDef,
    RequestCatalogManagementServiceCreateRequestUnenrollmentEntitlementBehavior
  > = z.union([
    z.nativeEnum(
      RequestCatalogManagementServiceCreateRequestUnenrollmentEntitlementBehavior,
    ),
    z.string().and(z.custom<Unrecognized<string>>()),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RequestCatalogManagementServiceCreateRequestUnenrollmentEntitlementBehavior$ {
  /** @deprecated use `RequestCatalogManagementServiceCreateRequestUnenrollmentEntitlementBehavior$inboundSchema` instead. */
  export const inboundSchema =
    RequestCatalogManagementServiceCreateRequestUnenrollmentEntitlementBehavior$inboundSchema;
  /** @deprecated use `RequestCatalogManagementServiceCreateRequestUnenrollmentEntitlementBehavior$outboundSchema` instead. */
  export const outboundSchema =
    RequestCatalogManagementServiceCreateRequestUnenrollmentEntitlementBehavior$outboundSchema;
}

/** @internal */
export const RequestCatalogManagementServiceCreateRequest$inboundSchema:
  z.ZodType<
    RequestCatalogManagementServiceCreateRequest,
    z.ZodTypeDef,
    unknown
  > = z.object({
    description: z.nullable(z.string()).optional(),
    displayName: z.string(),
    enrollmentBehavior: z.nullable(
      RequestCatalogManagementServiceCreateRequestEnrollmentBehavior$inboundSchema,
    ).optional(),
    expandMask: z.nullable(RequestCatalogExpandMask$inboundSchema).optional(),
    published: z.nullable(z.boolean()).optional(),
    requestBundle: z.nullable(z.boolean()).optional(),
    unenrollmentBehavior: z.nullable(
      RequestCatalogManagementServiceCreateRequestUnenrollmentBehavior$inboundSchema,
    ).optional(),
    unenrollmentEntitlementBehavior: z.nullable(
      RequestCatalogManagementServiceCreateRequestUnenrollmentEntitlementBehavior$inboundSchema,
    ).optional(),
    visibleToEveryone: z.nullable(z.boolean()).optional(),
  });

/** @internal */
export type RequestCatalogManagementServiceCreateRequest$Outbound = {
  description?: string | null | undefined;
  displayName: string;
  enrollmentBehavior?: string | null | undefined;
  expandMask?: RequestCatalogExpandMask$Outbound | null | undefined;
  published?: boolean | null | undefined;
  requestBundle?: boolean | null | undefined;
  unenrollmentBehavior?: string | null | undefined;
  unenrollmentEntitlementBehavior?: string | null | undefined;
  visibleToEveryone?: boolean | null | undefined;
};

/** @internal */
export const RequestCatalogManagementServiceCreateRequest$outboundSchema:
  z.ZodType<
    RequestCatalogManagementServiceCreateRequest$Outbound,
    z.ZodTypeDef,
    RequestCatalogManagementServiceCreateRequest
  > = z.object({
    description: z.nullable(z.string()).optional(),
    displayName: z.string(),
    enrollmentBehavior: z.nullable(
      RequestCatalogManagementServiceCreateRequestEnrollmentBehavior$outboundSchema,
    ).optional(),
    expandMask: z.nullable(RequestCatalogExpandMask$outboundSchema).optional(),
    published: z.nullable(z.boolean()).optional(),
    requestBundle: z.nullable(z.boolean()).optional(),
    unenrollmentBehavior: z.nullable(
      RequestCatalogManagementServiceCreateRequestUnenrollmentBehavior$outboundSchema,
    ).optional(),
    unenrollmentEntitlementBehavior: z.nullable(
      RequestCatalogManagementServiceCreateRequestUnenrollmentEntitlementBehavior$outboundSchema,
    ).optional(),
    visibleToEveryone: z.nullable(z.boolean()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RequestCatalogManagementServiceCreateRequest$ {
  /** @deprecated use `RequestCatalogManagementServiceCreateRequest$inboundSchema` instead. */
  export const inboundSchema =
    RequestCatalogManagementServiceCreateRequest$inboundSchema;
  /** @deprecated use `RequestCatalogManagementServiceCreateRequest$outboundSchema` instead. */
  export const outboundSchema =
    RequestCatalogManagementServiceCreateRequest$outboundSchema;
  /** @deprecated use `RequestCatalogManagementServiceCreateRequest$Outbound` instead. */
  export type Outbound = RequestCatalogManagementServiceCreateRequest$Outbound;
}

export function requestCatalogManagementServiceCreateRequestToJSON(
  requestCatalogManagementServiceCreateRequest:
    RequestCatalogManagementServiceCreateRequest,
): string {
  return JSON.stringify(
    RequestCatalogManagementServiceCreateRequest$outboundSchema.parse(
      requestCatalogManagementServiceCreateRequest,
    ),
  );
}

export function requestCatalogManagementServiceCreateRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  RequestCatalogManagementServiceCreateRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RequestCatalogManagementServiceCreateRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RequestCatalogManagementServiceCreateRequest' from JSON`,
  );
}
