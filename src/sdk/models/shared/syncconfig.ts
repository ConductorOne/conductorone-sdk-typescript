/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * The SyncConfig message.
 */
export type SyncConfig = {
  /**
   * The syncResourceTypeIds field.
   */
  syncResourceTypeIds?: Array<string> | null | undefined;
};

/** @internal */
export const SyncConfig$inboundSchema: z.ZodType<
  SyncConfig,
  z.ZodTypeDef,
  unknown
> = z.object({
  syncResourceTypeIds: z.nullable(z.array(z.string())).optional(),
});

/** @internal */
export type SyncConfig$Outbound = {
  syncResourceTypeIds?: Array<string> | null | undefined;
};

/** @internal */
export const SyncConfig$outboundSchema: z.ZodType<
  SyncConfig$Outbound,
  z.ZodTypeDef,
  SyncConfig
> = z.object({
  syncResourceTypeIds: z.nullable(z.array(z.string())).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SyncConfig$ {
  /** @deprecated use `SyncConfig$inboundSchema` instead. */
  export const inboundSchema = SyncConfig$inboundSchema;
  /** @deprecated use `SyncConfig$outboundSchema` instead. */
  export const outboundSchema = SyncConfig$outboundSchema;
  /** @deprecated use `SyncConfig$Outbound` instead. */
  export type Outbound = SyncConfig$Outbound;
}

export function syncConfigToJSON(syncConfig: SyncConfig): string {
  return JSON.stringify(SyncConfig$outboundSchema.parse(syncConfig));
}

export function syncConfigFromJSON(
  jsonString: string,
): SafeParseResult<SyncConfig, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => SyncConfig$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'SyncConfig' from JSON`,
  );
}
