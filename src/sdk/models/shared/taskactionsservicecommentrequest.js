/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { TaskExpandMask$inboundSchema, TaskExpandMask$outboundSchema, } from "./taskexpandmask.js";
/** @internal */
export const TaskActionsServiceCommentRequest$inboundSchema = z.object({
    comment: z.nullable(z.string()).optional(),
    expandMask: z.nullable(TaskExpandMask$inboundSchema).optional(),
});
/** @internal */
export const TaskActionsServiceCommentRequest$outboundSchema = z.object({
    comment: z.nullable(z.string()).optional(),
    expandMask: z.nullable(TaskExpandMask$outboundSchema).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var TaskActionsServiceCommentRequest$;
(function (TaskActionsServiceCommentRequest$) {
    /** @deprecated use `TaskActionsServiceCommentRequest$inboundSchema` instead. */
    TaskActionsServiceCommentRequest$.inboundSchema = TaskActionsServiceCommentRequest$inboundSchema;
    /** @deprecated use `TaskActionsServiceCommentRequest$outboundSchema` instead. */
    TaskActionsServiceCommentRequest$.outboundSchema = TaskActionsServiceCommentRequest$outboundSchema;
})(TaskActionsServiceCommentRequest$ || (TaskActionsServiceCommentRequest$ = {}));
export function taskActionsServiceCommentRequestToJSON(taskActionsServiceCommentRequest) {
    return JSON.stringify(TaskActionsServiceCommentRequest$outboundSchema.parse(taskActionsServiceCommentRequest));
}
export function taskActionsServiceCommentRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => TaskActionsServiceCommentRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'TaskActionsServiceCommentRequest' from JSON`);
}
