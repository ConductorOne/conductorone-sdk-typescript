/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { WebhookListenerAuthHMAC$inboundSchema, WebhookListenerAuthHMAC$outboundSchema, } from "./webhooklistenerauthhmac.js";
import { WebhookListenerAuthJWT$inboundSchema, WebhookListenerAuthJWT$outboundSchema, } from "./webhooklistenerauthjwt.js";
/** @internal */
export const WebhookAutomationTrigger$inboundSchema = z.object({
    hmac: z.nullable(WebhookListenerAuthHMAC$inboundSchema).optional(),
    jwt: z.nullable(WebhookListenerAuthJWT$inboundSchema).optional(),
    listenerId: z.nullable(z.string()).optional(),
});
/** @internal */
export const WebhookAutomationTrigger$outboundSchema = z.object({
    hmac: z.nullable(WebhookListenerAuthHMAC$outboundSchema).optional(),
    jwt: z.nullable(WebhookListenerAuthJWT$outboundSchema).optional(),
    listenerId: z.nullable(z.string()).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var WebhookAutomationTrigger$;
(function (WebhookAutomationTrigger$) {
    /** @deprecated use `WebhookAutomationTrigger$inboundSchema` instead. */
    WebhookAutomationTrigger$.inboundSchema = WebhookAutomationTrigger$inboundSchema;
    /** @deprecated use `WebhookAutomationTrigger$outboundSchema` instead. */
    WebhookAutomationTrigger$.outboundSchema = WebhookAutomationTrigger$outboundSchema;
})(WebhookAutomationTrigger$ || (WebhookAutomationTrigger$ = {}));
export function webhookAutomationTriggerToJSON(webhookAutomationTrigger) {
    return JSON.stringify(WebhookAutomationTrigger$outboundSchema.parse(webhookAutomationTrigger));
}
export function webhookAutomationTriggerFromJSON(jsonString) {
    return safeParse(jsonString, (x) => WebhookAutomationTrigger$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'WebhookAutomationTrigger' from JSON`);
}
