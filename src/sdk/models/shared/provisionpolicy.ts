/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ConnectorProvision } from "./connectorprovision";
import { DelegatedProvision } from "./delegatedprovision";
import { ManualProvision } from "./manualprovision";
import { Expose, Type } from "class-transformer";

/**
 * The ProvisionPolicy message.
 *
 * @remarks
 *
 * This message contains a oneof named typ. Only a single field of the following list may be set at a time:
 *   - connector
 *   - manual
 *   - delegated
 *
 */
export class ProvisionPolicy extends SpeakeasyBase {
    /**
     * The ConnectorProvision message.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "connector" })
    @Type(() => ConnectorProvision)
    connectorProvision?: ConnectorProvision;

    /**
     * The DelegatedProvision message.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "delegated" })
    @Type(() => DelegatedProvision)
    delegatedProvision?: DelegatedProvision;

    /**
     * The ManualProvision message.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "manual" })
    @Type(() => ManualProvision)
    manualProvision?: ManualProvision;
}
