/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { TaskRevokeSourceExpired$inboundSchema, TaskRevokeSourceExpired$outboundSchema, } from "./taskrevokesourceexpired.js";
import { TaskRevokeSourceNonUsage$inboundSchema, TaskRevokeSourceNonUsage$outboundSchema, } from "./taskrevokesourcenonusage.js";
import { TaskRevokeSourceRequest$inboundSchema, TaskRevokeSourceRequest$outboundSchema, } from "./taskrevokesourcerequest.js";
import { TaskRevokeSourceReview$inboundSchema, TaskRevokeSourceReview$outboundSchema, } from "./taskrevokesourcereview.js";
/** @internal */
export const TaskRevokeSource$inboundSchema = z.object({
    expired: z.nullable(TaskRevokeSourceExpired$inboundSchema).optional(),
    nonUsage: z.nullable(TaskRevokeSourceNonUsage$inboundSchema).optional(),
    request: z.nullable(TaskRevokeSourceRequest$inboundSchema).optional(),
    review: z.nullable(TaskRevokeSourceReview$inboundSchema).optional(),
});
/** @internal */
export const TaskRevokeSource$outboundSchema = z.object({
    expired: z.nullable(TaskRevokeSourceExpired$outboundSchema).optional(),
    nonUsage: z.nullable(TaskRevokeSourceNonUsage$outboundSchema).optional(),
    request: z.nullable(TaskRevokeSourceRequest$outboundSchema).optional(),
    review: z.nullable(TaskRevokeSourceReview$outboundSchema).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var TaskRevokeSource$;
(function (TaskRevokeSource$) {
    /** @deprecated use `TaskRevokeSource$inboundSchema` instead. */
    TaskRevokeSource$.inboundSchema = TaskRevokeSource$inboundSchema;
    /** @deprecated use `TaskRevokeSource$outboundSchema` instead. */
    TaskRevokeSource$.outboundSchema = TaskRevokeSource$outboundSchema;
})(TaskRevokeSource$ || (TaskRevokeSource$ = {}));
export function taskRevokeSourceToJSON(taskRevokeSource) {
    return JSON.stringify(TaskRevokeSource$outboundSchema.parse(taskRevokeSource));
}
export function taskRevokeSourceFromJSON(jsonString) {
    return safeParse(jsonString, (x) => TaskRevokeSource$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'TaskRevokeSource' from JSON`);
}
