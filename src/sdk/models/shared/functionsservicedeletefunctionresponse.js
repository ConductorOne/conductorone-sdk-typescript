/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
/** @internal */
export const FunctionsServiceDeleteFunctionResponse$inboundSchema = z.object({});
/** @internal */
export const FunctionsServiceDeleteFunctionResponse$outboundSchema = z.object({});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var FunctionsServiceDeleteFunctionResponse$;
(function (FunctionsServiceDeleteFunctionResponse$) {
    /** @deprecated use `FunctionsServiceDeleteFunctionResponse$inboundSchema` instead. */
    FunctionsServiceDeleteFunctionResponse$.inboundSchema = FunctionsServiceDeleteFunctionResponse$inboundSchema;
    /** @deprecated use `FunctionsServiceDeleteFunctionResponse$outboundSchema` instead. */
    FunctionsServiceDeleteFunctionResponse$.outboundSchema = FunctionsServiceDeleteFunctionResponse$outboundSchema;
})(FunctionsServiceDeleteFunctionResponse$ || (FunctionsServiceDeleteFunctionResponse$ = {}));
export function functionsServiceDeleteFunctionResponseToJSON(functionsServiceDeleteFunctionResponse) {
    return JSON.stringify(FunctionsServiceDeleteFunctionResponse$outboundSchema.parse(functionsServiceDeleteFunctionResponse));
}
export function functionsServiceDeleteFunctionResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => FunctionsServiceDeleteFunctionResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'FunctionsServiceDeleteFunctionResponse' from JSON`);
}
