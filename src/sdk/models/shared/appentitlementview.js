/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { AppEntitlement$inboundSchema, AppEntitlement$outboundSchema, } from "./appentitlement.js";
/** @internal */
export const AppEntitlementView$inboundSchema = z.object({
    appEntitlement: z.nullable(AppEntitlement$inboundSchema).optional(),
    appPath: z.nullable(z.string()).optional(),
    appResourcePath: z.nullable(z.string()).optional(),
    appResourceTypePath: z.nullable(z.string()).optional(),
});
/** @internal */
export const AppEntitlementView$outboundSchema = z.object({
    appEntitlement: z.nullable(AppEntitlement$outboundSchema).optional(),
    appPath: z.nullable(z.string()).optional(),
    appResourcePath: z.nullable(z.string()).optional(),
    appResourceTypePath: z.nullable(z.string()).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var AppEntitlementView$;
(function (AppEntitlementView$) {
    /** @deprecated use `AppEntitlementView$inboundSchema` instead. */
    AppEntitlementView$.inboundSchema = AppEntitlementView$inboundSchema;
    /** @deprecated use `AppEntitlementView$outboundSchema` instead. */
    AppEntitlementView$.outboundSchema = AppEntitlementView$outboundSchema;
})(AppEntitlementView$ || (AppEntitlementView$ = {}));
export function appEntitlementViewToJSON(appEntitlementView) {
    return JSON.stringify(AppEntitlementView$outboundSchema.parse(appEntitlementView));
}
export function appEntitlementViewFromJSON(jsonString) {
    return safeParse(jsonString, (x) => AppEntitlementView$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'AppEntitlementView' from JSON`);
}
