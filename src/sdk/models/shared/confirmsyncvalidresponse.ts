/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * The ConfirmSyncValidResponse message.
 */
export type ConfirmSyncValidResponse = {};

/** @internal */
export const ConfirmSyncValidResponse$inboundSchema: z.ZodType<
  ConfirmSyncValidResponse,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type ConfirmSyncValidResponse$Outbound = {};

/** @internal */
export const ConfirmSyncValidResponse$outboundSchema: z.ZodType<
  ConfirmSyncValidResponse$Outbound,
  z.ZodTypeDef,
  ConfirmSyncValidResponse
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConfirmSyncValidResponse$ {
  /** @deprecated use `ConfirmSyncValidResponse$inboundSchema` instead. */
  export const inboundSchema = ConfirmSyncValidResponse$inboundSchema;
  /** @deprecated use `ConfirmSyncValidResponse$outboundSchema` instead. */
  export const outboundSchema = ConfirmSyncValidResponse$outboundSchema;
  /** @deprecated use `ConfirmSyncValidResponse$Outbound` instead. */
  export type Outbound = ConfirmSyncValidResponse$Outbound;
}

export function confirmSyncValidResponseToJSON(
  confirmSyncValidResponse: ConfirmSyncValidResponse,
): string {
  return JSON.stringify(
    ConfirmSyncValidResponse$outboundSchema.parse(confirmSyncValidResponse),
  );
}

export function confirmSyncValidResponseFromJSON(
  jsonString: string,
): SafeParseResult<ConfirmSyncValidResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ConfirmSyncValidResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ConfirmSyncValidResponse' from JSON`,
  );
}
