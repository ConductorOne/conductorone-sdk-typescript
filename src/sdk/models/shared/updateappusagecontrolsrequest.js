/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { AppUsageControls$inboundSchema, AppUsageControls$outboundSchema, } from "./appusagecontrols.js";
/** @internal */
export const UpdateAppUsageControlsRequest$inboundSchema = z.object({
    appUsageControls: z.nullable(AppUsageControls$inboundSchema).optional(),
    updateMask: z.nullable(z.string()).optional(),
});
/** @internal */
export const UpdateAppUsageControlsRequest$outboundSchema = z.object({
    appUsageControls: z.nullable(AppUsageControls$outboundSchema).optional(),
    updateMask: z.nullable(z.string()).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var UpdateAppUsageControlsRequest$;
(function (UpdateAppUsageControlsRequest$) {
    /** @deprecated use `UpdateAppUsageControlsRequest$inboundSchema` instead. */
    UpdateAppUsageControlsRequest$.inboundSchema = UpdateAppUsageControlsRequest$inboundSchema;
    /** @deprecated use `UpdateAppUsageControlsRequest$outboundSchema` instead. */
    UpdateAppUsageControlsRequest$.outboundSchema = UpdateAppUsageControlsRequest$outboundSchema;
})(UpdateAppUsageControlsRequest$ || (UpdateAppUsageControlsRequest$ = {}));
export function updateAppUsageControlsRequestToJSON(updateAppUsageControlsRequest) {
    return JSON.stringify(UpdateAppUsageControlsRequest$outboundSchema.parse(updateAppUsageControlsRequest));
}
export function updateAppUsageControlsRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => UpdateAppUsageControlsRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'UpdateAppUsageControlsRequest' from JSON`);
}
