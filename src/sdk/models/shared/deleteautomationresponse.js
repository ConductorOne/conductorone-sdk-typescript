/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
/** @internal */
export const DeleteAutomationResponse$inboundSchema = z.object({});
/** @internal */
export const DeleteAutomationResponse$outboundSchema = z.object({});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var DeleteAutomationResponse$;
(function (DeleteAutomationResponse$) {
    /** @deprecated use `DeleteAutomationResponse$inboundSchema` instead. */
    DeleteAutomationResponse$.inboundSchema = DeleteAutomationResponse$inboundSchema;
    /** @deprecated use `DeleteAutomationResponse$outboundSchema` instead. */
    DeleteAutomationResponse$.outboundSchema = DeleteAutomationResponse$outboundSchema;
})(DeleteAutomationResponse$ || (DeleteAutomationResponse$ = {}));
export function deleteAutomationResponseToJSON(deleteAutomationResponse) {
    return JSON.stringify(DeleteAutomationResponse$outboundSchema.parse(deleteAutomationResponse));
}
export function deleteAutomationResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => DeleteAutomationResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'DeleteAutomationResponse' from JSON`);
}
