/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { remap as remap$ } from "../../../lib/primitives.js";
import {
  collectExtraKeys as collectExtraKeys$,
  safeParse,
} from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  AppEntitlementProxyView,
  AppEntitlementProxyView$inboundSchema,
  AppEntitlementProxyView$Outbound,
  AppEntitlementProxyView$outboundSchema,
} from "./appentitlementproxyview.js";

/**
 * Contains an arbitrary serialized message along with a @type that describes the type of the serialized message.
 */
export type GetAppEntitlementProxyResponseExpanded = {
  /**
   * The type of the serialized message.
   */
  atType?: string | undefined;
  additionalProperties?: { [k: string]: any } | undefined;
};

/**
 * The GetAppEntitlementProxyResponse message.
 */
export type GetAppEntitlementProxyResponse = {
  appProxyEntitlementView?: AppEntitlementProxyView | null | undefined;
  /**
   * The expanded field.
   */
  expanded?: Array<GetAppEntitlementProxyResponseExpanded> | null | undefined;
};

/** @internal */
export const GetAppEntitlementProxyResponseExpanded$inboundSchema: z.ZodType<
  GetAppEntitlementProxyResponseExpanded,
  z.ZodTypeDef,
  unknown
> = collectExtraKeys$(
  z.object({
    "@type": z.string().optional(),
  }).catchall(z.any()),
  "additionalProperties",
  true,
).transform((v) => {
  return remap$(v, {
    "@type": "atType",
  });
});

/** @internal */
export type GetAppEntitlementProxyResponseExpanded$Outbound = {
  "@type"?: string | undefined;
  [additionalProperties: string]: unknown;
};

/** @internal */
export const GetAppEntitlementProxyResponseExpanded$outboundSchema: z.ZodType<
  GetAppEntitlementProxyResponseExpanded$Outbound,
  z.ZodTypeDef,
  GetAppEntitlementProxyResponseExpanded
> = z.object({
  atType: z.string().optional(),
  additionalProperties: z.record(z.any()).optional(),
}).transform((v) => {
  return {
    ...v.additionalProperties,
    ...remap$(v, {
      atType: "@type",
      additionalProperties: null,
    }),
  };
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetAppEntitlementProxyResponseExpanded$ {
  /** @deprecated use `GetAppEntitlementProxyResponseExpanded$inboundSchema` instead. */
  export const inboundSchema =
    GetAppEntitlementProxyResponseExpanded$inboundSchema;
  /** @deprecated use `GetAppEntitlementProxyResponseExpanded$outboundSchema` instead. */
  export const outboundSchema =
    GetAppEntitlementProxyResponseExpanded$outboundSchema;
  /** @deprecated use `GetAppEntitlementProxyResponseExpanded$Outbound` instead. */
  export type Outbound = GetAppEntitlementProxyResponseExpanded$Outbound;
}

export function getAppEntitlementProxyResponseExpandedToJSON(
  getAppEntitlementProxyResponseExpanded:
    GetAppEntitlementProxyResponseExpanded,
): string {
  return JSON.stringify(
    GetAppEntitlementProxyResponseExpanded$outboundSchema.parse(
      getAppEntitlementProxyResponseExpanded,
    ),
  );
}

export function getAppEntitlementProxyResponseExpandedFromJSON(
  jsonString: string,
): SafeParseResult<GetAppEntitlementProxyResponseExpanded, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      GetAppEntitlementProxyResponseExpanded$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetAppEntitlementProxyResponseExpanded' from JSON`,
  );
}

/** @internal */
export const GetAppEntitlementProxyResponse$inboundSchema: z.ZodType<
  GetAppEntitlementProxyResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  appProxyEntitlementView: z.nullable(AppEntitlementProxyView$inboundSchema)
    .optional(),
  expanded: z.nullable(
    z.array(z.lazy(() => GetAppEntitlementProxyResponseExpanded$inboundSchema)),
  ).optional(),
});

/** @internal */
export type GetAppEntitlementProxyResponse$Outbound = {
  appProxyEntitlementView?: AppEntitlementProxyView$Outbound | null | undefined;
  expanded?:
    | Array<GetAppEntitlementProxyResponseExpanded$Outbound>
    | null
    | undefined;
};

/** @internal */
export const GetAppEntitlementProxyResponse$outboundSchema: z.ZodType<
  GetAppEntitlementProxyResponse$Outbound,
  z.ZodTypeDef,
  GetAppEntitlementProxyResponse
> = z.object({
  appProxyEntitlementView: z.nullable(AppEntitlementProxyView$outboundSchema)
    .optional(),
  expanded: z.nullable(
    z.array(
      z.lazy(() => GetAppEntitlementProxyResponseExpanded$outboundSchema),
    ),
  ).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetAppEntitlementProxyResponse$ {
  /** @deprecated use `GetAppEntitlementProxyResponse$inboundSchema` instead. */
  export const inboundSchema = GetAppEntitlementProxyResponse$inboundSchema;
  /** @deprecated use `GetAppEntitlementProxyResponse$outboundSchema` instead. */
  export const outboundSchema = GetAppEntitlementProxyResponse$outboundSchema;
  /** @deprecated use `GetAppEntitlementProxyResponse$Outbound` instead. */
  export type Outbound = GetAppEntitlementProxyResponse$Outbound;
}

export function getAppEntitlementProxyResponseToJSON(
  getAppEntitlementProxyResponse: GetAppEntitlementProxyResponse,
): string {
  return JSON.stringify(
    GetAppEntitlementProxyResponse$outboundSchema.parse(
      getAppEntitlementProxyResponse,
    ),
  );
}

export function getAppEntitlementProxyResponseFromJSON(
  jsonString: string,
): SafeParseResult<GetAppEntitlementProxyResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetAppEntitlementProxyResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetAppEntitlementProxyResponse' from JSON`,
  );
}
