/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { TaskAuditViewRef$inboundSchema, TaskAuditViewRef$outboundSchema, } from "./taskauditviewref.js";
/** @internal */
export const TaskAuditListRequest$inboundSchema = z.object({
    pageSize: z.nullable(z.number().int()).optional(),
    pageToken: z.nullable(z.string()).optional(),
    refs: z.nullable(z.array(TaskAuditViewRef$inboundSchema)).optional(),
    taskId: z.nullable(z.string()).optional(),
});
/** @internal */
export const TaskAuditListRequest$outboundSchema = z.object({
    pageSize: z.nullable(z.number().int()).optional(),
    pageToken: z.nullable(z.string()).optional(),
    refs: z.nullable(z.array(TaskAuditViewRef$outboundSchema)).optional(),
    taskId: z.nullable(z.string()).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var TaskAuditListRequest$;
(function (TaskAuditListRequest$) {
    /** @deprecated use `TaskAuditListRequest$inboundSchema` instead. */
    TaskAuditListRequest$.inboundSchema = TaskAuditListRequest$inboundSchema;
    /** @deprecated use `TaskAuditListRequest$outboundSchema` instead. */
    TaskAuditListRequest$.outboundSchema = TaskAuditListRequest$outboundSchema;
})(TaskAuditListRequest$ || (TaskAuditListRequest$ = {}));
export function taskAuditListRequestToJSON(taskAuditListRequest) {
    return JSON.stringify(TaskAuditListRequest$outboundSchema.parse(taskAuditListRequest));
}
export function taskAuditListRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => TaskAuditListRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'TaskAuditListRequest' from JSON`);
}
