/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
/** @internal */
export const DeleteAppEntitlementRequest$inboundSchema = z.object({});
/** @internal */
export const DeleteAppEntitlementRequest$outboundSchema = z.object({});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var DeleteAppEntitlementRequest$;
(function (DeleteAppEntitlementRequest$) {
    /** @deprecated use `DeleteAppEntitlementRequest$inboundSchema` instead. */
    DeleteAppEntitlementRequest$.inboundSchema = DeleteAppEntitlementRequest$inboundSchema;
    /** @deprecated use `DeleteAppEntitlementRequest$outboundSchema` instead. */
    DeleteAppEntitlementRequest$.outboundSchema = DeleteAppEntitlementRequest$outboundSchema;
})(DeleteAppEntitlementRequest$ || (DeleteAppEntitlementRequest$ = {}));
export function deleteAppEntitlementRequestToJSON(deleteAppEntitlementRequest) {
    return JSON.stringify(DeleteAppEntitlementRequest$outboundSchema.parse(deleteAppEntitlementRequest));
}
export function deleteAppEntitlementRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => DeleteAppEntitlementRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'DeleteAppEntitlementRequest' from JSON`);
}
