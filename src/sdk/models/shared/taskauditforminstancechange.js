/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
/** @internal */
export const TaskAuditFormInstanceChange$inboundSchema = z.object({
    isValid: z.nullable(z.boolean()).optional(),
});
/** @internal */
export const TaskAuditFormInstanceChange$outboundSchema = z.object({
    isValid: z.nullable(z.boolean()).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var TaskAuditFormInstanceChange$;
(function (TaskAuditFormInstanceChange$) {
    /** @deprecated use `TaskAuditFormInstanceChange$inboundSchema` instead. */
    TaskAuditFormInstanceChange$.inboundSchema = TaskAuditFormInstanceChange$inboundSchema;
    /** @deprecated use `TaskAuditFormInstanceChange$outboundSchema` instead. */
    TaskAuditFormInstanceChange$.outboundSchema = TaskAuditFormInstanceChange$outboundSchema;
})(TaskAuditFormInstanceChange$ || (TaskAuditFormInstanceChange$ = {}));
export function taskAuditFormInstanceChangeToJSON(taskAuditFormInstanceChange) {
    return JSON.stringify(TaskAuditFormInstanceChange$outboundSchema.parse(taskAuditFormInstanceChange));
}
export function taskAuditFormInstanceChangeFromJSON(jsonString) {
    return safeParse(jsonString, (x) => TaskAuditFormInstanceChange$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'TaskAuditFormInstanceChange' from JSON`);
}
