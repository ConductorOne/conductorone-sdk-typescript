/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
/** @internal */
export const ConnectorServiceRotateCredentialRequest$inboundSchema = z.object({
    appId: z.nullable(z.string()).optional(),
    connectorId: z.nullable(z.string()).optional(),
});
/** @internal */
export const ConnectorServiceRotateCredentialRequest$outboundSchema = z.object({
    appId: z.nullable(z.string()).optional(),
    connectorId: z.nullable(z.string()).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ConnectorServiceRotateCredentialRequest$;
(function (ConnectorServiceRotateCredentialRequest$) {
    /** @deprecated use `ConnectorServiceRotateCredentialRequest$inboundSchema` instead. */
    ConnectorServiceRotateCredentialRequest$.inboundSchema = ConnectorServiceRotateCredentialRequest$inboundSchema;
    /** @deprecated use `ConnectorServiceRotateCredentialRequest$outboundSchema` instead. */
    ConnectorServiceRotateCredentialRequest$.outboundSchema = ConnectorServiceRotateCredentialRequest$outboundSchema;
})(ConnectorServiceRotateCredentialRequest$ || (ConnectorServiceRotateCredentialRequest$ = {}));
export function connectorServiceRotateCredentialRequestToJSON(connectorServiceRotateCredentialRequest) {
    return JSON.stringify(ConnectorServiceRotateCredentialRequest$outboundSchema.parse(connectorServiceRotateCredentialRequest));
}
export function connectorServiceRotateCredentialRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => ConnectorServiceRotateCredentialRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ConnectorServiceRotateCredentialRequest' from JSON`);
}
