/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * The TaskAuditApprovalAutoAcceptedByPolicy message.
 */
export type TaskAuditApprovalAutoAcceptedByPolicy = {};

/** @internal */
export const TaskAuditApprovalAutoAcceptedByPolicy$inboundSchema: z.ZodType<
  TaskAuditApprovalAutoAcceptedByPolicy,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type TaskAuditApprovalAutoAcceptedByPolicy$Outbound = {};

/** @internal */
export const TaskAuditApprovalAutoAcceptedByPolicy$outboundSchema: z.ZodType<
  TaskAuditApprovalAutoAcceptedByPolicy$Outbound,
  z.ZodTypeDef,
  TaskAuditApprovalAutoAcceptedByPolicy
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TaskAuditApprovalAutoAcceptedByPolicy$ {
  /** @deprecated use `TaskAuditApprovalAutoAcceptedByPolicy$inboundSchema` instead. */
  export const inboundSchema =
    TaskAuditApprovalAutoAcceptedByPolicy$inboundSchema;
  /** @deprecated use `TaskAuditApprovalAutoAcceptedByPolicy$outboundSchema` instead. */
  export const outboundSchema =
    TaskAuditApprovalAutoAcceptedByPolicy$outboundSchema;
  /** @deprecated use `TaskAuditApprovalAutoAcceptedByPolicy$Outbound` instead. */
  export type Outbound = TaskAuditApprovalAutoAcceptedByPolicy$Outbound;
}

export function taskAuditApprovalAutoAcceptedByPolicyToJSON(
  taskAuditApprovalAutoAcceptedByPolicy: TaskAuditApprovalAutoAcceptedByPolicy,
): string {
  return JSON.stringify(
    TaskAuditApprovalAutoAcceptedByPolicy$outboundSchema.parse(
      taskAuditApprovalAutoAcceptedByPolicy,
    ),
  );
}

export function taskAuditApprovalAutoAcceptedByPolicyFromJSON(
  jsonString: string,
): SafeParseResult<TaskAuditApprovalAutoAcceptedByPolicy, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      TaskAuditApprovalAutoAcceptedByPolicy$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'TaskAuditApprovalAutoAcceptedByPolicy' from JSON`,
  );
}
