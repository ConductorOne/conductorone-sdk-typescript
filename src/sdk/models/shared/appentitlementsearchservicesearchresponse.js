/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";
import { collectExtraKeys as collectExtraKeys$, safeParse, } from "../../../lib/schemas.js";
import { AppEntitlementView$inboundSchema, AppEntitlementView$outboundSchema, } from "./appentitlementview.js";
import { Facets$inboundSchema, Facets$outboundSchema, } from "./facets.js";
/** @internal */
export const AppEntitlementSearchServiceSearchResponseExpanded$inboundSchema = collectExtraKeys$(z.object({
    "@type": z.string().optional(),
}).catchall(z.any()), "additionalProperties", true).transform((v) => {
    return remap$(v, {
        "@type": "atType",
    });
});
/** @internal */
export const AppEntitlementSearchServiceSearchResponseExpanded$outboundSchema = z.object({
    atType: z.string().optional(),
    additionalProperties: z.record(z.any()),
}).transform((v) => {
    return {
        ...v.additionalProperties,
        ...remap$(v, {
            atType: "@type",
            additionalProperties: null,
        }),
    };
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var AppEntitlementSearchServiceSearchResponseExpanded$;
(function (AppEntitlementSearchServiceSearchResponseExpanded$) {
    /** @deprecated use `AppEntitlementSearchServiceSearchResponseExpanded$inboundSchema` instead. */
    AppEntitlementSearchServiceSearchResponseExpanded$.inboundSchema = AppEntitlementSearchServiceSearchResponseExpanded$inboundSchema;
    /** @deprecated use `AppEntitlementSearchServiceSearchResponseExpanded$outboundSchema` instead. */
    AppEntitlementSearchServiceSearchResponseExpanded$.outboundSchema = AppEntitlementSearchServiceSearchResponseExpanded$outboundSchema;
})(AppEntitlementSearchServiceSearchResponseExpanded$ || (AppEntitlementSearchServiceSearchResponseExpanded$ = {}));
export function appEntitlementSearchServiceSearchResponseExpandedToJSON(appEntitlementSearchServiceSearchResponseExpanded) {
    return JSON.stringify(AppEntitlementSearchServiceSearchResponseExpanded$outboundSchema.parse(appEntitlementSearchServiceSearchResponseExpanded));
}
export function appEntitlementSearchServiceSearchResponseExpandedFromJSON(jsonString) {
    return safeParse(jsonString, (x) => AppEntitlementSearchServiceSearchResponseExpanded$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'AppEntitlementSearchServiceSearchResponseExpanded' from JSON`);
}
/** @internal */
export const AppEntitlementSearchServiceSearchResponse$inboundSchema = z.object({
    expanded: z.nullable(z.array(z.lazy(() => AppEntitlementSearchServiceSearchResponseExpanded$inboundSchema))).optional(),
    facets: z.nullable(Facets$inboundSchema).optional(),
    list: z.nullable(z.array(AppEntitlementView$inboundSchema)).optional(),
    nextPageToken: z.nullable(z.string()).optional(),
});
/** @internal */
export const AppEntitlementSearchServiceSearchResponse$outboundSchema = z.object({
    expanded: z.nullable(z.array(z.lazy(() => AppEntitlementSearchServiceSearchResponseExpanded$outboundSchema))).optional(),
    facets: z.nullable(Facets$outboundSchema).optional(),
    list: z.nullable(z.array(AppEntitlementView$outboundSchema)).optional(),
    nextPageToken: z.nullable(z.string()).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var AppEntitlementSearchServiceSearchResponse$;
(function (AppEntitlementSearchServiceSearchResponse$) {
    /** @deprecated use `AppEntitlementSearchServiceSearchResponse$inboundSchema` instead. */
    AppEntitlementSearchServiceSearchResponse$.inboundSchema = AppEntitlementSearchServiceSearchResponse$inboundSchema;
    /** @deprecated use `AppEntitlementSearchServiceSearchResponse$outboundSchema` instead. */
    AppEntitlementSearchServiceSearchResponse$.outboundSchema = AppEntitlementSearchServiceSearchResponse$outboundSchema;
})(AppEntitlementSearchServiceSearchResponse$ || (AppEntitlementSearchServiceSearchResponse$ = {}));
export function appEntitlementSearchServiceSearchResponseToJSON(appEntitlementSearchServiceSearchResponse) {
    return JSON.stringify(AppEntitlementSearchServiceSearchResponse$outboundSchema.parse(appEntitlementSearchServiceSearchResponse));
}
export function appEntitlementSearchServiceSearchResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => AppEntitlementSearchServiceSearchResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'AppEntitlementSearchServiceSearchResponse' from JSON`);
}
