/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
/** @internal */
export const TerminateAutomationRequest$inboundSchema = z.object({});
/** @internal */
export const TerminateAutomationRequest$outboundSchema = z.object({});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var TerminateAutomationRequest$;
(function (TerminateAutomationRequest$) {
    /** @deprecated use `TerminateAutomationRequest$inboundSchema` instead. */
    TerminateAutomationRequest$.inboundSchema = TerminateAutomationRequest$inboundSchema;
    /** @deprecated use `TerminateAutomationRequest$outboundSchema` instead. */
    TerminateAutomationRequest$.outboundSchema = TerminateAutomationRequest$outboundSchema;
})(TerminateAutomationRequest$ || (TerminateAutomationRequest$ = {}));
export function terminateAutomationRequestToJSON(terminateAutomationRequest) {
    return JSON.stringify(TerminateAutomationRequest$outboundSchema.parse(terminateAutomationRequest));
}
export function terminateAutomationRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => TerminateAutomationRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'TerminateAutomationRequest' from JSON`);
}
