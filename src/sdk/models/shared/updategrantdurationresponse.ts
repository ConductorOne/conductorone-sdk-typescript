/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  AppEntitlementUserBinding,
  AppEntitlementUserBinding$inboundSchema,
  AppEntitlementUserBinding$Outbound,
  AppEntitlementUserBinding$outboundSchema,
} from "./appentitlementuserbinding.js";

/**
 * The UpdateGrantDurationResponse message.
 */
export type UpdateGrantDurationResponse = {
  binding?: AppEntitlementUserBinding | null | undefined;
};

/** @internal */
export const UpdateGrantDurationResponse$inboundSchema: z.ZodType<
  UpdateGrantDurationResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  binding: z.nullable(AppEntitlementUserBinding$inboundSchema).optional(),
});

/** @internal */
export type UpdateGrantDurationResponse$Outbound = {
  binding?: AppEntitlementUserBinding$Outbound | null | undefined;
};

/** @internal */
export const UpdateGrantDurationResponse$outboundSchema: z.ZodType<
  UpdateGrantDurationResponse$Outbound,
  z.ZodTypeDef,
  UpdateGrantDurationResponse
> = z.object({
  binding: z.nullable(AppEntitlementUserBinding$outboundSchema).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateGrantDurationResponse$ {
  /** @deprecated use `UpdateGrantDurationResponse$inboundSchema` instead. */
  export const inboundSchema = UpdateGrantDurationResponse$inboundSchema;
  /** @deprecated use `UpdateGrantDurationResponse$outboundSchema` instead. */
  export const outboundSchema = UpdateGrantDurationResponse$outboundSchema;
  /** @deprecated use `UpdateGrantDurationResponse$Outbound` instead. */
  export type Outbound = UpdateGrantDurationResponse$Outbound;
}

export function updateGrantDurationResponseToJSON(
  updateGrantDurationResponse: UpdateGrantDurationResponse,
): string {
  return JSON.stringify(
    UpdateGrantDurationResponse$outboundSchema.parse(
      updateGrantDurationResponse,
    ),
  );
}

export function updateGrantDurationResponseFromJSON(
  jsonString: string,
): SafeParseResult<UpdateGrantDurationResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateGrantDurationResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateGrantDurationResponse' from JSON`,
  );
}
