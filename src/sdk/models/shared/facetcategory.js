/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { FacetRangeItem$inboundSchema, FacetRangeItem$outboundSchema, } from "./facetrangeitem.js";
import { FacetValueItem$inboundSchema, FacetValueItem$outboundSchema, } from "./facetvalueitem.js";
/** @internal */
export const FacetCategory$inboundSchema = z.object({
    displayName: z.nullable(z.string()).optional(),
    iconUrl: z.nullable(z.string()).optional(),
    param: z.nullable(z.string()).optional(),
    range: z.nullable(FacetRangeItem$inboundSchema).optional(),
    value: z.nullable(FacetValueItem$inboundSchema).optional(),
});
/** @internal */
export const FacetCategory$outboundSchema = z.object({
    displayName: z.nullable(z.string()).optional(),
    iconUrl: z.nullable(z.string()).optional(),
    param: z.nullable(z.string()).optional(),
    range: z.nullable(FacetRangeItem$outboundSchema).optional(),
    value: z.nullable(FacetValueItem$outboundSchema).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var FacetCategory$;
(function (FacetCategory$) {
    /** @deprecated use `FacetCategory$inboundSchema` instead. */
    FacetCategory$.inboundSchema = FacetCategory$inboundSchema;
    /** @deprecated use `FacetCategory$outboundSchema` instead. */
    FacetCategory$.outboundSchema = FacetCategory$outboundSchema;
})(FacetCategory$ || (FacetCategory$ = {}));
export function facetCategoryToJSON(facetCategory) {
    return JSON.stringify(FacetCategory$outboundSchema.parse(facetCategory));
}
export function facetCategoryFromJSON(jsonString) {
    return safeParse(jsonString, (x) => FacetCategory$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'FacetCategory' from JSON`);
}
