/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { SessionSettings$inboundSchema, SessionSettings$outboundSchema, } from "./sessionsettings.js";
/** @internal */
export const UpdateSessionSettingsResponse$inboundSchema = z.object({
    sessionSettings: z.nullable(SessionSettings$inboundSchema).optional(),
});
/** @internal */
export const UpdateSessionSettingsResponse$outboundSchema = z.object({
    sessionSettings: z.nullable(SessionSettings$outboundSchema).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var UpdateSessionSettingsResponse$;
(function (UpdateSessionSettingsResponse$) {
    /** @deprecated use `UpdateSessionSettingsResponse$inboundSchema` instead. */
    UpdateSessionSettingsResponse$.inboundSchema = UpdateSessionSettingsResponse$inboundSchema;
    /** @deprecated use `UpdateSessionSettingsResponse$outboundSchema` instead. */
    UpdateSessionSettingsResponse$.outboundSchema = UpdateSessionSettingsResponse$outboundSchema;
})(UpdateSessionSettingsResponse$ || (UpdateSessionSettingsResponse$ = {}));
export function updateSessionSettingsResponseToJSON(updateSessionSettingsResponse) {
    return JSON.stringify(UpdateSessionSettingsResponse$outboundSchema.parse(updateSessionSettingsResponse));
}
export function updateSessionSettingsResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => UpdateSessionSettingsResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'UpdateSessionSettingsResponse' from JSON`);
}
