/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";
import { collectExtraKeys as collectExtraKeys$, safeParse, } from "../../../lib/schemas.js";
import { AppEntitlementView$inboundSchema, AppEntitlementView$outboundSchema, } from "./appentitlementview.js";
/** @internal */
export const CreateAppEntitlementResponseExpanded$inboundSchema = collectExtraKeys$(z.object({
    "@type": z.string().optional(),
}).catchall(z.any()), "additionalProperties", true).transform((v) => {
    return remap$(v, {
        "@type": "atType",
    });
});
/** @internal */
export const CreateAppEntitlementResponseExpanded$outboundSchema = z.object({
    atType: z.string().optional(),
    additionalProperties: z.record(z.any()),
}).transform((v) => {
    return {
        ...v.additionalProperties,
        ...remap$(v, {
            atType: "@type",
            additionalProperties: null,
        }),
    };
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateAppEntitlementResponseExpanded$;
(function (CreateAppEntitlementResponseExpanded$) {
    /** @deprecated use `CreateAppEntitlementResponseExpanded$inboundSchema` instead. */
    CreateAppEntitlementResponseExpanded$.inboundSchema = CreateAppEntitlementResponseExpanded$inboundSchema;
    /** @deprecated use `CreateAppEntitlementResponseExpanded$outboundSchema` instead. */
    CreateAppEntitlementResponseExpanded$.outboundSchema = CreateAppEntitlementResponseExpanded$outboundSchema;
})(CreateAppEntitlementResponseExpanded$ || (CreateAppEntitlementResponseExpanded$ = {}));
export function createAppEntitlementResponseExpandedToJSON(createAppEntitlementResponseExpanded) {
    return JSON.stringify(CreateAppEntitlementResponseExpanded$outboundSchema.parse(createAppEntitlementResponseExpanded));
}
export function createAppEntitlementResponseExpandedFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CreateAppEntitlementResponseExpanded$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CreateAppEntitlementResponseExpanded' from JSON`);
}
/** @internal */
export const CreateAppEntitlementResponse$inboundSchema = z.object({
    appEntitlementView: z.nullable(AppEntitlementView$inboundSchema).optional(),
    expanded: z.nullable(z.array(z.lazy(() => CreateAppEntitlementResponseExpanded$inboundSchema))).optional(),
});
/** @internal */
export const CreateAppEntitlementResponse$outboundSchema = z.object({
    appEntitlementView: z.nullable(AppEntitlementView$outboundSchema).optional(),
    expanded: z.nullable(z.array(z.lazy(() => CreateAppEntitlementResponseExpanded$outboundSchema))).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateAppEntitlementResponse$;
(function (CreateAppEntitlementResponse$) {
    /** @deprecated use `CreateAppEntitlementResponse$inboundSchema` instead. */
    CreateAppEntitlementResponse$.inboundSchema = CreateAppEntitlementResponse$inboundSchema;
    /** @deprecated use `CreateAppEntitlementResponse$outboundSchema` instead. */
    CreateAppEntitlementResponse$.outboundSchema = CreateAppEntitlementResponse$outboundSchema;
})(CreateAppEntitlementResponse$ || (CreateAppEntitlementResponse$ = {}));
export function createAppEntitlementResponseToJSON(createAppEntitlementResponse) {
    return JSON.stringify(CreateAppEntitlementResponse$outboundSchema.parse(createAppEntitlementResponse));
}
export function createAppEntitlementResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CreateAppEntitlementResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CreateAppEntitlementResponse' from JSON`);
}
