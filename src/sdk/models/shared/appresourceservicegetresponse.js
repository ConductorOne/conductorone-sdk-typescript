/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";
import { collectExtraKeys as collectExtraKeys$, safeParse, } from "../../../lib/schemas.js";
import { AppResourceView$inboundSchema, AppResourceView$outboundSchema, } from "./appresourceview.js";
/** @internal */
export const AppResourceServiceGetResponseExpanded$inboundSchema = collectExtraKeys$(z.object({
    "@type": z.string().optional(),
}).catchall(z.any()), "additionalProperties", true).transform((v) => {
    return remap$(v, {
        "@type": "atType",
    });
});
/** @internal */
export const AppResourceServiceGetResponseExpanded$outboundSchema = z.object({
    atType: z.string().optional(),
    additionalProperties: z.record(z.any()),
}).transform((v) => {
    return {
        ...v.additionalProperties,
        ...remap$(v, {
            atType: "@type",
            additionalProperties: null,
        }),
    };
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var AppResourceServiceGetResponseExpanded$;
(function (AppResourceServiceGetResponseExpanded$) {
    /** @deprecated use `AppResourceServiceGetResponseExpanded$inboundSchema` instead. */
    AppResourceServiceGetResponseExpanded$.inboundSchema = AppResourceServiceGetResponseExpanded$inboundSchema;
    /** @deprecated use `AppResourceServiceGetResponseExpanded$outboundSchema` instead. */
    AppResourceServiceGetResponseExpanded$.outboundSchema = AppResourceServiceGetResponseExpanded$outboundSchema;
})(AppResourceServiceGetResponseExpanded$ || (AppResourceServiceGetResponseExpanded$ = {}));
export function appResourceServiceGetResponseExpandedToJSON(appResourceServiceGetResponseExpanded) {
    return JSON.stringify(AppResourceServiceGetResponseExpanded$outboundSchema.parse(appResourceServiceGetResponseExpanded));
}
export function appResourceServiceGetResponseExpandedFromJSON(jsonString) {
    return safeParse(jsonString, (x) => AppResourceServiceGetResponseExpanded$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'AppResourceServiceGetResponseExpanded' from JSON`);
}
/** @internal */
export const AppResourceServiceGetResponse$inboundSchema = z.object({
    appResourceView: z.nullable(AppResourceView$inboundSchema).optional(),
    expanded: z.nullable(z.array(z.lazy(() => AppResourceServiceGetResponseExpanded$inboundSchema))).optional(),
});
/** @internal */
export const AppResourceServiceGetResponse$outboundSchema = z.object({
    appResourceView: z.nullable(AppResourceView$outboundSchema).optional(),
    expanded: z.nullable(z.array(z.lazy(() => AppResourceServiceGetResponseExpanded$outboundSchema))).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var AppResourceServiceGetResponse$;
(function (AppResourceServiceGetResponse$) {
    /** @deprecated use `AppResourceServiceGetResponse$inboundSchema` instead. */
    AppResourceServiceGetResponse$.inboundSchema = AppResourceServiceGetResponse$inboundSchema;
    /** @deprecated use `AppResourceServiceGetResponse$outboundSchema` instead. */
    AppResourceServiceGetResponse$.outboundSchema = AppResourceServiceGetResponse$outboundSchema;
})(AppResourceServiceGetResponse$ || (AppResourceServiceGetResponse$ = {}));
export function appResourceServiceGetResponseToJSON(appResourceServiceGetResponse) {
    return JSON.stringify(AppResourceServiceGetResponse$outboundSchema.parse(appResourceServiceGetResponse));
}
export function appResourceServiceGetResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => AppResourceServiceGetResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'AppResourceServiceGetResponse' from JSON`);
}
