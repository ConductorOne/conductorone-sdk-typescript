/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

/**
 *  The ReassignedByErrorAction object describes the outcome of a policy step that has been reassigned because it had an error provisioning.
 *
 * @remarks
 *
 */
export class ReassignedByErrorAction extends SpeakeasyBase {
    /**
     *  The description of the error with more details on why this was reassigned.
     *
     * @remarks
     *
     */
    @SpeakeasyMetadata()
    @Expose({ name: "description" })
    description?: string;

    /**
     *  Additional information about the error, like http status codes or error messages from SDKs.
     *
     * @remarks
     *
     */
    @SpeakeasyMetadata()
    @Expose({ name: "errorCode" })
    errorCode?: string;

    /**
     *  The UserID of the user who reassigned this due to an error. This will exclusively be the System's UserID.
     *
     * @remarks
     *
     */
    @SpeakeasyMetadata()
    @Expose({ name: "errorUserId" })
    errorUserId?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "erroredAt" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    erroredAt?: Date;

    /**
     *  The ID of the policy step that was created by this reassignment.
     *
     * @remarks
     *
     */
    @SpeakeasyMetadata()
    @Expose({ name: "newPolicyStepId" })
    newPolicyStepId?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "reassignedAt" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    reassignedAt?: Date;
}
