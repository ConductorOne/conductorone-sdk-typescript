/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { catchUnrecognizedEnum, } from "../../types/enums.js";
/**
 * The state field tracks the state of the AppPopulationReport. This state field can be one of REPORT_STATE_PENDING, REPORT_STATE_UNSPECIFIED, REPORT_STATE_OK, REPORT_STATE_ERROR.
 */
export const AppPopulationReportState = {
    ReportStateUnspecified: "REPORT_STATE_UNSPECIFIED",
    ReportStatePending: "REPORT_STATE_PENDING",
    ReportStateOk: "REPORT_STATE_OK",
    ReportStateError: "REPORT_STATE_ERROR",
};
/** @internal */
export const AppPopulationReportState$inboundSchema = z
    .union([
    z.nativeEnum(AppPopulationReportState),
    z.string().transform(catchUnrecognizedEnum),
]);
/** @internal */
export const AppPopulationReportState$outboundSchema = z.union([
    z.nativeEnum(AppPopulationReportState),
    z.string().and(z.custom()),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var AppPopulationReportState$;
(function (AppPopulationReportState$) {
    /** @deprecated use `AppPopulationReportState$inboundSchema` instead. */
    AppPopulationReportState$.inboundSchema = AppPopulationReportState$inboundSchema;
    /** @deprecated use `AppPopulationReportState$outboundSchema` instead. */
    AppPopulationReportState$.outboundSchema = AppPopulationReportState$outboundSchema;
})(AppPopulationReportState$ || (AppPopulationReportState$ = {}));
/** @internal */
export const AppPopulationReport$inboundSchema = z.object({
    appId: z.nullable(z.string()).optional(),
    createdAt: z.nullable(z.string().datetime({ offset: true }).transform(v => new Date(v))).optional(),
    downloadUrl: z.nullable(z.string()).optional(),
    hashes: z.nullable(z.record(z.string())).optional(),
    id: z.nullable(z.string()).optional(),
    state: z.nullable(AppPopulationReportState$inboundSchema).optional(),
});
/** @internal */
export const AppPopulationReport$outboundSchema = z.object({
    appId: z.nullable(z.string()).optional(),
    createdAt: z.nullable(z.date().transform(v => v.toISOString())).optional(),
    downloadUrl: z.nullable(z.string()).optional(),
    hashes: z.nullable(z.record(z.string())).optional(),
    id: z.nullable(z.string()).optional(),
    state: z.nullable(AppPopulationReportState$outboundSchema).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var AppPopulationReport$;
(function (AppPopulationReport$) {
    /** @deprecated use `AppPopulationReport$inboundSchema` instead. */
    AppPopulationReport$.inboundSchema = AppPopulationReport$inboundSchema;
    /** @deprecated use `AppPopulationReport$outboundSchema` instead. */
    AppPopulationReport$.outboundSchema = AppPopulationReport$outboundSchema;
})(AppPopulationReport$ || (AppPopulationReport$ = {}));
export function appPopulationReportToJSON(appPopulationReport) {
    return JSON.stringify(AppPopulationReport$outboundSchema.parse(appPopulationReport));
}
export function appPopulationReportFromJSON(jsonString) {
    return safeParse(jsonString, (x) => AppPopulationReport$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'AppPopulationReport' from JSON`);
}
