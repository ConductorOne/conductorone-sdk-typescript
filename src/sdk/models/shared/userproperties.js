/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
/** @internal */
export const UserProperties$inboundSchema = z.object({
    displayNameCel: z.nullable(z.string()).optional(),
    emailCel: z.nullable(z.string()).optional(),
    profileAttributeCel: z.nullable(z.string()).optional(),
    usernameCel: z.nullable(z.string()).optional(),
});
/** @internal */
export const UserProperties$outboundSchema = z.object({
    displayNameCel: z.nullable(z.string()).optional(),
    emailCel: z.nullable(z.string()).optional(),
    profileAttributeCel: z.nullable(z.string()).optional(),
    usernameCel: z.nullable(z.string()).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var UserProperties$;
(function (UserProperties$) {
    /** @deprecated use `UserProperties$inboundSchema` instead. */
    UserProperties$.inboundSchema = UserProperties$inboundSchema;
    /** @deprecated use `UserProperties$outboundSchema` instead. */
    UserProperties$.outboundSchema = UserProperties$outboundSchema;
})(UserProperties$ || (UserProperties$ = {}));
export function userPropertiesToJSON(userProperties) {
    return JSON.stringify(UserProperties$outboundSchema.parse(userProperties));
}
export function userPropertiesFromJSON(jsonString) {
    return safeParse(jsonString, (x) => UserProperties$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'UserProperties' from JSON`);
}
