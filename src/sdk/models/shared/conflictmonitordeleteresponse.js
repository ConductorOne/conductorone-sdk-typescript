/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
/** @internal */
export const ConflictMonitorDeleteResponse$inboundSchema = z.object({});
/** @internal */
export const ConflictMonitorDeleteResponse$outboundSchema = z.object({});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ConflictMonitorDeleteResponse$;
(function (ConflictMonitorDeleteResponse$) {
    /** @deprecated use `ConflictMonitorDeleteResponse$inboundSchema` instead. */
    ConflictMonitorDeleteResponse$.inboundSchema = ConflictMonitorDeleteResponse$inboundSchema;
    /** @deprecated use `ConflictMonitorDeleteResponse$outboundSchema` instead. */
    ConflictMonitorDeleteResponse$.outboundSchema = ConflictMonitorDeleteResponse$outboundSchema;
})(ConflictMonitorDeleteResponse$ || (ConflictMonitorDeleteResponse$ = {}));
export function conflictMonitorDeleteResponseToJSON(conflictMonitorDeleteResponse) {
    return JSON.stringify(ConflictMonitorDeleteResponse$outboundSchema.parse(conflictMonitorDeleteResponse));
}
export function conflictMonitorDeleteResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => ConflictMonitorDeleteResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ConflictMonitorDeleteResponse' from JSON`);
}
