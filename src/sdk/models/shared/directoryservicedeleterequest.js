/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
/** @internal */
export const DirectoryServiceDeleteRequest$inboundSchema = z.object({});
/** @internal */
export const DirectoryServiceDeleteRequest$outboundSchema = z.object({});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var DirectoryServiceDeleteRequest$;
(function (DirectoryServiceDeleteRequest$) {
    /** @deprecated use `DirectoryServiceDeleteRequest$inboundSchema` instead. */
    DirectoryServiceDeleteRequest$.inboundSchema = DirectoryServiceDeleteRequest$inboundSchema;
    /** @deprecated use `DirectoryServiceDeleteRequest$outboundSchema` instead. */
    DirectoryServiceDeleteRequest$.outboundSchema = DirectoryServiceDeleteRequest$outboundSchema;
})(DirectoryServiceDeleteRequest$ || (DirectoryServiceDeleteRequest$ = {}));
export function directoryServiceDeleteRequestToJSON(directoryServiceDeleteRequest) {
    return JSON.stringify(DirectoryServiceDeleteRequest$outboundSchema.parse(directoryServiceDeleteRequest));
}
export function directoryServiceDeleteRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => DirectoryServiceDeleteRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'DirectoryServiceDeleteRequest' from JSON`);
}
