/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * The CheckboxField message.
 */
export type CheckboxField = {};

/** @internal */
export const CheckboxField$inboundSchema: z.ZodType<
  CheckboxField,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type CheckboxField$Outbound = {};

/** @internal */
export const CheckboxField$outboundSchema: z.ZodType<
  CheckboxField$Outbound,
  z.ZodTypeDef,
  CheckboxField
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CheckboxField$ {
  /** @deprecated use `CheckboxField$inboundSchema` instead. */
  export const inboundSchema = CheckboxField$inboundSchema;
  /** @deprecated use `CheckboxField$outboundSchema` instead. */
  export const outboundSchema = CheckboxField$outboundSchema;
  /** @deprecated use `CheckboxField$Outbound` instead. */
  export type Outbound = CheckboxField$Outbound;
}

export function checkboxFieldToJSON(checkboxField: CheckboxField): string {
  return JSON.stringify(CheckboxField$outboundSchema.parse(checkboxField));
}

export function checkboxFieldFromJSON(
  jsonString: string,
): SafeParseResult<CheckboxField, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CheckboxField$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CheckboxField' from JSON`,
  );
}
