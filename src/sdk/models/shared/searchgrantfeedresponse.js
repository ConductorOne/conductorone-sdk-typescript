/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";
import { collectExtraKeys as collectExtraKeys$, safeParse, } from "../../../lib/schemas.js";
import { AppEntitlementUserBindingFeedView$inboundSchema, AppEntitlementUserBindingFeedView$outboundSchema, } from "./appentitlementuserbindingfeedview.js";
/** @internal */
export const SearchGrantFeedResponseExpanded$inboundSchema = collectExtraKeys$(z.object({
    "@type": z.string().optional(),
}).catchall(z.any()), "additionalProperties", true).transform((v) => {
    return remap$(v, {
        "@type": "atType",
    });
});
/** @internal */
export const SearchGrantFeedResponseExpanded$outboundSchema = z.object({
    atType: z.string().optional(),
    additionalProperties: z.record(z.any()),
}).transform((v) => {
    return {
        ...v.additionalProperties,
        ...remap$(v, {
            atType: "@type",
            additionalProperties: null,
        }),
    };
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var SearchGrantFeedResponseExpanded$;
(function (SearchGrantFeedResponseExpanded$) {
    /** @deprecated use `SearchGrantFeedResponseExpanded$inboundSchema` instead. */
    SearchGrantFeedResponseExpanded$.inboundSchema = SearchGrantFeedResponseExpanded$inboundSchema;
    /** @deprecated use `SearchGrantFeedResponseExpanded$outboundSchema` instead. */
    SearchGrantFeedResponseExpanded$.outboundSchema = SearchGrantFeedResponseExpanded$outboundSchema;
})(SearchGrantFeedResponseExpanded$ || (SearchGrantFeedResponseExpanded$ = {}));
export function searchGrantFeedResponseExpandedToJSON(searchGrantFeedResponseExpanded) {
    return JSON.stringify(SearchGrantFeedResponseExpanded$outboundSchema.parse(searchGrantFeedResponseExpanded));
}
export function searchGrantFeedResponseExpandedFromJSON(jsonString) {
    return safeParse(jsonString, (x) => SearchGrantFeedResponseExpanded$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'SearchGrantFeedResponseExpanded' from JSON`);
}
/** @internal */
export const SearchGrantFeedResponse$inboundSchema = z.object({
    expanded: z.nullable(z.array(z.lazy(() => SearchGrantFeedResponseExpanded$inboundSchema))).optional(),
    list: z.nullable(z.array(AppEntitlementUserBindingFeedView$inboundSchema))
        .optional(),
    nextPageToken: z.nullable(z.string()).optional(),
});
/** @internal */
export const SearchGrantFeedResponse$outboundSchema = z.object({
    expanded: z.nullable(z.array(z.lazy(() => SearchGrantFeedResponseExpanded$outboundSchema))).optional(),
    list: z.nullable(z.array(AppEntitlementUserBindingFeedView$outboundSchema))
        .optional(),
    nextPageToken: z.nullable(z.string()).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var SearchGrantFeedResponse$;
(function (SearchGrantFeedResponse$) {
    /** @deprecated use `SearchGrantFeedResponse$inboundSchema` instead. */
    SearchGrantFeedResponse$.inboundSchema = SearchGrantFeedResponse$inboundSchema;
    /** @deprecated use `SearchGrantFeedResponse$outboundSchema` instead. */
    SearchGrantFeedResponse$.outboundSchema = SearchGrantFeedResponse$outboundSchema;
})(SearchGrantFeedResponse$ || (SearchGrantFeedResponse$ = {}));
export function searchGrantFeedResponseToJSON(searchGrantFeedResponse) {
    return JSON.stringify(SearchGrantFeedResponse$outboundSchema.parse(searchGrantFeedResponse));
}
export function searchGrantFeedResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => SearchGrantFeedResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'SearchGrantFeedResponse' from JSON`);
}
