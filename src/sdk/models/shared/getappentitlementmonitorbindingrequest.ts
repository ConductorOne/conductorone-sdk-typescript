/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { safeParse } from "../../../lib/schemas.js";
import {
  catchUnrecognizedEnum,
  OpenEnum,
  Unrecognized,
} from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * The entitlementGroup field.
 */
export const GetAppEntitlementMonitorBindingRequestEntitlementGroup = {
  EntitlementGroupUnspecified: "ENTITLEMENT_GROUP_UNSPECIFIED",
  EntitlementGroupA: "ENTITLEMENT_GROUP_A",
  EntitlementGroupB: "ENTITLEMENT_GROUP_B",
} as const;
/**
 * The entitlementGroup field.
 */
export type GetAppEntitlementMonitorBindingRequestEntitlementGroup = OpenEnum<
  typeof GetAppEntitlementMonitorBindingRequestEntitlementGroup
>;

/**
 * The GetAppEntitlementMonitorBindingRequest message.
 */
export type GetAppEntitlementMonitorBindingRequest = {
  /**
   * The appEntitlementId field.
   */
  appEntitlementId?: string | null | undefined;
  /**
   * The appId field.
   */
  appId?: string | null | undefined;
  /**
   * The entitlementGroup field.
   */
  entitlementGroup?:
    | GetAppEntitlementMonitorBindingRequestEntitlementGroup
    | null
    | undefined;
  /**
   * The monitorId field.
   */
  monitorId?: string | null | undefined;
};

/** @internal */
export const GetAppEntitlementMonitorBindingRequestEntitlementGroup$inboundSchema:
  z.ZodType<
    GetAppEntitlementMonitorBindingRequestEntitlementGroup,
    z.ZodTypeDef,
    unknown
  > = z
    .union([
      z.nativeEnum(GetAppEntitlementMonitorBindingRequestEntitlementGroup),
      z.string().transform(catchUnrecognizedEnum),
    ]);

/** @internal */
export const GetAppEntitlementMonitorBindingRequestEntitlementGroup$outboundSchema:
  z.ZodType<
    GetAppEntitlementMonitorBindingRequestEntitlementGroup,
    z.ZodTypeDef,
    GetAppEntitlementMonitorBindingRequestEntitlementGroup
  > = z.union([
    z.nativeEnum(GetAppEntitlementMonitorBindingRequestEntitlementGroup),
    z.string().and(z.custom<Unrecognized<string>>()),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetAppEntitlementMonitorBindingRequestEntitlementGroup$ {
  /** @deprecated use `GetAppEntitlementMonitorBindingRequestEntitlementGroup$inboundSchema` instead. */
  export const inboundSchema =
    GetAppEntitlementMonitorBindingRequestEntitlementGroup$inboundSchema;
  /** @deprecated use `GetAppEntitlementMonitorBindingRequestEntitlementGroup$outboundSchema` instead. */
  export const outboundSchema =
    GetAppEntitlementMonitorBindingRequestEntitlementGroup$outboundSchema;
}

/** @internal */
export const GetAppEntitlementMonitorBindingRequest$inboundSchema: z.ZodType<
  GetAppEntitlementMonitorBindingRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  appEntitlementId: z.nullable(z.string()).optional(),
  appId: z.nullable(z.string()).optional(),
  entitlementGroup: z.nullable(
    GetAppEntitlementMonitorBindingRequestEntitlementGroup$inboundSchema,
  ).optional(),
  monitorId: z.nullable(z.string()).optional(),
});

/** @internal */
export type GetAppEntitlementMonitorBindingRequest$Outbound = {
  appEntitlementId?: string | null | undefined;
  appId?: string | null | undefined;
  entitlementGroup?: string | null | undefined;
  monitorId?: string | null | undefined;
};

/** @internal */
export const GetAppEntitlementMonitorBindingRequest$outboundSchema: z.ZodType<
  GetAppEntitlementMonitorBindingRequest$Outbound,
  z.ZodTypeDef,
  GetAppEntitlementMonitorBindingRequest
> = z.object({
  appEntitlementId: z.nullable(z.string()).optional(),
  appId: z.nullable(z.string()).optional(),
  entitlementGroup: z.nullable(
    GetAppEntitlementMonitorBindingRequestEntitlementGroup$outboundSchema,
  ).optional(),
  monitorId: z.nullable(z.string()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetAppEntitlementMonitorBindingRequest$ {
  /** @deprecated use `GetAppEntitlementMonitorBindingRequest$inboundSchema` instead. */
  export const inboundSchema =
    GetAppEntitlementMonitorBindingRequest$inboundSchema;
  /** @deprecated use `GetAppEntitlementMonitorBindingRequest$outboundSchema` instead. */
  export const outboundSchema =
    GetAppEntitlementMonitorBindingRequest$outboundSchema;
  /** @deprecated use `GetAppEntitlementMonitorBindingRequest$Outbound` instead. */
  export type Outbound = GetAppEntitlementMonitorBindingRequest$Outbound;
}

export function getAppEntitlementMonitorBindingRequestToJSON(
  getAppEntitlementMonitorBindingRequest:
    GetAppEntitlementMonitorBindingRequest,
): string {
  return JSON.stringify(
    GetAppEntitlementMonitorBindingRequest$outboundSchema.parse(
      getAppEntitlementMonitorBindingRequest,
    ),
  );
}

export function getAppEntitlementMonitorBindingRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetAppEntitlementMonitorBindingRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      GetAppEntitlementMonitorBindingRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetAppEntitlementMonitorBindingRequest' from JSON`,
  );
}
