/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";
import { safeParse } from "../../../lib/schemas.js";
import * as shared from "../shared/index.js";
/** @internal */
export const C1ApiAppV1AppResourceOwnersAddRequest$inboundSchema = z.object({
    app_id: z.nullable(z.string()),
    resource_type_id: z.nullable(z.string()),
    resource_id: z.nullable(z.string()),
    AddAppResourceOwnerRequest: shared.AddAppResourceOwnerRequest$inboundSchema
        .optional(),
}).transform((v) => {
    return remap$(v, {
        "app_id": "appId",
        "resource_type_id": "resourceTypeId",
        "resource_id": "resourceId",
        "AddAppResourceOwnerRequest": "addAppResourceOwnerRequest",
    });
});
/** @internal */
export const C1ApiAppV1AppResourceOwnersAddRequest$outboundSchema = z.object({
    appId: z.nullable(z.string()),
    resourceTypeId: z.nullable(z.string()),
    resourceId: z.nullable(z.string()),
    addAppResourceOwnerRequest: shared.AddAppResourceOwnerRequest$outboundSchema
        .optional(),
}).transform((v) => {
    return remap$(v, {
        appId: "app_id",
        resourceTypeId: "resource_type_id",
        resourceId: "resource_id",
        addAppResourceOwnerRequest: "AddAppResourceOwnerRequest",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var C1ApiAppV1AppResourceOwnersAddRequest$;
(function (C1ApiAppV1AppResourceOwnersAddRequest$) {
    /** @deprecated use `C1ApiAppV1AppResourceOwnersAddRequest$inboundSchema` instead. */
    C1ApiAppV1AppResourceOwnersAddRequest$.inboundSchema = C1ApiAppV1AppResourceOwnersAddRequest$inboundSchema;
    /** @deprecated use `C1ApiAppV1AppResourceOwnersAddRequest$outboundSchema` instead. */
    C1ApiAppV1AppResourceOwnersAddRequest$.outboundSchema = C1ApiAppV1AppResourceOwnersAddRequest$outboundSchema;
})(C1ApiAppV1AppResourceOwnersAddRequest$ || (C1ApiAppV1AppResourceOwnersAddRequest$ = {}));
export function c1ApiAppV1AppResourceOwnersAddRequestToJSON(c1ApiAppV1AppResourceOwnersAddRequest) {
    return JSON.stringify(C1ApiAppV1AppResourceOwnersAddRequest$outboundSchema.parse(c1ApiAppV1AppResourceOwnersAddRequest));
}
export function c1ApiAppV1AppResourceOwnersAddRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => C1ApiAppV1AppResourceOwnersAddRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'C1ApiAppV1AppResourceOwnersAddRequest' from JSON`);
}
/** @internal */
export const C1ApiAppV1AppResourceOwnersAddResponse$inboundSchema = z.object({
    ContentType: z.string(),
    StatusCode: z.number().int(),
    RawResponse: z.instanceof(Response),
    AddAppResourceOwnerResponse: shared.AddAppResourceOwnerResponse$inboundSchema
        .optional(),
}).transform((v) => {
    return remap$(v, {
        "ContentType": "contentType",
        "StatusCode": "statusCode",
        "RawResponse": "rawResponse",
        "AddAppResourceOwnerResponse": "addAppResourceOwnerResponse",
    });
});
/** @internal */
export const C1ApiAppV1AppResourceOwnersAddResponse$outboundSchema = z.object({
    contentType: z.string(),
    statusCode: z.number().int(),
    rawResponse: z.instanceof(Response).transform(() => {
        throw new Error("Response cannot be serialized");
    }),
    addAppResourceOwnerResponse: shared.AddAppResourceOwnerResponse$outboundSchema
        .optional(),
}).transform((v) => {
    return remap$(v, {
        contentType: "ContentType",
        statusCode: "StatusCode",
        rawResponse: "RawResponse",
        addAppResourceOwnerResponse: "AddAppResourceOwnerResponse",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var C1ApiAppV1AppResourceOwnersAddResponse$;
(function (C1ApiAppV1AppResourceOwnersAddResponse$) {
    /** @deprecated use `C1ApiAppV1AppResourceOwnersAddResponse$inboundSchema` instead. */
    C1ApiAppV1AppResourceOwnersAddResponse$.inboundSchema = C1ApiAppV1AppResourceOwnersAddResponse$inboundSchema;
    /** @deprecated use `C1ApiAppV1AppResourceOwnersAddResponse$outboundSchema` instead. */
    C1ApiAppV1AppResourceOwnersAddResponse$.outboundSchema = C1ApiAppV1AppResourceOwnersAddResponse$outboundSchema;
})(C1ApiAppV1AppResourceOwnersAddResponse$ || (C1ApiAppV1AppResourceOwnersAddResponse$ = {}));
export function c1ApiAppV1AppResourceOwnersAddResponseToJSON(c1ApiAppV1AppResourceOwnersAddResponse) {
    return JSON.stringify(C1ApiAppV1AppResourceOwnersAddResponse$outboundSchema.parse(c1ApiAppV1AppResourceOwnersAddResponse));
}
export function c1ApiAppV1AppResourceOwnersAddResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => C1ApiAppV1AppResourceOwnersAddResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'C1ApiAppV1AppResourceOwnersAddResponse' from JSON`);
}
