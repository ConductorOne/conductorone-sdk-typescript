/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";
import { safeParse } from "../../../lib/schemas.js";
import * as shared from "../shared/index.js";
/** @internal */
export const C1ApiStepupV1StepUpProviderServiceUpdateSecretRequest$inboundSchema = z.object({
    id: z.nullable(z.string()),
    UpdateStepUpProviderSecretRequest: shared
        .UpdateStepUpProviderSecretRequest$inboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        "UpdateStepUpProviderSecretRequest": "updateStepUpProviderSecretRequest",
    });
});
/** @internal */
export const C1ApiStepupV1StepUpProviderServiceUpdateSecretRequest$outboundSchema = z.object({
    id: z.nullable(z.string()),
    updateStepUpProviderSecretRequest: shared
        .UpdateStepUpProviderSecretRequest$outboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        updateStepUpProviderSecretRequest: "UpdateStepUpProviderSecretRequest",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var C1ApiStepupV1StepUpProviderServiceUpdateSecretRequest$;
(function (C1ApiStepupV1StepUpProviderServiceUpdateSecretRequest$) {
    /** @deprecated use `C1ApiStepupV1StepUpProviderServiceUpdateSecretRequest$inboundSchema` instead. */
    C1ApiStepupV1StepUpProviderServiceUpdateSecretRequest$.inboundSchema = C1ApiStepupV1StepUpProviderServiceUpdateSecretRequest$inboundSchema;
    /** @deprecated use `C1ApiStepupV1StepUpProviderServiceUpdateSecretRequest$outboundSchema` instead. */
    C1ApiStepupV1StepUpProviderServiceUpdateSecretRequest$.outboundSchema = C1ApiStepupV1StepUpProviderServiceUpdateSecretRequest$outboundSchema;
})(C1ApiStepupV1StepUpProviderServiceUpdateSecretRequest$ || (C1ApiStepupV1StepUpProviderServiceUpdateSecretRequest$ = {}));
export function c1ApiStepupV1StepUpProviderServiceUpdateSecretRequestToJSON(c1ApiStepupV1StepUpProviderServiceUpdateSecretRequest) {
    return JSON.stringify(C1ApiStepupV1StepUpProviderServiceUpdateSecretRequest$outboundSchema.parse(c1ApiStepupV1StepUpProviderServiceUpdateSecretRequest));
}
export function c1ApiStepupV1StepUpProviderServiceUpdateSecretRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => C1ApiStepupV1StepUpProviderServiceUpdateSecretRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'C1ApiStepupV1StepUpProviderServiceUpdateSecretRequest' from JSON`);
}
/** @internal */
export const C1ApiStepupV1StepUpProviderServiceUpdateSecretResponse$inboundSchema = z.object({
    ContentType: z.string(),
    StatusCode: z.number().int(),
    RawResponse: z.instanceof(Response),
    UpdateStepUpProviderSecretResponse: shared
        .UpdateStepUpProviderSecretResponse$inboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        "ContentType": "contentType",
        "StatusCode": "statusCode",
        "RawResponse": "rawResponse",
        "UpdateStepUpProviderSecretResponse": "updateStepUpProviderSecretResponse",
    });
});
/** @internal */
export const C1ApiStepupV1StepUpProviderServiceUpdateSecretResponse$outboundSchema = z.object({
    contentType: z.string(),
    statusCode: z.number().int(),
    rawResponse: z.instanceof(Response).transform(() => {
        throw new Error("Response cannot be serialized");
    }),
    updateStepUpProviderSecretResponse: shared
        .UpdateStepUpProviderSecretResponse$outboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        contentType: "ContentType",
        statusCode: "StatusCode",
        rawResponse: "RawResponse",
        updateStepUpProviderSecretResponse: "UpdateStepUpProviderSecretResponse",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var C1ApiStepupV1StepUpProviderServiceUpdateSecretResponse$;
(function (C1ApiStepupV1StepUpProviderServiceUpdateSecretResponse$) {
    /** @deprecated use `C1ApiStepupV1StepUpProviderServiceUpdateSecretResponse$inboundSchema` instead. */
    C1ApiStepupV1StepUpProviderServiceUpdateSecretResponse$.inboundSchema = C1ApiStepupV1StepUpProviderServiceUpdateSecretResponse$inboundSchema;
    /** @deprecated use `C1ApiStepupV1StepUpProviderServiceUpdateSecretResponse$outboundSchema` instead. */
    C1ApiStepupV1StepUpProviderServiceUpdateSecretResponse$.outboundSchema = C1ApiStepupV1StepUpProviderServiceUpdateSecretResponse$outboundSchema;
})(C1ApiStepupV1StepUpProviderServiceUpdateSecretResponse$ || (C1ApiStepupV1StepUpProviderServiceUpdateSecretResponse$ = {}));
export function c1ApiStepupV1StepUpProviderServiceUpdateSecretResponseToJSON(c1ApiStepupV1StepUpProviderServiceUpdateSecretResponse) {
    return JSON.stringify(C1ApiStepupV1StepUpProviderServiceUpdateSecretResponse$outboundSchema.parse(c1ApiStepupV1StepUpProviderServiceUpdateSecretResponse));
}
export function c1ApiStepupV1StepUpProviderServiceUpdateSecretResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => C1ApiStepupV1StepUpProviderServiceUpdateSecretResponse$inboundSchema
        .parse(JSON.parse(x)), `Failed to parse 'C1ApiStepupV1StepUpProviderServiceUpdateSecretResponse' from JSON`);
}
