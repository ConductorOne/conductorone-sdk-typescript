/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";
import { safeParse } from "../../../lib/schemas.js";
import * as shared from "../shared/index.js";
/** @internal */
export const C1ApiTaskV1TaskActionsServiceSkipStepRequest$inboundSchema = z.object({
    task_id: z.string(),
    TaskActionsServiceSkipStepRequest: shared
        .TaskActionsServiceSkipStepRequest$inboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        "task_id": "taskId",
        "TaskActionsServiceSkipStepRequest": "taskActionsServiceSkipStepRequest",
    });
});
/** @internal */
export const C1ApiTaskV1TaskActionsServiceSkipStepRequest$outboundSchema = z.object({
    taskId: z.string(),
    taskActionsServiceSkipStepRequest: shared
        .TaskActionsServiceSkipStepRequest$outboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        taskId: "task_id",
        taskActionsServiceSkipStepRequest: "TaskActionsServiceSkipStepRequest",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var C1ApiTaskV1TaskActionsServiceSkipStepRequest$;
(function (C1ApiTaskV1TaskActionsServiceSkipStepRequest$) {
    /** @deprecated use `C1ApiTaskV1TaskActionsServiceSkipStepRequest$inboundSchema` instead. */
    C1ApiTaskV1TaskActionsServiceSkipStepRequest$.inboundSchema = C1ApiTaskV1TaskActionsServiceSkipStepRequest$inboundSchema;
    /** @deprecated use `C1ApiTaskV1TaskActionsServiceSkipStepRequest$outboundSchema` instead. */
    C1ApiTaskV1TaskActionsServiceSkipStepRequest$.outboundSchema = C1ApiTaskV1TaskActionsServiceSkipStepRequest$outboundSchema;
})(C1ApiTaskV1TaskActionsServiceSkipStepRequest$ || (C1ApiTaskV1TaskActionsServiceSkipStepRequest$ = {}));
export function c1ApiTaskV1TaskActionsServiceSkipStepRequestToJSON(c1ApiTaskV1TaskActionsServiceSkipStepRequest) {
    return JSON.stringify(C1ApiTaskV1TaskActionsServiceSkipStepRequest$outboundSchema.parse(c1ApiTaskV1TaskActionsServiceSkipStepRequest));
}
export function c1ApiTaskV1TaskActionsServiceSkipStepRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => C1ApiTaskV1TaskActionsServiceSkipStepRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'C1ApiTaskV1TaskActionsServiceSkipStepRequest' from JSON`);
}
/** @internal */
export const C1ApiTaskV1TaskActionsServiceSkipStepResponse$inboundSchema = z.object({
    ContentType: z.string(),
    StatusCode: z.number().int(),
    RawResponse: z.instanceof(Response),
    TaskServiceActionResponse: shared.TaskServiceActionResponse$inboundSchema
        .optional(),
}).transform((v) => {
    return remap$(v, {
        "ContentType": "contentType",
        "StatusCode": "statusCode",
        "RawResponse": "rawResponse",
        "TaskServiceActionResponse": "taskServiceActionResponse",
    });
});
/** @internal */
export const C1ApiTaskV1TaskActionsServiceSkipStepResponse$outboundSchema = z.object({
    contentType: z.string(),
    statusCode: z.number().int(),
    rawResponse: z.instanceof(Response).transform(() => {
        throw new Error("Response cannot be serialized");
    }),
    taskServiceActionResponse: shared.TaskServiceActionResponse$outboundSchema
        .optional(),
}).transform((v) => {
    return remap$(v, {
        contentType: "ContentType",
        statusCode: "StatusCode",
        rawResponse: "RawResponse",
        taskServiceActionResponse: "TaskServiceActionResponse",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var C1ApiTaskV1TaskActionsServiceSkipStepResponse$;
(function (C1ApiTaskV1TaskActionsServiceSkipStepResponse$) {
    /** @deprecated use `C1ApiTaskV1TaskActionsServiceSkipStepResponse$inboundSchema` instead. */
    C1ApiTaskV1TaskActionsServiceSkipStepResponse$.inboundSchema = C1ApiTaskV1TaskActionsServiceSkipStepResponse$inboundSchema;
    /** @deprecated use `C1ApiTaskV1TaskActionsServiceSkipStepResponse$outboundSchema` instead. */
    C1ApiTaskV1TaskActionsServiceSkipStepResponse$.outboundSchema = C1ApiTaskV1TaskActionsServiceSkipStepResponse$outboundSchema;
})(C1ApiTaskV1TaskActionsServiceSkipStepResponse$ || (C1ApiTaskV1TaskActionsServiceSkipStepResponse$ = {}));
export function c1ApiTaskV1TaskActionsServiceSkipStepResponseToJSON(c1ApiTaskV1TaskActionsServiceSkipStepResponse) {
    return JSON.stringify(C1ApiTaskV1TaskActionsServiceSkipStepResponse$outboundSchema.parse(c1ApiTaskV1TaskActionsServiceSkipStepResponse));
}
export function c1ApiTaskV1TaskActionsServiceSkipStepResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => C1ApiTaskV1TaskActionsServiceSkipStepResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'C1ApiTaskV1TaskActionsServiceSkipStepResponse' from JSON`);
}
