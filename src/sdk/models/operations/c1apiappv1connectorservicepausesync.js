/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";
import { safeParse } from "../../../lib/schemas.js";
import * as shared from "../shared/index.js";
/** @internal */
export const C1ApiAppV1ConnectorServicePauseSyncRequest$inboundSchema = z.object({
    app_id: z.nullable(z.string()),
    connector_id: z.nullable(z.string()),
    PauseSyncRequest: shared.PauseSyncRequest$inboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        "app_id": "appId",
        "connector_id": "connectorId",
        "PauseSyncRequest": "pauseSyncRequest",
    });
});
/** @internal */
export const C1ApiAppV1ConnectorServicePauseSyncRequest$outboundSchema = z.object({
    appId: z.nullable(z.string()),
    connectorId: z.nullable(z.string()),
    pauseSyncRequest: shared.PauseSyncRequest$outboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        appId: "app_id",
        connectorId: "connector_id",
        pauseSyncRequest: "PauseSyncRequest",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var C1ApiAppV1ConnectorServicePauseSyncRequest$;
(function (C1ApiAppV1ConnectorServicePauseSyncRequest$) {
    /** @deprecated use `C1ApiAppV1ConnectorServicePauseSyncRequest$inboundSchema` instead. */
    C1ApiAppV1ConnectorServicePauseSyncRequest$.inboundSchema = C1ApiAppV1ConnectorServicePauseSyncRequest$inboundSchema;
    /** @deprecated use `C1ApiAppV1ConnectorServicePauseSyncRequest$outboundSchema` instead. */
    C1ApiAppV1ConnectorServicePauseSyncRequest$.outboundSchema = C1ApiAppV1ConnectorServicePauseSyncRequest$outboundSchema;
})(C1ApiAppV1ConnectorServicePauseSyncRequest$ || (C1ApiAppV1ConnectorServicePauseSyncRequest$ = {}));
export function c1ApiAppV1ConnectorServicePauseSyncRequestToJSON(c1ApiAppV1ConnectorServicePauseSyncRequest) {
    return JSON.stringify(C1ApiAppV1ConnectorServicePauseSyncRequest$outboundSchema.parse(c1ApiAppV1ConnectorServicePauseSyncRequest));
}
export function c1ApiAppV1ConnectorServicePauseSyncRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => C1ApiAppV1ConnectorServicePauseSyncRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'C1ApiAppV1ConnectorServicePauseSyncRequest' from JSON`);
}
/** @internal */
export const C1ApiAppV1ConnectorServicePauseSyncResponse$inboundSchema = z.object({
    ContentType: z.string(),
    StatusCode: z.number().int(),
    RawResponse: z.instanceof(Response),
    PauseSyncResponse: shared.PauseSyncResponse$inboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        "ContentType": "contentType",
        "StatusCode": "statusCode",
        "RawResponse": "rawResponse",
        "PauseSyncResponse": "pauseSyncResponse",
    });
});
/** @internal */
export const C1ApiAppV1ConnectorServicePauseSyncResponse$outboundSchema = z.object({
    contentType: z.string(),
    statusCode: z.number().int(),
    rawResponse: z.instanceof(Response).transform(() => {
        throw new Error("Response cannot be serialized");
    }),
    pauseSyncResponse: shared.PauseSyncResponse$outboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        contentType: "ContentType",
        statusCode: "StatusCode",
        rawResponse: "RawResponse",
        pauseSyncResponse: "PauseSyncResponse",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var C1ApiAppV1ConnectorServicePauseSyncResponse$;
(function (C1ApiAppV1ConnectorServicePauseSyncResponse$) {
    /** @deprecated use `C1ApiAppV1ConnectorServicePauseSyncResponse$inboundSchema` instead. */
    C1ApiAppV1ConnectorServicePauseSyncResponse$.inboundSchema = C1ApiAppV1ConnectorServicePauseSyncResponse$inboundSchema;
    /** @deprecated use `C1ApiAppV1ConnectorServicePauseSyncResponse$outboundSchema` instead. */
    C1ApiAppV1ConnectorServicePauseSyncResponse$.outboundSchema = C1ApiAppV1ConnectorServicePauseSyncResponse$outboundSchema;
})(C1ApiAppV1ConnectorServicePauseSyncResponse$ || (C1ApiAppV1ConnectorServicePauseSyncResponse$ = {}));
export function c1ApiAppV1ConnectorServicePauseSyncResponseToJSON(c1ApiAppV1ConnectorServicePauseSyncResponse) {
    return JSON.stringify(C1ApiAppV1ConnectorServicePauseSyncResponse$outboundSchema.parse(c1ApiAppV1ConnectorServicePauseSyncResponse));
}
export function c1ApiAppV1ConnectorServicePauseSyncResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => C1ApiAppV1ConnectorServicePauseSyncResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'C1ApiAppV1ConnectorServicePauseSyncResponse' from JSON`);
}
