/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";
import { safeParse } from "../../../lib/schemas.js";
import * as shared from "../shared/index.js";
/** @internal */
export const C1ApiDirectoryV1DirectoryServiceDeleteRequest$inboundSchema = z.object({
    app_id: z.nullable(z.string()),
    DirectoryServiceDeleteRequest: shared
        .DirectoryServiceDeleteRequest$inboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        "app_id": "appId",
        "DirectoryServiceDeleteRequest": "directoryServiceDeleteRequest",
    });
});
/** @internal */
export const C1ApiDirectoryV1DirectoryServiceDeleteRequest$outboundSchema = z.object({
    appId: z.nullable(z.string()),
    directoryServiceDeleteRequest: shared
        .DirectoryServiceDeleteRequest$outboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        appId: "app_id",
        directoryServiceDeleteRequest: "DirectoryServiceDeleteRequest",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var C1ApiDirectoryV1DirectoryServiceDeleteRequest$;
(function (C1ApiDirectoryV1DirectoryServiceDeleteRequest$) {
    /** @deprecated use `C1ApiDirectoryV1DirectoryServiceDeleteRequest$inboundSchema` instead. */
    C1ApiDirectoryV1DirectoryServiceDeleteRequest$.inboundSchema = C1ApiDirectoryV1DirectoryServiceDeleteRequest$inboundSchema;
    /** @deprecated use `C1ApiDirectoryV1DirectoryServiceDeleteRequest$outboundSchema` instead. */
    C1ApiDirectoryV1DirectoryServiceDeleteRequest$.outboundSchema = C1ApiDirectoryV1DirectoryServiceDeleteRequest$outboundSchema;
})(C1ApiDirectoryV1DirectoryServiceDeleteRequest$ || (C1ApiDirectoryV1DirectoryServiceDeleteRequest$ = {}));
export function c1ApiDirectoryV1DirectoryServiceDeleteRequestToJSON(c1ApiDirectoryV1DirectoryServiceDeleteRequest) {
    return JSON.stringify(C1ApiDirectoryV1DirectoryServiceDeleteRequest$outboundSchema.parse(c1ApiDirectoryV1DirectoryServiceDeleteRequest));
}
export function c1ApiDirectoryV1DirectoryServiceDeleteRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => C1ApiDirectoryV1DirectoryServiceDeleteRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'C1ApiDirectoryV1DirectoryServiceDeleteRequest' from JSON`);
}
/** @internal */
export const C1ApiDirectoryV1DirectoryServiceDeleteResponse$inboundSchema = z.object({
    ContentType: z.string(),
    StatusCode: z.number().int(),
    RawResponse: z.instanceof(Response),
    DirectoryServiceDeleteResponse: shared
        .DirectoryServiceDeleteResponse$inboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        "ContentType": "contentType",
        "StatusCode": "statusCode",
        "RawResponse": "rawResponse",
        "DirectoryServiceDeleteResponse": "directoryServiceDeleteResponse",
    });
});
/** @internal */
export const C1ApiDirectoryV1DirectoryServiceDeleteResponse$outboundSchema = z.object({
    contentType: z.string(),
    statusCode: z.number().int(),
    rawResponse: z.instanceof(Response).transform(() => {
        throw new Error("Response cannot be serialized");
    }),
    directoryServiceDeleteResponse: shared
        .DirectoryServiceDeleteResponse$outboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        contentType: "ContentType",
        statusCode: "StatusCode",
        rawResponse: "RawResponse",
        directoryServiceDeleteResponse: "DirectoryServiceDeleteResponse",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var C1ApiDirectoryV1DirectoryServiceDeleteResponse$;
(function (C1ApiDirectoryV1DirectoryServiceDeleteResponse$) {
    /** @deprecated use `C1ApiDirectoryV1DirectoryServiceDeleteResponse$inboundSchema` instead. */
    C1ApiDirectoryV1DirectoryServiceDeleteResponse$.inboundSchema = C1ApiDirectoryV1DirectoryServiceDeleteResponse$inboundSchema;
    /** @deprecated use `C1ApiDirectoryV1DirectoryServiceDeleteResponse$outboundSchema` instead. */
    C1ApiDirectoryV1DirectoryServiceDeleteResponse$.outboundSchema = C1ApiDirectoryV1DirectoryServiceDeleteResponse$outboundSchema;
})(C1ApiDirectoryV1DirectoryServiceDeleteResponse$ || (C1ApiDirectoryV1DirectoryServiceDeleteResponse$ = {}));
export function c1ApiDirectoryV1DirectoryServiceDeleteResponseToJSON(c1ApiDirectoryV1DirectoryServiceDeleteResponse) {
    return JSON.stringify(C1ApiDirectoryV1DirectoryServiceDeleteResponse$outboundSchema.parse(c1ApiDirectoryV1DirectoryServiceDeleteResponse));
}
export function c1ApiDirectoryV1DirectoryServiceDeleteResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => C1ApiDirectoryV1DirectoryServiceDeleteResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'C1ApiDirectoryV1DirectoryServiceDeleteResponse' from JSON`);
}
