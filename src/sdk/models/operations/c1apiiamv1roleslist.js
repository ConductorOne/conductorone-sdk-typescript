/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";
import { safeParse } from "../../../lib/schemas.js";
import * as shared from "../shared/index.js";
/** @internal */
export const C1ApiIamV1RolesListRequest$inboundSchema = z.object({
    page_size: z.nullable(z.number().int()).optional(),
    page_token: z.nullable(z.string()).optional(),
}).transform((v) => {
    return remap$(v, {
        "page_size": "pageSize",
        "page_token": "pageToken",
    });
});
/** @internal */
export const C1ApiIamV1RolesListRequest$outboundSchema = z.object({
    pageSize: z.nullable(z.number().int()).optional(),
    pageToken: z.nullable(z.string()).optional(),
}).transform((v) => {
    return remap$(v, {
        pageSize: "page_size",
        pageToken: "page_token",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var C1ApiIamV1RolesListRequest$;
(function (C1ApiIamV1RolesListRequest$) {
    /** @deprecated use `C1ApiIamV1RolesListRequest$inboundSchema` instead. */
    C1ApiIamV1RolesListRequest$.inboundSchema = C1ApiIamV1RolesListRequest$inboundSchema;
    /** @deprecated use `C1ApiIamV1RolesListRequest$outboundSchema` instead. */
    C1ApiIamV1RolesListRequest$.outboundSchema = C1ApiIamV1RolesListRequest$outboundSchema;
})(C1ApiIamV1RolesListRequest$ || (C1ApiIamV1RolesListRequest$ = {}));
export function c1ApiIamV1RolesListRequestToJSON(c1ApiIamV1RolesListRequest) {
    return JSON.stringify(C1ApiIamV1RolesListRequest$outboundSchema.parse(c1ApiIamV1RolesListRequest));
}
export function c1ApiIamV1RolesListRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => C1ApiIamV1RolesListRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'C1ApiIamV1RolesListRequest' from JSON`);
}
/** @internal */
export const C1ApiIamV1RolesListResponse$inboundSchema = z.object({
    ContentType: z.string(),
    StatusCode: z.number().int(),
    RawResponse: z.instanceof(Response),
    ListRolesResponse: shared.ListRolesResponse$inboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        "ContentType": "contentType",
        "StatusCode": "statusCode",
        "RawResponse": "rawResponse",
        "ListRolesResponse": "listRolesResponse",
    });
});
/** @internal */
export const C1ApiIamV1RolesListResponse$outboundSchema = z.object({
    contentType: z.string(),
    statusCode: z.number().int(),
    rawResponse: z.instanceof(Response).transform(() => {
        throw new Error("Response cannot be serialized");
    }),
    listRolesResponse: shared.ListRolesResponse$outboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        contentType: "ContentType",
        statusCode: "StatusCode",
        rawResponse: "RawResponse",
        listRolesResponse: "ListRolesResponse",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var C1ApiIamV1RolesListResponse$;
(function (C1ApiIamV1RolesListResponse$) {
    /** @deprecated use `C1ApiIamV1RolesListResponse$inboundSchema` instead. */
    C1ApiIamV1RolesListResponse$.inboundSchema = C1ApiIamV1RolesListResponse$inboundSchema;
    /** @deprecated use `C1ApiIamV1RolesListResponse$outboundSchema` instead. */
    C1ApiIamV1RolesListResponse$.outboundSchema = C1ApiIamV1RolesListResponse$outboundSchema;
})(C1ApiIamV1RolesListResponse$ || (C1ApiIamV1RolesListResponse$ = {}));
export function c1ApiIamV1RolesListResponseToJSON(c1ApiIamV1RolesListResponse) {
    return JSON.stringify(C1ApiIamV1RolesListResponse$outboundSchema.parse(c1ApiIamV1RolesListResponse));
}
export function c1ApiIamV1RolesListResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => C1ApiIamV1RolesListResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'C1ApiIamV1RolesListResponse' from JSON`);
}
