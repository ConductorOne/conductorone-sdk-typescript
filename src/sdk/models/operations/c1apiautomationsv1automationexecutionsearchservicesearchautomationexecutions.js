/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";
import { safeParse } from "../../../lib/schemas.js";
import * as shared from "../shared/index.js";
/** @internal */
export const C1ApiAutomationsV1AutomationExecutionSearchServiceSearchAutomationExecutionsResponse$inboundSchema = z.object({
    ContentType: z.string(),
    StatusCode: z.number().int(),
    RawResponse: z.instanceof(Response),
    SearchAutomationExecutionsResponse: shared
        .SearchAutomationExecutionsResponse$inboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        "ContentType": "contentType",
        "StatusCode": "statusCode",
        "RawResponse": "rawResponse",
        "SearchAutomationExecutionsResponse": "searchAutomationExecutionsResponse",
    });
});
/** @internal */
export const C1ApiAutomationsV1AutomationExecutionSearchServiceSearchAutomationExecutionsResponse$outboundSchema = z.object({
    contentType: z.string(),
    statusCode: z.number().int(),
    rawResponse: z.instanceof(Response).transform(() => {
        throw new Error("Response cannot be serialized");
    }),
    searchAutomationExecutionsResponse: shared
        .SearchAutomationExecutionsResponse$outboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        contentType: "ContentType",
        statusCode: "StatusCode",
        rawResponse: "RawResponse",
        searchAutomationExecutionsResponse: "SearchAutomationExecutionsResponse",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var C1ApiAutomationsV1AutomationExecutionSearchServiceSearchAutomationExecutionsResponse$;
(function (C1ApiAutomationsV1AutomationExecutionSearchServiceSearchAutomationExecutionsResponse$) {
    /** @deprecated use `C1ApiAutomationsV1AutomationExecutionSearchServiceSearchAutomationExecutionsResponse$inboundSchema` instead. */
    C1ApiAutomationsV1AutomationExecutionSearchServiceSearchAutomationExecutionsResponse$.inboundSchema = C1ApiAutomationsV1AutomationExecutionSearchServiceSearchAutomationExecutionsResponse$inboundSchema;
    /** @deprecated use `C1ApiAutomationsV1AutomationExecutionSearchServiceSearchAutomationExecutionsResponse$outboundSchema` instead. */
    C1ApiAutomationsV1AutomationExecutionSearchServiceSearchAutomationExecutionsResponse$.outboundSchema = C1ApiAutomationsV1AutomationExecutionSearchServiceSearchAutomationExecutionsResponse$outboundSchema;
})(C1ApiAutomationsV1AutomationExecutionSearchServiceSearchAutomationExecutionsResponse$ || (C1ApiAutomationsV1AutomationExecutionSearchServiceSearchAutomationExecutionsResponse$ = {}));
export function c1ApiAutomationsV1AutomationExecutionSearchServiceSearchAutomationExecutionsResponseToJSON(c1ApiAutomationsV1AutomationExecutionSearchServiceSearchAutomationExecutionsResponse) {
    return JSON.stringify(C1ApiAutomationsV1AutomationExecutionSearchServiceSearchAutomationExecutionsResponse$outboundSchema
        .parse(c1ApiAutomationsV1AutomationExecutionSearchServiceSearchAutomationExecutionsResponse));
}
export function c1ApiAutomationsV1AutomationExecutionSearchServiceSearchAutomationExecutionsResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => C1ApiAutomationsV1AutomationExecutionSearchServiceSearchAutomationExecutionsResponse$inboundSchema
        .parse(JSON.parse(x)), `Failed to parse 'C1ApiAutomationsV1AutomationExecutionSearchServiceSearchAutomationExecutionsResponse' from JSON`);
}
