/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";
import { safeParse } from "../../../lib/schemas.js";
import * as shared from "../shared/index.js";
/** @internal */
export const C1ApiStepupV1StepUpProviderServiceUpdateRequest$inboundSchema = z.object({
    id: z.nullable(z.string()),
    UpdateStepUpProviderRequest: shared
        .UpdateStepUpProviderRequest$inboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        "UpdateStepUpProviderRequest": "updateStepUpProviderRequest",
    });
});
/** @internal */
export const C1ApiStepupV1StepUpProviderServiceUpdateRequest$outboundSchema = z.object({
    id: z.nullable(z.string()),
    updateStepUpProviderRequest: shared
        .UpdateStepUpProviderRequest$outboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        updateStepUpProviderRequest: "UpdateStepUpProviderRequest",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var C1ApiStepupV1StepUpProviderServiceUpdateRequest$;
(function (C1ApiStepupV1StepUpProviderServiceUpdateRequest$) {
    /** @deprecated use `C1ApiStepupV1StepUpProviderServiceUpdateRequest$inboundSchema` instead. */
    C1ApiStepupV1StepUpProviderServiceUpdateRequest$.inboundSchema = C1ApiStepupV1StepUpProviderServiceUpdateRequest$inboundSchema;
    /** @deprecated use `C1ApiStepupV1StepUpProviderServiceUpdateRequest$outboundSchema` instead. */
    C1ApiStepupV1StepUpProviderServiceUpdateRequest$.outboundSchema = C1ApiStepupV1StepUpProviderServiceUpdateRequest$outboundSchema;
})(C1ApiStepupV1StepUpProviderServiceUpdateRequest$ || (C1ApiStepupV1StepUpProviderServiceUpdateRequest$ = {}));
export function c1ApiStepupV1StepUpProviderServiceUpdateRequestToJSON(c1ApiStepupV1StepUpProviderServiceUpdateRequest) {
    return JSON.stringify(C1ApiStepupV1StepUpProviderServiceUpdateRequest$outboundSchema.parse(c1ApiStepupV1StepUpProviderServiceUpdateRequest));
}
export function c1ApiStepupV1StepUpProviderServiceUpdateRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => C1ApiStepupV1StepUpProviderServiceUpdateRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'C1ApiStepupV1StepUpProviderServiceUpdateRequest' from JSON`);
}
/** @internal */
export const C1ApiStepupV1StepUpProviderServiceUpdateResponse$inboundSchema = z.object({
    ContentType: z.string(),
    StatusCode: z.number().int(),
    RawResponse: z.instanceof(Response),
    UpdateStepUpProviderResponse: shared
        .UpdateStepUpProviderResponse$inboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        "ContentType": "contentType",
        "StatusCode": "statusCode",
        "RawResponse": "rawResponse",
        "UpdateStepUpProviderResponse": "updateStepUpProviderResponse",
    });
});
/** @internal */
export const C1ApiStepupV1StepUpProviderServiceUpdateResponse$outboundSchema = z.object({
    contentType: z.string(),
    statusCode: z.number().int(),
    rawResponse: z.instanceof(Response).transform(() => {
        throw new Error("Response cannot be serialized");
    }),
    updateStepUpProviderResponse: shared
        .UpdateStepUpProviderResponse$outboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        contentType: "ContentType",
        statusCode: "StatusCode",
        rawResponse: "RawResponse",
        updateStepUpProviderResponse: "UpdateStepUpProviderResponse",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var C1ApiStepupV1StepUpProviderServiceUpdateResponse$;
(function (C1ApiStepupV1StepUpProviderServiceUpdateResponse$) {
    /** @deprecated use `C1ApiStepupV1StepUpProviderServiceUpdateResponse$inboundSchema` instead. */
    C1ApiStepupV1StepUpProviderServiceUpdateResponse$.inboundSchema = C1ApiStepupV1StepUpProviderServiceUpdateResponse$inboundSchema;
    /** @deprecated use `C1ApiStepupV1StepUpProviderServiceUpdateResponse$outboundSchema` instead. */
    C1ApiStepupV1StepUpProviderServiceUpdateResponse$.outboundSchema = C1ApiStepupV1StepUpProviderServiceUpdateResponse$outboundSchema;
})(C1ApiStepupV1StepUpProviderServiceUpdateResponse$ || (C1ApiStepupV1StepUpProviderServiceUpdateResponse$ = {}));
export function c1ApiStepupV1StepUpProviderServiceUpdateResponseToJSON(c1ApiStepupV1StepUpProviderServiceUpdateResponse) {
    return JSON.stringify(C1ApiStepupV1StepUpProviderServiceUpdateResponse$outboundSchema.parse(c1ApiStepupV1StepUpProviderServiceUpdateResponse));
}
export function c1ApiStepupV1StepUpProviderServiceUpdateResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => C1ApiStepupV1StepUpProviderServiceUpdateResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'C1ApiStepupV1StepUpProviderServiceUpdateResponse' from JSON`);
}
