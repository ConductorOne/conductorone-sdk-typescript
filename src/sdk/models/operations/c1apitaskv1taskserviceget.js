/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";
import { safeParse } from "../../../lib/schemas.js";
import * as shared from "../shared/index.js";
/** @internal */
export const C1ApiTaskV1TaskServiceGetRequest$inboundSchema = z.object({
    id: z.nullable(z.string()),
});
/** @internal */
export const C1ApiTaskV1TaskServiceGetRequest$outboundSchema = z.object({
    id: z.nullable(z.string()),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var C1ApiTaskV1TaskServiceGetRequest$;
(function (C1ApiTaskV1TaskServiceGetRequest$) {
    /** @deprecated use `C1ApiTaskV1TaskServiceGetRequest$inboundSchema` instead. */
    C1ApiTaskV1TaskServiceGetRequest$.inboundSchema = C1ApiTaskV1TaskServiceGetRequest$inboundSchema;
    /** @deprecated use `C1ApiTaskV1TaskServiceGetRequest$outboundSchema` instead. */
    C1ApiTaskV1TaskServiceGetRequest$.outboundSchema = C1ApiTaskV1TaskServiceGetRequest$outboundSchema;
})(C1ApiTaskV1TaskServiceGetRequest$ || (C1ApiTaskV1TaskServiceGetRequest$ = {}));
export function c1ApiTaskV1TaskServiceGetRequestToJSON(c1ApiTaskV1TaskServiceGetRequest) {
    return JSON.stringify(C1ApiTaskV1TaskServiceGetRequest$outboundSchema.parse(c1ApiTaskV1TaskServiceGetRequest));
}
export function c1ApiTaskV1TaskServiceGetRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => C1ApiTaskV1TaskServiceGetRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'C1ApiTaskV1TaskServiceGetRequest' from JSON`);
}
/** @internal */
export const C1ApiTaskV1TaskServiceGetResponse$inboundSchema = z.object({
    ContentType: z.string(),
    StatusCode: z.number().int(),
    RawResponse: z.instanceof(Response),
    TaskServiceGetResponse: shared.TaskServiceGetResponse$inboundSchema
        .optional(),
}).transform((v) => {
    return remap$(v, {
        "ContentType": "contentType",
        "StatusCode": "statusCode",
        "RawResponse": "rawResponse",
        "TaskServiceGetResponse": "taskServiceGetResponse",
    });
});
/** @internal */
export const C1ApiTaskV1TaskServiceGetResponse$outboundSchema = z.object({
    contentType: z.string(),
    statusCode: z.number().int(),
    rawResponse: z.instanceof(Response).transform(() => {
        throw new Error("Response cannot be serialized");
    }),
    taskServiceGetResponse: shared.TaskServiceGetResponse$outboundSchema
        .optional(),
}).transform((v) => {
    return remap$(v, {
        contentType: "ContentType",
        statusCode: "StatusCode",
        rawResponse: "RawResponse",
        taskServiceGetResponse: "TaskServiceGetResponse",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var C1ApiTaskV1TaskServiceGetResponse$;
(function (C1ApiTaskV1TaskServiceGetResponse$) {
    /** @deprecated use `C1ApiTaskV1TaskServiceGetResponse$inboundSchema` instead. */
    C1ApiTaskV1TaskServiceGetResponse$.inboundSchema = C1ApiTaskV1TaskServiceGetResponse$inboundSchema;
    /** @deprecated use `C1ApiTaskV1TaskServiceGetResponse$outboundSchema` instead. */
    C1ApiTaskV1TaskServiceGetResponse$.outboundSchema = C1ApiTaskV1TaskServiceGetResponse$outboundSchema;
})(C1ApiTaskV1TaskServiceGetResponse$ || (C1ApiTaskV1TaskServiceGetResponse$ = {}));
export function c1ApiTaskV1TaskServiceGetResponseToJSON(c1ApiTaskV1TaskServiceGetResponse) {
    return JSON.stringify(C1ApiTaskV1TaskServiceGetResponse$outboundSchema.parse(c1ApiTaskV1TaskServiceGetResponse));
}
export function c1ApiTaskV1TaskServiceGetResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => C1ApiTaskV1TaskServiceGetResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'C1ApiTaskV1TaskServiceGetResponse' from JSON`);
}
