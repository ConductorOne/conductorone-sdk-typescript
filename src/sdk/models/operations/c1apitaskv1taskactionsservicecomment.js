/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";
import { safeParse } from "../../../lib/schemas.js";
import * as shared from "../shared/index.js";
/** @internal */
export const C1ApiTaskV1TaskActionsServiceCommentRequest$inboundSchema = z.object({
    task_id: z.nullable(z.string()),
    TaskActionsServiceCommentRequest: shared
        .TaskActionsServiceCommentRequest$inboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        "task_id": "taskId",
        "TaskActionsServiceCommentRequest": "taskActionsServiceCommentRequest",
    });
});
/** @internal */
export const C1ApiTaskV1TaskActionsServiceCommentRequest$outboundSchema = z.object({
    taskId: z.nullable(z.string()),
    taskActionsServiceCommentRequest: shared
        .TaskActionsServiceCommentRequest$outboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        taskId: "task_id",
        taskActionsServiceCommentRequest: "TaskActionsServiceCommentRequest",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var C1ApiTaskV1TaskActionsServiceCommentRequest$;
(function (C1ApiTaskV1TaskActionsServiceCommentRequest$) {
    /** @deprecated use `C1ApiTaskV1TaskActionsServiceCommentRequest$inboundSchema` instead. */
    C1ApiTaskV1TaskActionsServiceCommentRequest$.inboundSchema = C1ApiTaskV1TaskActionsServiceCommentRequest$inboundSchema;
    /** @deprecated use `C1ApiTaskV1TaskActionsServiceCommentRequest$outboundSchema` instead. */
    C1ApiTaskV1TaskActionsServiceCommentRequest$.outboundSchema = C1ApiTaskV1TaskActionsServiceCommentRequest$outboundSchema;
})(C1ApiTaskV1TaskActionsServiceCommentRequest$ || (C1ApiTaskV1TaskActionsServiceCommentRequest$ = {}));
export function c1ApiTaskV1TaskActionsServiceCommentRequestToJSON(c1ApiTaskV1TaskActionsServiceCommentRequest) {
    return JSON.stringify(C1ApiTaskV1TaskActionsServiceCommentRequest$outboundSchema.parse(c1ApiTaskV1TaskActionsServiceCommentRequest));
}
export function c1ApiTaskV1TaskActionsServiceCommentRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => C1ApiTaskV1TaskActionsServiceCommentRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'C1ApiTaskV1TaskActionsServiceCommentRequest' from JSON`);
}
/** @internal */
export const C1ApiTaskV1TaskActionsServiceCommentResponse$inboundSchema = z.object({
    ContentType: z.string(),
    StatusCode: z.number().int(),
    RawResponse: z.instanceof(Response),
    TaskActionsServiceCommentResponse: shared
        .TaskActionsServiceCommentResponse$inboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        "ContentType": "contentType",
        "StatusCode": "statusCode",
        "RawResponse": "rawResponse",
        "TaskActionsServiceCommentResponse": "taskActionsServiceCommentResponse",
    });
});
/** @internal */
export const C1ApiTaskV1TaskActionsServiceCommentResponse$outboundSchema = z.object({
    contentType: z.string(),
    statusCode: z.number().int(),
    rawResponse: z.instanceof(Response).transform(() => {
        throw new Error("Response cannot be serialized");
    }),
    taskActionsServiceCommentResponse: shared
        .TaskActionsServiceCommentResponse$outboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        contentType: "ContentType",
        statusCode: "StatusCode",
        rawResponse: "RawResponse",
        taskActionsServiceCommentResponse: "TaskActionsServiceCommentResponse",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var C1ApiTaskV1TaskActionsServiceCommentResponse$;
(function (C1ApiTaskV1TaskActionsServiceCommentResponse$) {
    /** @deprecated use `C1ApiTaskV1TaskActionsServiceCommentResponse$inboundSchema` instead. */
    C1ApiTaskV1TaskActionsServiceCommentResponse$.inboundSchema = C1ApiTaskV1TaskActionsServiceCommentResponse$inboundSchema;
    /** @deprecated use `C1ApiTaskV1TaskActionsServiceCommentResponse$outboundSchema` instead. */
    C1ApiTaskV1TaskActionsServiceCommentResponse$.outboundSchema = C1ApiTaskV1TaskActionsServiceCommentResponse$outboundSchema;
})(C1ApiTaskV1TaskActionsServiceCommentResponse$ || (C1ApiTaskV1TaskActionsServiceCommentResponse$ = {}));
export function c1ApiTaskV1TaskActionsServiceCommentResponseToJSON(c1ApiTaskV1TaskActionsServiceCommentResponse) {
    return JSON.stringify(C1ApiTaskV1TaskActionsServiceCommentResponse$outboundSchema.parse(c1ApiTaskV1TaskActionsServiceCommentResponse));
}
export function c1ApiTaskV1TaskActionsServiceCommentResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => C1ApiTaskV1TaskActionsServiceCommentResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'C1ApiTaskV1TaskActionsServiceCommentResponse' from JSON`);
}
