/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";
import { safeParse } from "../../../lib/schemas.js";
import * as shared from "../shared/index.js";
/** @internal */
export const C1ApiAppV1AppResourceOwnersRemoveRequest$inboundSchema = z.object({
    app_id: z.nullable(z.string()),
    resource_type_id: z.nullable(z.string()),
    resource_id: z.nullable(z.string()),
    RemoveAppResourceOwnerRequest: shared
        .RemoveAppResourceOwnerRequest$inboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        "app_id": "appId",
        "resource_type_id": "resourceTypeId",
        "resource_id": "resourceId",
        "RemoveAppResourceOwnerRequest": "removeAppResourceOwnerRequest",
    });
});
/** @internal */
export const C1ApiAppV1AppResourceOwnersRemoveRequest$outboundSchema = z.object({
    appId: z.nullable(z.string()),
    resourceTypeId: z.nullable(z.string()),
    resourceId: z.nullable(z.string()),
    removeAppResourceOwnerRequest: shared
        .RemoveAppResourceOwnerRequest$outboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        appId: "app_id",
        resourceTypeId: "resource_type_id",
        resourceId: "resource_id",
        removeAppResourceOwnerRequest: "RemoveAppResourceOwnerRequest",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var C1ApiAppV1AppResourceOwnersRemoveRequest$;
(function (C1ApiAppV1AppResourceOwnersRemoveRequest$) {
    /** @deprecated use `C1ApiAppV1AppResourceOwnersRemoveRequest$inboundSchema` instead. */
    C1ApiAppV1AppResourceOwnersRemoveRequest$.inboundSchema = C1ApiAppV1AppResourceOwnersRemoveRequest$inboundSchema;
    /** @deprecated use `C1ApiAppV1AppResourceOwnersRemoveRequest$outboundSchema` instead. */
    C1ApiAppV1AppResourceOwnersRemoveRequest$.outboundSchema = C1ApiAppV1AppResourceOwnersRemoveRequest$outboundSchema;
})(C1ApiAppV1AppResourceOwnersRemoveRequest$ || (C1ApiAppV1AppResourceOwnersRemoveRequest$ = {}));
export function c1ApiAppV1AppResourceOwnersRemoveRequestToJSON(c1ApiAppV1AppResourceOwnersRemoveRequest) {
    return JSON.stringify(C1ApiAppV1AppResourceOwnersRemoveRequest$outboundSchema.parse(c1ApiAppV1AppResourceOwnersRemoveRequest));
}
export function c1ApiAppV1AppResourceOwnersRemoveRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => C1ApiAppV1AppResourceOwnersRemoveRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'C1ApiAppV1AppResourceOwnersRemoveRequest' from JSON`);
}
/** @internal */
export const C1ApiAppV1AppResourceOwnersRemoveResponse$inboundSchema = z.object({
    ContentType: z.string(),
    StatusCode: z.number().int(),
    RawResponse: z.instanceof(Response),
    RemoveAppResourceOwnerResponse: shared
        .RemoveAppResourceOwnerResponse$inboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        "ContentType": "contentType",
        "StatusCode": "statusCode",
        "RawResponse": "rawResponse",
        "RemoveAppResourceOwnerResponse": "removeAppResourceOwnerResponse",
    });
});
/** @internal */
export const C1ApiAppV1AppResourceOwnersRemoveResponse$outboundSchema = z.object({
    contentType: z.string(),
    statusCode: z.number().int(),
    rawResponse: z.instanceof(Response).transform(() => {
        throw new Error("Response cannot be serialized");
    }),
    removeAppResourceOwnerResponse: shared
        .RemoveAppResourceOwnerResponse$outboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        contentType: "ContentType",
        statusCode: "StatusCode",
        rawResponse: "RawResponse",
        removeAppResourceOwnerResponse: "RemoveAppResourceOwnerResponse",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var C1ApiAppV1AppResourceOwnersRemoveResponse$;
(function (C1ApiAppV1AppResourceOwnersRemoveResponse$) {
    /** @deprecated use `C1ApiAppV1AppResourceOwnersRemoveResponse$inboundSchema` instead. */
    C1ApiAppV1AppResourceOwnersRemoveResponse$.inboundSchema = C1ApiAppV1AppResourceOwnersRemoveResponse$inboundSchema;
    /** @deprecated use `C1ApiAppV1AppResourceOwnersRemoveResponse$outboundSchema` instead. */
    C1ApiAppV1AppResourceOwnersRemoveResponse$.outboundSchema = C1ApiAppV1AppResourceOwnersRemoveResponse$outboundSchema;
})(C1ApiAppV1AppResourceOwnersRemoveResponse$ || (C1ApiAppV1AppResourceOwnersRemoveResponse$ = {}));
export function c1ApiAppV1AppResourceOwnersRemoveResponseToJSON(c1ApiAppV1AppResourceOwnersRemoveResponse) {
    return JSON.stringify(C1ApiAppV1AppResourceOwnersRemoveResponse$outboundSchema.parse(c1ApiAppV1AppResourceOwnersRemoveResponse));
}
export function c1ApiAppV1AppResourceOwnersRemoveResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => C1ApiAppV1AppResourceOwnersRemoveResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'C1ApiAppV1AppResourceOwnersRemoveResponse' from JSON`);
}
