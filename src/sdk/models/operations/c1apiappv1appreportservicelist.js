/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";
import { safeParse } from "../../../lib/schemas.js";
import * as shared from "../shared/index.js";
/** @internal */
export const C1ApiAppV1AppReportServiceListRequest$inboundSchema = z.object({
    app_id: z.nullable(z.string()),
    page_size: z.nullable(z.number().int()).optional(),
    page_token: z.nullable(z.string()).optional(),
}).transform((v) => {
    return remap$(v, {
        "app_id": "appId",
        "page_size": "pageSize",
        "page_token": "pageToken",
    });
});
/** @internal */
export const C1ApiAppV1AppReportServiceListRequest$outboundSchema = z.object({
    appId: z.nullable(z.string()),
    pageSize: z.nullable(z.number().int()).optional(),
    pageToken: z.nullable(z.string()).optional(),
}).transform((v) => {
    return remap$(v, {
        appId: "app_id",
        pageSize: "page_size",
        pageToken: "page_token",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var C1ApiAppV1AppReportServiceListRequest$;
(function (C1ApiAppV1AppReportServiceListRequest$) {
    /** @deprecated use `C1ApiAppV1AppReportServiceListRequest$inboundSchema` instead. */
    C1ApiAppV1AppReportServiceListRequest$.inboundSchema = C1ApiAppV1AppReportServiceListRequest$inboundSchema;
    /** @deprecated use `C1ApiAppV1AppReportServiceListRequest$outboundSchema` instead. */
    C1ApiAppV1AppReportServiceListRequest$.outboundSchema = C1ApiAppV1AppReportServiceListRequest$outboundSchema;
})(C1ApiAppV1AppReportServiceListRequest$ || (C1ApiAppV1AppReportServiceListRequest$ = {}));
export function c1ApiAppV1AppReportServiceListRequestToJSON(c1ApiAppV1AppReportServiceListRequest) {
    return JSON.stringify(C1ApiAppV1AppReportServiceListRequest$outboundSchema.parse(c1ApiAppV1AppReportServiceListRequest));
}
export function c1ApiAppV1AppReportServiceListRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => C1ApiAppV1AppReportServiceListRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'C1ApiAppV1AppReportServiceListRequest' from JSON`);
}
/** @internal */
export const C1ApiAppV1AppReportServiceListResponse$inboundSchema = z.object({
    ContentType: z.string(),
    StatusCode: z.number().int(),
    RawResponse: z.instanceof(Response),
    AppReportServiceListResponse: shared
        .AppReportServiceListResponse$inboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        "ContentType": "contentType",
        "StatusCode": "statusCode",
        "RawResponse": "rawResponse",
        "AppReportServiceListResponse": "appReportServiceListResponse",
    });
});
/** @internal */
export const C1ApiAppV1AppReportServiceListResponse$outboundSchema = z.object({
    contentType: z.string(),
    statusCode: z.number().int(),
    rawResponse: z.instanceof(Response).transform(() => {
        throw new Error("Response cannot be serialized");
    }),
    appReportServiceListResponse: shared
        .AppReportServiceListResponse$outboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        contentType: "ContentType",
        statusCode: "StatusCode",
        rawResponse: "RawResponse",
        appReportServiceListResponse: "AppReportServiceListResponse",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var C1ApiAppV1AppReportServiceListResponse$;
(function (C1ApiAppV1AppReportServiceListResponse$) {
    /** @deprecated use `C1ApiAppV1AppReportServiceListResponse$inboundSchema` instead. */
    C1ApiAppV1AppReportServiceListResponse$.inboundSchema = C1ApiAppV1AppReportServiceListResponse$inboundSchema;
    /** @deprecated use `C1ApiAppV1AppReportServiceListResponse$outboundSchema` instead. */
    C1ApiAppV1AppReportServiceListResponse$.outboundSchema = C1ApiAppV1AppReportServiceListResponse$outboundSchema;
})(C1ApiAppV1AppReportServiceListResponse$ || (C1ApiAppV1AppReportServiceListResponse$ = {}));
export function c1ApiAppV1AppReportServiceListResponseToJSON(c1ApiAppV1AppReportServiceListResponse) {
    return JSON.stringify(C1ApiAppV1AppReportServiceListResponse$outboundSchema.parse(c1ApiAppV1AppReportServiceListResponse));
}
export function c1ApiAppV1AppReportServiceListResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => C1ApiAppV1AppReportServiceListResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'C1ApiAppV1AppReportServiceListResponse' from JSON`);
}
