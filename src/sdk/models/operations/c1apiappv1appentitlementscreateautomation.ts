/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { remap as remap$ } from "../../../lib/primitives.js";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import * as shared from "../shared/index.js";

export type C1ApiAppV1AppEntitlementsCreateAutomationRequest = {
  appId: string | null;
  appEntitlementId: string | null;
  createAutomationRequest?: shared.CreateAutomationRequest | undefined;
};

export type C1ApiAppV1AppEntitlementsCreateAutomationResponse = {
  /**
   * HTTP response content type for this operation
   */
  contentType: string;
  /**
   * HTTP response status code for this operation
   */
  statusCode: number;
  /**
   * Raw HTTP response; suitable for custom response parsing
   */
  rawResponse: Response;
  /**
   * Successful response
   */
  createAutomationResponse?: shared.CreateAutomationResponse | undefined;
};

/** @internal */
export const C1ApiAppV1AppEntitlementsCreateAutomationRequest$inboundSchema:
  z.ZodType<
    C1ApiAppV1AppEntitlementsCreateAutomationRequest,
    z.ZodTypeDef,
    unknown
  > = z.object({
    app_id: z.nullable(z.string()),
    app_entitlement_id: z.nullable(z.string()),
    CreateAutomationRequest: shared.CreateAutomationRequest$inboundSchema
      .optional(),
  }).transform((v) => {
    return remap$(v, {
      "app_id": "appId",
      "app_entitlement_id": "appEntitlementId",
      "CreateAutomationRequest": "createAutomationRequest",
    });
  });

/** @internal */
export type C1ApiAppV1AppEntitlementsCreateAutomationRequest$Outbound = {
  app_id: string | null;
  app_entitlement_id: string | null;
  CreateAutomationRequest?: shared.CreateAutomationRequest$Outbound | undefined;
};

/** @internal */
export const C1ApiAppV1AppEntitlementsCreateAutomationRequest$outboundSchema:
  z.ZodType<
    C1ApiAppV1AppEntitlementsCreateAutomationRequest$Outbound,
    z.ZodTypeDef,
    C1ApiAppV1AppEntitlementsCreateAutomationRequest
  > = z.object({
    appId: z.nullable(z.string()),
    appEntitlementId: z.nullable(z.string()),
    createAutomationRequest: shared.CreateAutomationRequest$outboundSchema
      .optional(),
  }).transform((v) => {
    return remap$(v, {
      appId: "app_id",
      appEntitlementId: "app_entitlement_id",
      createAutomationRequest: "CreateAutomationRequest",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace C1ApiAppV1AppEntitlementsCreateAutomationRequest$ {
  /** @deprecated use `C1ApiAppV1AppEntitlementsCreateAutomationRequest$inboundSchema` instead. */
  export const inboundSchema =
    C1ApiAppV1AppEntitlementsCreateAutomationRequest$inboundSchema;
  /** @deprecated use `C1ApiAppV1AppEntitlementsCreateAutomationRequest$outboundSchema` instead. */
  export const outboundSchema =
    C1ApiAppV1AppEntitlementsCreateAutomationRequest$outboundSchema;
  /** @deprecated use `C1ApiAppV1AppEntitlementsCreateAutomationRequest$Outbound` instead. */
  export type Outbound =
    C1ApiAppV1AppEntitlementsCreateAutomationRequest$Outbound;
}

export function c1ApiAppV1AppEntitlementsCreateAutomationRequestToJSON(
  c1ApiAppV1AppEntitlementsCreateAutomationRequest:
    C1ApiAppV1AppEntitlementsCreateAutomationRequest,
): string {
  return JSON.stringify(
    C1ApiAppV1AppEntitlementsCreateAutomationRequest$outboundSchema.parse(
      c1ApiAppV1AppEntitlementsCreateAutomationRequest,
    ),
  );
}

export function c1ApiAppV1AppEntitlementsCreateAutomationRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  C1ApiAppV1AppEntitlementsCreateAutomationRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      C1ApiAppV1AppEntitlementsCreateAutomationRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'C1ApiAppV1AppEntitlementsCreateAutomationRequest' from JSON`,
  );
}

/** @internal */
export const C1ApiAppV1AppEntitlementsCreateAutomationResponse$inboundSchema:
  z.ZodType<
    C1ApiAppV1AppEntitlementsCreateAutomationResponse,
    z.ZodTypeDef,
    unknown
  > = z.object({
    ContentType: z.string(),
    StatusCode: z.number().int(),
    RawResponse: z.instanceof(Response),
    CreateAutomationResponse: shared.CreateAutomationResponse$inboundSchema
      .optional(),
  }).transform((v) => {
    return remap$(v, {
      "ContentType": "contentType",
      "StatusCode": "statusCode",
      "RawResponse": "rawResponse",
      "CreateAutomationResponse": "createAutomationResponse",
    });
  });

/** @internal */
export type C1ApiAppV1AppEntitlementsCreateAutomationResponse$Outbound = {
  ContentType: string;
  StatusCode: number;
  RawResponse: never;
  CreateAutomationResponse?:
    | shared.CreateAutomationResponse$Outbound
    | undefined;
};

/** @internal */
export const C1ApiAppV1AppEntitlementsCreateAutomationResponse$outboundSchema:
  z.ZodType<
    C1ApiAppV1AppEntitlementsCreateAutomationResponse$Outbound,
    z.ZodTypeDef,
    C1ApiAppV1AppEntitlementsCreateAutomationResponse
  > = z.object({
    contentType: z.string(),
    statusCode: z.number().int(),
    rawResponse: z.instanceof(Response).transform(() => {
      throw new Error("Response cannot be serialized");
    }),
    createAutomationResponse: shared.CreateAutomationResponse$outboundSchema
      .optional(),
  }).transform((v) => {
    return remap$(v, {
      contentType: "ContentType",
      statusCode: "StatusCode",
      rawResponse: "RawResponse",
      createAutomationResponse: "CreateAutomationResponse",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace C1ApiAppV1AppEntitlementsCreateAutomationResponse$ {
  /** @deprecated use `C1ApiAppV1AppEntitlementsCreateAutomationResponse$inboundSchema` instead. */
  export const inboundSchema =
    C1ApiAppV1AppEntitlementsCreateAutomationResponse$inboundSchema;
  /** @deprecated use `C1ApiAppV1AppEntitlementsCreateAutomationResponse$outboundSchema` instead. */
  export const outboundSchema =
    C1ApiAppV1AppEntitlementsCreateAutomationResponse$outboundSchema;
  /** @deprecated use `C1ApiAppV1AppEntitlementsCreateAutomationResponse$Outbound` instead. */
  export type Outbound =
    C1ApiAppV1AppEntitlementsCreateAutomationResponse$Outbound;
}

export function c1ApiAppV1AppEntitlementsCreateAutomationResponseToJSON(
  c1ApiAppV1AppEntitlementsCreateAutomationResponse:
    C1ApiAppV1AppEntitlementsCreateAutomationResponse,
): string {
  return JSON.stringify(
    C1ApiAppV1AppEntitlementsCreateAutomationResponse$outboundSchema.parse(
      c1ApiAppV1AppEntitlementsCreateAutomationResponse,
    ),
  );
}

export function c1ApiAppV1AppEntitlementsCreateAutomationResponseFromJSON(
  jsonString: string,
): SafeParseResult<
  C1ApiAppV1AppEntitlementsCreateAutomationResponse,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      C1ApiAppV1AppEntitlementsCreateAutomationResponse$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'C1ApiAppV1AppEntitlementsCreateAutomationResponse' from JSON`,
  );
}
