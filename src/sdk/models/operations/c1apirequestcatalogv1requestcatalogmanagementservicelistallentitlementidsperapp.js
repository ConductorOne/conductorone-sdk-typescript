/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";
import { safeParse } from "../../../lib/schemas.js";
import * as shared from "../shared/index.js";
/** @internal */
export const C1ApiRequestcatalogV1RequestCatalogManagementServiceListAllEntitlementIdsPerAppRequest$inboundSchema = z.object({
    catalog_id: z.nullable(z.string()),
}).transform((v) => {
    return remap$(v, {
        "catalog_id": "catalogId",
    });
});
/** @internal */
export const C1ApiRequestcatalogV1RequestCatalogManagementServiceListAllEntitlementIdsPerAppRequest$outboundSchema = z.object({
    catalogId: z.nullable(z.string()),
}).transform((v) => {
    return remap$(v, {
        catalogId: "catalog_id",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var C1ApiRequestcatalogV1RequestCatalogManagementServiceListAllEntitlementIdsPerAppRequest$;
(function (C1ApiRequestcatalogV1RequestCatalogManagementServiceListAllEntitlementIdsPerAppRequest$) {
    /** @deprecated use `C1ApiRequestcatalogV1RequestCatalogManagementServiceListAllEntitlementIdsPerAppRequest$inboundSchema` instead. */
    C1ApiRequestcatalogV1RequestCatalogManagementServiceListAllEntitlementIdsPerAppRequest$.inboundSchema = C1ApiRequestcatalogV1RequestCatalogManagementServiceListAllEntitlementIdsPerAppRequest$inboundSchema;
    /** @deprecated use `C1ApiRequestcatalogV1RequestCatalogManagementServiceListAllEntitlementIdsPerAppRequest$outboundSchema` instead. */
    C1ApiRequestcatalogV1RequestCatalogManagementServiceListAllEntitlementIdsPerAppRequest$.outboundSchema = C1ApiRequestcatalogV1RequestCatalogManagementServiceListAllEntitlementIdsPerAppRequest$outboundSchema;
})(C1ApiRequestcatalogV1RequestCatalogManagementServiceListAllEntitlementIdsPerAppRequest$ || (C1ApiRequestcatalogV1RequestCatalogManagementServiceListAllEntitlementIdsPerAppRequest$ = {}));
export function c1ApiRequestcatalogV1RequestCatalogManagementServiceListAllEntitlementIdsPerAppRequestToJSON(c1ApiRequestcatalogV1RequestCatalogManagementServiceListAllEntitlementIdsPerAppRequest) {
    return JSON.stringify(C1ApiRequestcatalogV1RequestCatalogManagementServiceListAllEntitlementIdsPerAppRequest$outboundSchema
        .parse(c1ApiRequestcatalogV1RequestCatalogManagementServiceListAllEntitlementIdsPerAppRequest));
}
export function c1ApiRequestcatalogV1RequestCatalogManagementServiceListAllEntitlementIdsPerAppRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => C1ApiRequestcatalogV1RequestCatalogManagementServiceListAllEntitlementIdsPerAppRequest$inboundSchema
        .parse(JSON.parse(x)), `Failed to parse 'C1ApiRequestcatalogV1RequestCatalogManagementServiceListAllEntitlementIdsPerAppRequest' from JSON`);
}
/** @internal */
export const C1ApiRequestcatalogV1RequestCatalogManagementServiceListAllEntitlementIdsPerAppResponse$inboundSchema = z.object({
    ContentType: z.string(),
    StatusCode: z.number().int(),
    RawResponse: z.instanceof(Response),
    RequestCatalogManagementServiceListAllEntitlementIdsPerCatalogResponse: shared
        .RequestCatalogManagementServiceListAllEntitlementIdsPerCatalogResponse$inboundSchema
        .optional(),
}).transform((v) => {
    return remap$(v, {
        "ContentType": "contentType",
        "StatusCode": "statusCode",
        "RawResponse": "rawResponse",
        "RequestCatalogManagementServiceListAllEntitlementIdsPerCatalogResponse": "requestCatalogManagementServiceListAllEntitlementIdsPerCatalogResponse",
    });
});
/** @internal */
export const C1ApiRequestcatalogV1RequestCatalogManagementServiceListAllEntitlementIdsPerAppResponse$outboundSchema = z.object({
    contentType: z.string(),
    statusCode: z.number().int(),
    rawResponse: z.instanceof(Response).transform(() => {
        throw new Error("Response cannot be serialized");
    }),
    requestCatalogManagementServiceListAllEntitlementIdsPerCatalogResponse: shared
        .RequestCatalogManagementServiceListAllEntitlementIdsPerCatalogResponse$outboundSchema
        .optional(),
}).transform((v) => {
    return remap$(v, {
        contentType: "ContentType",
        statusCode: "StatusCode",
        rawResponse: "RawResponse",
        requestCatalogManagementServiceListAllEntitlementIdsPerCatalogResponse: "RequestCatalogManagementServiceListAllEntitlementIdsPerCatalogResponse",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var C1ApiRequestcatalogV1RequestCatalogManagementServiceListAllEntitlementIdsPerAppResponse$;
(function (C1ApiRequestcatalogV1RequestCatalogManagementServiceListAllEntitlementIdsPerAppResponse$) {
    /** @deprecated use `C1ApiRequestcatalogV1RequestCatalogManagementServiceListAllEntitlementIdsPerAppResponse$inboundSchema` instead. */
    C1ApiRequestcatalogV1RequestCatalogManagementServiceListAllEntitlementIdsPerAppResponse$.inboundSchema = C1ApiRequestcatalogV1RequestCatalogManagementServiceListAllEntitlementIdsPerAppResponse$inboundSchema;
    /** @deprecated use `C1ApiRequestcatalogV1RequestCatalogManagementServiceListAllEntitlementIdsPerAppResponse$outboundSchema` instead. */
    C1ApiRequestcatalogV1RequestCatalogManagementServiceListAllEntitlementIdsPerAppResponse$.outboundSchema = C1ApiRequestcatalogV1RequestCatalogManagementServiceListAllEntitlementIdsPerAppResponse$outboundSchema;
})(C1ApiRequestcatalogV1RequestCatalogManagementServiceListAllEntitlementIdsPerAppResponse$ || (C1ApiRequestcatalogV1RequestCatalogManagementServiceListAllEntitlementIdsPerAppResponse$ = {}));
export function c1ApiRequestcatalogV1RequestCatalogManagementServiceListAllEntitlementIdsPerAppResponseToJSON(c1ApiRequestcatalogV1RequestCatalogManagementServiceListAllEntitlementIdsPerAppResponse) {
    return JSON.stringify(C1ApiRequestcatalogV1RequestCatalogManagementServiceListAllEntitlementIdsPerAppResponse$outboundSchema
        .parse(c1ApiRequestcatalogV1RequestCatalogManagementServiceListAllEntitlementIdsPerAppResponse));
}
export function c1ApiRequestcatalogV1RequestCatalogManagementServiceListAllEntitlementIdsPerAppResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => C1ApiRequestcatalogV1RequestCatalogManagementServiceListAllEntitlementIdsPerAppResponse$inboundSchema
        .parse(JSON.parse(x)), `Failed to parse 'C1ApiRequestcatalogV1RequestCatalogManagementServiceListAllEntitlementIdsPerAppResponse' from JSON`);
}
