/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";
import { safeParse } from "../../../lib/schemas.js";
import * as shared from "../shared/index.js";
/** @internal */
export const C1ApiWebhooksV1WebhooksServiceUpdateRequest$inboundSchema = z.object({
    id: z.nullable(z.string()),
    WebhooksServiceUpdateRequest: shared
        .WebhooksServiceUpdateRequest$inboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        "WebhooksServiceUpdateRequest": "webhooksServiceUpdateRequest",
    });
});
/** @internal */
export const C1ApiWebhooksV1WebhooksServiceUpdateRequest$outboundSchema = z.object({
    id: z.nullable(z.string()),
    webhooksServiceUpdateRequest: shared
        .WebhooksServiceUpdateRequest$outboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        webhooksServiceUpdateRequest: "WebhooksServiceUpdateRequest",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var C1ApiWebhooksV1WebhooksServiceUpdateRequest$;
(function (C1ApiWebhooksV1WebhooksServiceUpdateRequest$) {
    /** @deprecated use `C1ApiWebhooksV1WebhooksServiceUpdateRequest$inboundSchema` instead. */
    C1ApiWebhooksV1WebhooksServiceUpdateRequest$.inboundSchema = C1ApiWebhooksV1WebhooksServiceUpdateRequest$inboundSchema;
    /** @deprecated use `C1ApiWebhooksV1WebhooksServiceUpdateRequest$outboundSchema` instead. */
    C1ApiWebhooksV1WebhooksServiceUpdateRequest$.outboundSchema = C1ApiWebhooksV1WebhooksServiceUpdateRequest$outboundSchema;
})(C1ApiWebhooksV1WebhooksServiceUpdateRequest$ || (C1ApiWebhooksV1WebhooksServiceUpdateRequest$ = {}));
export function c1ApiWebhooksV1WebhooksServiceUpdateRequestToJSON(c1ApiWebhooksV1WebhooksServiceUpdateRequest) {
    return JSON.stringify(C1ApiWebhooksV1WebhooksServiceUpdateRequest$outboundSchema.parse(c1ApiWebhooksV1WebhooksServiceUpdateRequest));
}
export function c1ApiWebhooksV1WebhooksServiceUpdateRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => C1ApiWebhooksV1WebhooksServiceUpdateRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'C1ApiWebhooksV1WebhooksServiceUpdateRequest' from JSON`);
}
/** @internal */
export const C1ApiWebhooksV1WebhooksServiceUpdateResponse$inboundSchema = z.object({
    ContentType: z.string(),
    StatusCode: z.number().int(),
    RawResponse: z.instanceof(Response),
    WebhooksServiceUpdateResponse: shared
        .WebhooksServiceUpdateResponse$inboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        "ContentType": "contentType",
        "StatusCode": "statusCode",
        "RawResponse": "rawResponse",
        "WebhooksServiceUpdateResponse": "webhooksServiceUpdateResponse",
    });
});
/** @internal */
export const C1ApiWebhooksV1WebhooksServiceUpdateResponse$outboundSchema = z.object({
    contentType: z.string(),
    statusCode: z.number().int(),
    rawResponse: z.instanceof(Response).transform(() => {
        throw new Error("Response cannot be serialized");
    }),
    webhooksServiceUpdateResponse: shared
        .WebhooksServiceUpdateResponse$outboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        contentType: "ContentType",
        statusCode: "StatusCode",
        rawResponse: "RawResponse",
        webhooksServiceUpdateResponse: "WebhooksServiceUpdateResponse",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var C1ApiWebhooksV1WebhooksServiceUpdateResponse$;
(function (C1ApiWebhooksV1WebhooksServiceUpdateResponse$) {
    /** @deprecated use `C1ApiWebhooksV1WebhooksServiceUpdateResponse$inboundSchema` instead. */
    C1ApiWebhooksV1WebhooksServiceUpdateResponse$.inboundSchema = C1ApiWebhooksV1WebhooksServiceUpdateResponse$inboundSchema;
    /** @deprecated use `C1ApiWebhooksV1WebhooksServiceUpdateResponse$outboundSchema` instead. */
    C1ApiWebhooksV1WebhooksServiceUpdateResponse$.outboundSchema = C1ApiWebhooksV1WebhooksServiceUpdateResponse$outboundSchema;
})(C1ApiWebhooksV1WebhooksServiceUpdateResponse$ || (C1ApiWebhooksV1WebhooksServiceUpdateResponse$ = {}));
export function c1ApiWebhooksV1WebhooksServiceUpdateResponseToJSON(c1ApiWebhooksV1WebhooksServiceUpdateResponse) {
    return JSON.stringify(C1ApiWebhooksV1WebhooksServiceUpdateResponse$outboundSchema.parse(c1ApiWebhooksV1WebhooksServiceUpdateResponse));
}
export function c1ApiWebhooksV1WebhooksServiceUpdateResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => C1ApiWebhooksV1WebhooksServiceUpdateResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'C1ApiWebhooksV1WebhooksServiceUpdateResponse' from JSON`);
}
