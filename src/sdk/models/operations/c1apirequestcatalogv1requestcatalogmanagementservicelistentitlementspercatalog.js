/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";
import { safeParse } from "../../../lib/schemas.js";
import * as shared from "../shared/index.js";
/** @internal */
export const C1ApiRequestcatalogV1RequestCatalogManagementServiceListEntitlementsPerCatalogRequest$inboundSchema = z.object({
    catalog_id: z.nullable(z.string()),
    page_size: z.nullable(z.number().int()).optional(),
    page_token: z.nullable(z.string()).optional(),
}).transform((v) => {
    return remap$(v, {
        "catalog_id": "catalogId",
        "page_size": "pageSize",
        "page_token": "pageToken",
    });
});
/** @internal */
export const C1ApiRequestcatalogV1RequestCatalogManagementServiceListEntitlementsPerCatalogRequest$outboundSchema = z.object({
    catalogId: z.nullable(z.string()),
    pageSize: z.nullable(z.number().int()).optional(),
    pageToken: z.nullable(z.string()).optional(),
}).transform((v) => {
    return remap$(v, {
        catalogId: "catalog_id",
        pageSize: "page_size",
        pageToken: "page_token",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var C1ApiRequestcatalogV1RequestCatalogManagementServiceListEntitlementsPerCatalogRequest$;
(function (C1ApiRequestcatalogV1RequestCatalogManagementServiceListEntitlementsPerCatalogRequest$) {
    /** @deprecated use `C1ApiRequestcatalogV1RequestCatalogManagementServiceListEntitlementsPerCatalogRequest$inboundSchema` instead. */
    C1ApiRequestcatalogV1RequestCatalogManagementServiceListEntitlementsPerCatalogRequest$.inboundSchema = C1ApiRequestcatalogV1RequestCatalogManagementServiceListEntitlementsPerCatalogRequest$inboundSchema;
    /** @deprecated use `C1ApiRequestcatalogV1RequestCatalogManagementServiceListEntitlementsPerCatalogRequest$outboundSchema` instead. */
    C1ApiRequestcatalogV1RequestCatalogManagementServiceListEntitlementsPerCatalogRequest$.outboundSchema = C1ApiRequestcatalogV1RequestCatalogManagementServiceListEntitlementsPerCatalogRequest$outboundSchema;
})(C1ApiRequestcatalogV1RequestCatalogManagementServiceListEntitlementsPerCatalogRequest$ || (C1ApiRequestcatalogV1RequestCatalogManagementServiceListEntitlementsPerCatalogRequest$ = {}));
export function c1ApiRequestcatalogV1RequestCatalogManagementServiceListEntitlementsPerCatalogRequestToJSON(c1ApiRequestcatalogV1RequestCatalogManagementServiceListEntitlementsPerCatalogRequest) {
    return JSON.stringify(C1ApiRequestcatalogV1RequestCatalogManagementServiceListEntitlementsPerCatalogRequest$outboundSchema
        .parse(c1ApiRequestcatalogV1RequestCatalogManagementServiceListEntitlementsPerCatalogRequest));
}
export function c1ApiRequestcatalogV1RequestCatalogManagementServiceListEntitlementsPerCatalogRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => C1ApiRequestcatalogV1RequestCatalogManagementServiceListEntitlementsPerCatalogRequest$inboundSchema
        .parse(JSON.parse(x)), `Failed to parse 'C1ApiRequestcatalogV1RequestCatalogManagementServiceListEntitlementsPerCatalogRequest' from JSON`);
}
/** @internal */
export const C1ApiRequestcatalogV1RequestCatalogManagementServiceListEntitlementsPerCatalogResponse$inboundSchema = z.object({
    ContentType: z.string(),
    StatusCode: z.number().int(),
    RawResponse: z.instanceof(Response),
    RequestCatalogManagementServiceListEntitlementsPerCatalogResponse: shared
        .RequestCatalogManagementServiceListEntitlementsPerCatalogResponse$inboundSchema
        .optional(),
}).transform((v) => {
    return remap$(v, {
        "ContentType": "contentType",
        "StatusCode": "statusCode",
        "RawResponse": "rawResponse",
        "RequestCatalogManagementServiceListEntitlementsPerCatalogResponse": "requestCatalogManagementServiceListEntitlementsPerCatalogResponse",
    });
});
/** @internal */
export const C1ApiRequestcatalogV1RequestCatalogManagementServiceListEntitlementsPerCatalogResponse$outboundSchema = z.object({
    contentType: z.string(),
    statusCode: z.number().int(),
    rawResponse: z.instanceof(Response).transform(() => {
        throw new Error("Response cannot be serialized");
    }),
    requestCatalogManagementServiceListEntitlementsPerCatalogResponse: shared
        .RequestCatalogManagementServiceListEntitlementsPerCatalogResponse$outboundSchema
        .optional(),
}).transform((v) => {
    return remap$(v, {
        contentType: "ContentType",
        statusCode: "StatusCode",
        rawResponse: "RawResponse",
        requestCatalogManagementServiceListEntitlementsPerCatalogResponse: "RequestCatalogManagementServiceListEntitlementsPerCatalogResponse",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var C1ApiRequestcatalogV1RequestCatalogManagementServiceListEntitlementsPerCatalogResponse$;
(function (C1ApiRequestcatalogV1RequestCatalogManagementServiceListEntitlementsPerCatalogResponse$) {
    /** @deprecated use `C1ApiRequestcatalogV1RequestCatalogManagementServiceListEntitlementsPerCatalogResponse$inboundSchema` instead. */
    C1ApiRequestcatalogV1RequestCatalogManagementServiceListEntitlementsPerCatalogResponse$.inboundSchema = C1ApiRequestcatalogV1RequestCatalogManagementServiceListEntitlementsPerCatalogResponse$inboundSchema;
    /** @deprecated use `C1ApiRequestcatalogV1RequestCatalogManagementServiceListEntitlementsPerCatalogResponse$outboundSchema` instead. */
    C1ApiRequestcatalogV1RequestCatalogManagementServiceListEntitlementsPerCatalogResponse$.outboundSchema = C1ApiRequestcatalogV1RequestCatalogManagementServiceListEntitlementsPerCatalogResponse$outboundSchema;
})(C1ApiRequestcatalogV1RequestCatalogManagementServiceListEntitlementsPerCatalogResponse$ || (C1ApiRequestcatalogV1RequestCatalogManagementServiceListEntitlementsPerCatalogResponse$ = {}));
export function c1ApiRequestcatalogV1RequestCatalogManagementServiceListEntitlementsPerCatalogResponseToJSON(c1ApiRequestcatalogV1RequestCatalogManagementServiceListEntitlementsPerCatalogResponse) {
    return JSON.stringify(C1ApiRequestcatalogV1RequestCatalogManagementServiceListEntitlementsPerCatalogResponse$outboundSchema
        .parse(c1ApiRequestcatalogV1RequestCatalogManagementServiceListEntitlementsPerCatalogResponse));
}
export function c1ApiRequestcatalogV1RequestCatalogManagementServiceListEntitlementsPerCatalogResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => C1ApiRequestcatalogV1RequestCatalogManagementServiceListEntitlementsPerCatalogResponse$inboundSchema
        .parse(JSON.parse(x)), `Failed to parse 'C1ApiRequestcatalogV1RequestCatalogManagementServiceListEntitlementsPerCatalogResponse' from JSON`);
}
