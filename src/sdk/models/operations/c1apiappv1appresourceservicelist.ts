/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { remap as remap$ } from "../../../lib/primitives.js";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import * as shared from "../shared/index.js";

export type C1ApiAppV1AppResourceServiceListRequest = {
  appId: string | null;
  appResourceTypeId: string | null;
  pageSize?: number | null | undefined;
  pageToken?: string | null | undefined;
};

export type C1ApiAppV1AppResourceServiceListResponse = {
  /**
   * HTTP response content type for this operation
   */
  contentType: string;
  /**
   * HTTP response status code for this operation
   */
  statusCode: number;
  /**
   * Raw HTTP response; suitable for custom response parsing
   */
  rawResponse: Response;
  /**
   * The AppResourceServiceListResponse message contains a list of results and a nextPageToken if applicable.
   */
  appResourceServiceListResponse?:
    | shared.AppResourceServiceListResponse
    | undefined;
};

/** @internal */
export const C1ApiAppV1AppResourceServiceListRequest$inboundSchema: z.ZodType<
  C1ApiAppV1AppResourceServiceListRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  app_id: z.nullable(z.string()),
  app_resource_type_id: z.nullable(z.string()),
  page_size: z.nullable(z.number().int()).optional(),
  page_token: z.nullable(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    "app_id": "appId",
    "app_resource_type_id": "appResourceTypeId",
    "page_size": "pageSize",
    "page_token": "pageToken",
  });
});

/** @internal */
export type C1ApiAppV1AppResourceServiceListRequest$Outbound = {
  app_id: string | null;
  app_resource_type_id: string | null;
  page_size?: number | null | undefined;
  page_token?: string | null | undefined;
};

/** @internal */
export const C1ApiAppV1AppResourceServiceListRequest$outboundSchema: z.ZodType<
  C1ApiAppV1AppResourceServiceListRequest$Outbound,
  z.ZodTypeDef,
  C1ApiAppV1AppResourceServiceListRequest
> = z.object({
  appId: z.nullable(z.string()),
  appResourceTypeId: z.nullable(z.string()),
  pageSize: z.nullable(z.number().int()).optional(),
  pageToken: z.nullable(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    appId: "app_id",
    appResourceTypeId: "app_resource_type_id",
    pageSize: "page_size",
    pageToken: "page_token",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace C1ApiAppV1AppResourceServiceListRequest$ {
  /** @deprecated use `C1ApiAppV1AppResourceServiceListRequest$inboundSchema` instead. */
  export const inboundSchema =
    C1ApiAppV1AppResourceServiceListRequest$inboundSchema;
  /** @deprecated use `C1ApiAppV1AppResourceServiceListRequest$outboundSchema` instead. */
  export const outboundSchema =
    C1ApiAppV1AppResourceServiceListRequest$outboundSchema;
  /** @deprecated use `C1ApiAppV1AppResourceServiceListRequest$Outbound` instead. */
  export type Outbound = C1ApiAppV1AppResourceServiceListRequest$Outbound;
}

export function c1ApiAppV1AppResourceServiceListRequestToJSON(
  c1ApiAppV1AppResourceServiceListRequest:
    C1ApiAppV1AppResourceServiceListRequest,
): string {
  return JSON.stringify(
    C1ApiAppV1AppResourceServiceListRequest$outboundSchema.parse(
      c1ApiAppV1AppResourceServiceListRequest,
    ),
  );
}

export function c1ApiAppV1AppResourceServiceListRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  C1ApiAppV1AppResourceServiceListRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      C1ApiAppV1AppResourceServiceListRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'C1ApiAppV1AppResourceServiceListRequest' from JSON`,
  );
}

/** @internal */
export const C1ApiAppV1AppResourceServiceListResponse$inboundSchema: z.ZodType<
  C1ApiAppV1AppResourceServiceListResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  ContentType: z.string(),
  StatusCode: z.number().int(),
  RawResponse: z.instanceof(Response),
  AppResourceServiceListResponse: shared
    .AppResourceServiceListResponse$inboundSchema.optional(),
}).transform((v) => {
  return remap$(v, {
    "ContentType": "contentType",
    "StatusCode": "statusCode",
    "RawResponse": "rawResponse",
    "AppResourceServiceListResponse": "appResourceServiceListResponse",
  });
});

/** @internal */
export type C1ApiAppV1AppResourceServiceListResponse$Outbound = {
  ContentType: string;
  StatusCode: number;
  RawResponse: never;
  AppResourceServiceListResponse?:
    | shared.AppResourceServiceListResponse$Outbound
    | undefined;
};

/** @internal */
export const C1ApiAppV1AppResourceServiceListResponse$outboundSchema: z.ZodType<
  C1ApiAppV1AppResourceServiceListResponse$Outbound,
  z.ZodTypeDef,
  C1ApiAppV1AppResourceServiceListResponse
> = z.object({
  contentType: z.string(),
  statusCode: z.number().int(),
  rawResponse: z.instanceof(Response).transform(() => {
    throw new Error("Response cannot be serialized");
  }),
  appResourceServiceListResponse: shared
    .AppResourceServiceListResponse$outboundSchema.optional(),
}).transform((v) => {
  return remap$(v, {
    contentType: "ContentType",
    statusCode: "StatusCode",
    rawResponse: "RawResponse",
    appResourceServiceListResponse: "AppResourceServiceListResponse",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace C1ApiAppV1AppResourceServiceListResponse$ {
  /** @deprecated use `C1ApiAppV1AppResourceServiceListResponse$inboundSchema` instead. */
  export const inboundSchema =
    C1ApiAppV1AppResourceServiceListResponse$inboundSchema;
  /** @deprecated use `C1ApiAppV1AppResourceServiceListResponse$outboundSchema` instead. */
  export const outboundSchema =
    C1ApiAppV1AppResourceServiceListResponse$outboundSchema;
  /** @deprecated use `C1ApiAppV1AppResourceServiceListResponse$Outbound` instead. */
  export type Outbound = C1ApiAppV1AppResourceServiceListResponse$Outbound;
}

export function c1ApiAppV1AppResourceServiceListResponseToJSON(
  c1ApiAppV1AppResourceServiceListResponse:
    C1ApiAppV1AppResourceServiceListResponse,
): string {
  return JSON.stringify(
    C1ApiAppV1AppResourceServiceListResponse$outboundSchema.parse(
      c1ApiAppV1AppResourceServiceListResponse,
    ),
  );
}

export function c1ApiAppV1AppResourceServiceListResponseFromJSON(
  jsonString: string,
): SafeParseResult<
  C1ApiAppV1AppResourceServiceListResponse,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      C1ApiAppV1AppResourceServiceListResponse$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'C1ApiAppV1AppResourceServiceListResponse' from JSON`,
  );
}
