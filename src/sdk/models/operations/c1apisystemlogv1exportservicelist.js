/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";
import { safeParse } from "../../../lib/schemas.js";
import * as shared from "../shared/index.js";
/** @internal */
export const C1ApiSystemlogV1ExportServiceListRequest$inboundSchema = z.object({
    page_size: z.nullable(z.number().int()).optional(),
    page_token: z.nullable(z.string()).optional(),
}).transform((v) => {
    return remap$(v, {
        "page_size": "pageSize",
        "page_token": "pageToken",
    });
});
/** @internal */
export const C1ApiSystemlogV1ExportServiceListRequest$outboundSchema = z.object({
    pageSize: z.nullable(z.number().int()).optional(),
    pageToken: z.nullable(z.string()).optional(),
}).transform((v) => {
    return remap$(v, {
        pageSize: "page_size",
        pageToken: "page_token",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var C1ApiSystemlogV1ExportServiceListRequest$;
(function (C1ApiSystemlogV1ExportServiceListRequest$) {
    /** @deprecated use `C1ApiSystemlogV1ExportServiceListRequest$inboundSchema` instead. */
    C1ApiSystemlogV1ExportServiceListRequest$.inboundSchema = C1ApiSystemlogV1ExportServiceListRequest$inboundSchema;
    /** @deprecated use `C1ApiSystemlogV1ExportServiceListRequest$outboundSchema` instead. */
    C1ApiSystemlogV1ExportServiceListRequest$.outboundSchema = C1ApiSystemlogV1ExportServiceListRequest$outboundSchema;
})(C1ApiSystemlogV1ExportServiceListRequest$ || (C1ApiSystemlogV1ExportServiceListRequest$ = {}));
export function c1ApiSystemlogV1ExportServiceListRequestToJSON(c1ApiSystemlogV1ExportServiceListRequest) {
    return JSON.stringify(C1ApiSystemlogV1ExportServiceListRequest$outboundSchema.parse(c1ApiSystemlogV1ExportServiceListRequest));
}
export function c1ApiSystemlogV1ExportServiceListRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => C1ApiSystemlogV1ExportServiceListRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'C1ApiSystemlogV1ExportServiceListRequest' from JSON`);
}
/** @internal */
export const C1ApiSystemlogV1ExportServiceListResponse$inboundSchema = z.object({
    ContentType: z.string(),
    StatusCode: z.number().int(),
    RawResponse: z.instanceof(Response),
    ExportServiceListResponse: shared.ExportServiceListResponse$inboundSchema
        .optional(),
}).transform((v) => {
    return remap$(v, {
        "ContentType": "contentType",
        "StatusCode": "statusCode",
        "RawResponse": "rawResponse",
        "ExportServiceListResponse": "exportServiceListResponse",
    });
});
/** @internal */
export const C1ApiSystemlogV1ExportServiceListResponse$outboundSchema = z.object({
    contentType: z.string(),
    statusCode: z.number().int(),
    rawResponse: z.instanceof(Response).transform(() => {
        throw new Error("Response cannot be serialized");
    }),
    exportServiceListResponse: shared.ExportServiceListResponse$outboundSchema
        .optional(),
}).transform((v) => {
    return remap$(v, {
        contentType: "ContentType",
        statusCode: "StatusCode",
        rawResponse: "RawResponse",
        exportServiceListResponse: "ExportServiceListResponse",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var C1ApiSystemlogV1ExportServiceListResponse$;
(function (C1ApiSystemlogV1ExportServiceListResponse$) {
    /** @deprecated use `C1ApiSystemlogV1ExportServiceListResponse$inboundSchema` instead. */
    C1ApiSystemlogV1ExportServiceListResponse$.inboundSchema = C1ApiSystemlogV1ExportServiceListResponse$inboundSchema;
    /** @deprecated use `C1ApiSystemlogV1ExportServiceListResponse$outboundSchema` instead. */
    C1ApiSystemlogV1ExportServiceListResponse$.outboundSchema = C1ApiSystemlogV1ExportServiceListResponse$outboundSchema;
})(C1ApiSystemlogV1ExportServiceListResponse$ || (C1ApiSystemlogV1ExportServiceListResponse$ = {}));
export function c1ApiSystemlogV1ExportServiceListResponseToJSON(c1ApiSystemlogV1ExportServiceListResponse) {
    return JSON.stringify(C1ApiSystemlogV1ExportServiceListResponse$outboundSchema.parse(c1ApiSystemlogV1ExportServiceListResponse));
}
export function c1ApiSystemlogV1ExportServiceListResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => C1ApiSystemlogV1ExportServiceListResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'C1ApiSystemlogV1ExportServiceListResponse' from JSON`);
}
