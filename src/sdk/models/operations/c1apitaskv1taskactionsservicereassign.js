/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";
import { safeParse } from "../../../lib/schemas.js";
import * as shared from "../shared/index.js";
/** @internal */
export const C1ApiTaskV1TaskActionsServiceReassignRequest$inboundSchema = z.object({
    task_id: z.nullable(z.string()),
    TaskActionsServiceReassignRequest: shared
        .TaskActionsServiceReassignRequest$inboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        "task_id": "taskId",
        "TaskActionsServiceReassignRequest": "taskActionsServiceReassignRequest",
    });
});
/** @internal */
export const C1ApiTaskV1TaskActionsServiceReassignRequest$outboundSchema = z.object({
    taskId: z.nullable(z.string()),
    taskActionsServiceReassignRequest: shared
        .TaskActionsServiceReassignRequest$outboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        taskId: "task_id",
        taskActionsServiceReassignRequest: "TaskActionsServiceReassignRequest",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var C1ApiTaskV1TaskActionsServiceReassignRequest$;
(function (C1ApiTaskV1TaskActionsServiceReassignRequest$) {
    /** @deprecated use `C1ApiTaskV1TaskActionsServiceReassignRequest$inboundSchema` instead. */
    C1ApiTaskV1TaskActionsServiceReassignRequest$.inboundSchema = C1ApiTaskV1TaskActionsServiceReassignRequest$inboundSchema;
    /** @deprecated use `C1ApiTaskV1TaskActionsServiceReassignRequest$outboundSchema` instead. */
    C1ApiTaskV1TaskActionsServiceReassignRequest$.outboundSchema = C1ApiTaskV1TaskActionsServiceReassignRequest$outboundSchema;
})(C1ApiTaskV1TaskActionsServiceReassignRequest$ || (C1ApiTaskV1TaskActionsServiceReassignRequest$ = {}));
export function c1ApiTaskV1TaskActionsServiceReassignRequestToJSON(c1ApiTaskV1TaskActionsServiceReassignRequest) {
    return JSON.stringify(C1ApiTaskV1TaskActionsServiceReassignRequest$outboundSchema.parse(c1ApiTaskV1TaskActionsServiceReassignRequest));
}
export function c1ApiTaskV1TaskActionsServiceReassignRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => C1ApiTaskV1TaskActionsServiceReassignRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'C1ApiTaskV1TaskActionsServiceReassignRequest' from JSON`);
}
/** @internal */
export const C1ApiTaskV1TaskActionsServiceReassignResponse$inboundSchema = z.object({
    ContentType: z.string(),
    StatusCode: z.number().int(),
    RawResponse: z.instanceof(Response),
    TaskActionsServiceReassignResponse: shared
        .TaskActionsServiceReassignResponse$inboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        "ContentType": "contentType",
        "StatusCode": "statusCode",
        "RawResponse": "rawResponse",
        "TaskActionsServiceReassignResponse": "taskActionsServiceReassignResponse",
    });
});
/** @internal */
export const C1ApiTaskV1TaskActionsServiceReassignResponse$outboundSchema = z.object({
    contentType: z.string(),
    statusCode: z.number().int(),
    rawResponse: z.instanceof(Response).transform(() => {
        throw new Error("Response cannot be serialized");
    }),
    taskActionsServiceReassignResponse: shared
        .TaskActionsServiceReassignResponse$outboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        contentType: "ContentType",
        statusCode: "StatusCode",
        rawResponse: "RawResponse",
        taskActionsServiceReassignResponse: "TaskActionsServiceReassignResponse",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var C1ApiTaskV1TaskActionsServiceReassignResponse$;
(function (C1ApiTaskV1TaskActionsServiceReassignResponse$) {
    /** @deprecated use `C1ApiTaskV1TaskActionsServiceReassignResponse$inboundSchema` instead. */
    C1ApiTaskV1TaskActionsServiceReassignResponse$.inboundSchema = C1ApiTaskV1TaskActionsServiceReassignResponse$inboundSchema;
    /** @deprecated use `C1ApiTaskV1TaskActionsServiceReassignResponse$outboundSchema` instead. */
    C1ApiTaskV1TaskActionsServiceReassignResponse$.outboundSchema = C1ApiTaskV1TaskActionsServiceReassignResponse$outboundSchema;
})(C1ApiTaskV1TaskActionsServiceReassignResponse$ || (C1ApiTaskV1TaskActionsServiceReassignResponse$ = {}));
export function c1ApiTaskV1TaskActionsServiceReassignResponseToJSON(c1ApiTaskV1TaskActionsServiceReassignResponse) {
    return JSON.stringify(C1ApiTaskV1TaskActionsServiceReassignResponse$outboundSchema.parse(c1ApiTaskV1TaskActionsServiceReassignResponse));
}
export function c1ApiTaskV1TaskActionsServiceReassignResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => C1ApiTaskV1TaskActionsServiceReassignResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'C1ApiTaskV1TaskActionsServiceReassignResponse' from JSON`);
}
