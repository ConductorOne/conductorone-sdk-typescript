/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";
import { safeParse } from "../../../lib/schemas.js";
import * as shared from "../shared/index.js";
/** @internal */
export const C1ApiAppV1AppEntitlementOwnersSetRequest$inboundSchema = z.object({
    app_id: z.nullable(z.string()),
    entitlement_id: z.nullable(z.string()),
    SetAppEntitlementOwnersRequest: shared
        .SetAppEntitlementOwnersRequest$inboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        "app_id": "appId",
        "entitlement_id": "entitlementId",
        "SetAppEntitlementOwnersRequest": "setAppEntitlementOwnersRequest",
    });
});
/** @internal */
export const C1ApiAppV1AppEntitlementOwnersSetRequest$outboundSchema = z.object({
    appId: z.nullable(z.string()),
    entitlementId: z.nullable(z.string()),
    setAppEntitlementOwnersRequest: shared
        .SetAppEntitlementOwnersRequest$outboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        appId: "app_id",
        entitlementId: "entitlement_id",
        setAppEntitlementOwnersRequest: "SetAppEntitlementOwnersRequest",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var C1ApiAppV1AppEntitlementOwnersSetRequest$;
(function (C1ApiAppV1AppEntitlementOwnersSetRequest$) {
    /** @deprecated use `C1ApiAppV1AppEntitlementOwnersSetRequest$inboundSchema` instead. */
    C1ApiAppV1AppEntitlementOwnersSetRequest$.inboundSchema = C1ApiAppV1AppEntitlementOwnersSetRequest$inboundSchema;
    /** @deprecated use `C1ApiAppV1AppEntitlementOwnersSetRequest$outboundSchema` instead. */
    C1ApiAppV1AppEntitlementOwnersSetRequest$.outboundSchema = C1ApiAppV1AppEntitlementOwnersSetRequest$outboundSchema;
})(C1ApiAppV1AppEntitlementOwnersSetRequest$ || (C1ApiAppV1AppEntitlementOwnersSetRequest$ = {}));
export function c1ApiAppV1AppEntitlementOwnersSetRequestToJSON(c1ApiAppV1AppEntitlementOwnersSetRequest) {
    return JSON.stringify(C1ApiAppV1AppEntitlementOwnersSetRequest$outboundSchema.parse(c1ApiAppV1AppEntitlementOwnersSetRequest));
}
export function c1ApiAppV1AppEntitlementOwnersSetRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => C1ApiAppV1AppEntitlementOwnersSetRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'C1ApiAppV1AppEntitlementOwnersSetRequest' from JSON`);
}
/** @internal */
export const C1ApiAppV1AppEntitlementOwnersSetResponse$inboundSchema = z.object({
    ContentType: z.string(),
    StatusCode: z.number().int(),
    RawResponse: z.instanceof(Response),
    SetAppEntitlementOwnersResponse: shared
        .SetAppEntitlementOwnersResponse$inboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        "ContentType": "contentType",
        "StatusCode": "statusCode",
        "RawResponse": "rawResponse",
        "SetAppEntitlementOwnersResponse": "setAppEntitlementOwnersResponse",
    });
});
/** @internal */
export const C1ApiAppV1AppEntitlementOwnersSetResponse$outboundSchema = z.object({
    contentType: z.string(),
    statusCode: z.number().int(),
    rawResponse: z.instanceof(Response).transform(() => {
        throw new Error("Response cannot be serialized");
    }),
    setAppEntitlementOwnersResponse: shared
        .SetAppEntitlementOwnersResponse$outboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        contentType: "ContentType",
        statusCode: "StatusCode",
        rawResponse: "RawResponse",
        setAppEntitlementOwnersResponse: "SetAppEntitlementOwnersResponse",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var C1ApiAppV1AppEntitlementOwnersSetResponse$;
(function (C1ApiAppV1AppEntitlementOwnersSetResponse$) {
    /** @deprecated use `C1ApiAppV1AppEntitlementOwnersSetResponse$inboundSchema` instead. */
    C1ApiAppV1AppEntitlementOwnersSetResponse$.inboundSchema = C1ApiAppV1AppEntitlementOwnersSetResponse$inboundSchema;
    /** @deprecated use `C1ApiAppV1AppEntitlementOwnersSetResponse$outboundSchema` instead. */
    C1ApiAppV1AppEntitlementOwnersSetResponse$.outboundSchema = C1ApiAppV1AppEntitlementOwnersSetResponse$outboundSchema;
})(C1ApiAppV1AppEntitlementOwnersSetResponse$ || (C1ApiAppV1AppEntitlementOwnersSetResponse$ = {}));
export function c1ApiAppV1AppEntitlementOwnersSetResponseToJSON(c1ApiAppV1AppEntitlementOwnersSetResponse) {
    return JSON.stringify(C1ApiAppV1AppEntitlementOwnersSetResponse$outboundSchema.parse(c1ApiAppV1AppEntitlementOwnersSetResponse));
}
export function c1ApiAppV1AppEntitlementOwnersSetResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => C1ApiAppV1AppEntitlementOwnersSetResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'C1ApiAppV1AppEntitlementOwnersSetResponse' from JSON`);
}
