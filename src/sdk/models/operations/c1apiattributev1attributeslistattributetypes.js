/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";
import { safeParse } from "../../../lib/schemas.js";
import * as shared from "../shared/index.js";
/** @internal */
export const C1ApiAttributeV1AttributesListAttributeTypesRequest$inboundSchema = z.object({
    page_size: z.nullable(z.number().int()).optional(),
    page_token: z.nullable(z.string()).optional(),
}).transform((v) => {
    return remap$(v, {
        "page_size": "pageSize",
        "page_token": "pageToken",
    });
});
/** @internal */
export const C1ApiAttributeV1AttributesListAttributeTypesRequest$outboundSchema = z.object({
    pageSize: z.nullable(z.number().int()).optional(),
    pageToken: z.nullable(z.string()).optional(),
}).transform((v) => {
    return remap$(v, {
        pageSize: "page_size",
        pageToken: "page_token",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var C1ApiAttributeV1AttributesListAttributeTypesRequest$;
(function (C1ApiAttributeV1AttributesListAttributeTypesRequest$) {
    /** @deprecated use `C1ApiAttributeV1AttributesListAttributeTypesRequest$inboundSchema` instead. */
    C1ApiAttributeV1AttributesListAttributeTypesRequest$.inboundSchema = C1ApiAttributeV1AttributesListAttributeTypesRequest$inboundSchema;
    /** @deprecated use `C1ApiAttributeV1AttributesListAttributeTypesRequest$outboundSchema` instead. */
    C1ApiAttributeV1AttributesListAttributeTypesRequest$.outboundSchema = C1ApiAttributeV1AttributesListAttributeTypesRequest$outboundSchema;
})(C1ApiAttributeV1AttributesListAttributeTypesRequest$ || (C1ApiAttributeV1AttributesListAttributeTypesRequest$ = {}));
export function c1ApiAttributeV1AttributesListAttributeTypesRequestToJSON(c1ApiAttributeV1AttributesListAttributeTypesRequest) {
    return JSON.stringify(C1ApiAttributeV1AttributesListAttributeTypesRequest$outboundSchema.parse(c1ApiAttributeV1AttributesListAttributeTypesRequest));
}
export function c1ApiAttributeV1AttributesListAttributeTypesRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => C1ApiAttributeV1AttributesListAttributeTypesRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'C1ApiAttributeV1AttributesListAttributeTypesRequest' from JSON`);
}
/** @internal */
export const C1ApiAttributeV1AttributesListAttributeTypesResponse$inboundSchema = z.object({
    ContentType: z.string(),
    StatusCode: z.number().int(),
    RawResponse: z.instanceof(Response),
    ListAttributeTypesResponse: shared.ListAttributeTypesResponse$inboundSchema
        .optional(),
}).transform((v) => {
    return remap$(v, {
        "ContentType": "contentType",
        "StatusCode": "statusCode",
        "RawResponse": "rawResponse",
        "ListAttributeTypesResponse": "listAttributeTypesResponse",
    });
});
/** @internal */
export const C1ApiAttributeV1AttributesListAttributeTypesResponse$outboundSchema = z.object({
    contentType: z.string(),
    statusCode: z.number().int(),
    rawResponse: z.instanceof(Response).transform(() => {
        throw new Error("Response cannot be serialized");
    }),
    listAttributeTypesResponse: shared.ListAttributeTypesResponse$outboundSchema
        .optional(),
}).transform((v) => {
    return remap$(v, {
        contentType: "ContentType",
        statusCode: "StatusCode",
        rawResponse: "RawResponse",
        listAttributeTypesResponse: "ListAttributeTypesResponse",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var C1ApiAttributeV1AttributesListAttributeTypesResponse$;
(function (C1ApiAttributeV1AttributesListAttributeTypesResponse$) {
    /** @deprecated use `C1ApiAttributeV1AttributesListAttributeTypesResponse$inboundSchema` instead. */
    C1ApiAttributeV1AttributesListAttributeTypesResponse$.inboundSchema = C1ApiAttributeV1AttributesListAttributeTypesResponse$inboundSchema;
    /** @deprecated use `C1ApiAttributeV1AttributesListAttributeTypesResponse$outboundSchema` instead. */
    C1ApiAttributeV1AttributesListAttributeTypesResponse$.outboundSchema = C1ApiAttributeV1AttributesListAttributeTypesResponse$outboundSchema;
})(C1ApiAttributeV1AttributesListAttributeTypesResponse$ || (C1ApiAttributeV1AttributesListAttributeTypesResponse$ = {}));
export function c1ApiAttributeV1AttributesListAttributeTypesResponseToJSON(c1ApiAttributeV1AttributesListAttributeTypesResponse) {
    return JSON.stringify(C1ApiAttributeV1AttributesListAttributeTypesResponse$outboundSchema.parse(c1ApiAttributeV1AttributesListAttributeTypesResponse));
}
export function c1ApiAttributeV1AttributesListAttributeTypesResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => C1ApiAttributeV1AttributesListAttributeTypesResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'C1ApiAttributeV1AttributesListAttributeTypesResponse' from JSON`);
}
