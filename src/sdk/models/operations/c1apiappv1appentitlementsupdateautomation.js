/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";
import { safeParse } from "../../../lib/schemas.js";
import * as shared from "../shared/index.js";
/** @internal */
export const C1ApiAppV1AppEntitlementsUpdateAutomationRequest$inboundSchema = z.object({
    app_id: z.nullable(z.string()),
    app_entitlement_id: z.nullable(z.string()),
    AppEntitlementServiceUpdateAutomationRequest: shared
        .AppEntitlementServiceUpdateAutomationRequest$inboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        "app_id": "appId",
        "app_entitlement_id": "appEntitlementId",
        "AppEntitlementServiceUpdateAutomationRequest": "appEntitlementServiceUpdateAutomationRequest",
    });
});
/** @internal */
export const C1ApiAppV1AppEntitlementsUpdateAutomationRequest$outboundSchema = z.object({
    appId: z.nullable(z.string()),
    appEntitlementId: z.nullable(z.string()),
    appEntitlementServiceUpdateAutomationRequest: shared
        .AppEntitlementServiceUpdateAutomationRequest$outboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        appId: "app_id",
        appEntitlementId: "app_entitlement_id",
        appEntitlementServiceUpdateAutomationRequest: "AppEntitlementServiceUpdateAutomationRequest",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var C1ApiAppV1AppEntitlementsUpdateAutomationRequest$;
(function (C1ApiAppV1AppEntitlementsUpdateAutomationRequest$) {
    /** @deprecated use `C1ApiAppV1AppEntitlementsUpdateAutomationRequest$inboundSchema` instead. */
    C1ApiAppV1AppEntitlementsUpdateAutomationRequest$.inboundSchema = C1ApiAppV1AppEntitlementsUpdateAutomationRequest$inboundSchema;
    /** @deprecated use `C1ApiAppV1AppEntitlementsUpdateAutomationRequest$outboundSchema` instead. */
    C1ApiAppV1AppEntitlementsUpdateAutomationRequest$.outboundSchema = C1ApiAppV1AppEntitlementsUpdateAutomationRequest$outboundSchema;
})(C1ApiAppV1AppEntitlementsUpdateAutomationRequest$ || (C1ApiAppV1AppEntitlementsUpdateAutomationRequest$ = {}));
export function c1ApiAppV1AppEntitlementsUpdateAutomationRequestToJSON(c1ApiAppV1AppEntitlementsUpdateAutomationRequest) {
    return JSON.stringify(C1ApiAppV1AppEntitlementsUpdateAutomationRequest$outboundSchema.parse(c1ApiAppV1AppEntitlementsUpdateAutomationRequest));
}
export function c1ApiAppV1AppEntitlementsUpdateAutomationRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => C1ApiAppV1AppEntitlementsUpdateAutomationRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'C1ApiAppV1AppEntitlementsUpdateAutomationRequest' from JSON`);
}
/** @internal */
export const C1ApiAppV1AppEntitlementsUpdateAutomationResponse$inboundSchema = z.object({
    ContentType: z.string(),
    StatusCode: z.number().int(),
    RawResponse: z.instanceof(Response),
    AppEntitlementServiceUpdateAutomationResponse: shared
        .AppEntitlementServiceUpdateAutomationResponse$inboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        "ContentType": "contentType",
        "StatusCode": "statusCode",
        "RawResponse": "rawResponse",
        "AppEntitlementServiceUpdateAutomationResponse": "appEntitlementServiceUpdateAutomationResponse",
    });
});
/** @internal */
export const C1ApiAppV1AppEntitlementsUpdateAutomationResponse$outboundSchema = z.object({
    contentType: z.string(),
    statusCode: z.number().int(),
    rawResponse: z.instanceof(Response).transform(() => {
        throw new Error("Response cannot be serialized");
    }),
    appEntitlementServiceUpdateAutomationResponse: shared
        .AppEntitlementServiceUpdateAutomationResponse$outboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        contentType: "ContentType",
        statusCode: "StatusCode",
        rawResponse: "RawResponse",
        appEntitlementServiceUpdateAutomationResponse: "AppEntitlementServiceUpdateAutomationResponse",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var C1ApiAppV1AppEntitlementsUpdateAutomationResponse$;
(function (C1ApiAppV1AppEntitlementsUpdateAutomationResponse$) {
    /** @deprecated use `C1ApiAppV1AppEntitlementsUpdateAutomationResponse$inboundSchema` instead. */
    C1ApiAppV1AppEntitlementsUpdateAutomationResponse$.inboundSchema = C1ApiAppV1AppEntitlementsUpdateAutomationResponse$inboundSchema;
    /** @deprecated use `C1ApiAppV1AppEntitlementsUpdateAutomationResponse$outboundSchema` instead. */
    C1ApiAppV1AppEntitlementsUpdateAutomationResponse$.outboundSchema = C1ApiAppV1AppEntitlementsUpdateAutomationResponse$outboundSchema;
})(C1ApiAppV1AppEntitlementsUpdateAutomationResponse$ || (C1ApiAppV1AppEntitlementsUpdateAutomationResponse$ = {}));
export function c1ApiAppV1AppEntitlementsUpdateAutomationResponseToJSON(c1ApiAppV1AppEntitlementsUpdateAutomationResponse) {
    return JSON.stringify(C1ApiAppV1AppEntitlementsUpdateAutomationResponse$outboundSchema.parse(c1ApiAppV1AppEntitlementsUpdateAutomationResponse));
}
export function c1ApiAppV1AppEntitlementsUpdateAutomationResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => C1ApiAppV1AppEntitlementsUpdateAutomationResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'C1ApiAppV1AppEntitlementsUpdateAutomationResponse' from JSON`);
}
