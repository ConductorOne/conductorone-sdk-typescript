/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";
import { safeParse } from "../../../lib/schemas.js";
import * as shared from "../shared/index.js";
/** @internal */
export const C1ApiAppV1AppOwnersRemoveRequest$inboundSchema = z.object({
    app_id: z.nullable(z.string()),
    user_id: z.nullable(z.string()),
    RemoveAppOwnerRequest: shared.RemoveAppOwnerRequest$inboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        "app_id": "appId",
        "user_id": "userId",
        "RemoveAppOwnerRequest": "removeAppOwnerRequest",
    });
});
/** @internal */
export const C1ApiAppV1AppOwnersRemoveRequest$outboundSchema = z.object({
    appId: z.nullable(z.string()),
    userId: z.nullable(z.string()),
    removeAppOwnerRequest: shared.RemoveAppOwnerRequest$outboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        appId: "app_id",
        userId: "user_id",
        removeAppOwnerRequest: "RemoveAppOwnerRequest",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var C1ApiAppV1AppOwnersRemoveRequest$;
(function (C1ApiAppV1AppOwnersRemoveRequest$) {
    /** @deprecated use `C1ApiAppV1AppOwnersRemoveRequest$inboundSchema` instead. */
    C1ApiAppV1AppOwnersRemoveRequest$.inboundSchema = C1ApiAppV1AppOwnersRemoveRequest$inboundSchema;
    /** @deprecated use `C1ApiAppV1AppOwnersRemoveRequest$outboundSchema` instead. */
    C1ApiAppV1AppOwnersRemoveRequest$.outboundSchema = C1ApiAppV1AppOwnersRemoveRequest$outboundSchema;
})(C1ApiAppV1AppOwnersRemoveRequest$ || (C1ApiAppV1AppOwnersRemoveRequest$ = {}));
export function c1ApiAppV1AppOwnersRemoveRequestToJSON(c1ApiAppV1AppOwnersRemoveRequest) {
    return JSON.stringify(C1ApiAppV1AppOwnersRemoveRequest$outboundSchema.parse(c1ApiAppV1AppOwnersRemoveRequest));
}
export function c1ApiAppV1AppOwnersRemoveRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => C1ApiAppV1AppOwnersRemoveRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'C1ApiAppV1AppOwnersRemoveRequest' from JSON`);
}
/** @internal */
export const C1ApiAppV1AppOwnersRemoveResponse$inboundSchema = z.object({
    ContentType: z.string(),
    StatusCode: z.number().int(),
    RawResponse: z.instanceof(Response),
    RemoveAppOwnerResponse: shared.RemoveAppOwnerResponse$inboundSchema
        .optional(),
}).transform((v) => {
    return remap$(v, {
        "ContentType": "contentType",
        "StatusCode": "statusCode",
        "RawResponse": "rawResponse",
        "RemoveAppOwnerResponse": "removeAppOwnerResponse",
    });
});
/** @internal */
export const C1ApiAppV1AppOwnersRemoveResponse$outboundSchema = z.object({
    contentType: z.string(),
    statusCode: z.number().int(),
    rawResponse: z.instanceof(Response).transform(() => {
        throw new Error("Response cannot be serialized");
    }),
    removeAppOwnerResponse: shared.RemoveAppOwnerResponse$outboundSchema
        .optional(),
}).transform((v) => {
    return remap$(v, {
        contentType: "ContentType",
        statusCode: "StatusCode",
        rawResponse: "RawResponse",
        removeAppOwnerResponse: "RemoveAppOwnerResponse",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var C1ApiAppV1AppOwnersRemoveResponse$;
(function (C1ApiAppV1AppOwnersRemoveResponse$) {
    /** @deprecated use `C1ApiAppV1AppOwnersRemoveResponse$inboundSchema` instead. */
    C1ApiAppV1AppOwnersRemoveResponse$.inboundSchema = C1ApiAppV1AppOwnersRemoveResponse$inboundSchema;
    /** @deprecated use `C1ApiAppV1AppOwnersRemoveResponse$outboundSchema` instead. */
    C1ApiAppV1AppOwnersRemoveResponse$.outboundSchema = C1ApiAppV1AppOwnersRemoveResponse$outboundSchema;
})(C1ApiAppV1AppOwnersRemoveResponse$ || (C1ApiAppV1AppOwnersRemoveResponse$ = {}));
export function c1ApiAppV1AppOwnersRemoveResponseToJSON(c1ApiAppV1AppOwnersRemoveResponse) {
    return JSON.stringify(C1ApiAppV1AppOwnersRemoveResponse$outboundSchema.parse(c1ApiAppV1AppOwnersRemoveResponse));
}
export function c1ApiAppV1AppOwnersRemoveResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => C1ApiAppV1AppOwnersRemoveResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'C1ApiAppV1AppOwnersRemoveResponse' from JSON`);
}
