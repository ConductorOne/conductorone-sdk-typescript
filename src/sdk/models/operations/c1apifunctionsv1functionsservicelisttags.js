/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";
import { safeParse } from "../../../lib/schemas.js";
import * as shared from "../shared/index.js";
/** @internal */
export const C1ApiFunctionsV1FunctionsServiceListTagsRequest$inboundSchema = z.object({
    function_id: z.nullable(z.string()),
}).transform((v) => {
    return remap$(v, {
        "function_id": "functionId",
    });
});
/** @internal */
export const C1ApiFunctionsV1FunctionsServiceListTagsRequest$outboundSchema = z.object({
    functionId: z.nullable(z.string()),
}).transform((v) => {
    return remap$(v, {
        functionId: "function_id",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var C1ApiFunctionsV1FunctionsServiceListTagsRequest$;
(function (C1ApiFunctionsV1FunctionsServiceListTagsRequest$) {
    /** @deprecated use `C1ApiFunctionsV1FunctionsServiceListTagsRequest$inboundSchema` instead. */
    C1ApiFunctionsV1FunctionsServiceListTagsRequest$.inboundSchema = C1ApiFunctionsV1FunctionsServiceListTagsRequest$inboundSchema;
    /** @deprecated use `C1ApiFunctionsV1FunctionsServiceListTagsRequest$outboundSchema` instead. */
    C1ApiFunctionsV1FunctionsServiceListTagsRequest$.outboundSchema = C1ApiFunctionsV1FunctionsServiceListTagsRequest$outboundSchema;
})(C1ApiFunctionsV1FunctionsServiceListTagsRequest$ || (C1ApiFunctionsV1FunctionsServiceListTagsRequest$ = {}));
export function c1ApiFunctionsV1FunctionsServiceListTagsRequestToJSON(c1ApiFunctionsV1FunctionsServiceListTagsRequest) {
    return JSON.stringify(C1ApiFunctionsV1FunctionsServiceListTagsRequest$outboundSchema.parse(c1ApiFunctionsV1FunctionsServiceListTagsRequest));
}
export function c1ApiFunctionsV1FunctionsServiceListTagsRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => C1ApiFunctionsV1FunctionsServiceListTagsRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'C1ApiFunctionsV1FunctionsServiceListTagsRequest' from JSON`);
}
/** @internal */
export const C1ApiFunctionsV1FunctionsServiceListTagsResponse$inboundSchema = z.object({
    ContentType: z.string(),
    StatusCode: z.number().int(),
    RawResponse: z.instanceof(Response),
    FunctionsServiceListTagsResponse: shared
        .FunctionsServiceListTagsResponse$inboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        "ContentType": "contentType",
        "StatusCode": "statusCode",
        "RawResponse": "rawResponse",
        "FunctionsServiceListTagsResponse": "functionsServiceListTagsResponse",
    });
});
/** @internal */
export const C1ApiFunctionsV1FunctionsServiceListTagsResponse$outboundSchema = z.object({
    contentType: z.string(),
    statusCode: z.number().int(),
    rawResponse: z.instanceof(Response).transform(() => {
        throw new Error("Response cannot be serialized");
    }),
    functionsServiceListTagsResponse: shared
        .FunctionsServiceListTagsResponse$outboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        contentType: "ContentType",
        statusCode: "StatusCode",
        rawResponse: "RawResponse",
        functionsServiceListTagsResponse: "FunctionsServiceListTagsResponse",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var C1ApiFunctionsV1FunctionsServiceListTagsResponse$;
(function (C1ApiFunctionsV1FunctionsServiceListTagsResponse$) {
    /** @deprecated use `C1ApiFunctionsV1FunctionsServiceListTagsResponse$inboundSchema` instead. */
    C1ApiFunctionsV1FunctionsServiceListTagsResponse$.inboundSchema = C1ApiFunctionsV1FunctionsServiceListTagsResponse$inboundSchema;
    /** @deprecated use `C1ApiFunctionsV1FunctionsServiceListTagsResponse$outboundSchema` instead. */
    C1ApiFunctionsV1FunctionsServiceListTagsResponse$.outboundSchema = C1ApiFunctionsV1FunctionsServiceListTagsResponse$outboundSchema;
})(C1ApiFunctionsV1FunctionsServiceListTagsResponse$ || (C1ApiFunctionsV1FunctionsServiceListTagsResponse$ = {}));
export function c1ApiFunctionsV1FunctionsServiceListTagsResponseToJSON(c1ApiFunctionsV1FunctionsServiceListTagsResponse) {
    return JSON.stringify(C1ApiFunctionsV1FunctionsServiceListTagsResponse$outboundSchema.parse(c1ApiFunctionsV1FunctionsServiceListTagsResponse));
}
export function c1ApiFunctionsV1FunctionsServiceListTagsResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => C1ApiFunctionsV1FunctionsServiceListTagsResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'C1ApiFunctionsV1FunctionsServiceListTagsResponse' from JSON`);
}
