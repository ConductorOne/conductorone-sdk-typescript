/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";
import { safeParse } from "../../../lib/schemas.js";
import * as shared from "../shared/index.js";
/** @internal */
export const C1ApiAttributeV1AttributesGetComplianceFrameworkAttributeValueRequest$inboundSchema = z.object({
    id: z.nullable(z.string()),
});
/** @internal */
export const C1ApiAttributeV1AttributesGetComplianceFrameworkAttributeValueRequest$outboundSchema = z.object({
    id: z.nullable(z.string()),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var C1ApiAttributeV1AttributesGetComplianceFrameworkAttributeValueRequest$;
(function (C1ApiAttributeV1AttributesGetComplianceFrameworkAttributeValueRequest$) {
    /** @deprecated use `C1ApiAttributeV1AttributesGetComplianceFrameworkAttributeValueRequest$inboundSchema` instead. */
    C1ApiAttributeV1AttributesGetComplianceFrameworkAttributeValueRequest$.inboundSchema = C1ApiAttributeV1AttributesGetComplianceFrameworkAttributeValueRequest$inboundSchema;
    /** @deprecated use `C1ApiAttributeV1AttributesGetComplianceFrameworkAttributeValueRequest$outboundSchema` instead. */
    C1ApiAttributeV1AttributesGetComplianceFrameworkAttributeValueRequest$.outboundSchema = C1ApiAttributeV1AttributesGetComplianceFrameworkAttributeValueRequest$outboundSchema;
})(C1ApiAttributeV1AttributesGetComplianceFrameworkAttributeValueRequest$ || (C1ApiAttributeV1AttributesGetComplianceFrameworkAttributeValueRequest$ = {}));
export function c1ApiAttributeV1AttributesGetComplianceFrameworkAttributeValueRequestToJSON(c1ApiAttributeV1AttributesGetComplianceFrameworkAttributeValueRequest) {
    return JSON.stringify(C1ApiAttributeV1AttributesGetComplianceFrameworkAttributeValueRequest$outboundSchema
        .parse(c1ApiAttributeV1AttributesGetComplianceFrameworkAttributeValueRequest));
}
export function c1ApiAttributeV1AttributesGetComplianceFrameworkAttributeValueRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => C1ApiAttributeV1AttributesGetComplianceFrameworkAttributeValueRequest$inboundSchema
        .parse(JSON.parse(x)), `Failed to parse 'C1ApiAttributeV1AttributesGetComplianceFrameworkAttributeValueRequest' from JSON`);
}
/** @internal */
export const C1ApiAttributeV1AttributesGetComplianceFrameworkAttributeValueResponse$inboundSchema = z.object({
    ContentType: z.string(),
    StatusCode: z.number().int(),
    RawResponse: z.instanceof(Response),
    GetComplianceFrameworkAttributeValueResponse: shared
        .GetComplianceFrameworkAttributeValueResponse$inboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        "ContentType": "contentType",
        "StatusCode": "statusCode",
        "RawResponse": "rawResponse",
        "GetComplianceFrameworkAttributeValueResponse": "getComplianceFrameworkAttributeValueResponse",
    });
});
/** @internal */
export const C1ApiAttributeV1AttributesGetComplianceFrameworkAttributeValueResponse$outboundSchema = z.object({
    contentType: z.string(),
    statusCode: z.number().int(),
    rawResponse: z.instanceof(Response).transform(() => {
        throw new Error("Response cannot be serialized");
    }),
    getComplianceFrameworkAttributeValueResponse: shared
        .GetComplianceFrameworkAttributeValueResponse$outboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        contentType: "ContentType",
        statusCode: "StatusCode",
        rawResponse: "RawResponse",
        getComplianceFrameworkAttributeValueResponse: "GetComplianceFrameworkAttributeValueResponse",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var C1ApiAttributeV1AttributesGetComplianceFrameworkAttributeValueResponse$;
(function (C1ApiAttributeV1AttributesGetComplianceFrameworkAttributeValueResponse$) {
    /** @deprecated use `C1ApiAttributeV1AttributesGetComplianceFrameworkAttributeValueResponse$inboundSchema` instead. */
    C1ApiAttributeV1AttributesGetComplianceFrameworkAttributeValueResponse$.inboundSchema = C1ApiAttributeV1AttributesGetComplianceFrameworkAttributeValueResponse$inboundSchema;
    /** @deprecated use `C1ApiAttributeV1AttributesGetComplianceFrameworkAttributeValueResponse$outboundSchema` instead. */
    C1ApiAttributeV1AttributesGetComplianceFrameworkAttributeValueResponse$.outboundSchema = C1ApiAttributeV1AttributesGetComplianceFrameworkAttributeValueResponse$outboundSchema;
})(C1ApiAttributeV1AttributesGetComplianceFrameworkAttributeValueResponse$ || (C1ApiAttributeV1AttributesGetComplianceFrameworkAttributeValueResponse$ = {}));
export function c1ApiAttributeV1AttributesGetComplianceFrameworkAttributeValueResponseToJSON(c1ApiAttributeV1AttributesGetComplianceFrameworkAttributeValueResponse) {
    return JSON.stringify(C1ApiAttributeV1AttributesGetComplianceFrameworkAttributeValueResponse$outboundSchema
        .parse(c1ApiAttributeV1AttributesGetComplianceFrameworkAttributeValueResponse));
}
export function c1ApiAttributeV1AttributesGetComplianceFrameworkAttributeValueResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => C1ApiAttributeV1AttributesGetComplianceFrameworkAttributeValueResponse$inboundSchema
        .parse(JSON.parse(x)), `Failed to parse 'C1ApiAttributeV1AttributesGetComplianceFrameworkAttributeValueResponse' from JSON`);
}
