/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";
import { safeParse } from "../../../lib/schemas.js";
import * as shared from "../shared/index.js";
/** @internal */
export const C1ApiWebhooksV1WebhooksServiceDeleteRequest$inboundSchema = z.object({
    id: z.nullable(z.string()),
    WebhooksServiceDeleteRequest: shared
        .WebhooksServiceDeleteRequest$inboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        "WebhooksServiceDeleteRequest": "webhooksServiceDeleteRequest",
    });
});
/** @internal */
export const C1ApiWebhooksV1WebhooksServiceDeleteRequest$outboundSchema = z.object({
    id: z.nullable(z.string()),
    webhooksServiceDeleteRequest: shared
        .WebhooksServiceDeleteRequest$outboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        webhooksServiceDeleteRequest: "WebhooksServiceDeleteRequest",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var C1ApiWebhooksV1WebhooksServiceDeleteRequest$;
(function (C1ApiWebhooksV1WebhooksServiceDeleteRequest$) {
    /** @deprecated use `C1ApiWebhooksV1WebhooksServiceDeleteRequest$inboundSchema` instead. */
    C1ApiWebhooksV1WebhooksServiceDeleteRequest$.inboundSchema = C1ApiWebhooksV1WebhooksServiceDeleteRequest$inboundSchema;
    /** @deprecated use `C1ApiWebhooksV1WebhooksServiceDeleteRequest$outboundSchema` instead. */
    C1ApiWebhooksV1WebhooksServiceDeleteRequest$.outboundSchema = C1ApiWebhooksV1WebhooksServiceDeleteRequest$outboundSchema;
})(C1ApiWebhooksV1WebhooksServiceDeleteRequest$ || (C1ApiWebhooksV1WebhooksServiceDeleteRequest$ = {}));
export function c1ApiWebhooksV1WebhooksServiceDeleteRequestToJSON(c1ApiWebhooksV1WebhooksServiceDeleteRequest) {
    return JSON.stringify(C1ApiWebhooksV1WebhooksServiceDeleteRequest$outboundSchema.parse(c1ApiWebhooksV1WebhooksServiceDeleteRequest));
}
export function c1ApiWebhooksV1WebhooksServiceDeleteRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => C1ApiWebhooksV1WebhooksServiceDeleteRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'C1ApiWebhooksV1WebhooksServiceDeleteRequest' from JSON`);
}
/** @internal */
export const C1ApiWebhooksV1WebhooksServiceDeleteResponse$inboundSchema = z.object({
    ContentType: z.string(),
    StatusCode: z.number().int(),
    RawResponse: z.instanceof(Response),
    WebhooksServiceDeleteResponse: shared
        .WebhooksServiceDeleteResponse$inboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        "ContentType": "contentType",
        "StatusCode": "statusCode",
        "RawResponse": "rawResponse",
        "WebhooksServiceDeleteResponse": "webhooksServiceDeleteResponse",
    });
});
/** @internal */
export const C1ApiWebhooksV1WebhooksServiceDeleteResponse$outboundSchema = z.object({
    contentType: z.string(),
    statusCode: z.number().int(),
    rawResponse: z.instanceof(Response).transform(() => {
        throw new Error("Response cannot be serialized");
    }),
    webhooksServiceDeleteResponse: shared
        .WebhooksServiceDeleteResponse$outboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        contentType: "ContentType",
        statusCode: "StatusCode",
        rawResponse: "RawResponse",
        webhooksServiceDeleteResponse: "WebhooksServiceDeleteResponse",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var C1ApiWebhooksV1WebhooksServiceDeleteResponse$;
(function (C1ApiWebhooksV1WebhooksServiceDeleteResponse$) {
    /** @deprecated use `C1ApiWebhooksV1WebhooksServiceDeleteResponse$inboundSchema` instead. */
    C1ApiWebhooksV1WebhooksServiceDeleteResponse$.inboundSchema = C1ApiWebhooksV1WebhooksServiceDeleteResponse$inboundSchema;
    /** @deprecated use `C1ApiWebhooksV1WebhooksServiceDeleteResponse$outboundSchema` instead. */
    C1ApiWebhooksV1WebhooksServiceDeleteResponse$.outboundSchema = C1ApiWebhooksV1WebhooksServiceDeleteResponse$outboundSchema;
})(C1ApiWebhooksV1WebhooksServiceDeleteResponse$ || (C1ApiWebhooksV1WebhooksServiceDeleteResponse$ = {}));
export function c1ApiWebhooksV1WebhooksServiceDeleteResponseToJSON(c1ApiWebhooksV1WebhooksServiceDeleteResponse) {
    return JSON.stringify(C1ApiWebhooksV1WebhooksServiceDeleteResponse$outboundSchema.parse(c1ApiWebhooksV1WebhooksServiceDeleteResponse));
}
export function c1ApiWebhooksV1WebhooksServiceDeleteResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => C1ApiWebhooksV1WebhooksServiceDeleteResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'C1ApiWebhooksV1WebhooksServiceDeleteResponse' from JSON`);
}
