/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";
import { safeParse } from "../../../lib/schemas.js";
import * as shared from "../shared/index.js";
/** @internal */
export const C1ApiFunctionsV1FunctionsServiceGetCommitRequest$inboundSchema = z.object({
    function_id: z.nullable(z.string()),
    id: z.nullable(z.string()),
}).transform((v) => {
    return remap$(v, {
        "function_id": "functionId",
    });
});
/** @internal */
export const C1ApiFunctionsV1FunctionsServiceGetCommitRequest$outboundSchema = z.object({
    functionId: z.nullable(z.string()),
    id: z.nullable(z.string()),
}).transform((v) => {
    return remap$(v, {
        functionId: "function_id",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var C1ApiFunctionsV1FunctionsServiceGetCommitRequest$;
(function (C1ApiFunctionsV1FunctionsServiceGetCommitRequest$) {
    /** @deprecated use `C1ApiFunctionsV1FunctionsServiceGetCommitRequest$inboundSchema` instead. */
    C1ApiFunctionsV1FunctionsServiceGetCommitRequest$.inboundSchema = C1ApiFunctionsV1FunctionsServiceGetCommitRequest$inboundSchema;
    /** @deprecated use `C1ApiFunctionsV1FunctionsServiceGetCommitRequest$outboundSchema` instead. */
    C1ApiFunctionsV1FunctionsServiceGetCommitRequest$.outboundSchema = C1ApiFunctionsV1FunctionsServiceGetCommitRequest$outboundSchema;
})(C1ApiFunctionsV1FunctionsServiceGetCommitRequest$ || (C1ApiFunctionsV1FunctionsServiceGetCommitRequest$ = {}));
export function c1ApiFunctionsV1FunctionsServiceGetCommitRequestToJSON(c1ApiFunctionsV1FunctionsServiceGetCommitRequest) {
    return JSON.stringify(C1ApiFunctionsV1FunctionsServiceGetCommitRequest$outboundSchema.parse(c1ApiFunctionsV1FunctionsServiceGetCommitRequest));
}
export function c1ApiFunctionsV1FunctionsServiceGetCommitRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => C1ApiFunctionsV1FunctionsServiceGetCommitRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'C1ApiFunctionsV1FunctionsServiceGetCommitRequest' from JSON`);
}
/** @internal */
export const C1ApiFunctionsV1FunctionsServiceGetCommitResponse$inboundSchema = z.object({
    ContentType: z.string(),
    StatusCode: z.number().int(),
    RawResponse: z.instanceof(Response),
    FunctionsServiceGetCommitResponse: shared
        .FunctionsServiceGetCommitResponse$inboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        "ContentType": "contentType",
        "StatusCode": "statusCode",
        "RawResponse": "rawResponse",
        "FunctionsServiceGetCommitResponse": "functionsServiceGetCommitResponse",
    });
});
/** @internal */
export const C1ApiFunctionsV1FunctionsServiceGetCommitResponse$outboundSchema = z.object({
    contentType: z.string(),
    statusCode: z.number().int(),
    rawResponse: z.instanceof(Response).transform(() => {
        throw new Error("Response cannot be serialized");
    }),
    functionsServiceGetCommitResponse: shared
        .FunctionsServiceGetCommitResponse$outboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        contentType: "ContentType",
        statusCode: "StatusCode",
        rawResponse: "RawResponse",
        functionsServiceGetCommitResponse: "FunctionsServiceGetCommitResponse",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var C1ApiFunctionsV1FunctionsServiceGetCommitResponse$;
(function (C1ApiFunctionsV1FunctionsServiceGetCommitResponse$) {
    /** @deprecated use `C1ApiFunctionsV1FunctionsServiceGetCommitResponse$inboundSchema` instead. */
    C1ApiFunctionsV1FunctionsServiceGetCommitResponse$.inboundSchema = C1ApiFunctionsV1FunctionsServiceGetCommitResponse$inboundSchema;
    /** @deprecated use `C1ApiFunctionsV1FunctionsServiceGetCommitResponse$outboundSchema` instead. */
    C1ApiFunctionsV1FunctionsServiceGetCommitResponse$.outboundSchema = C1ApiFunctionsV1FunctionsServiceGetCommitResponse$outboundSchema;
})(C1ApiFunctionsV1FunctionsServiceGetCommitResponse$ || (C1ApiFunctionsV1FunctionsServiceGetCommitResponse$ = {}));
export function c1ApiFunctionsV1FunctionsServiceGetCommitResponseToJSON(c1ApiFunctionsV1FunctionsServiceGetCommitResponse) {
    return JSON.stringify(C1ApiFunctionsV1FunctionsServiceGetCommitResponse$outboundSchema.parse(c1ApiFunctionsV1FunctionsServiceGetCommitResponse));
}
export function c1ApiFunctionsV1FunctionsServiceGetCommitResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => C1ApiFunctionsV1FunctionsServiceGetCommitResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'C1ApiFunctionsV1FunctionsServiceGetCommitResponse' from JSON`);
}
