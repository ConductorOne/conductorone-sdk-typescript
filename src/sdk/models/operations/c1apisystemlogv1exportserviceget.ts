/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { remap as remap$ } from "../../../lib/primitives.js";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import * as shared from "../shared/index.js";

export type C1ApiSystemlogV1ExportServiceGetRequest = {
  exportId: string | null;
};

export type C1ApiSystemlogV1ExportServiceGetResponse = {
  /**
   * HTTP response content type for this operation
   */
  contentType: string;
  /**
   * HTTP response status code for this operation
   */
  statusCode: number;
  /**
   * Raw HTTP response; suitable for custom response parsing
   */
  rawResponse: Response;
  /**
   * The ExportServiceGetResponse message contains the system log exporter object.
   */
  exportServiceGetResponse?: shared.ExportServiceGetResponse | undefined;
};

/** @internal */
export const C1ApiSystemlogV1ExportServiceGetRequest$inboundSchema: z.ZodType<
  C1ApiSystemlogV1ExportServiceGetRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  export_id: z.nullable(z.string()),
}).transform((v) => {
  return remap$(v, {
    "export_id": "exportId",
  });
});

/** @internal */
export type C1ApiSystemlogV1ExportServiceGetRequest$Outbound = {
  export_id: string | null;
};

/** @internal */
export const C1ApiSystemlogV1ExportServiceGetRequest$outboundSchema: z.ZodType<
  C1ApiSystemlogV1ExportServiceGetRequest$Outbound,
  z.ZodTypeDef,
  C1ApiSystemlogV1ExportServiceGetRequest
> = z.object({
  exportId: z.nullable(z.string()),
}).transform((v) => {
  return remap$(v, {
    exportId: "export_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace C1ApiSystemlogV1ExportServiceGetRequest$ {
  /** @deprecated use `C1ApiSystemlogV1ExportServiceGetRequest$inboundSchema` instead. */
  export const inboundSchema =
    C1ApiSystemlogV1ExportServiceGetRequest$inboundSchema;
  /** @deprecated use `C1ApiSystemlogV1ExportServiceGetRequest$outboundSchema` instead. */
  export const outboundSchema =
    C1ApiSystemlogV1ExportServiceGetRequest$outboundSchema;
  /** @deprecated use `C1ApiSystemlogV1ExportServiceGetRequest$Outbound` instead. */
  export type Outbound = C1ApiSystemlogV1ExportServiceGetRequest$Outbound;
}

export function c1ApiSystemlogV1ExportServiceGetRequestToJSON(
  c1ApiSystemlogV1ExportServiceGetRequest:
    C1ApiSystemlogV1ExportServiceGetRequest,
): string {
  return JSON.stringify(
    C1ApiSystemlogV1ExportServiceGetRequest$outboundSchema.parse(
      c1ApiSystemlogV1ExportServiceGetRequest,
    ),
  );
}

export function c1ApiSystemlogV1ExportServiceGetRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  C1ApiSystemlogV1ExportServiceGetRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      C1ApiSystemlogV1ExportServiceGetRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'C1ApiSystemlogV1ExportServiceGetRequest' from JSON`,
  );
}

/** @internal */
export const C1ApiSystemlogV1ExportServiceGetResponse$inboundSchema: z.ZodType<
  C1ApiSystemlogV1ExportServiceGetResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  ContentType: z.string(),
  StatusCode: z.number().int(),
  RawResponse: z.instanceof(Response),
  ExportServiceGetResponse: shared.ExportServiceGetResponse$inboundSchema
    .optional(),
}).transform((v) => {
  return remap$(v, {
    "ContentType": "contentType",
    "StatusCode": "statusCode",
    "RawResponse": "rawResponse",
    "ExportServiceGetResponse": "exportServiceGetResponse",
  });
});

/** @internal */
export type C1ApiSystemlogV1ExportServiceGetResponse$Outbound = {
  ContentType: string;
  StatusCode: number;
  RawResponse: never;
  ExportServiceGetResponse?:
    | shared.ExportServiceGetResponse$Outbound
    | undefined;
};

/** @internal */
export const C1ApiSystemlogV1ExportServiceGetResponse$outboundSchema: z.ZodType<
  C1ApiSystemlogV1ExportServiceGetResponse$Outbound,
  z.ZodTypeDef,
  C1ApiSystemlogV1ExportServiceGetResponse
> = z.object({
  contentType: z.string(),
  statusCode: z.number().int(),
  rawResponse: z.instanceof(Response).transform(() => {
    throw new Error("Response cannot be serialized");
  }),
  exportServiceGetResponse: shared.ExportServiceGetResponse$outboundSchema
    .optional(),
}).transform((v) => {
  return remap$(v, {
    contentType: "ContentType",
    statusCode: "StatusCode",
    rawResponse: "RawResponse",
    exportServiceGetResponse: "ExportServiceGetResponse",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace C1ApiSystemlogV1ExportServiceGetResponse$ {
  /** @deprecated use `C1ApiSystemlogV1ExportServiceGetResponse$inboundSchema` instead. */
  export const inboundSchema =
    C1ApiSystemlogV1ExportServiceGetResponse$inboundSchema;
  /** @deprecated use `C1ApiSystemlogV1ExportServiceGetResponse$outboundSchema` instead. */
  export const outboundSchema =
    C1ApiSystemlogV1ExportServiceGetResponse$outboundSchema;
  /** @deprecated use `C1ApiSystemlogV1ExportServiceGetResponse$Outbound` instead. */
  export type Outbound = C1ApiSystemlogV1ExportServiceGetResponse$Outbound;
}

export function c1ApiSystemlogV1ExportServiceGetResponseToJSON(
  c1ApiSystemlogV1ExportServiceGetResponse:
    C1ApiSystemlogV1ExportServiceGetResponse,
): string {
  return JSON.stringify(
    C1ApiSystemlogV1ExportServiceGetResponse$outboundSchema.parse(
      c1ApiSystemlogV1ExportServiceGetResponse,
    ),
  );
}

export function c1ApiSystemlogV1ExportServiceGetResponseFromJSON(
  jsonString: string,
): SafeParseResult<
  C1ApiSystemlogV1ExportServiceGetResponse,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      C1ApiSystemlogV1ExportServiceGetResponse$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'C1ApiSystemlogV1ExportServiceGetResponse' from JSON`,
  );
}
