/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";
import { safeParse } from "../../../lib/schemas.js";
import * as shared from "../shared/index.js";
/** @internal */
export const C1ApiAttributeV1AttributesCreateComplianceFrameworkAttributeValueResponse$inboundSchema = z.object({
    ContentType: z.string(),
    StatusCode: z.number().int(),
    RawResponse: z.instanceof(Response),
    CreateComplianceFrameworkAttributeValueResponse: shared
        .CreateComplianceFrameworkAttributeValueResponse$inboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        "ContentType": "contentType",
        "StatusCode": "statusCode",
        "RawResponse": "rawResponse",
        "CreateComplianceFrameworkAttributeValueResponse": "createComplianceFrameworkAttributeValueResponse",
    });
});
/** @internal */
export const C1ApiAttributeV1AttributesCreateComplianceFrameworkAttributeValueResponse$outboundSchema = z.object({
    contentType: z.string(),
    statusCode: z.number().int(),
    rawResponse: z.instanceof(Response).transform(() => {
        throw new Error("Response cannot be serialized");
    }),
    createComplianceFrameworkAttributeValueResponse: shared
        .CreateComplianceFrameworkAttributeValueResponse$outboundSchema
        .optional(),
}).transform((v) => {
    return remap$(v, {
        contentType: "ContentType",
        statusCode: "StatusCode",
        rawResponse: "RawResponse",
        createComplianceFrameworkAttributeValueResponse: "CreateComplianceFrameworkAttributeValueResponse",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var C1ApiAttributeV1AttributesCreateComplianceFrameworkAttributeValueResponse$;
(function (C1ApiAttributeV1AttributesCreateComplianceFrameworkAttributeValueResponse$) {
    /** @deprecated use `C1ApiAttributeV1AttributesCreateComplianceFrameworkAttributeValueResponse$inboundSchema` instead. */
    C1ApiAttributeV1AttributesCreateComplianceFrameworkAttributeValueResponse$.inboundSchema = C1ApiAttributeV1AttributesCreateComplianceFrameworkAttributeValueResponse$inboundSchema;
    /** @deprecated use `C1ApiAttributeV1AttributesCreateComplianceFrameworkAttributeValueResponse$outboundSchema` instead. */
    C1ApiAttributeV1AttributesCreateComplianceFrameworkAttributeValueResponse$.outboundSchema = C1ApiAttributeV1AttributesCreateComplianceFrameworkAttributeValueResponse$outboundSchema;
})(C1ApiAttributeV1AttributesCreateComplianceFrameworkAttributeValueResponse$ || (C1ApiAttributeV1AttributesCreateComplianceFrameworkAttributeValueResponse$ = {}));
export function c1ApiAttributeV1AttributesCreateComplianceFrameworkAttributeValueResponseToJSON(c1ApiAttributeV1AttributesCreateComplianceFrameworkAttributeValueResponse) {
    return JSON.stringify(C1ApiAttributeV1AttributesCreateComplianceFrameworkAttributeValueResponse$outboundSchema
        .parse(c1ApiAttributeV1AttributesCreateComplianceFrameworkAttributeValueResponse));
}
export function c1ApiAttributeV1AttributesCreateComplianceFrameworkAttributeValueResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => C1ApiAttributeV1AttributesCreateComplianceFrameworkAttributeValueResponse$inboundSchema
        .parse(JSON.parse(x)), `Failed to parse 'C1ApiAttributeV1AttributesCreateComplianceFrameworkAttributeValueResponse' from JSON`);
}
