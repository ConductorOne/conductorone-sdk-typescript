/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import * as shared from "../shared/index.js";

export type C1ApiAppV1AppResourceOwnersRemoveRequest = {
  appId: string | null;
  resourceTypeId: string | null;
  resourceId: string | null;
  removeAppResourceOwnerRequest?:
    | shared.RemoveAppResourceOwnerRequest
    | undefined;
};

export type C1ApiAppV1AppResourceOwnersRemoveResponse = {
  /**
   * HTTP response content type for this operation
   */
  contentType: string;
  /**
   * HTTP response status code for this operation
   */
  statusCode: number;
  /**
   * Raw HTTP response; suitable for custom response parsing
   */
  rawResponse: Response;
  /**
   * Successful response
   */
  removeAppResourceOwnerResponse?:
    | shared.RemoveAppResourceOwnerResponse
    | undefined;
};

/** @internal */
export const C1ApiAppV1AppResourceOwnersRemoveRequest$inboundSchema: z.ZodType<
  C1ApiAppV1AppResourceOwnersRemoveRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  app_id: z.nullable(z.string()),
  resource_type_id: z.nullable(z.string()),
  resource_id: z.nullable(z.string()),
  RemoveAppResourceOwnerRequest: shared
    .RemoveAppResourceOwnerRequest$inboundSchema.optional(),
}).transform((v) => {
  return remap$(v, {
    "app_id": "appId",
    "resource_type_id": "resourceTypeId",
    "resource_id": "resourceId",
    "RemoveAppResourceOwnerRequest": "removeAppResourceOwnerRequest",
  });
});

/** @internal */
export type C1ApiAppV1AppResourceOwnersRemoveRequest$Outbound = {
  app_id: string | null;
  resource_type_id: string | null;
  resource_id: string | null;
  RemoveAppResourceOwnerRequest?:
    | shared.RemoveAppResourceOwnerRequest$Outbound
    | undefined;
};

/** @internal */
export const C1ApiAppV1AppResourceOwnersRemoveRequest$outboundSchema: z.ZodType<
  C1ApiAppV1AppResourceOwnersRemoveRequest$Outbound,
  z.ZodTypeDef,
  C1ApiAppV1AppResourceOwnersRemoveRequest
> = z.object({
  appId: z.nullable(z.string()),
  resourceTypeId: z.nullable(z.string()),
  resourceId: z.nullable(z.string()),
  removeAppResourceOwnerRequest: shared
    .RemoveAppResourceOwnerRequest$outboundSchema.optional(),
}).transform((v) => {
  return remap$(v, {
    appId: "app_id",
    resourceTypeId: "resource_type_id",
    resourceId: "resource_id",
    removeAppResourceOwnerRequest: "RemoveAppResourceOwnerRequest",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace C1ApiAppV1AppResourceOwnersRemoveRequest$ {
  /** @deprecated use `C1ApiAppV1AppResourceOwnersRemoveRequest$inboundSchema` instead. */
  export const inboundSchema =
    C1ApiAppV1AppResourceOwnersRemoveRequest$inboundSchema;
  /** @deprecated use `C1ApiAppV1AppResourceOwnersRemoveRequest$outboundSchema` instead. */
  export const outboundSchema =
    C1ApiAppV1AppResourceOwnersRemoveRequest$outboundSchema;
  /** @deprecated use `C1ApiAppV1AppResourceOwnersRemoveRequest$Outbound` instead. */
  export type Outbound = C1ApiAppV1AppResourceOwnersRemoveRequest$Outbound;
}

export function c1ApiAppV1AppResourceOwnersRemoveRequestToJSON(
  c1ApiAppV1AppResourceOwnersRemoveRequest:
    C1ApiAppV1AppResourceOwnersRemoveRequest,
): string {
  return JSON.stringify(
    C1ApiAppV1AppResourceOwnersRemoveRequest$outboundSchema.parse(
      c1ApiAppV1AppResourceOwnersRemoveRequest,
    ),
  );
}

export function c1ApiAppV1AppResourceOwnersRemoveRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  C1ApiAppV1AppResourceOwnersRemoveRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      C1ApiAppV1AppResourceOwnersRemoveRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'C1ApiAppV1AppResourceOwnersRemoveRequest' from JSON`,
  );
}

/** @internal */
export const C1ApiAppV1AppResourceOwnersRemoveResponse$inboundSchema: z.ZodType<
  C1ApiAppV1AppResourceOwnersRemoveResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  ContentType: z.string(),
  StatusCode: z.number().int(),
  RawResponse: z.instanceof(Response),
  RemoveAppResourceOwnerResponse: shared
    .RemoveAppResourceOwnerResponse$inboundSchema.optional(),
}).transform((v) => {
  return remap$(v, {
    "ContentType": "contentType",
    "StatusCode": "statusCode",
    "RawResponse": "rawResponse",
    "RemoveAppResourceOwnerResponse": "removeAppResourceOwnerResponse",
  });
});

/** @internal */
export type C1ApiAppV1AppResourceOwnersRemoveResponse$Outbound = {
  ContentType: string;
  StatusCode: number;
  RawResponse: never;
  RemoveAppResourceOwnerResponse?:
    | shared.RemoveAppResourceOwnerResponse$Outbound
    | undefined;
};

/** @internal */
export const C1ApiAppV1AppResourceOwnersRemoveResponse$outboundSchema:
  z.ZodType<
    C1ApiAppV1AppResourceOwnersRemoveResponse$Outbound,
    z.ZodTypeDef,
    C1ApiAppV1AppResourceOwnersRemoveResponse
  > = z.object({
    contentType: z.string(),
    statusCode: z.number().int(),
    rawResponse: z.instanceof(Response).transform(() => {
      throw new Error("Response cannot be serialized");
    }),
    removeAppResourceOwnerResponse: shared
      .RemoveAppResourceOwnerResponse$outboundSchema.optional(),
  }).transform((v) => {
    return remap$(v, {
      contentType: "ContentType",
      statusCode: "StatusCode",
      rawResponse: "RawResponse",
      removeAppResourceOwnerResponse: "RemoveAppResourceOwnerResponse",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace C1ApiAppV1AppResourceOwnersRemoveResponse$ {
  /** @deprecated use `C1ApiAppV1AppResourceOwnersRemoveResponse$inboundSchema` instead. */
  export const inboundSchema =
    C1ApiAppV1AppResourceOwnersRemoveResponse$inboundSchema;
  /** @deprecated use `C1ApiAppV1AppResourceOwnersRemoveResponse$outboundSchema` instead. */
  export const outboundSchema =
    C1ApiAppV1AppResourceOwnersRemoveResponse$outboundSchema;
  /** @deprecated use `C1ApiAppV1AppResourceOwnersRemoveResponse$Outbound` instead. */
  export type Outbound = C1ApiAppV1AppResourceOwnersRemoveResponse$Outbound;
}

export function c1ApiAppV1AppResourceOwnersRemoveResponseToJSON(
  c1ApiAppV1AppResourceOwnersRemoveResponse:
    C1ApiAppV1AppResourceOwnersRemoveResponse,
): string {
  return JSON.stringify(
    C1ApiAppV1AppResourceOwnersRemoveResponse$outboundSchema.parse(
      c1ApiAppV1AppResourceOwnersRemoveResponse,
    ),
  );
}

export function c1ApiAppV1AppResourceOwnersRemoveResponseFromJSON(
  jsonString: string,
): SafeParseResult<
  C1ApiAppV1AppResourceOwnersRemoveResponse,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      C1ApiAppV1AppResourceOwnersRemoveResponse$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'C1ApiAppV1AppResourceOwnersRemoveResponse' from JSON`,
  );
}
