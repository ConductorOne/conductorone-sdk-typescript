/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";
import { safeParse } from "../../../lib/schemas.js";
import * as shared from "../shared/index.js";
/** @internal */
export const C1ApiRequestcatalogV1RequestCatalogManagementServiceAddAccessEntitlementsRequest$inboundSchema = z.object({
    catalog_id: z.nullable(z.string()),
    RequestCatalogManagementServiceAddAccessEntitlementsRequest: shared
        .RequestCatalogManagementServiceAddAccessEntitlementsRequest$inboundSchema
        .optional(),
}).transform((v) => {
    return remap$(v, {
        "catalog_id": "catalogId",
        "RequestCatalogManagementServiceAddAccessEntitlementsRequest": "requestCatalogManagementServiceAddAccessEntitlementsRequest",
    });
});
/** @internal */
export const C1ApiRequestcatalogV1RequestCatalogManagementServiceAddAccessEntitlementsRequest$outboundSchema = z.object({
    catalogId: z.nullable(z.string()),
    requestCatalogManagementServiceAddAccessEntitlementsRequest: shared
        .RequestCatalogManagementServiceAddAccessEntitlementsRequest$outboundSchema
        .optional(),
}).transform((v) => {
    return remap$(v, {
        catalogId: "catalog_id",
        requestCatalogManagementServiceAddAccessEntitlementsRequest: "RequestCatalogManagementServiceAddAccessEntitlementsRequest",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var C1ApiRequestcatalogV1RequestCatalogManagementServiceAddAccessEntitlementsRequest$;
(function (C1ApiRequestcatalogV1RequestCatalogManagementServiceAddAccessEntitlementsRequest$) {
    /** @deprecated use `C1ApiRequestcatalogV1RequestCatalogManagementServiceAddAccessEntitlementsRequest$inboundSchema` instead. */
    C1ApiRequestcatalogV1RequestCatalogManagementServiceAddAccessEntitlementsRequest$.inboundSchema = C1ApiRequestcatalogV1RequestCatalogManagementServiceAddAccessEntitlementsRequest$inboundSchema;
    /** @deprecated use `C1ApiRequestcatalogV1RequestCatalogManagementServiceAddAccessEntitlementsRequest$outboundSchema` instead. */
    C1ApiRequestcatalogV1RequestCatalogManagementServiceAddAccessEntitlementsRequest$.outboundSchema = C1ApiRequestcatalogV1RequestCatalogManagementServiceAddAccessEntitlementsRequest$outboundSchema;
})(C1ApiRequestcatalogV1RequestCatalogManagementServiceAddAccessEntitlementsRequest$ || (C1ApiRequestcatalogV1RequestCatalogManagementServiceAddAccessEntitlementsRequest$ = {}));
export function c1ApiRequestcatalogV1RequestCatalogManagementServiceAddAccessEntitlementsRequestToJSON(c1ApiRequestcatalogV1RequestCatalogManagementServiceAddAccessEntitlementsRequest) {
    return JSON.stringify(C1ApiRequestcatalogV1RequestCatalogManagementServiceAddAccessEntitlementsRequest$outboundSchema
        .parse(c1ApiRequestcatalogV1RequestCatalogManagementServiceAddAccessEntitlementsRequest));
}
export function c1ApiRequestcatalogV1RequestCatalogManagementServiceAddAccessEntitlementsRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => C1ApiRequestcatalogV1RequestCatalogManagementServiceAddAccessEntitlementsRequest$inboundSchema
        .parse(JSON.parse(x)), `Failed to parse 'C1ApiRequestcatalogV1RequestCatalogManagementServiceAddAccessEntitlementsRequest' from JSON`);
}
/** @internal */
export const C1ApiRequestcatalogV1RequestCatalogManagementServiceAddAccessEntitlementsResponse$inboundSchema = z.object({
    ContentType: z.string(),
    StatusCode: z.number().int(),
    RawResponse: z.instanceof(Response),
    RequestCatalogManagementServiceAddAccessEntitlementsResponse: shared
        .RequestCatalogManagementServiceAddAccessEntitlementsResponse$inboundSchema
        .optional(),
}).transform((v) => {
    return remap$(v, {
        "ContentType": "contentType",
        "StatusCode": "statusCode",
        "RawResponse": "rawResponse",
        "RequestCatalogManagementServiceAddAccessEntitlementsResponse": "requestCatalogManagementServiceAddAccessEntitlementsResponse",
    });
});
/** @internal */
export const C1ApiRequestcatalogV1RequestCatalogManagementServiceAddAccessEntitlementsResponse$outboundSchema = z.object({
    contentType: z.string(),
    statusCode: z.number().int(),
    rawResponse: z.instanceof(Response).transform(() => {
        throw new Error("Response cannot be serialized");
    }),
    requestCatalogManagementServiceAddAccessEntitlementsResponse: shared
        .RequestCatalogManagementServiceAddAccessEntitlementsResponse$outboundSchema
        .optional(),
}).transform((v) => {
    return remap$(v, {
        contentType: "ContentType",
        statusCode: "StatusCode",
        rawResponse: "RawResponse",
        requestCatalogManagementServiceAddAccessEntitlementsResponse: "RequestCatalogManagementServiceAddAccessEntitlementsResponse",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var C1ApiRequestcatalogV1RequestCatalogManagementServiceAddAccessEntitlementsResponse$;
(function (C1ApiRequestcatalogV1RequestCatalogManagementServiceAddAccessEntitlementsResponse$) {
    /** @deprecated use `C1ApiRequestcatalogV1RequestCatalogManagementServiceAddAccessEntitlementsResponse$inboundSchema` instead. */
    C1ApiRequestcatalogV1RequestCatalogManagementServiceAddAccessEntitlementsResponse$.inboundSchema = C1ApiRequestcatalogV1RequestCatalogManagementServiceAddAccessEntitlementsResponse$inboundSchema;
    /** @deprecated use `C1ApiRequestcatalogV1RequestCatalogManagementServiceAddAccessEntitlementsResponse$outboundSchema` instead. */
    C1ApiRequestcatalogV1RequestCatalogManagementServiceAddAccessEntitlementsResponse$.outboundSchema = C1ApiRequestcatalogV1RequestCatalogManagementServiceAddAccessEntitlementsResponse$outboundSchema;
})(C1ApiRequestcatalogV1RequestCatalogManagementServiceAddAccessEntitlementsResponse$ || (C1ApiRequestcatalogV1RequestCatalogManagementServiceAddAccessEntitlementsResponse$ = {}));
export function c1ApiRequestcatalogV1RequestCatalogManagementServiceAddAccessEntitlementsResponseToJSON(c1ApiRequestcatalogV1RequestCatalogManagementServiceAddAccessEntitlementsResponse) {
    return JSON.stringify(C1ApiRequestcatalogV1RequestCatalogManagementServiceAddAccessEntitlementsResponse$outboundSchema
        .parse(c1ApiRequestcatalogV1RequestCatalogManagementServiceAddAccessEntitlementsResponse));
}
export function c1ApiRequestcatalogV1RequestCatalogManagementServiceAddAccessEntitlementsResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => C1ApiRequestcatalogV1RequestCatalogManagementServiceAddAccessEntitlementsResponse$inboundSchema
        .parse(JSON.parse(x)), `Failed to parse 'C1ApiRequestcatalogV1RequestCatalogManagementServiceAddAccessEntitlementsResponse' from JSON`);
}
