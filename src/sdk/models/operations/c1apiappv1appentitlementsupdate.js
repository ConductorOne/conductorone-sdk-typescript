/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";
import { safeParse } from "../../../lib/schemas.js";
import * as shared from "../shared/index.js";
/** @internal */
export const C1ApiAppV1AppEntitlementsUpdateRequest$inboundSchema = z.object({
    app_id: z.nullable(z.string()),
    id: z.nullable(z.string()),
    UpdateAppEntitlementRequest: shared.UpdateAppEntitlementRequest$inboundSchema
        .optional(),
}).transform((v) => {
    return remap$(v, {
        "app_id": "appId",
        "UpdateAppEntitlementRequest": "updateAppEntitlementRequest",
    });
});
/** @internal */
export const C1ApiAppV1AppEntitlementsUpdateRequest$outboundSchema = z.object({
    appId: z.nullable(z.string()),
    id: z.nullable(z.string()),
    updateAppEntitlementRequest: shared.UpdateAppEntitlementRequest$outboundSchema
        .optional(),
}).transform((v) => {
    return remap$(v, {
        appId: "app_id",
        updateAppEntitlementRequest: "UpdateAppEntitlementRequest",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var C1ApiAppV1AppEntitlementsUpdateRequest$;
(function (C1ApiAppV1AppEntitlementsUpdateRequest$) {
    /** @deprecated use `C1ApiAppV1AppEntitlementsUpdateRequest$inboundSchema` instead. */
    C1ApiAppV1AppEntitlementsUpdateRequest$.inboundSchema = C1ApiAppV1AppEntitlementsUpdateRequest$inboundSchema;
    /** @deprecated use `C1ApiAppV1AppEntitlementsUpdateRequest$outboundSchema` instead. */
    C1ApiAppV1AppEntitlementsUpdateRequest$.outboundSchema = C1ApiAppV1AppEntitlementsUpdateRequest$outboundSchema;
})(C1ApiAppV1AppEntitlementsUpdateRequest$ || (C1ApiAppV1AppEntitlementsUpdateRequest$ = {}));
export function c1ApiAppV1AppEntitlementsUpdateRequestToJSON(c1ApiAppV1AppEntitlementsUpdateRequest) {
    return JSON.stringify(C1ApiAppV1AppEntitlementsUpdateRequest$outboundSchema.parse(c1ApiAppV1AppEntitlementsUpdateRequest));
}
export function c1ApiAppV1AppEntitlementsUpdateRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => C1ApiAppV1AppEntitlementsUpdateRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'C1ApiAppV1AppEntitlementsUpdateRequest' from JSON`);
}
/** @internal */
export const C1ApiAppV1AppEntitlementsUpdateResponse$inboundSchema = z.object({
    ContentType: z.string(),
    StatusCode: z.number().int(),
    RawResponse: z.instanceof(Response),
    UpdateAppEntitlementResponse: shared
        .UpdateAppEntitlementResponse$inboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        "ContentType": "contentType",
        "StatusCode": "statusCode",
        "RawResponse": "rawResponse",
        "UpdateAppEntitlementResponse": "updateAppEntitlementResponse",
    });
});
/** @internal */
export const C1ApiAppV1AppEntitlementsUpdateResponse$outboundSchema = z.object({
    contentType: z.string(),
    statusCode: z.number().int(),
    rawResponse: z.instanceof(Response).transform(() => {
        throw new Error("Response cannot be serialized");
    }),
    updateAppEntitlementResponse: shared
        .UpdateAppEntitlementResponse$outboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        contentType: "ContentType",
        statusCode: "StatusCode",
        rawResponse: "RawResponse",
        updateAppEntitlementResponse: "UpdateAppEntitlementResponse",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var C1ApiAppV1AppEntitlementsUpdateResponse$;
(function (C1ApiAppV1AppEntitlementsUpdateResponse$) {
    /** @deprecated use `C1ApiAppV1AppEntitlementsUpdateResponse$inboundSchema` instead. */
    C1ApiAppV1AppEntitlementsUpdateResponse$.inboundSchema = C1ApiAppV1AppEntitlementsUpdateResponse$inboundSchema;
    /** @deprecated use `C1ApiAppV1AppEntitlementsUpdateResponse$outboundSchema` instead. */
    C1ApiAppV1AppEntitlementsUpdateResponse$.outboundSchema = C1ApiAppV1AppEntitlementsUpdateResponse$outboundSchema;
})(C1ApiAppV1AppEntitlementsUpdateResponse$ || (C1ApiAppV1AppEntitlementsUpdateResponse$ = {}));
export function c1ApiAppV1AppEntitlementsUpdateResponseToJSON(c1ApiAppV1AppEntitlementsUpdateResponse) {
    return JSON.stringify(C1ApiAppV1AppEntitlementsUpdateResponse$outboundSchema.parse(c1ApiAppV1AppEntitlementsUpdateResponse));
}
export function c1ApiAppV1AppEntitlementsUpdateResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => C1ApiAppV1AppEntitlementsUpdateResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'C1ApiAppV1AppEntitlementsUpdateResponse' from JSON`);
}
