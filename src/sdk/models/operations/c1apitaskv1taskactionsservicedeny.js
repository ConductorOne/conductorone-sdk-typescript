/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";
import { safeParse } from "../../../lib/schemas.js";
import * as shared from "../shared/index.js";
/** @internal */
export const C1ApiTaskV1TaskActionsServiceDenyRequest$inboundSchema = z.object({
    task_id: z.nullable(z.string()),
    TaskActionsServiceDenyRequest: shared
        .TaskActionsServiceDenyRequest$inboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        "task_id": "taskId",
        "TaskActionsServiceDenyRequest": "taskActionsServiceDenyRequest",
    });
});
/** @internal */
export const C1ApiTaskV1TaskActionsServiceDenyRequest$outboundSchema = z.object({
    taskId: z.nullable(z.string()),
    taskActionsServiceDenyRequest: shared
        .TaskActionsServiceDenyRequest$outboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        taskId: "task_id",
        taskActionsServiceDenyRequest: "TaskActionsServiceDenyRequest",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var C1ApiTaskV1TaskActionsServiceDenyRequest$;
(function (C1ApiTaskV1TaskActionsServiceDenyRequest$) {
    /** @deprecated use `C1ApiTaskV1TaskActionsServiceDenyRequest$inboundSchema` instead. */
    C1ApiTaskV1TaskActionsServiceDenyRequest$.inboundSchema = C1ApiTaskV1TaskActionsServiceDenyRequest$inboundSchema;
    /** @deprecated use `C1ApiTaskV1TaskActionsServiceDenyRequest$outboundSchema` instead. */
    C1ApiTaskV1TaskActionsServiceDenyRequest$.outboundSchema = C1ApiTaskV1TaskActionsServiceDenyRequest$outboundSchema;
})(C1ApiTaskV1TaskActionsServiceDenyRequest$ || (C1ApiTaskV1TaskActionsServiceDenyRequest$ = {}));
export function c1ApiTaskV1TaskActionsServiceDenyRequestToJSON(c1ApiTaskV1TaskActionsServiceDenyRequest) {
    return JSON.stringify(C1ApiTaskV1TaskActionsServiceDenyRequest$outboundSchema.parse(c1ApiTaskV1TaskActionsServiceDenyRequest));
}
export function c1ApiTaskV1TaskActionsServiceDenyRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => C1ApiTaskV1TaskActionsServiceDenyRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'C1ApiTaskV1TaskActionsServiceDenyRequest' from JSON`);
}
/** @internal */
export const C1ApiTaskV1TaskActionsServiceDenyResponse$inboundSchema = z.object({
    ContentType: z.string(),
    StatusCode: z.number().int(),
    RawResponse: z.instanceof(Response),
    TaskActionsServiceDenyResponse: shared
        .TaskActionsServiceDenyResponse$inboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        "ContentType": "contentType",
        "StatusCode": "statusCode",
        "RawResponse": "rawResponse",
        "TaskActionsServiceDenyResponse": "taskActionsServiceDenyResponse",
    });
});
/** @internal */
export const C1ApiTaskV1TaskActionsServiceDenyResponse$outboundSchema = z.object({
    contentType: z.string(),
    statusCode: z.number().int(),
    rawResponse: z.instanceof(Response).transform(() => {
        throw new Error("Response cannot be serialized");
    }),
    taskActionsServiceDenyResponse: shared
        .TaskActionsServiceDenyResponse$outboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        contentType: "ContentType",
        statusCode: "StatusCode",
        rawResponse: "RawResponse",
        taskActionsServiceDenyResponse: "TaskActionsServiceDenyResponse",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var C1ApiTaskV1TaskActionsServiceDenyResponse$;
(function (C1ApiTaskV1TaskActionsServiceDenyResponse$) {
    /** @deprecated use `C1ApiTaskV1TaskActionsServiceDenyResponse$inboundSchema` instead. */
    C1ApiTaskV1TaskActionsServiceDenyResponse$.inboundSchema = C1ApiTaskV1TaskActionsServiceDenyResponse$inboundSchema;
    /** @deprecated use `C1ApiTaskV1TaskActionsServiceDenyResponse$outboundSchema` instead. */
    C1ApiTaskV1TaskActionsServiceDenyResponse$.outboundSchema = C1ApiTaskV1TaskActionsServiceDenyResponse$outboundSchema;
})(C1ApiTaskV1TaskActionsServiceDenyResponse$ || (C1ApiTaskV1TaskActionsServiceDenyResponse$ = {}));
export function c1ApiTaskV1TaskActionsServiceDenyResponseToJSON(c1ApiTaskV1TaskActionsServiceDenyResponse) {
    return JSON.stringify(C1ApiTaskV1TaskActionsServiceDenyResponse$outboundSchema.parse(c1ApiTaskV1TaskActionsServiceDenyResponse));
}
export function c1ApiTaskV1TaskActionsServiceDenyResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => C1ApiTaskV1TaskActionsServiceDenyResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'C1ApiTaskV1TaskActionsServiceDenyResponse' from JSON`);
}
