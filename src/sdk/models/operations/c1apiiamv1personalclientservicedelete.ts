/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import * as shared from "../shared/index.js";

export type C1ApiIamV1PersonalClientServiceDeleteRequest = {
  id: string | null;
  personalClientServiceDeleteRequest?:
    | shared.PersonalClientServiceDeleteRequest
    | undefined;
};

export type C1ApiIamV1PersonalClientServiceDeleteResponse = {
  /**
   * HTTP response content type for this operation
   */
  contentType: string;
  /**
   * HTTP response status code for this operation
   */
  statusCode: number;
  /**
   * Raw HTTP response; suitable for custom response parsing
   */
  rawResponse: Response;
  /**
   * Successful response
   */
  personalClientServiceDeleteResponse?:
    | shared.PersonalClientServiceDeleteResponse
    | undefined;
};

/** @internal */
export const C1ApiIamV1PersonalClientServiceDeleteRequest$inboundSchema:
  z.ZodType<
    C1ApiIamV1PersonalClientServiceDeleteRequest,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.nullable(z.string()),
    PersonalClientServiceDeleteRequest: shared
      .PersonalClientServiceDeleteRequest$inboundSchema.optional(),
  }).transform((v) => {
    return remap$(v, {
      "PersonalClientServiceDeleteRequest":
        "personalClientServiceDeleteRequest",
    });
  });

/** @internal */
export type C1ApiIamV1PersonalClientServiceDeleteRequest$Outbound = {
  id: string | null;
  PersonalClientServiceDeleteRequest?:
    | shared.PersonalClientServiceDeleteRequest$Outbound
    | undefined;
};

/** @internal */
export const C1ApiIamV1PersonalClientServiceDeleteRequest$outboundSchema:
  z.ZodType<
    C1ApiIamV1PersonalClientServiceDeleteRequest$Outbound,
    z.ZodTypeDef,
    C1ApiIamV1PersonalClientServiceDeleteRequest
  > = z.object({
    id: z.nullable(z.string()),
    personalClientServiceDeleteRequest: shared
      .PersonalClientServiceDeleteRequest$outboundSchema.optional(),
  }).transform((v) => {
    return remap$(v, {
      personalClientServiceDeleteRequest: "PersonalClientServiceDeleteRequest",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace C1ApiIamV1PersonalClientServiceDeleteRequest$ {
  /** @deprecated use `C1ApiIamV1PersonalClientServiceDeleteRequest$inboundSchema` instead. */
  export const inboundSchema =
    C1ApiIamV1PersonalClientServiceDeleteRequest$inboundSchema;
  /** @deprecated use `C1ApiIamV1PersonalClientServiceDeleteRequest$outboundSchema` instead. */
  export const outboundSchema =
    C1ApiIamV1PersonalClientServiceDeleteRequest$outboundSchema;
  /** @deprecated use `C1ApiIamV1PersonalClientServiceDeleteRequest$Outbound` instead. */
  export type Outbound = C1ApiIamV1PersonalClientServiceDeleteRequest$Outbound;
}

export function c1ApiIamV1PersonalClientServiceDeleteRequestToJSON(
  c1ApiIamV1PersonalClientServiceDeleteRequest:
    C1ApiIamV1PersonalClientServiceDeleteRequest,
): string {
  return JSON.stringify(
    C1ApiIamV1PersonalClientServiceDeleteRequest$outboundSchema.parse(
      c1ApiIamV1PersonalClientServiceDeleteRequest,
    ),
  );
}

export function c1ApiIamV1PersonalClientServiceDeleteRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  C1ApiIamV1PersonalClientServiceDeleteRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      C1ApiIamV1PersonalClientServiceDeleteRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'C1ApiIamV1PersonalClientServiceDeleteRequest' from JSON`,
  );
}

/** @internal */
export const C1ApiIamV1PersonalClientServiceDeleteResponse$inboundSchema:
  z.ZodType<
    C1ApiIamV1PersonalClientServiceDeleteResponse,
    z.ZodTypeDef,
    unknown
  > = z.object({
    ContentType: z.string(),
    StatusCode: z.number().int(),
    RawResponse: z.instanceof(Response),
    PersonalClientServiceDeleteResponse: shared
      .PersonalClientServiceDeleteResponse$inboundSchema.optional(),
  }).transform((v) => {
    return remap$(v, {
      "ContentType": "contentType",
      "StatusCode": "statusCode",
      "RawResponse": "rawResponse",
      "PersonalClientServiceDeleteResponse":
        "personalClientServiceDeleteResponse",
    });
  });

/** @internal */
export type C1ApiIamV1PersonalClientServiceDeleteResponse$Outbound = {
  ContentType: string;
  StatusCode: number;
  RawResponse: never;
  PersonalClientServiceDeleteResponse?:
    | shared.PersonalClientServiceDeleteResponse$Outbound
    | undefined;
};

/** @internal */
export const C1ApiIamV1PersonalClientServiceDeleteResponse$outboundSchema:
  z.ZodType<
    C1ApiIamV1PersonalClientServiceDeleteResponse$Outbound,
    z.ZodTypeDef,
    C1ApiIamV1PersonalClientServiceDeleteResponse
  > = z.object({
    contentType: z.string(),
    statusCode: z.number().int(),
    rawResponse: z.instanceof(Response).transform(() => {
      throw new Error("Response cannot be serialized");
    }),
    personalClientServiceDeleteResponse: shared
      .PersonalClientServiceDeleteResponse$outboundSchema.optional(),
  }).transform((v) => {
    return remap$(v, {
      contentType: "ContentType",
      statusCode: "StatusCode",
      rawResponse: "RawResponse",
      personalClientServiceDeleteResponse:
        "PersonalClientServiceDeleteResponse",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace C1ApiIamV1PersonalClientServiceDeleteResponse$ {
  /** @deprecated use `C1ApiIamV1PersonalClientServiceDeleteResponse$inboundSchema` instead. */
  export const inboundSchema =
    C1ApiIamV1PersonalClientServiceDeleteResponse$inboundSchema;
  /** @deprecated use `C1ApiIamV1PersonalClientServiceDeleteResponse$outboundSchema` instead. */
  export const outboundSchema =
    C1ApiIamV1PersonalClientServiceDeleteResponse$outboundSchema;
  /** @deprecated use `C1ApiIamV1PersonalClientServiceDeleteResponse$Outbound` instead. */
  export type Outbound = C1ApiIamV1PersonalClientServiceDeleteResponse$Outbound;
}

export function c1ApiIamV1PersonalClientServiceDeleteResponseToJSON(
  c1ApiIamV1PersonalClientServiceDeleteResponse:
    C1ApiIamV1PersonalClientServiceDeleteResponse,
): string {
  return JSON.stringify(
    C1ApiIamV1PersonalClientServiceDeleteResponse$outboundSchema.parse(
      c1ApiIamV1PersonalClientServiceDeleteResponse,
    ),
  );
}

export function c1ApiIamV1PersonalClientServiceDeleteResponseFromJSON(
  jsonString: string,
): SafeParseResult<
  C1ApiIamV1PersonalClientServiceDeleteResponse,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      C1ApiIamV1PersonalClientServiceDeleteResponse$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'C1ApiIamV1PersonalClientServiceDeleteResponse' from JSON`,
  );
}
