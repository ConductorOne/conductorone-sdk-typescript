/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";
import { safeParse } from "../../../lib/schemas.js";
import * as shared from "../shared/index.js";
/** @internal */
export const C1ApiSystemlogV1ExportServiceUpdateRequest$inboundSchema = z.object({
    export_id: z.nullable(z.string()),
    ExportServiceUpdateRequest: shared
        .ExportServiceUpdateRequest$inboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        "export_id": "exportId",
        "ExportServiceUpdateRequest": "exportServiceUpdateRequest",
    });
});
/** @internal */
export const C1ApiSystemlogV1ExportServiceUpdateRequest$outboundSchema = z.object({
    exportId: z.nullable(z.string()),
    exportServiceUpdateRequest: shared.ExportServiceUpdateRequest$outboundSchema
        .optional(),
}).transform((v) => {
    return remap$(v, {
        exportId: "export_id",
        exportServiceUpdateRequest: "ExportServiceUpdateRequest",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var C1ApiSystemlogV1ExportServiceUpdateRequest$;
(function (C1ApiSystemlogV1ExportServiceUpdateRequest$) {
    /** @deprecated use `C1ApiSystemlogV1ExportServiceUpdateRequest$inboundSchema` instead. */
    C1ApiSystemlogV1ExportServiceUpdateRequest$.inboundSchema = C1ApiSystemlogV1ExportServiceUpdateRequest$inboundSchema;
    /** @deprecated use `C1ApiSystemlogV1ExportServiceUpdateRequest$outboundSchema` instead. */
    C1ApiSystemlogV1ExportServiceUpdateRequest$.outboundSchema = C1ApiSystemlogV1ExportServiceUpdateRequest$outboundSchema;
})(C1ApiSystemlogV1ExportServiceUpdateRequest$ || (C1ApiSystemlogV1ExportServiceUpdateRequest$ = {}));
export function c1ApiSystemlogV1ExportServiceUpdateRequestToJSON(c1ApiSystemlogV1ExportServiceUpdateRequest) {
    return JSON.stringify(C1ApiSystemlogV1ExportServiceUpdateRequest$outboundSchema.parse(c1ApiSystemlogV1ExportServiceUpdateRequest));
}
export function c1ApiSystemlogV1ExportServiceUpdateRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => C1ApiSystemlogV1ExportServiceUpdateRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'C1ApiSystemlogV1ExportServiceUpdateRequest' from JSON`);
}
/** @internal */
export const C1ApiSystemlogV1ExportServiceUpdateResponse$inboundSchema = z.object({
    ContentType: z.string(),
    StatusCode: z.number().int(),
    RawResponse: z.instanceof(Response),
    ExportServiceUpdateResponse: shared
        .ExportServiceUpdateResponse$inboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        "ContentType": "contentType",
        "StatusCode": "statusCode",
        "RawResponse": "rawResponse",
        "ExportServiceUpdateResponse": "exportServiceUpdateResponse",
    });
});
/** @internal */
export const C1ApiSystemlogV1ExportServiceUpdateResponse$outboundSchema = z.object({
    contentType: z.string(),
    statusCode: z.number().int(),
    rawResponse: z.instanceof(Response).transform(() => {
        throw new Error("Response cannot be serialized");
    }),
    exportServiceUpdateResponse: shared
        .ExportServiceUpdateResponse$outboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        contentType: "ContentType",
        statusCode: "StatusCode",
        rawResponse: "RawResponse",
        exportServiceUpdateResponse: "ExportServiceUpdateResponse",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var C1ApiSystemlogV1ExportServiceUpdateResponse$;
(function (C1ApiSystemlogV1ExportServiceUpdateResponse$) {
    /** @deprecated use `C1ApiSystemlogV1ExportServiceUpdateResponse$inboundSchema` instead. */
    C1ApiSystemlogV1ExportServiceUpdateResponse$.inboundSchema = C1ApiSystemlogV1ExportServiceUpdateResponse$inboundSchema;
    /** @deprecated use `C1ApiSystemlogV1ExportServiceUpdateResponse$outboundSchema` instead. */
    C1ApiSystemlogV1ExportServiceUpdateResponse$.outboundSchema = C1ApiSystemlogV1ExportServiceUpdateResponse$outboundSchema;
})(C1ApiSystemlogV1ExportServiceUpdateResponse$ || (C1ApiSystemlogV1ExportServiceUpdateResponse$ = {}));
export function c1ApiSystemlogV1ExportServiceUpdateResponseToJSON(c1ApiSystemlogV1ExportServiceUpdateResponse) {
    return JSON.stringify(C1ApiSystemlogV1ExportServiceUpdateResponse$outboundSchema.parse(c1ApiSystemlogV1ExportServiceUpdateResponse));
}
export function c1ApiSystemlogV1ExportServiceUpdateResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => C1ApiSystemlogV1ExportServiceUpdateResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'C1ApiSystemlogV1ExportServiceUpdateResponse' from JSON`);
}
