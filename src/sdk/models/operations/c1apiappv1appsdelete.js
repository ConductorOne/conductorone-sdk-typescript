/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";
import { safeParse } from "../../../lib/schemas.js";
import * as shared from "../shared/index.js";
/** @internal */
export const C1ApiAppV1AppsDeleteRequest$inboundSchema = z.object({
    id: z.nullable(z.string()),
    DeleteAppRequest: shared.DeleteAppRequest$inboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        "DeleteAppRequest": "deleteAppRequest",
    });
});
/** @internal */
export const C1ApiAppV1AppsDeleteRequest$outboundSchema = z.object({
    id: z.nullable(z.string()),
    deleteAppRequest: shared.DeleteAppRequest$outboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        deleteAppRequest: "DeleteAppRequest",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var C1ApiAppV1AppsDeleteRequest$;
(function (C1ApiAppV1AppsDeleteRequest$) {
    /** @deprecated use `C1ApiAppV1AppsDeleteRequest$inboundSchema` instead. */
    C1ApiAppV1AppsDeleteRequest$.inboundSchema = C1ApiAppV1AppsDeleteRequest$inboundSchema;
    /** @deprecated use `C1ApiAppV1AppsDeleteRequest$outboundSchema` instead. */
    C1ApiAppV1AppsDeleteRequest$.outboundSchema = C1ApiAppV1AppsDeleteRequest$outboundSchema;
})(C1ApiAppV1AppsDeleteRequest$ || (C1ApiAppV1AppsDeleteRequest$ = {}));
export function c1ApiAppV1AppsDeleteRequestToJSON(c1ApiAppV1AppsDeleteRequest) {
    return JSON.stringify(C1ApiAppV1AppsDeleteRequest$outboundSchema.parse(c1ApiAppV1AppsDeleteRequest));
}
export function c1ApiAppV1AppsDeleteRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => C1ApiAppV1AppsDeleteRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'C1ApiAppV1AppsDeleteRequest' from JSON`);
}
/** @internal */
export const C1ApiAppV1AppsDeleteResponse$inboundSchema = z.object({
    ContentType: z.string(),
    StatusCode: z.number().int(),
    RawResponse: z.instanceof(Response),
    DeleteAppResponse: shared.DeleteAppResponse$inboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        "ContentType": "contentType",
        "StatusCode": "statusCode",
        "RawResponse": "rawResponse",
        "DeleteAppResponse": "deleteAppResponse",
    });
});
/** @internal */
export const C1ApiAppV1AppsDeleteResponse$outboundSchema = z.object({
    contentType: z.string(),
    statusCode: z.number().int(),
    rawResponse: z.instanceof(Response).transform(() => {
        throw new Error("Response cannot be serialized");
    }),
    deleteAppResponse: shared.DeleteAppResponse$outboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        contentType: "ContentType",
        statusCode: "StatusCode",
        rawResponse: "RawResponse",
        deleteAppResponse: "DeleteAppResponse",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var C1ApiAppV1AppsDeleteResponse$;
(function (C1ApiAppV1AppsDeleteResponse$) {
    /** @deprecated use `C1ApiAppV1AppsDeleteResponse$inboundSchema` instead. */
    C1ApiAppV1AppsDeleteResponse$.inboundSchema = C1ApiAppV1AppsDeleteResponse$inboundSchema;
    /** @deprecated use `C1ApiAppV1AppsDeleteResponse$outboundSchema` instead. */
    C1ApiAppV1AppsDeleteResponse$.outboundSchema = C1ApiAppV1AppsDeleteResponse$outboundSchema;
})(C1ApiAppV1AppsDeleteResponse$ || (C1ApiAppV1AppsDeleteResponse$ = {}));
export function c1ApiAppV1AppsDeleteResponseToJSON(c1ApiAppV1AppsDeleteResponse) {
    return JSON.stringify(C1ApiAppV1AppsDeleteResponse$outboundSchema.parse(c1ApiAppV1AppsDeleteResponse));
}
export function c1ApiAppV1AppsDeleteResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => C1ApiAppV1AppsDeleteResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'C1ApiAppV1AppsDeleteResponse' from JSON`);
}
