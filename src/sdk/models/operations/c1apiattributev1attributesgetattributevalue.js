/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";
import { safeParse } from "../../../lib/schemas.js";
import * as shared from "../shared/index.js";
/** @internal */
export const C1ApiAttributeV1AttributesGetAttributeValueRequest$inboundSchema = z.object({
    id: z.nullable(z.string()),
});
/** @internal */
export const C1ApiAttributeV1AttributesGetAttributeValueRequest$outboundSchema = z.object({
    id: z.nullable(z.string()),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var C1ApiAttributeV1AttributesGetAttributeValueRequest$;
(function (C1ApiAttributeV1AttributesGetAttributeValueRequest$) {
    /** @deprecated use `C1ApiAttributeV1AttributesGetAttributeValueRequest$inboundSchema` instead. */
    C1ApiAttributeV1AttributesGetAttributeValueRequest$.inboundSchema = C1ApiAttributeV1AttributesGetAttributeValueRequest$inboundSchema;
    /** @deprecated use `C1ApiAttributeV1AttributesGetAttributeValueRequest$outboundSchema` instead. */
    C1ApiAttributeV1AttributesGetAttributeValueRequest$.outboundSchema = C1ApiAttributeV1AttributesGetAttributeValueRequest$outboundSchema;
})(C1ApiAttributeV1AttributesGetAttributeValueRequest$ || (C1ApiAttributeV1AttributesGetAttributeValueRequest$ = {}));
export function c1ApiAttributeV1AttributesGetAttributeValueRequestToJSON(c1ApiAttributeV1AttributesGetAttributeValueRequest) {
    return JSON.stringify(C1ApiAttributeV1AttributesGetAttributeValueRequest$outboundSchema.parse(c1ApiAttributeV1AttributesGetAttributeValueRequest));
}
export function c1ApiAttributeV1AttributesGetAttributeValueRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => C1ApiAttributeV1AttributesGetAttributeValueRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'C1ApiAttributeV1AttributesGetAttributeValueRequest' from JSON`);
}
/** @internal */
export const C1ApiAttributeV1AttributesGetAttributeValueResponse$inboundSchema = z.object({
    ContentType: z.string(),
    StatusCode: z.number().int(),
    RawResponse: z.instanceof(Response),
    GetAttributeValueResponse: shared.GetAttributeValueResponse$inboundSchema
        .optional(),
}).transform((v) => {
    return remap$(v, {
        "ContentType": "contentType",
        "StatusCode": "statusCode",
        "RawResponse": "rawResponse",
        "GetAttributeValueResponse": "getAttributeValueResponse",
    });
});
/** @internal */
export const C1ApiAttributeV1AttributesGetAttributeValueResponse$outboundSchema = z.object({
    contentType: z.string(),
    statusCode: z.number().int(),
    rawResponse: z.instanceof(Response).transform(() => {
        throw new Error("Response cannot be serialized");
    }),
    getAttributeValueResponse: shared.GetAttributeValueResponse$outboundSchema
        .optional(),
}).transform((v) => {
    return remap$(v, {
        contentType: "ContentType",
        statusCode: "StatusCode",
        rawResponse: "RawResponse",
        getAttributeValueResponse: "GetAttributeValueResponse",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var C1ApiAttributeV1AttributesGetAttributeValueResponse$;
(function (C1ApiAttributeV1AttributesGetAttributeValueResponse$) {
    /** @deprecated use `C1ApiAttributeV1AttributesGetAttributeValueResponse$inboundSchema` instead. */
    C1ApiAttributeV1AttributesGetAttributeValueResponse$.inboundSchema = C1ApiAttributeV1AttributesGetAttributeValueResponse$inboundSchema;
    /** @deprecated use `C1ApiAttributeV1AttributesGetAttributeValueResponse$outboundSchema` instead. */
    C1ApiAttributeV1AttributesGetAttributeValueResponse$.outboundSchema = C1ApiAttributeV1AttributesGetAttributeValueResponse$outboundSchema;
})(C1ApiAttributeV1AttributesGetAttributeValueResponse$ || (C1ApiAttributeV1AttributesGetAttributeValueResponse$ = {}));
export function c1ApiAttributeV1AttributesGetAttributeValueResponseToJSON(c1ApiAttributeV1AttributesGetAttributeValueResponse) {
    return JSON.stringify(C1ApiAttributeV1AttributesGetAttributeValueResponse$outboundSchema.parse(c1ApiAttributeV1AttributesGetAttributeValueResponse));
}
export function c1ApiAttributeV1AttributesGetAttributeValueResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => C1ApiAttributeV1AttributesGetAttributeValueResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'C1ApiAttributeV1AttributesGetAttributeValueResponse' from JSON`);
}
