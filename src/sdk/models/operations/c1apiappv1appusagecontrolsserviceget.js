/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";
import { safeParse } from "../../../lib/schemas.js";
import * as shared from "../shared/index.js";
/** @internal */
export const C1ApiAppV1AppUsageControlsServiceGetRequest$inboundSchema = z.object({
    app_id: z.nullable(z.string()),
}).transform((v) => {
    return remap$(v, {
        "app_id": "appId",
    });
});
/** @internal */
export const C1ApiAppV1AppUsageControlsServiceGetRequest$outboundSchema = z.object({
    appId: z.nullable(z.string()),
}).transform((v) => {
    return remap$(v, {
        appId: "app_id",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var C1ApiAppV1AppUsageControlsServiceGetRequest$;
(function (C1ApiAppV1AppUsageControlsServiceGetRequest$) {
    /** @deprecated use `C1ApiAppV1AppUsageControlsServiceGetRequest$inboundSchema` instead. */
    C1ApiAppV1AppUsageControlsServiceGetRequest$.inboundSchema = C1ApiAppV1AppUsageControlsServiceGetRequest$inboundSchema;
    /** @deprecated use `C1ApiAppV1AppUsageControlsServiceGetRequest$outboundSchema` instead. */
    C1ApiAppV1AppUsageControlsServiceGetRequest$.outboundSchema = C1ApiAppV1AppUsageControlsServiceGetRequest$outboundSchema;
})(C1ApiAppV1AppUsageControlsServiceGetRequest$ || (C1ApiAppV1AppUsageControlsServiceGetRequest$ = {}));
export function c1ApiAppV1AppUsageControlsServiceGetRequestToJSON(c1ApiAppV1AppUsageControlsServiceGetRequest) {
    return JSON.stringify(C1ApiAppV1AppUsageControlsServiceGetRequest$outboundSchema.parse(c1ApiAppV1AppUsageControlsServiceGetRequest));
}
export function c1ApiAppV1AppUsageControlsServiceGetRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => C1ApiAppV1AppUsageControlsServiceGetRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'C1ApiAppV1AppUsageControlsServiceGetRequest' from JSON`);
}
/** @internal */
export const C1ApiAppV1AppUsageControlsServiceGetResponse$inboundSchema = z.object({
    ContentType: z.string(),
    StatusCode: z.number().int(),
    RawResponse: z.instanceof(Response),
    GetAppUsageControlsResponse: shared
        .GetAppUsageControlsResponse$inboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        "ContentType": "contentType",
        "StatusCode": "statusCode",
        "RawResponse": "rawResponse",
        "GetAppUsageControlsResponse": "getAppUsageControlsResponse",
    });
});
/** @internal */
export const C1ApiAppV1AppUsageControlsServiceGetResponse$outboundSchema = z.object({
    contentType: z.string(),
    statusCode: z.number().int(),
    rawResponse: z.instanceof(Response).transform(() => {
        throw new Error("Response cannot be serialized");
    }),
    getAppUsageControlsResponse: shared
        .GetAppUsageControlsResponse$outboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        contentType: "ContentType",
        statusCode: "StatusCode",
        rawResponse: "RawResponse",
        getAppUsageControlsResponse: "GetAppUsageControlsResponse",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var C1ApiAppV1AppUsageControlsServiceGetResponse$;
(function (C1ApiAppV1AppUsageControlsServiceGetResponse$) {
    /** @deprecated use `C1ApiAppV1AppUsageControlsServiceGetResponse$inboundSchema` instead. */
    C1ApiAppV1AppUsageControlsServiceGetResponse$.inboundSchema = C1ApiAppV1AppUsageControlsServiceGetResponse$inboundSchema;
    /** @deprecated use `C1ApiAppV1AppUsageControlsServiceGetResponse$outboundSchema` instead. */
    C1ApiAppV1AppUsageControlsServiceGetResponse$.outboundSchema = C1ApiAppV1AppUsageControlsServiceGetResponse$outboundSchema;
})(C1ApiAppV1AppUsageControlsServiceGetResponse$ || (C1ApiAppV1AppUsageControlsServiceGetResponse$ = {}));
export function c1ApiAppV1AppUsageControlsServiceGetResponseToJSON(c1ApiAppV1AppUsageControlsServiceGetResponse) {
    return JSON.stringify(C1ApiAppV1AppUsageControlsServiceGetResponse$outboundSchema.parse(c1ApiAppV1AppUsageControlsServiceGetResponse));
}
export function c1ApiAppV1AppUsageControlsServiceGetResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => C1ApiAppV1AppUsageControlsServiceGetResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'C1ApiAppV1AppUsageControlsServiceGetResponse' from JSON`);
}
