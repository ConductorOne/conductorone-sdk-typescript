/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";
import { safeParse } from "../../../lib/schemas.js";
import * as shared from "../shared/index.js";
/** @internal */
export const C1ApiRequestcatalogV1RequestCatalogManagementServiceDeleteBundleAutomationRequest$inboundSchema = z.object({
    request_catalog_id: z.nullable(z.string()),
    DeleteBundleAutomationRequest: shared
        .DeleteBundleAutomationRequest$inboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        "request_catalog_id": "requestCatalogId",
        "DeleteBundleAutomationRequest": "deleteBundleAutomationRequest",
    });
});
/** @internal */
export const C1ApiRequestcatalogV1RequestCatalogManagementServiceDeleteBundleAutomationRequest$outboundSchema = z.object({
    requestCatalogId: z.nullable(z.string()),
    deleteBundleAutomationRequest: shared
        .DeleteBundleAutomationRequest$outboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        requestCatalogId: "request_catalog_id",
        deleteBundleAutomationRequest: "DeleteBundleAutomationRequest",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var C1ApiRequestcatalogV1RequestCatalogManagementServiceDeleteBundleAutomationRequest$;
(function (C1ApiRequestcatalogV1RequestCatalogManagementServiceDeleteBundleAutomationRequest$) {
    /** @deprecated use `C1ApiRequestcatalogV1RequestCatalogManagementServiceDeleteBundleAutomationRequest$inboundSchema` instead. */
    C1ApiRequestcatalogV1RequestCatalogManagementServiceDeleteBundleAutomationRequest$.inboundSchema = C1ApiRequestcatalogV1RequestCatalogManagementServiceDeleteBundleAutomationRequest$inboundSchema;
    /** @deprecated use `C1ApiRequestcatalogV1RequestCatalogManagementServiceDeleteBundleAutomationRequest$outboundSchema` instead. */
    C1ApiRequestcatalogV1RequestCatalogManagementServiceDeleteBundleAutomationRequest$.outboundSchema = C1ApiRequestcatalogV1RequestCatalogManagementServiceDeleteBundleAutomationRequest$outboundSchema;
})(C1ApiRequestcatalogV1RequestCatalogManagementServiceDeleteBundleAutomationRequest$ || (C1ApiRequestcatalogV1RequestCatalogManagementServiceDeleteBundleAutomationRequest$ = {}));
export function c1ApiRequestcatalogV1RequestCatalogManagementServiceDeleteBundleAutomationRequestToJSON(c1ApiRequestcatalogV1RequestCatalogManagementServiceDeleteBundleAutomationRequest) {
    return JSON.stringify(C1ApiRequestcatalogV1RequestCatalogManagementServiceDeleteBundleAutomationRequest$outboundSchema
        .parse(c1ApiRequestcatalogV1RequestCatalogManagementServiceDeleteBundleAutomationRequest));
}
export function c1ApiRequestcatalogV1RequestCatalogManagementServiceDeleteBundleAutomationRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => C1ApiRequestcatalogV1RequestCatalogManagementServiceDeleteBundleAutomationRequest$inboundSchema
        .parse(JSON.parse(x)), `Failed to parse 'C1ApiRequestcatalogV1RequestCatalogManagementServiceDeleteBundleAutomationRequest' from JSON`);
}
/** @internal */
export const C1ApiRequestcatalogV1RequestCatalogManagementServiceDeleteBundleAutomationResponse$inboundSchema = z.object({
    ContentType: z.string(),
    StatusCode: z.number().int(),
    RawResponse: z.instanceof(Response),
    DeleteBundleAutomationResponse: shared
        .DeleteBundleAutomationResponse$inboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        "ContentType": "contentType",
        "StatusCode": "statusCode",
        "RawResponse": "rawResponse",
        "DeleteBundleAutomationResponse": "deleteBundleAutomationResponse",
    });
});
/** @internal */
export const C1ApiRequestcatalogV1RequestCatalogManagementServiceDeleteBundleAutomationResponse$outboundSchema = z.object({
    contentType: z.string(),
    statusCode: z.number().int(),
    rawResponse: z.instanceof(Response).transform(() => {
        throw new Error("Response cannot be serialized");
    }),
    deleteBundleAutomationResponse: shared
        .DeleteBundleAutomationResponse$outboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        contentType: "ContentType",
        statusCode: "StatusCode",
        rawResponse: "RawResponse",
        deleteBundleAutomationResponse: "DeleteBundleAutomationResponse",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var C1ApiRequestcatalogV1RequestCatalogManagementServiceDeleteBundleAutomationResponse$;
(function (C1ApiRequestcatalogV1RequestCatalogManagementServiceDeleteBundleAutomationResponse$) {
    /** @deprecated use `C1ApiRequestcatalogV1RequestCatalogManagementServiceDeleteBundleAutomationResponse$inboundSchema` instead. */
    C1ApiRequestcatalogV1RequestCatalogManagementServiceDeleteBundleAutomationResponse$.inboundSchema = C1ApiRequestcatalogV1RequestCatalogManagementServiceDeleteBundleAutomationResponse$inboundSchema;
    /** @deprecated use `C1ApiRequestcatalogV1RequestCatalogManagementServiceDeleteBundleAutomationResponse$outboundSchema` instead. */
    C1ApiRequestcatalogV1RequestCatalogManagementServiceDeleteBundleAutomationResponse$.outboundSchema = C1ApiRequestcatalogV1RequestCatalogManagementServiceDeleteBundleAutomationResponse$outboundSchema;
})(C1ApiRequestcatalogV1RequestCatalogManagementServiceDeleteBundleAutomationResponse$ || (C1ApiRequestcatalogV1RequestCatalogManagementServiceDeleteBundleAutomationResponse$ = {}));
export function c1ApiRequestcatalogV1RequestCatalogManagementServiceDeleteBundleAutomationResponseToJSON(c1ApiRequestcatalogV1RequestCatalogManagementServiceDeleteBundleAutomationResponse) {
    return JSON.stringify(C1ApiRequestcatalogV1RequestCatalogManagementServiceDeleteBundleAutomationResponse$outboundSchema
        .parse(c1ApiRequestcatalogV1RequestCatalogManagementServiceDeleteBundleAutomationResponse));
}
export function c1ApiRequestcatalogV1RequestCatalogManagementServiceDeleteBundleAutomationResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => C1ApiRequestcatalogV1RequestCatalogManagementServiceDeleteBundleAutomationResponse$inboundSchema
        .parse(JSON.parse(x)), `Failed to parse 'C1ApiRequestcatalogV1RequestCatalogManagementServiceDeleteBundleAutomationResponse' from JSON`);
}
