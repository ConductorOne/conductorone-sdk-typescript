/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";
import { safeParse } from "../../../lib/schemas.js";
import * as shared from "../shared/index.js";
/** @internal */
export const C1ApiAppV1AppEntitlementsRemoveEntitlementMembershipRequest$inboundSchema = z.object({
    app_id: z.nullable(z.string()),
    app_entitlement_id: z.nullable(z.string()),
    RemoveEntitlementMembershipRequest: shared
        .RemoveEntitlementMembershipRequest$inboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        "app_id": "appId",
        "app_entitlement_id": "appEntitlementId",
        "RemoveEntitlementMembershipRequest": "removeEntitlementMembershipRequest",
    });
});
/** @internal */
export const C1ApiAppV1AppEntitlementsRemoveEntitlementMembershipRequest$outboundSchema = z.object({
    appId: z.nullable(z.string()),
    appEntitlementId: z.nullable(z.string()),
    removeEntitlementMembershipRequest: shared
        .RemoveEntitlementMembershipRequest$outboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        appId: "app_id",
        appEntitlementId: "app_entitlement_id",
        removeEntitlementMembershipRequest: "RemoveEntitlementMembershipRequest",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var C1ApiAppV1AppEntitlementsRemoveEntitlementMembershipRequest$;
(function (C1ApiAppV1AppEntitlementsRemoveEntitlementMembershipRequest$) {
    /** @deprecated use `C1ApiAppV1AppEntitlementsRemoveEntitlementMembershipRequest$inboundSchema` instead. */
    C1ApiAppV1AppEntitlementsRemoveEntitlementMembershipRequest$.inboundSchema = C1ApiAppV1AppEntitlementsRemoveEntitlementMembershipRequest$inboundSchema;
    /** @deprecated use `C1ApiAppV1AppEntitlementsRemoveEntitlementMembershipRequest$outboundSchema` instead. */
    C1ApiAppV1AppEntitlementsRemoveEntitlementMembershipRequest$.outboundSchema = C1ApiAppV1AppEntitlementsRemoveEntitlementMembershipRequest$outboundSchema;
})(C1ApiAppV1AppEntitlementsRemoveEntitlementMembershipRequest$ || (C1ApiAppV1AppEntitlementsRemoveEntitlementMembershipRequest$ = {}));
export function c1ApiAppV1AppEntitlementsRemoveEntitlementMembershipRequestToJSON(c1ApiAppV1AppEntitlementsRemoveEntitlementMembershipRequest) {
    return JSON.stringify(C1ApiAppV1AppEntitlementsRemoveEntitlementMembershipRequest$outboundSchema
        .parse(c1ApiAppV1AppEntitlementsRemoveEntitlementMembershipRequest));
}
export function c1ApiAppV1AppEntitlementsRemoveEntitlementMembershipRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => C1ApiAppV1AppEntitlementsRemoveEntitlementMembershipRequest$inboundSchema
        .parse(JSON.parse(x)), `Failed to parse 'C1ApiAppV1AppEntitlementsRemoveEntitlementMembershipRequest' from JSON`);
}
/** @internal */
export const C1ApiAppV1AppEntitlementsRemoveEntitlementMembershipResponse$inboundSchema = z.object({
    ContentType: z.string(),
    StatusCode: z.number().int(),
    RawResponse: z.instanceof(Response),
    RemoveEntitlementMembershipResponse: shared
        .RemoveEntitlementMembershipResponse$inboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        "ContentType": "contentType",
        "StatusCode": "statusCode",
        "RawResponse": "rawResponse",
        "RemoveEntitlementMembershipResponse": "removeEntitlementMembershipResponse",
    });
});
/** @internal */
export const C1ApiAppV1AppEntitlementsRemoveEntitlementMembershipResponse$outboundSchema = z.object({
    contentType: z.string(),
    statusCode: z.number().int(),
    rawResponse: z.instanceof(Response).transform(() => {
        throw new Error("Response cannot be serialized");
    }),
    removeEntitlementMembershipResponse: shared
        .RemoveEntitlementMembershipResponse$outboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        contentType: "ContentType",
        statusCode: "StatusCode",
        rawResponse: "RawResponse",
        removeEntitlementMembershipResponse: "RemoveEntitlementMembershipResponse",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var C1ApiAppV1AppEntitlementsRemoveEntitlementMembershipResponse$;
(function (C1ApiAppV1AppEntitlementsRemoveEntitlementMembershipResponse$) {
    /** @deprecated use `C1ApiAppV1AppEntitlementsRemoveEntitlementMembershipResponse$inboundSchema` instead. */
    C1ApiAppV1AppEntitlementsRemoveEntitlementMembershipResponse$.inboundSchema = C1ApiAppV1AppEntitlementsRemoveEntitlementMembershipResponse$inboundSchema;
    /** @deprecated use `C1ApiAppV1AppEntitlementsRemoveEntitlementMembershipResponse$outboundSchema` instead. */
    C1ApiAppV1AppEntitlementsRemoveEntitlementMembershipResponse$.outboundSchema = C1ApiAppV1AppEntitlementsRemoveEntitlementMembershipResponse$outboundSchema;
})(C1ApiAppV1AppEntitlementsRemoveEntitlementMembershipResponse$ || (C1ApiAppV1AppEntitlementsRemoveEntitlementMembershipResponse$ = {}));
export function c1ApiAppV1AppEntitlementsRemoveEntitlementMembershipResponseToJSON(c1ApiAppV1AppEntitlementsRemoveEntitlementMembershipResponse) {
    return JSON.stringify(C1ApiAppV1AppEntitlementsRemoveEntitlementMembershipResponse$outboundSchema
        .parse(c1ApiAppV1AppEntitlementsRemoveEntitlementMembershipResponse));
}
export function c1ApiAppV1AppEntitlementsRemoveEntitlementMembershipResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => C1ApiAppV1AppEntitlementsRemoveEntitlementMembershipResponse$inboundSchema
        .parse(JSON.parse(x)), `Failed to parse 'C1ApiAppV1AppEntitlementsRemoveEntitlementMembershipResponse' from JSON`);
}
