/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";
import { safeParse } from "../../../lib/schemas.js";
import * as shared from "../shared/index.js";
/** @internal */
export const C1ApiWebhooksV1WebhooksServiceGetRequest$inboundSchema = z.object({
    id: z.nullable(z.string()),
});
/** @internal */
export const C1ApiWebhooksV1WebhooksServiceGetRequest$outboundSchema = z.object({
    id: z.nullable(z.string()),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var C1ApiWebhooksV1WebhooksServiceGetRequest$;
(function (C1ApiWebhooksV1WebhooksServiceGetRequest$) {
    /** @deprecated use `C1ApiWebhooksV1WebhooksServiceGetRequest$inboundSchema` instead. */
    C1ApiWebhooksV1WebhooksServiceGetRequest$.inboundSchema = C1ApiWebhooksV1WebhooksServiceGetRequest$inboundSchema;
    /** @deprecated use `C1ApiWebhooksV1WebhooksServiceGetRequest$outboundSchema` instead. */
    C1ApiWebhooksV1WebhooksServiceGetRequest$.outboundSchema = C1ApiWebhooksV1WebhooksServiceGetRequest$outboundSchema;
})(C1ApiWebhooksV1WebhooksServiceGetRequest$ || (C1ApiWebhooksV1WebhooksServiceGetRequest$ = {}));
export function c1ApiWebhooksV1WebhooksServiceGetRequestToJSON(c1ApiWebhooksV1WebhooksServiceGetRequest) {
    return JSON.stringify(C1ApiWebhooksV1WebhooksServiceGetRequest$outboundSchema.parse(c1ApiWebhooksV1WebhooksServiceGetRequest));
}
export function c1ApiWebhooksV1WebhooksServiceGetRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => C1ApiWebhooksV1WebhooksServiceGetRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'C1ApiWebhooksV1WebhooksServiceGetRequest' from JSON`);
}
/** @internal */
export const C1ApiWebhooksV1WebhooksServiceGetResponse$inboundSchema = z.object({
    ContentType: z.string(),
    StatusCode: z.number().int(),
    RawResponse: z.instanceof(Response),
    WebhooksServiceGetResponse: shared.WebhooksServiceGetResponse$inboundSchema
        .optional(),
}).transform((v) => {
    return remap$(v, {
        "ContentType": "contentType",
        "StatusCode": "statusCode",
        "RawResponse": "rawResponse",
        "WebhooksServiceGetResponse": "webhooksServiceGetResponse",
    });
});
/** @internal */
export const C1ApiWebhooksV1WebhooksServiceGetResponse$outboundSchema = z.object({
    contentType: z.string(),
    statusCode: z.number().int(),
    rawResponse: z.instanceof(Response).transform(() => {
        throw new Error("Response cannot be serialized");
    }),
    webhooksServiceGetResponse: shared.WebhooksServiceGetResponse$outboundSchema
        .optional(),
}).transform((v) => {
    return remap$(v, {
        contentType: "ContentType",
        statusCode: "StatusCode",
        rawResponse: "RawResponse",
        webhooksServiceGetResponse: "WebhooksServiceGetResponse",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var C1ApiWebhooksV1WebhooksServiceGetResponse$;
(function (C1ApiWebhooksV1WebhooksServiceGetResponse$) {
    /** @deprecated use `C1ApiWebhooksV1WebhooksServiceGetResponse$inboundSchema` instead. */
    C1ApiWebhooksV1WebhooksServiceGetResponse$.inboundSchema = C1ApiWebhooksV1WebhooksServiceGetResponse$inboundSchema;
    /** @deprecated use `C1ApiWebhooksV1WebhooksServiceGetResponse$outboundSchema` instead. */
    C1ApiWebhooksV1WebhooksServiceGetResponse$.outboundSchema = C1ApiWebhooksV1WebhooksServiceGetResponse$outboundSchema;
})(C1ApiWebhooksV1WebhooksServiceGetResponse$ || (C1ApiWebhooksV1WebhooksServiceGetResponse$ = {}));
export function c1ApiWebhooksV1WebhooksServiceGetResponseToJSON(c1ApiWebhooksV1WebhooksServiceGetResponse) {
    return JSON.stringify(C1ApiWebhooksV1WebhooksServiceGetResponse$outboundSchema.parse(c1ApiWebhooksV1WebhooksServiceGetResponse));
}
export function c1ApiWebhooksV1WebhooksServiceGetResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => C1ApiWebhooksV1WebhooksServiceGetResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'C1ApiWebhooksV1WebhooksServiceGetResponse' from JSON`);
}
