/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";
import { safeParse } from "../../../lib/schemas.js";
import * as shared from "../shared/index.js";
/** @internal */
export const C1ApiAutomationsV1AutomationServiceExecuteAutomationRequest$inboundSchema = z.object({
    id: z.nullable(z.string()),
    ExecuteAutomationRequest: shared.ExecuteAutomationRequest$inboundSchema
        .optional(),
}).transform((v) => {
    return remap$(v, {
        "ExecuteAutomationRequest": "executeAutomationRequest",
    });
});
/** @internal */
export const C1ApiAutomationsV1AutomationServiceExecuteAutomationRequest$outboundSchema = z.object({
    id: z.nullable(z.string()),
    executeAutomationRequest: shared.ExecuteAutomationRequest$outboundSchema
        .optional(),
}).transform((v) => {
    return remap$(v, {
        executeAutomationRequest: "ExecuteAutomationRequest",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var C1ApiAutomationsV1AutomationServiceExecuteAutomationRequest$;
(function (C1ApiAutomationsV1AutomationServiceExecuteAutomationRequest$) {
    /** @deprecated use `C1ApiAutomationsV1AutomationServiceExecuteAutomationRequest$inboundSchema` instead. */
    C1ApiAutomationsV1AutomationServiceExecuteAutomationRequest$.inboundSchema = C1ApiAutomationsV1AutomationServiceExecuteAutomationRequest$inboundSchema;
    /** @deprecated use `C1ApiAutomationsV1AutomationServiceExecuteAutomationRequest$outboundSchema` instead. */
    C1ApiAutomationsV1AutomationServiceExecuteAutomationRequest$.outboundSchema = C1ApiAutomationsV1AutomationServiceExecuteAutomationRequest$outboundSchema;
})(C1ApiAutomationsV1AutomationServiceExecuteAutomationRequest$ || (C1ApiAutomationsV1AutomationServiceExecuteAutomationRequest$ = {}));
export function c1ApiAutomationsV1AutomationServiceExecuteAutomationRequestToJSON(c1ApiAutomationsV1AutomationServiceExecuteAutomationRequest) {
    return JSON.stringify(C1ApiAutomationsV1AutomationServiceExecuteAutomationRequest$outboundSchema
        .parse(c1ApiAutomationsV1AutomationServiceExecuteAutomationRequest));
}
export function c1ApiAutomationsV1AutomationServiceExecuteAutomationRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => C1ApiAutomationsV1AutomationServiceExecuteAutomationRequest$inboundSchema
        .parse(JSON.parse(x)), `Failed to parse 'C1ApiAutomationsV1AutomationServiceExecuteAutomationRequest' from JSON`);
}
/** @internal */
export const C1ApiAutomationsV1AutomationServiceExecuteAutomationResponse$inboundSchema = z.object({
    ContentType: z.string(),
    StatusCode: z.number().int(),
    RawResponse: z.instanceof(Response),
    ExecuteAutomationResponse: shared.ExecuteAutomationResponse$inboundSchema
        .optional(),
}).transform((v) => {
    return remap$(v, {
        "ContentType": "contentType",
        "StatusCode": "statusCode",
        "RawResponse": "rawResponse",
        "ExecuteAutomationResponse": "executeAutomationResponse",
    });
});
/** @internal */
export const C1ApiAutomationsV1AutomationServiceExecuteAutomationResponse$outboundSchema = z.object({
    contentType: z.string(),
    statusCode: z.number().int(),
    rawResponse: z.instanceof(Response).transform(() => {
        throw new Error("Response cannot be serialized");
    }),
    executeAutomationResponse: shared.ExecuteAutomationResponse$outboundSchema
        .optional(),
}).transform((v) => {
    return remap$(v, {
        contentType: "ContentType",
        statusCode: "StatusCode",
        rawResponse: "RawResponse",
        executeAutomationResponse: "ExecuteAutomationResponse",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var C1ApiAutomationsV1AutomationServiceExecuteAutomationResponse$;
(function (C1ApiAutomationsV1AutomationServiceExecuteAutomationResponse$) {
    /** @deprecated use `C1ApiAutomationsV1AutomationServiceExecuteAutomationResponse$inboundSchema` instead. */
    C1ApiAutomationsV1AutomationServiceExecuteAutomationResponse$.inboundSchema = C1ApiAutomationsV1AutomationServiceExecuteAutomationResponse$inboundSchema;
    /** @deprecated use `C1ApiAutomationsV1AutomationServiceExecuteAutomationResponse$outboundSchema` instead. */
    C1ApiAutomationsV1AutomationServiceExecuteAutomationResponse$.outboundSchema = C1ApiAutomationsV1AutomationServiceExecuteAutomationResponse$outboundSchema;
})(C1ApiAutomationsV1AutomationServiceExecuteAutomationResponse$ || (C1ApiAutomationsV1AutomationServiceExecuteAutomationResponse$ = {}));
export function c1ApiAutomationsV1AutomationServiceExecuteAutomationResponseToJSON(c1ApiAutomationsV1AutomationServiceExecuteAutomationResponse) {
    return JSON.stringify(C1ApiAutomationsV1AutomationServiceExecuteAutomationResponse$outboundSchema
        .parse(c1ApiAutomationsV1AutomationServiceExecuteAutomationResponse));
}
export function c1ApiAutomationsV1AutomationServiceExecuteAutomationResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => C1ApiAutomationsV1AutomationServiceExecuteAutomationResponse$inboundSchema
        .parse(JSON.parse(x)), `Failed to parse 'C1ApiAutomationsV1AutomationServiceExecuteAutomationResponse' from JSON`);
}
