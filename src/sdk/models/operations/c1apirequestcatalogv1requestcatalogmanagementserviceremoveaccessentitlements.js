/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";
import { safeParse } from "../../../lib/schemas.js";
import * as shared from "../shared/index.js";
/** @internal */
export const C1ApiRequestcatalogV1RequestCatalogManagementServiceRemoveAccessEntitlementsRequest$inboundSchema = z.object({
    catalog_id: z.nullable(z.string()),
    RequestCatalogManagementServiceRemoveAccessEntitlementsRequest: shared
        .RequestCatalogManagementServiceRemoveAccessEntitlementsRequest$inboundSchema
        .optional(),
}).transform((v) => {
    return remap$(v, {
        "catalog_id": "catalogId",
        "RequestCatalogManagementServiceRemoveAccessEntitlementsRequest": "requestCatalogManagementServiceRemoveAccessEntitlementsRequest",
    });
});
/** @internal */
export const C1ApiRequestcatalogV1RequestCatalogManagementServiceRemoveAccessEntitlementsRequest$outboundSchema = z.object({
    catalogId: z.nullable(z.string()),
    requestCatalogManagementServiceRemoveAccessEntitlementsRequest: shared
        .RequestCatalogManagementServiceRemoveAccessEntitlementsRequest$outboundSchema
        .optional(),
}).transform((v) => {
    return remap$(v, {
        catalogId: "catalog_id",
        requestCatalogManagementServiceRemoveAccessEntitlementsRequest: "RequestCatalogManagementServiceRemoveAccessEntitlementsRequest",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var C1ApiRequestcatalogV1RequestCatalogManagementServiceRemoveAccessEntitlementsRequest$;
(function (C1ApiRequestcatalogV1RequestCatalogManagementServiceRemoveAccessEntitlementsRequest$) {
    /** @deprecated use `C1ApiRequestcatalogV1RequestCatalogManagementServiceRemoveAccessEntitlementsRequest$inboundSchema` instead. */
    C1ApiRequestcatalogV1RequestCatalogManagementServiceRemoveAccessEntitlementsRequest$.inboundSchema = C1ApiRequestcatalogV1RequestCatalogManagementServiceRemoveAccessEntitlementsRequest$inboundSchema;
    /** @deprecated use `C1ApiRequestcatalogV1RequestCatalogManagementServiceRemoveAccessEntitlementsRequest$outboundSchema` instead. */
    C1ApiRequestcatalogV1RequestCatalogManagementServiceRemoveAccessEntitlementsRequest$.outboundSchema = C1ApiRequestcatalogV1RequestCatalogManagementServiceRemoveAccessEntitlementsRequest$outboundSchema;
})(C1ApiRequestcatalogV1RequestCatalogManagementServiceRemoveAccessEntitlementsRequest$ || (C1ApiRequestcatalogV1RequestCatalogManagementServiceRemoveAccessEntitlementsRequest$ = {}));
export function c1ApiRequestcatalogV1RequestCatalogManagementServiceRemoveAccessEntitlementsRequestToJSON(c1ApiRequestcatalogV1RequestCatalogManagementServiceRemoveAccessEntitlementsRequest) {
    return JSON.stringify(C1ApiRequestcatalogV1RequestCatalogManagementServiceRemoveAccessEntitlementsRequest$outboundSchema
        .parse(c1ApiRequestcatalogV1RequestCatalogManagementServiceRemoveAccessEntitlementsRequest));
}
export function c1ApiRequestcatalogV1RequestCatalogManagementServiceRemoveAccessEntitlementsRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => C1ApiRequestcatalogV1RequestCatalogManagementServiceRemoveAccessEntitlementsRequest$inboundSchema
        .parse(JSON.parse(x)), `Failed to parse 'C1ApiRequestcatalogV1RequestCatalogManagementServiceRemoveAccessEntitlementsRequest' from JSON`);
}
/** @internal */
export const C1ApiRequestcatalogV1RequestCatalogManagementServiceRemoveAccessEntitlementsResponse$inboundSchema = z.object({
    ContentType: z.string(),
    StatusCode: z.number().int(),
    RawResponse: z.instanceof(Response),
    RequestCatalogManagementServiceRemoveAccessEntitlementsResponse: shared
        .RequestCatalogManagementServiceRemoveAccessEntitlementsResponse$inboundSchema
        .optional(),
}).transform((v) => {
    return remap$(v, {
        "ContentType": "contentType",
        "StatusCode": "statusCode",
        "RawResponse": "rawResponse",
        "RequestCatalogManagementServiceRemoveAccessEntitlementsResponse": "requestCatalogManagementServiceRemoveAccessEntitlementsResponse",
    });
});
/** @internal */
export const C1ApiRequestcatalogV1RequestCatalogManagementServiceRemoveAccessEntitlementsResponse$outboundSchema = z.object({
    contentType: z.string(),
    statusCode: z.number().int(),
    rawResponse: z.instanceof(Response).transform(() => {
        throw new Error("Response cannot be serialized");
    }),
    requestCatalogManagementServiceRemoveAccessEntitlementsResponse: shared
        .RequestCatalogManagementServiceRemoveAccessEntitlementsResponse$outboundSchema
        .optional(),
}).transform((v) => {
    return remap$(v, {
        contentType: "ContentType",
        statusCode: "StatusCode",
        rawResponse: "RawResponse",
        requestCatalogManagementServiceRemoveAccessEntitlementsResponse: "RequestCatalogManagementServiceRemoveAccessEntitlementsResponse",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var C1ApiRequestcatalogV1RequestCatalogManagementServiceRemoveAccessEntitlementsResponse$;
(function (C1ApiRequestcatalogV1RequestCatalogManagementServiceRemoveAccessEntitlementsResponse$) {
    /** @deprecated use `C1ApiRequestcatalogV1RequestCatalogManagementServiceRemoveAccessEntitlementsResponse$inboundSchema` instead. */
    C1ApiRequestcatalogV1RequestCatalogManagementServiceRemoveAccessEntitlementsResponse$.inboundSchema = C1ApiRequestcatalogV1RequestCatalogManagementServiceRemoveAccessEntitlementsResponse$inboundSchema;
    /** @deprecated use `C1ApiRequestcatalogV1RequestCatalogManagementServiceRemoveAccessEntitlementsResponse$outboundSchema` instead. */
    C1ApiRequestcatalogV1RequestCatalogManagementServiceRemoveAccessEntitlementsResponse$.outboundSchema = C1ApiRequestcatalogV1RequestCatalogManagementServiceRemoveAccessEntitlementsResponse$outboundSchema;
})(C1ApiRequestcatalogV1RequestCatalogManagementServiceRemoveAccessEntitlementsResponse$ || (C1ApiRequestcatalogV1RequestCatalogManagementServiceRemoveAccessEntitlementsResponse$ = {}));
export function c1ApiRequestcatalogV1RequestCatalogManagementServiceRemoveAccessEntitlementsResponseToJSON(c1ApiRequestcatalogV1RequestCatalogManagementServiceRemoveAccessEntitlementsResponse) {
    return JSON.stringify(C1ApiRequestcatalogV1RequestCatalogManagementServiceRemoveAccessEntitlementsResponse$outboundSchema
        .parse(c1ApiRequestcatalogV1RequestCatalogManagementServiceRemoveAccessEntitlementsResponse));
}
export function c1ApiRequestcatalogV1RequestCatalogManagementServiceRemoveAccessEntitlementsResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => C1ApiRequestcatalogV1RequestCatalogManagementServiceRemoveAccessEntitlementsResponse$inboundSchema
        .parse(JSON.parse(x)), `Failed to parse 'C1ApiRequestcatalogV1RequestCatalogManagementServiceRemoveAccessEntitlementsResponse' from JSON`);
}
