/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { remap as remap$ } from "../../../lib/primitives.js";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import * as shared from "../shared/index.js";

export type C1ApiAppV1AppResourceOwnersDeleteRequest = {
  appId: string;
  resourceTypeId: string;
  resourceId: string;
  deleteAppResourceOwnersRequest?:
    | shared.DeleteAppResourceOwnersRequest
    | undefined;
};

export type C1ApiAppV1AppResourceOwnersDeleteResponse = {
  /**
   * HTTP response content type for this operation
   */
  contentType: string;
  /**
   * HTTP response status code for this operation
   */
  statusCode: number;
  /**
   * Raw HTTP response; suitable for custom response parsing
   */
  rawResponse: Response;
  /**
   * the empty response message for deleting app resource owners.
   */
  deleteAppResourceOwnersResponse?:
    | shared.DeleteAppResourceOwnersResponse
    | undefined;
};

/** @internal */
export const C1ApiAppV1AppResourceOwnersDeleteRequest$inboundSchema: z.ZodType<
  C1ApiAppV1AppResourceOwnersDeleteRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  app_id: z.string(),
  resource_type_id: z.string(),
  resource_id: z.string(),
  DeleteAppResourceOwnersRequest: shared
    .DeleteAppResourceOwnersRequest$inboundSchema.optional(),
}).transform((v) => {
  return remap$(v, {
    "app_id": "appId",
    "resource_type_id": "resourceTypeId",
    "resource_id": "resourceId",
    "DeleteAppResourceOwnersRequest": "deleteAppResourceOwnersRequest",
  });
});

/** @internal */
export type C1ApiAppV1AppResourceOwnersDeleteRequest$Outbound = {
  app_id: string;
  resource_type_id: string;
  resource_id: string;
  DeleteAppResourceOwnersRequest?:
    | shared.DeleteAppResourceOwnersRequest$Outbound
    | undefined;
};

/** @internal */
export const C1ApiAppV1AppResourceOwnersDeleteRequest$outboundSchema: z.ZodType<
  C1ApiAppV1AppResourceOwnersDeleteRequest$Outbound,
  z.ZodTypeDef,
  C1ApiAppV1AppResourceOwnersDeleteRequest
> = z.object({
  appId: z.string(),
  resourceTypeId: z.string(),
  resourceId: z.string(),
  deleteAppResourceOwnersRequest: shared
    .DeleteAppResourceOwnersRequest$outboundSchema.optional(),
}).transform((v) => {
  return remap$(v, {
    appId: "app_id",
    resourceTypeId: "resource_type_id",
    resourceId: "resource_id",
    deleteAppResourceOwnersRequest: "DeleteAppResourceOwnersRequest",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace C1ApiAppV1AppResourceOwnersDeleteRequest$ {
  /** @deprecated use `C1ApiAppV1AppResourceOwnersDeleteRequest$inboundSchema` instead. */
  export const inboundSchema =
    C1ApiAppV1AppResourceOwnersDeleteRequest$inboundSchema;
  /** @deprecated use `C1ApiAppV1AppResourceOwnersDeleteRequest$outboundSchema` instead. */
  export const outboundSchema =
    C1ApiAppV1AppResourceOwnersDeleteRequest$outboundSchema;
  /** @deprecated use `C1ApiAppV1AppResourceOwnersDeleteRequest$Outbound` instead. */
  export type Outbound = C1ApiAppV1AppResourceOwnersDeleteRequest$Outbound;
}

export function c1ApiAppV1AppResourceOwnersDeleteRequestToJSON(
  c1ApiAppV1AppResourceOwnersDeleteRequest:
    C1ApiAppV1AppResourceOwnersDeleteRequest,
): string {
  return JSON.stringify(
    C1ApiAppV1AppResourceOwnersDeleteRequest$outboundSchema.parse(
      c1ApiAppV1AppResourceOwnersDeleteRequest,
    ),
  );
}

export function c1ApiAppV1AppResourceOwnersDeleteRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  C1ApiAppV1AppResourceOwnersDeleteRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      C1ApiAppV1AppResourceOwnersDeleteRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'C1ApiAppV1AppResourceOwnersDeleteRequest' from JSON`,
  );
}

/** @internal */
export const C1ApiAppV1AppResourceOwnersDeleteResponse$inboundSchema: z.ZodType<
  C1ApiAppV1AppResourceOwnersDeleteResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  ContentType: z.string(),
  StatusCode: z.number().int(),
  RawResponse: z.instanceof(Response),
  DeleteAppResourceOwnersResponse: shared
    .DeleteAppResourceOwnersResponse$inboundSchema.optional(),
}).transform((v) => {
  return remap$(v, {
    "ContentType": "contentType",
    "StatusCode": "statusCode",
    "RawResponse": "rawResponse",
    "DeleteAppResourceOwnersResponse": "deleteAppResourceOwnersResponse",
  });
});

/** @internal */
export type C1ApiAppV1AppResourceOwnersDeleteResponse$Outbound = {
  ContentType: string;
  StatusCode: number;
  RawResponse: never;
  DeleteAppResourceOwnersResponse?:
    | shared.DeleteAppResourceOwnersResponse$Outbound
    | undefined;
};

/** @internal */
export const C1ApiAppV1AppResourceOwnersDeleteResponse$outboundSchema:
  z.ZodType<
    C1ApiAppV1AppResourceOwnersDeleteResponse$Outbound,
    z.ZodTypeDef,
    C1ApiAppV1AppResourceOwnersDeleteResponse
  > = z.object({
    contentType: z.string(),
    statusCode: z.number().int(),
    rawResponse: z.instanceof(Response).transform(() => {
      throw new Error("Response cannot be serialized");
    }),
    deleteAppResourceOwnersResponse: shared
      .DeleteAppResourceOwnersResponse$outboundSchema.optional(),
  }).transform((v) => {
    return remap$(v, {
      contentType: "ContentType",
      statusCode: "StatusCode",
      rawResponse: "RawResponse",
      deleteAppResourceOwnersResponse: "DeleteAppResourceOwnersResponse",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace C1ApiAppV1AppResourceOwnersDeleteResponse$ {
  /** @deprecated use `C1ApiAppV1AppResourceOwnersDeleteResponse$inboundSchema` instead. */
  export const inboundSchema =
    C1ApiAppV1AppResourceOwnersDeleteResponse$inboundSchema;
  /** @deprecated use `C1ApiAppV1AppResourceOwnersDeleteResponse$outboundSchema` instead. */
  export const outboundSchema =
    C1ApiAppV1AppResourceOwnersDeleteResponse$outboundSchema;
  /** @deprecated use `C1ApiAppV1AppResourceOwnersDeleteResponse$Outbound` instead. */
  export type Outbound = C1ApiAppV1AppResourceOwnersDeleteResponse$Outbound;
}

export function c1ApiAppV1AppResourceOwnersDeleteResponseToJSON(
  c1ApiAppV1AppResourceOwnersDeleteResponse:
    C1ApiAppV1AppResourceOwnersDeleteResponse,
): string {
  return JSON.stringify(
    C1ApiAppV1AppResourceOwnersDeleteResponse$outboundSchema.parse(
      c1ApiAppV1AppResourceOwnersDeleteResponse,
    ),
  );
}

export function c1ApiAppV1AppResourceOwnersDeleteResponseFromJSON(
  jsonString: string,
): SafeParseResult<
  C1ApiAppV1AppResourceOwnersDeleteResponse,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      C1ApiAppV1AppResourceOwnersDeleteResponse$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'C1ApiAppV1AppResourceOwnersDeleteResponse' from JSON`,
  );
}
