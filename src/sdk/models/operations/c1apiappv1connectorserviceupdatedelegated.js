/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";
import { safeParse } from "../../../lib/schemas.js";
import * as shared from "../shared/index.js";
/** @internal */
export const C1ApiAppV1ConnectorServiceUpdateDelegatedRequest$inboundSchema = z.object({
    connector_app_id: z.nullable(z.string()),
    connector_id: z.nullable(z.string()),
    ConnectorServiceUpdateDelegatedRequest: shared
        .ConnectorServiceUpdateDelegatedRequest$inboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        "connector_app_id": "connectorAppId",
        "connector_id": "connectorId",
        "ConnectorServiceUpdateDelegatedRequest": "connectorServiceUpdateDelegatedRequest",
    });
});
/** @internal */
export const C1ApiAppV1ConnectorServiceUpdateDelegatedRequest$outboundSchema = z.object({
    connectorAppId: z.nullable(z.string()),
    connectorId: z.nullable(z.string()),
    connectorServiceUpdateDelegatedRequest: shared
        .ConnectorServiceUpdateDelegatedRequest$outboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        connectorAppId: "connector_app_id",
        connectorId: "connector_id",
        connectorServiceUpdateDelegatedRequest: "ConnectorServiceUpdateDelegatedRequest",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var C1ApiAppV1ConnectorServiceUpdateDelegatedRequest$;
(function (C1ApiAppV1ConnectorServiceUpdateDelegatedRequest$) {
    /** @deprecated use `C1ApiAppV1ConnectorServiceUpdateDelegatedRequest$inboundSchema` instead. */
    C1ApiAppV1ConnectorServiceUpdateDelegatedRequest$.inboundSchema = C1ApiAppV1ConnectorServiceUpdateDelegatedRequest$inboundSchema;
    /** @deprecated use `C1ApiAppV1ConnectorServiceUpdateDelegatedRequest$outboundSchema` instead. */
    C1ApiAppV1ConnectorServiceUpdateDelegatedRequest$.outboundSchema = C1ApiAppV1ConnectorServiceUpdateDelegatedRequest$outboundSchema;
})(C1ApiAppV1ConnectorServiceUpdateDelegatedRequest$ || (C1ApiAppV1ConnectorServiceUpdateDelegatedRequest$ = {}));
export function c1ApiAppV1ConnectorServiceUpdateDelegatedRequestToJSON(c1ApiAppV1ConnectorServiceUpdateDelegatedRequest) {
    return JSON.stringify(C1ApiAppV1ConnectorServiceUpdateDelegatedRequest$outboundSchema.parse(c1ApiAppV1ConnectorServiceUpdateDelegatedRequest));
}
export function c1ApiAppV1ConnectorServiceUpdateDelegatedRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => C1ApiAppV1ConnectorServiceUpdateDelegatedRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'C1ApiAppV1ConnectorServiceUpdateDelegatedRequest' from JSON`);
}
/** @internal */
export const C1ApiAppV1ConnectorServiceUpdateDelegatedResponse$inboundSchema = z.object({
    ContentType: z.string(),
    StatusCode: z.number().int(),
    RawResponse: z.instanceof(Response),
    ConnectorServiceUpdateResponse: shared
        .ConnectorServiceUpdateResponse$inboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        "ContentType": "contentType",
        "StatusCode": "statusCode",
        "RawResponse": "rawResponse",
        "ConnectorServiceUpdateResponse": "connectorServiceUpdateResponse",
    });
});
/** @internal */
export const C1ApiAppV1ConnectorServiceUpdateDelegatedResponse$outboundSchema = z.object({
    contentType: z.string(),
    statusCode: z.number().int(),
    rawResponse: z.instanceof(Response).transform(() => {
        throw new Error("Response cannot be serialized");
    }),
    connectorServiceUpdateResponse: shared
        .ConnectorServiceUpdateResponse$outboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        contentType: "ContentType",
        statusCode: "StatusCode",
        rawResponse: "RawResponse",
        connectorServiceUpdateResponse: "ConnectorServiceUpdateResponse",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var C1ApiAppV1ConnectorServiceUpdateDelegatedResponse$;
(function (C1ApiAppV1ConnectorServiceUpdateDelegatedResponse$) {
    /** @deprecated use `C1ApiAppV1ConnectorServiceUpdateDelegatedResponse$inboundSchema` instead. */
    C1ApiAppV1ConnectorServiceUpdateDelegatedResponse$.inboundSchema = C1ApiAppV1ConnectorServiceUpdateDelegatedResponse$inboundSchema;
    /** @deprecated use `C1ApiAppV1ConnectorServiceUpdateDelegatedResponse$outboundSchema` instead. */
    C1ApiAppV1ConnectorServiceUpdateDelegatedResponse$.outboundSchema = C1ApiAppV1ConnectorServiceUpdateDelegatedResponse$outboundSchema;
})(C1ApiAppV1ConnectorServiceUpdateDelegatedResponse$ || (C1ApiAppV1ConnectorServiceUpdateDelegatedResponse$ = {}));
export function c1ApiAppV1ConnectorServiceUpdateDelegatedResponseToJSON(c1ApiAppV1ConnectorServiceUpdateDelegatedResponse) {
    return JSON.stringify(C1ApiAppV1ConnectorServiceUpdateDelegatedResponse$outboundSchema.parse(c1ApiAppV1ConnectorServiceUpdateDelegatedResponse));
}
export function c1ApiAppV1ConnectorServiceUpdateDelegatedResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => C1ApiAppV1ConnectorServiceUpdateDelegatedResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'C1ApiAppV1ConnectorServiceUpdateDelegatedResponse' from JSON`);
}
