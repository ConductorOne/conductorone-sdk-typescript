/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";
import { safeParse } from "../../../lib/schemas.js";
import * as shared from "../shared/index.js";
/** @internal */
export const C1ApiRequestcatalogV1RequestCatalogManagementServiceResumePausedBundleAutomationRequest$inboundSchema = z.object({
    request_catalog_id: z.nullable(z.string()),
    ResumePausedBundleAutomationRequest: shared
        .ResumePausedBundleAutomationRequest$inboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        "request_catalog_id": "requestCatalogId",
        "ResumePausedBundleAutomationRequest": "resumePausedBundleAutomationRequest",
    });
});
/** @internal */
export const C1ApiRequestcatalogV1RequestCatalogManagementServiceResumePausedBundleAutomationRequest$outboundSchema = z.object({
    requestCatalogId: z.nullable(z.string()),
    resumePausedBundleAutomationRequest: shared
        .ResumePausedBundleAutomationRequest$outboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        requestCatalogId: "request_catalog_id",
        resumePausedBundleAutomationRequest: "ResumePausedBundleAutomationRequest",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var C1ApiRequestcatalogV1RequestCatalogManagementServiceResumePausedBundleAutomationRequest$;
(function (C1ApiRequestcatalogV1RequestCatalogManagementServiceResumePausedBundleAutomationRequest$) {
    /** @deprecated use `C1ApiRequestcatalogV1RequestCatalogManagementServiceResumePausedBundleAutomationRequest$inboundSchema` instead. */
    C1ApiRequestcatalogV1RequestCatalogManagementServiceResumePausedBundleAutomationRequest$.inboundSchema = C1ApiRequestcatalogV1RequestCatalogManagementServiceResumePausedBundleAutomationRequest$inboundSchema;
    /** @deprecated use `C1ApiRequestcatalogV1RequestCatalogManagementServiceResumePausedBundleAutomationRequest$outboundSchema` instead. */
    C1ApiRequestcatalogV1RequestCatalogManagementServiceResumePausedBundleAutomationRequest$.outboundSchema = C1ApiRequestcatalogV1RequestCatalogManagementServiceResumePausedBundleAutomationRequest$outboundSchema;
})(C1ApiRequestcatalogV1RequestCatalogManagementServiceResumePausedBundleAutomationRequest$ || (C1ApiRequestcatalogV1RequestCatalogManagementServiceResumePausedBundleAutomationRequest$ = {}));
export function c1ApiRequestcatalogV1RequestCatalogManagementServiceResumePausedBundleAutomationRequestToJSON(c1ApiRequestcatalogV1RequestCatalogManagementServiceResumePausedBundleAutomationRequest) {
    return JSON.stringify(C1ApiRequestcatalogV1RequestCatalogManagementServiceResumePausedBundleAutomationRequest$outboundSchema
        .parse(c1ApiRequestcatalogV1RequestCatalogManagementServiceResumePausedBundleAutomationRequest));
}
export function c1ApiRequestcatalogV1RequestCatalogManagementServiceResumePausedBundleAutomationRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => C1ApiRequestcatalogV1RequestCatalogManagementServiceResumePausedBundleAutomationRequest$inboundSchema
        .parse(JSON.parse(x)), `Failed to parse 'C1ApiRequestcatalogV1RequestCatalogManagementServiceResumePausedBundleAutomationRequest' from JSON`);
}
/** @internal */
export const C1ApiRequestcatalogV1RequestCatalogManagementServiceResumePausedBundleAutomationResponse$inboundSchema = z.object({
    ContentType: z.string(),
    StatusCode: z.number().int(),
    RawResponse: z.instanceof(Response),
    ResumePausedBundleAutomationResponse: shared
        .ResumePausedBundleAutomationResponse$inboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        "ContentType": "contentType",
        "StatusCode": "statusCode",
        "RawResponse": "rawResponse",
        "ResumePausedBundleAutomationResponse": "resumePausedBundleAutomationResponse",
    });
});
/** @internal */
export const C1ApiRequestcatalogV1RequestCatalogManagementServiceResumePausedBundleAutomationResponse$outboundSchema = z.object({
    contentType: z.string(),
    statusCode: z.number().int(),
    rawResponse: z.instanceof(Response).transform(() => {
        throw new Error("Response cannot be serialized");
    }),
    resumePausedBundleAutomationResponse: shared
        .ResumePausedBundleAutomationResponse$outboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        contentType: "ContentType",
        statusCode: "StatusCode",
        rawResponse: "RawResponse",
        resumePausedBundleAutomationResponse: "ResumePausedBundleAutomationResponse",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var C1ApiRequestcatalogV1RequestCatalogManagementServiceResumePausedBundleAutomationResponse$;
(function (C1ApiRequestcatalogV1RequestCatalogManagementServiceResumePausedBundleAutomationResponse$) {
    /** @deprecated use `C1ApiRequestcatalogV1RequestCatalogManagementServiceResumePausedBundleAutomationResponse$inboundSchema` instead. */
    C1ApiRequestcatalogV1RequestCatalogManagementServiceResumePausedBundleAutomationResponse$.inboundSchema = C1ApiRequestcatalogV1RequestCatalogManagementServiceResumePausedBundleAutomationResponse$inboundSchema;
    /** @deprecated use `C1ApiRequestcatalogV1RequestCatalogManagementServiceResumePausedBundleAutomationResponse$outboundSchema` instead. */
    C1ApiRequestcatalogV1RequestCatalogManagementServiceResumePausedBundleAutomationResponse$.outboundSchema = C1ApiRequestcatalogV1RequestCatalogManagementServiceResumePausedBundleAutomationResponse$outboundSchema;
})(C1ApiRequestcatalogV1RequestCatalogManagementServiceResumePausedBundleAutomationResponse$ || (C1ApiRequestcatalogV1RequestCatalogManagementServiceResumePausedBundleAutomationResponse$ = {}));
export function c1ApiRequestcatalogV1RequestCatalogManagementServiceResumePausedBundleAutomationResponseToJSON(c1ApiRequestcatalogV1RequestCatalogManagementServiceResumePausedBundleAutomationResponse) {
    return JSON.stringify(C1ApiRequestcatalogV1RequestCatalogManagementServiceResumePausedBundleAutomationResponse$outboundSchema
        .parse(c1ApiRequestcatalogV1RequestCatalogManagementServiceResumePausedBundleAutomationResponse));
}
export function c1ApiRequestcatalogV1RequestCatalogManagementServiceResumePausedBundleAutomationResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => C1ApiRequestcatalogV1RequestCatalogManagementServiceResumePausedBundleAutomationResponse$inboundSchema
        .parse(JSON.parse(x)), `Failed to parse 'C1ApiRequestcatalogV1RequestCatalogManagementServiceResumePausedBundleAutomationResponse' from JSON`);
}
