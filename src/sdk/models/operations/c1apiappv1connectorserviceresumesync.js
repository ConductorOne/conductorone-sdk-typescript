/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";
import { safeParse } from "../../../lib/schemas.js";
import * as shared from "../shared/index.js";
/** @internal */
export const C1ApiAppV1ConnectorServiceResumeSyncRequest$inboundSchema = z.object({
    app_id: z.nullable(z.string()),
    connector_id: z.nullable(z.string()),
    ResumeSyncRequest: shared.ResumeSyncRequest$inboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        "app_id": "appId",
        "connector_id": "connectorId",
        "ResumeSyncRequest": "resumeSyncRequest",
    });
});
/** @internal */
export const C1ApiAppV1ConnectorServiceResumeSyncRequest$outboundSchema = z.object({
    appId: z.nullable(z.string()),
    connectorId: z.nullable(z.string()),
    resumeSyncRequest: shared.ResumeSyncRequest$outboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        appId: "app_id",
        connectorId: "connector_id",
        resumeSyncRequest: "ResumeSyncRequest",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var C1ApiAppV1ConnectorServiceResumeSyncRequest$;
(function (C1ApiAppV1ConnectorServiceResumeSyncRequest$) {
    /** @deprecated use `C1ApiAppV1ConnectorServiceResumeSyncRequest$inboundSchema` instead. */
    C1ApiAppV1ConnectorServiceResumeSyncRequest$.inboundSchema = C1ApiAppV1ConnectorServiceResumeSyncRequest$inboundSchema;
    /** @deprecated use `C1ApiAppV1ConnectorServiceResumeSyncRequest$outboundSchema` instead. */
    C1ApiAppV1ConnectorServiceResumeSyncRequest$.outboundSchema = C1ApiAppV1ConnectorServiceResumeSyncRequest$outboundSchema;
})(C1ApiAppV1ConnectorServiceResumeSyncRequest$ || (C1ApiAppV1ConnectorServiceResumeSyncRequest$ = {}));
export function c1ApiAppV1ConnectorServiceResumeSyncRequestToJSON(c1ApiAppV1ConnectorServiceResumeSyncRequest) {
    return JSON.stringify(C1ApiAppV1ConnectorServiceResumeSyncRequest$outboundSchema.parse(c1ApiAppV1ConnectorServiceResumeSyncRequest));
}
export function c1ApiAppV1ConnectorServiceResumeSyncRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => C1ApiAppV1ConnectorServiceResumeSyncRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'C1ApiAppV1ConnectorServiceResumeSyncRequest' from JSON`);
}
/** @internal */
export const C1ApiAppV1ConnectorServiceResumeSyncResponse$inboundSchema = z.object({
    ContentType: z.string(),
    StatusCode: z.number().int(),
    RawResponse: z.instanceof(Response),
    ResumeSyncResponse: shared.ResumeSyncResponse$inboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        "ContentType": "contentType",
        "StatusCode": "statusCode",
        "RawResponse": "rawResponse",
        "ResumeSyncResponse": "resumeSyncResponse",
    });
});
/** @internal */
export const C1ApiAppV1ConnectorServiceResumeSyncResponse$outboundSchema = z.object({
    contentType: z.string(),
    statusCode: z.number().int(),
    rawResponse: z.instanceof(Response).transform(() => {
        throw new Error("Response cannot be serialized");
    }),
    resumeSyncResponse: shared.ResumeSyncResponse$outboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        contentType: "ContentType",
        statusCode: "StatusCode",
        rawResponse: "RawResponse",
        resumeSyncResponse: "ResumeSyncResponse",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var C1ApiAppV1ConnectorServiceResumeSyncResponse$;
(function (C1ApiAppV1ConnectorServiceResumeSyncResponse$) {
    /** @deprecated use `C1ApiAppV1ConnectorServiceResumeSyncResponse$inboundSchema` instead. */
    C1ApiAppV1ConnectorServiceResumeSyncResponse$.inboundSchema = C1ApiAppV1ConnectorServiceResumeSyncResponse$inboundSchema;
    /** @deprecated use `C1ApiAppV1ConnectorServiceResumeSyncResponse$outboundSchema` instead. */
    C1ApiAppV1ConnectorServiceResumeSyncResponse$.outboundSchema = C1ApiAppV1ConnectorServiceResumeSyncResponse$outboundSchema;
})(C1ApiAppV1ConnectorServiceResumeSyncResponse$ || (C1ApiAppV1ConnectorServiceResumeSyncResponse$ = {}));
export function c1ApiAppV1ConnectorServiceResumeSyncResponseToJSON(c1ApiAppV1ConnectorServiceResumeSyncResponse) {
    return JSON.stringify(C1ApiAppV1ConnectorServiceResumeSyncResponse$outboundSchema.parse(c1ApiAppV1ConnectorServiceResumeSyncResponse));
}
export function c1ApiAppV1ConnectorServiceResumeSyncResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => C1ApiAppV1ConnectorServiceResumeSyncResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'C1ApiAppV1ConnectorServiceResumeSyncResponse' from JSON`);
}
