/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";
import { safeParse } from "../../../lib/schemas.js";
import * as shared from "../shared/index.js";
/** @internal */
export const C1ApiAttributeV1AttributesListAttributeValuesRequest$inboundSchema = z.object({
    attribute_type_id: z.nullable(z.string()),
    page_size: z.nullable(z.number().int()).optional(),
    page_token: z.nullable(z.string()).optional(),
}).transform((v) => {
    return remap$(v, {
        "attribute_type_id": "attributeTypeId",
        "page_size": "pageSize",
        "page_token": "pageToken",
    });
});
/** @internal */
export const C1ApiAttributeV1AttributesListAttributeValuesRequest$outboundSchema = z.object({
    attributeTypeId: z.nullable(z.string()),
    pageSize: z.nullable(z.number().int()).optional(),
    pageToken: z.nullable(z.string()).optional(),
}).transform((v) => {
    return remap$(v, {
        attributeTypeId: "attribute_type_id",
        pageSize: "page_size",
        pageToken: "page_token",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var C1ApiAttributeV1AttributesListAttributeValuesRequest$;
(function (C1ApiAttributeV1AttributesListAttributeValuesRequest$) {
    /** @deprecated use `C1ApiAttributeV1AttributesListAttributeValuesRequest$inboundSchema` instead. */
    C1ApiAttributeV1AttributesListAttributeValuesRequest$.inboundSchema = C1ApiAttributeV1AttributesListAttributeValuesRequest$inboundSchema;
    /** @deprecated use `C1ApiAttributeV1AttributesListAttributeValuesRequest$outboundSchema` instead. */
    C1ApiAttributeV1AttributesListAttributeValuesRequest$.outboundSchema = C1ApiAttributeV1AttributesListAttributeValuesRequest$outboundSchema;
})(C1ApiAttributeV1AttributesListAttributeValuesRequest$ || (C1ApiAttributeV1AttributesListAttributeValuesRequest$ = {}));
export function c1ApiAttributeV1AttributesListAttributeValuesRequestToJSON(c1ApiAttributeV1AttributesListAttributeValuesRequest) {
    return JSON.stringify(C1ApiAttributeV1AttributesListAttributeValuesRequest$outboundSchema.parse(c1ApiAttributeV1AttributesListAttributeValuesRequest));
}
export function c1ApiAttributeV1AttributesListAttributeValuesRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => C1ApiAttributeV1AttributesListAttributeValuesRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'C1ApiAttributeV1AttributesListAttributeValuesRequest' from JSON`);
}
/** @internal */
export const C1ApiAttributeV1AttributesListAttributeValuesResponse$inboundSchema = z.object({
    ContentType: z.string(),
    StatusCode: z.number().int(),
    RawResponse: z.instanceof(Response),
    ListAttributeValuesResponse: shared
        .ListAttributeValuesResponse$inboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        "ContentType": "contentType",
        "StatusCode": "statusCode",
        "RawResponse": "rawResponse",
        "ListAttributeValuesResponse": "listAttributeValuesResponse",
    });
});
/** @internal */
export const C1ApiAttributeV1AttributesListAttributeValuesResponse$outboundSchema = z.object({
    contentType: z.string(),
    statusCode: z.number().int(),
    rawResponse: z.instanceof(Response).transform(() => {
        throw new Error("Response cannot be serialized");
    }),
    listAttributeValuesResponse: shared
        .ListAttributeValuesResponse$outboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        contentType: "ContentType",
        statusCode: "StatusCode",
        rawResponse: "RawResponse",
        listAttributeValuesResponse: "ListAttributeValuesResponse",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var C1ApiAttributeV1AttributesListAttributeValuesResponse$;
(function (C1ApiAttributeV1AttributesListAttributeValuesResponse$) {
    /** @deprecated use `C1ApiAttributeV1AttributesListAttributeValuesResponse$inboundSchema` instead. */
    C1ApiAttributeV1AttributesListAttributeValuesResponse$.inboundSchema = C1ApiAttributeV1AttributesListAttributeValuesResponse$inboundSchema;
    /** @deprecated use `C1ApiAttributeV1AttributesListAttributeValuesResponse$outboundSchema` instead. */
    C1ApiAttributeV1AttributesListAttributeValuesResponse$.outboundSchema = C1ApiAttributeV1AttributesListAttributeValuesResponse$outboundSchema;
})(C1ApiAttributeV1AttributesListAttributeValuesResponse$ || (C1ApiAttributeV1AttributesListAttributeValuesResponse$ = {}));
export function c1ApiAttributeV1AttributesListAttributeValuesResponseToJSON(c1ApiAttributeV1AttributesListAttributeValuesResponse) {
    return JSON.stringify(C1ApiAttributeV1AttributesListAttributeValuesResponse$outboundSchema.parse(c1ApiAttributeV1AttributesListAttributeValuesResponse));
}
export function c1ApiAttributeV1AttributesListAttributeValuesResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => C1ApiAttributeV1AttributesListAttributeValuesResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'C1ApiAttributeV1AttributesListAttributeValuesResponse' from JSON`);
}
