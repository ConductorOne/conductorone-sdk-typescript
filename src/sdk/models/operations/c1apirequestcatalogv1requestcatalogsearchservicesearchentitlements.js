/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";
import { safeParse } from "../../../lib/schemas.js";
import * as shared from "../shared/index.js";
/** @internal */
export const C1ApiRequestcatalogV1RequestCatalogSearchServiceSearchEntitlementsResponse$inboundSchema = z.object({
    ContentType: z.string(),
    StatusCode: z.number().int(),
    RawResponse: z.instanceof(Response),
    RequestCatalogSearchServiceSearchEntitlementsResponse: shared
        .RequestCatalogSearchServiceSearchEntitlementsResponse$inboundSchema
        .optional(),
}).transform((v) => {
    return remap$(v, {
        "ContentType": "contentType",
        "StatusCode": "statusCode",
        "RawResponse": "rawResponse",
        "RequestCatalogSearchServiceSearchEntitlementsResponse": "requestCatalogSearchServiceSearchEntitlementsResponse",
    });
});
/** @internal */
export const C1ApiRequestcatalogV1RequestCatalogSearchServiceSearchEntitlementsResponse$outboundSchema = z.object({
    contentType: z.string(),
    statusCode: z.number().int(),
    rawResponse: z.instanceof(Response).transform(() => {
        throw new Error("Response cannot be serialized");
    }),
    requestCatalogSearchServiceSearchEntitlementsResponse: shared
        .RequestCatalogSearchServiceSearchEntitlementsResponse$outboundSchema
        .optional(),
}).transform((v) => {
    return remap$(v, {
        contentType: "ContentType",
        statusCode: "StatusCode",
        rawResponse: "RawResponse",
        requestCatalogSearchServiceSearchEntitlementsResponse: "RequestCatalogSearchServiceSearchEntitlementsResponse",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var C1ApiRequestcatalogV1RequestCatalogSearchServiceSearchEntitlementsResponse$;
(function (C1ApiRequestcatalogV1RequestCatalogSearchServiceSearchEntitlementsResponse$) {
    /** @deprecated use `C1ApiRequestcatalogV1RequestCatalogSearchServiceSearchEntitlementsResponse$inboundSchema` instead. */
    C1ApiRequestcatalogV1RequestCatalogSearchServiceSearchEntitlementsResponse$.inboundSchema = C1ApiRequestcatalogV1RequestCatalogSearchServiceSearchEntitlementsResponse$inboundSchema;
    /** @deprecated use `C1ApiRequestcatalogV1RequestCatalogSearchServiceSearchEntitlementsResponse$outboundSchema` instead. */
    C1ApiRequestcatalogV1RequestCatalogSearchServiceSearchEntitlementsResponse$.outboundSchema = C1ApiRequestcatalogV1RequestCatalogSearchServiceSearchEntitlementsResponse$outboundSchema;
})(C1ApiRequestcatalogV1RequestCatalogSearchServiceSearchEntitlementsResponse$ || (C1ApiRequestcatalogV1RequestCatalogSearchServiceSearchEntitlementsResponse$ = {}));
export function c1ApiRequestcatalogV1RequestCatalogSearchServiceSearchEntitlementsResponseToJSON(c1ApiRequestcatalogV1RequestCatalogSearchServiceSearchEntitlementsResponse) {
    return JSON.stringify(C1ApiRequestcatalogV1RequestCatalogSearchServiceSearchEntitlementsResponse$outboundSchema
        .parse(c1ApiRequestcatalogV1RequestCatalogSearchServiceSearchEntitlementsResponse));
}
export function c1ApiRequestcatalogV1RequestCatalogSearchServiceSearchEntitlementsResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => C1ApiRequestcatalogV1RequestCatalogSearchServiceSearchEntitlementsResponse$inboundSchema
        .parse(JSON.parse(x)), `Failed to parse 'C1ApiRequestcatalogV1RequestCatalogSearchServiceSearchEntitlementsResponse' from JSON`);
}
