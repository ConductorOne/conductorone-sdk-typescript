/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { remap as remap$ } from "../../../lib/primitives.js";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import * as shared from "../shared/index.js";

export type C1ApiAppV1AppEntitlementsListAutomationExclusionsRequest = {
  appId: string | null;
  appEntitlementId: string | null;
};

export type C1ApiAppV1AppEntitlementsListAutomationExclusionsResponse = {
  /**
   * HTTP response content type for this operation
   */
  contentType: string;
  /**
   * HTTP response status code for this operation
   */
  statusCode: number;
  /**
   * Raw HTTP response; suitable for custom response parsing
   */
  rawResponse: Response;
  /**
   * Successful response
   */
  listAutomationExclusionsResponse?:
    | shared.ListAutomationExclusionsResponse
    | undefined;
};

/** @internal */
export const C1ApiAppV1AppEntitlementsListAutomationExclusionsRequest$inboundSchema:
  z.ZodType<
    C1ApiAppV1AppEntitlementsListAutomationExclusionsRequest,
    z.ZodTypeDef,
    unknown
  > = z.object({
    app_id: z.nullable(z.string()),
    app_entitlement_id: z.nullable(z.string()),
  }).transform((v) => {
    return remap$(v, {
      "app_id": "appId",
      "app_entitlement_id": "appEntitlementId",
    });
  });

/** @internal */
export type C1ApiAppV1AppEntitlementsListAutomationExclusionsRequest$Outbound =
  {
    app_id: string | null;
    app_entitlement_id: string | null;
  };

/** @internal */
export const C1ApiAppV1AppEntitlementsListAutomationExclusionsRequest$outboundSchema:
  z.ZodType<
    C1ApiAppV1AppEntitlementsListAutomationExclusionsRequest$Outbound,
    z.ZodTypeDef,
    C1ApiAppV1AppEntitlementsListAutomationExclusionsRequest
  > = z.object({
    appId: z.nullable(z.string()),
    appEntitlementId: z.nullable(z.string()),
  }).transform((v) => {
    return remap$(v, {
      appId: "app_id",
      appEntitlementId: "app_entitlement_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace C1ApiAppV1AppEntitlementsListAutomationExclusionsRequest$ {
  /** @deprecated use `C1ApiAppV1AppEntitlementsListAutomationExclusionsRequest$inboundSchema` instead. */
  export const inboundSchema =
    C1ApiAppV1AppEntitlementsListAutomationExclusionsRequest$inboundSchema;
  /** @deprecated use `C1ApiAppV1AppEntitlementsListAutomationExclusionsRequest$outboundSchema` instead. */
  export const outboundSchema =
    C1ApiAppV1AppEntitlementsListAutomationExclusionsRequest$outboundSchema;
  /** @deprecated use `C1ApiAppV1AppEntitlementsListAutomationExclusionsRequest$Outbound` instead. */
  export type Outbound =
    C1ApiAppV1AppEntitlementsListAutomationExclusionsRequest$Outbound;
}

export function c1ApiAppV1AppEntitlementsListAutomationExclusionsRequestToJSON(
  c1ApiAppV1AppEntitlementsListAutomationExclusionsRequest:
    C1ApiAppV1AppEntitlementsListAutomationExclusionsRequest,
): string {
  return JSON.stringify(
    C1ApiAppV1AppEntitlementsListAutomationExclusionsRequest$outboundSchema
      .parse(c1ApiAppV1AppEntitlementsListAutomationExclusionsRequest),
  );
}

export function c1ApiAppV1AppEntitlementsListAutomationExclusionsRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  C1ApiAppV1AppEntitlementsListAutomationExclusionsRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      C1ApiAppV1AppEntitlementsListAutomationExclusionsRequest$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'C1ApiAppV1AppEntitlementsListAutomationExclusionsRequest' from JSON`,
  );
}

/** @internal */
export const C1ApiAppV1AppEntitlementsListAutomationExclusionsResponse$inboundSchema:
  z.ZodType<
    C1ApiAppV1AppEntitlementsListAutomationExclusionsResponse,
    z.ZodTypeDef,
    unknown
  > = z.object({
    ContentType: z.string(),
    StatusCode: z.number().int(),
    RawResponse: z.instanceof(Response),
    ListAutomationExclusionsResponse: shared
      .ListAutomationExclusionsResponse$inboundSchema.optional(),
  }).transform((v) => {
    return remap$(v, {
      "ContentType": "contentType",
      "StatusCode": "statusCode",
      "RawResponse": "rawResponse",
      "ListAutomationExclusionsResponse": "listAutomationExclusionsResponse",
    });
  });

/** @internal */
export type C1ApiAppV1AppEntitlementsListAutomationExclusionsResponse$Outbound =
  {
    ContentType: string;
    StatusCode: number;
    RawResponse: never;
    ListAutomationExclusionsResponse?:
      | shared.ListAutomationExclusionsResponse$Outbound
      | undefined;
  };

/** @internal */
export const C1ApiAppV1AppEntitlementsListAutomationExclusionsResponse$outboundSchema:
  z.ZodType<
    C1ApiAppV1AppEntitlementsListAutomationExclusionsResponse$Outbound,
    z.ZodTypeDef,
    C1ApiAppV1AppEntitlementsListAutomationExclusionsResponse
  > = z.object({
    contentType: z.string(),
    statusCode: z.number().int(),
    rawResponse: z.instanceof(Response).transform(() => {
      throw new Error("Response cannot be serialized");
    }),
    listAutomationExclusionsResponse: shared
      .ListAutomationExclusionsResponse$outboundSchema.optional(),
  }).transform((v) => {
    return remap$(v, {
      contentType: "ContentType",
      statusCode: "StatusCode",
      rawResponse: "RawResponse",
      listAutomationExclusionsResponse: "ListAutomationExclusionsResponse",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace C1ApiAppV1AppEntitlementsListAutomationExclusionsResponse$ {
  /** @deprecated use `C1ApiAppV1AppEntitlementsListAutomationExclusionsResponse$inboundSchema` instead. */
  export const inboundSchema =
    C1ApiAppV1AppEntitlementsListAutomationExclusionsResponse$inboundSchema;
  /** @deprecated use `C1ApiAppV1AppEntitlementsListAutomationExclusionsResponse$outboundSchema` instead. */
  export const outboundSchema =
    C1ApiAppV1AppEntitlementsListAutomationExclusionsResponse$outboundSchema;
  /** @deprecated use `C1ApiAppV1AppEntitlementsListAutomationExclusionsResponse$Outbound` instead. */
  export type Outbound =
    C1ApiAppV1AppEntitlementsListAutomationExclusionsResponse$Outbound;
}

export function c1ApiAppV1AppEntitlementsListAutomationExclusionsResponseToJSON(
  c1ApiAppV1AppEntitlementsListAutomationExclusionsResponse:
    C1ApiAppV1AppEntitlementsListAutomationExclusionsResponse,
): string {
  return JSON.stringify(
    C1ApiAppV1AppEntitlementsListAutomationExclusionsResponse$outboundSchema
      .parse(c1ApiAppV1AppEntitlementsListAutomationExclusionsResponse),
  );
}

export function c1ApiAppV1AppEntitlementsListAutomationExclusionsResponseFromJSON(
  jsonString: string,
): SafeParseResult<
  C1ApiAppV1AppEntitlementsListAutomationExclusionsResponse,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      C1ApiAppV1AppEntitlementsListAutomationExclusionsResponse$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'C1ApiAppV1AppEntitlementsListAutomationExclusionsResponse' from JSON`,
  );
}
