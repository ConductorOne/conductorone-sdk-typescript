/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";
import { safeParse } from "../../../lib/schemas.js";
import * as shared from "../shared/index.js";
/** @internal */
export const C1ApiAppV1AppEntitlementsProxyGetRequest$inboundSchema = z.object({
    src_app_id: z.nullable(z.string()),
    src_app_entitlement_id: z.nullable(z.string()),
    dst_app_id: z.nullable(z.string()),
    dst_app_entitlement_id: z.nullable(z.string()),
}).transform((v) => {
    return remap$(v, {
        "src_app_id": "srcAppId",
        "src_app_entitlement_id": "srcAppEntitlementId",
        "dst_app_id": "dstAppId",
        "dst_app_entitlement_id": "dstAppEntitlementId",
    });
});
/** @internal */
export const C1ApiAppV1AppEntitlementsProxyGetRequest$outboundSchema = z.object({
    srcAppId: z.nullable(z.string()),
    srcAppEntitlementId: z.nullable(z.string()),
    dstAppId: z.nullable(z.string()),
    dstAppEntitlementId: z.nullable(z.string()),
}).transform((v) => {
    return remap$(v, {
        srcAppId: "src_app_id",
        srcAppEntitlementId: "src_app_entitlement_id",
        dstAppId: "dst_app_id",
        dstAppEntitlementId: "dst_app_entitlement_id",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var C1ApiAppV1AppEntitlementsProxyGetRequest$;
(function (C1ApiAppV1AppEntitlementsProxyGetRequest$) {
    /** @deprecated use `C1ApiAppV1AppEntitlementsProxyGetRequest$inboundSchema` instead. */
    C1ApiAppV1AppEntitlementsProxyGetRequest$.inboundSchema = C1ApiAppV1AppEntitlementsProxyGetRequest$inboundSchema;
    /** @deprecated use `C1ApiAppV1AppEntitlementsProxyGetRequest$outboundSchema` instead. */
    C1ApiAppV1AppEntitlementsProxyGetRequest$.outboundSchema = C1ApiAppV1AppEntitlementsProxyGetRequest$outboundSchema;
})(C1ApiAppV1AppEntitlementsProxyGetRequest$ || (C1ApiAppV1AppEntitlementsProxyGetRequest$ = {}));
export function c1ApiAppV1AppEntitlementsProxyGetRequestToJSON(c1ApiAppV1AppEntitlementsProxyGetRequest) {
    return JSON.stringify(C1ApiAppV1AppEntitlementsProxyGetRequest$outboundSchema.parse(c1ApiAppV1AppEntitlementsProxyGetRequest));
}
export function c1ApiAppV1AppEntitlementsProxyGetRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => C1ApiAppV1AppEntitlementsProxyGetRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'C1ApiAppV1AppEntitlementsProxyGetRequest' from JSON`);
}
/** @internal */
export const C1ApiAppV1AppEntitlementsProxyGetResponse$inboundSchema = z.object({
    ContentType: z.string(),
    StatusCode: z.number().int(),
    RawResponse: z.instanceof(Response),
    GetAppEntitlementProxyResponse: shared
        .GetAppEntitlementProxyResponse$inboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        "ContentType": "contentType",
        "StatusCode": "statusCode",
        "RawResponse": "rawResponse",
        "GetAppEntitlementProxyResponse": "getAppEntitlementProxyResponse",
    });
});
/** @internal */
export const C1ApiAppV1AppEntitlementsProxyGetResponse$outboundSchema = z.object({
    contentType: z.string(),
    statusCode: z.number().int(),
    rawResponse: z.instanceof(Response).transform(() => {
        throw new Error("Response cannot be serialized");
    }),
    getAppEntitlementProxyResponse: shared
        .GetAppEntitlementProxyResponse$outboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        contentType: "ContentType",
        statusCode: "StatusCode",
        rawResponse: "RawResponse",
        getAppEntitlementProxyResponse: "GetAppEntitlementProxyResponse",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var C1ApiAppV1AppEntitlementsProxyGetResponse$;
(function (C1ApiAppV1AppEntitlementsProxyGetResponse$) {
    /** @deprecated use `C1ApiAppV1AppEntitlementsProxyGetResponse$inboundSchema` instead. */
    C1ApiAppV1AppEntitlementsProxyGetResponse$.inboundSchema = C1ApiAppV1AppEntitlementsProxyGetResponse$inboundSchema;
    /** @deprecated use `C1ApiAppV1AppEntitlementsProxyGetResponse$outboundSchema` instead. */
    C1ApiAppV1AppEntitlementsProxyGetResponse$.outboundSchema = C1ApiAppV1AppEntitlementsProxyGetResponse$outboundSchema;
})(C1ApiAppV1AppEntitlementsProxyGetResponse$ || (C1ApiAppV1AppEntitlementsProxyGetResponse$ = {}));
export function c1ApiAppV1AppEntitlementsProxyGetResponseToJSON(c1ApiAppV1AppEntitlementsProxyGetResponse) {
    return JSON.stringify(C1ApiAppV1AppEntitlementsProxyGetResponse$outboundSchema.parse(c1ApiAppV1AppEntitlementsProxyGetResponse));
}
export function c1ApiAppV1AppEntitlementsProxyGetResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => C1ApiAppV1AppEntitlementsProxyGetResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'C1ApiAppV1AppEntitlementsProxyGetResponse' from JSON`);
}
