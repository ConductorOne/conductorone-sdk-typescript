/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";
import { safeParse } from "../../../lib/schemas.js";
import * as shared from "../shared/index.js";
/** @internal */
export const C1ApiFunctionsV1FunctionsServiceCreateTagRequest$inboundSchema = z.object({
    function_id: z.nullable(z.string()),
    FunctionsServiceCreateTagRequest: shared
        .FunctionsServiceCreateTagRequest$inboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        "function_id": "functionId",
        "FunctionsServiceCreateTagRequest": "functionsServiceCreateTagRequest",
    });
});
/** @internal */
export const C1ApiFunctionsV1FunctionsServiceCreateTagRequest$outboundSchema = z.object({
    functionId: z.nullable(z.string()),
    functionsServiceCreateTagRequest: shared
        .FunctionsServiceCreateTagRequest$outboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        functionId: "function_id",
        functionsServiceCreateTagRequest: "FunctionsServiceCreateTagRequest",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var C1ApiFunctionsV1FunctionsServiceCreateTagRequest$;
(function (C1ApiFunctionsV1FunctionsServiceCreateTagRequest$) {
    /** @deprecated use `C1ApiFunctionsV1FunctionsServiceCreateTagRequest$inboundSchema` instead. */
    C1ApiFunctionsV1FunctionsServiceCreateTagRequest$.inboundSchema = C1ApiFunctionsV1FunctionsServiceCreateTagRequest$inboundSchema;
    /** @deprecated use `C1ApiFunctionsV1FunctionsServiceCreateTagRequest$outboundSchema` instead. */
    C1ApiFunctionsV1FunctionsServiceCreateTagRequest$.outboundSchema = C1ApiFunctionsV1FunctionsServiceCreateTagRequest$outboundSchema;
})(C1ApiFunctionsV1FunctionsServiceCreateTagRequest$ || (C1ApiFunctionsV1FunctionsServiceCreateTagRequest$ = {}));
export function c1ApiFunctionsV1FunctionsServiceCreateTagRequestToJSON(c1ApiFunctionsV1FunctionsServiceCreateTagRequest) {
    return JSON.stringify(C1ApiFunctionsV1FunctionsServiceCreateTagRequest$outboundSchema.parse(c1ApiFunctionsV1FunctionsServiceCreateTagRequest));
}
export function c1ApiFunctionsV1FunctionsServiceCreateTagRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => C1ApiFunctionsV1FunctionsServiceCreateTagRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'C1ApiFunctionsV1FunctionsServiceCreateTagRequest' from JSON`);
}
/** @internal */
export const C1ApiFunctionsV1FunctionsServiceCreateTagResponse$inboundSchema = z.object({
    ContentType: z.string(),
    StatusCode: z.number().int(),
    RawResponse: z.instanceof(Response),
    FunctionsServiceCreateTagResponse: shared
        .FunctionsServiceCreateTagResponse$inboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        "ContentType": "contentType",
        "StatusCode": "statusCode",
        "RawResponse": "rawResponse",
        "FunctionsServiceCreateTagResponse": "functionsServiceCreateTagResponse",
    });
});
/** @internal */
export const C1ApiFunctionsV1FunctionsServiceCreateTagResponse$outboundSchema = z.object({
    contentType: z.string(),
    statusCode: z.number().int(),
    rawResponse: z.instanceof(Response).transform(() => {
        throw new Error("Response cannot be serialized");
    }),
    functionsServiceCreateTagResponse: shared
        .FunctionsServiceCreateTagResponse$outboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        contentType: "ContentType",
        statusCode: "StatusCode",
        rawResponse: "RawResponse",
        functionsServiceCreateTagResponse: "FunctionsServiceCreateTagResponse",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var C1ApiFunctionsV1FunctionsServiceCreateTagResponse$;
(function (C1ApiFunctionsV1FunctionsServiceCreateTagResponse$) {
    /** @deprecated use `C1ApiFunctionsV1FunctionsServiceCreateTagResponse$inboundSchema` instead. */
    C1ApiFunctionsV1FunctionsServiceCreateTagResponse$.inboundSchema = C1ApiFunctionsV1FunctionsServiceCreateTagResponse$inboundSchema;
    /** @deprecated use `C1ApiFunctionsV1FunctionsServiceCreateTagResponse$outboundSchema` instead. */
    C1ApiFunctionsV1FunctionsServiceCreateTagResponse$.outboundSchema = C1ApiFunctionsV1FunctionsServiceCreateTagResponse$outboundSchema;
})(C1ApiFunctionsV1FunctionsServiceCreateTagResponse$ || (C1ApiFunctionsV1FunctionsServiceCreateTagResponse$ = {}));
export function c1ApiFunctionsV1FunctionsServiceCreateTagResponseToJSON(c1ApiFunctionsV1FunctionsServiceCreateTagResponse) {
    return JSON.stringify(C1ApiFunctionsV1FunctionsServiceCreateTagResponse$outboundSchema.parse(c1ApiFunctionsV1FunctionsServiceCreateTagResponse));
}
export function c1ApiFunctionsV1FunctionsServiceCreateTagResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => C1ApiFunctionsV1FunctionsServiceCreateTagResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'C1ApiFunctionsV1FunctionsServiceCreateTagResponse' from JSON`);
}
