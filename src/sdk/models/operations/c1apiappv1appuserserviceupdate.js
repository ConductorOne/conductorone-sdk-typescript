/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";
import { safeParse } from "../../../lib/schemas.js";
import * as shared from "../shared/index.js";
/** @internal */
export const C1ApiAppV1AppUserServiceUpdateRequest$inboundSchema = z.object({
    app_user_app_id: z.nullable(z.string()),
    app_user_id: z.nullable(z.string()),
    AppUserServiceUpdateRequest: shared.AppUserServiceUpdateRequest$inboundSchema
        .optional(),
}).transform((v) => {
    return remap$(v, {
        "app_user_app_id": "appUserAppId",
        "app_user_id": "appUserId",
        "AppUserServiceUpdateRequest": "appUserServiceUpdateRequest",
    });
});
/** @internal */
export const C1ApiAppV1AppUserServiceUpdateRequest$outboundSchema = z.object({
    appUserAppId: z.nullable(z.string()),
    appUserId: z.nullable(z.string()),
    appUserServiceUpdateRequest: shared.AppUserServiceUpdateRequest$outboundSchema
        .optional(),
}).transform((v) => {
    return remap$(v, {
        appUserAppId: "app_user_app_id",
        appUserId: "app_user_id",
        appUserServiceUpdateRequest: "AppUserServiceUpdateRequest",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var C1ApiAppV1AppUserServiceUpdateRequest$;
(function (C1ApiAppV1AppUserServiceUpdateRequest$) {
    /** @deprecated use `C1ApiAppV1AppUserServiceUpdateRequest$inboundSchema` instead. */
    C1ApiAppV1AppUserServiceUpdateRequest$.inboundSchema = C1ApiAppV1AppUserServiceUpdateRequest$inboundSchema;
    /** @deprecated use `C1ApiAppV1AppUserServiceUpdateRequest$outboundSchema` instead. */
    C1ApiAppV1AppUserServiceUpdateRequest$.outboundSchema = C1ApiAppV1AppUserServiceUpdateRequest$outboundSchema;
})(C1ApiAppV1AppUserServiceUpdateRequest$ || (C1ApiAppV1AppUserServiceUpdateRequest$ = {}));
export function c1ApiAppV1AppUserServiceUpdateRequestToJSON(c1ApiAppV1AppUserServiceUpdateRequest) {
    return JSON.stringify(C1ApiAppV1AppUserServiceUpdateRequest$outboundSchema.parse(c1ApiAppV1AppUserServiceUpdateRequest));
}
export function c1ApiAppV1AppUserServiceUpdateRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => C1ApiAppV1AppUserServiceUpdateRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'C1ApiAppV1AppUserServiceUpdateRequest' from JSON`);
}
/** @internal */
export const C1ApiAppV1AppUserServiceUpdateResponse$inboundSchema = z.object({
    ContentType: z.string(),
    StatusCode: z.number().int(),
    RawResponse: z.instanceof(Response),
    AppUserServiceUpdateResponse: shared
        .AppUserServiceUpdateResponse$inboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        "ContentType": "contentType",
        "StatusCode": "statusCode",
        "RawResponse": "rawResponse",
        "AppUserServiceUpdateResponse": "appUserServiceUpdateResponse",
    });
});
/** @internal */
export const C1ApiAppV1AppUserServiceUpdateResponse$outboundSchema = z.object({
    contentType: z.string(),
    statusCode: z.number().int(),
    rawResponse: z.instanceof(Response).transform(() => {
        throw new Error("Response cannot be serialized");
    }),
    appUserServiceUpdateResponse: shared
        .AppUserServiceUpdateResponse$outboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        contentType: "ContentType",
        statusCode: "StatusCode",
        rawResponse: "RawResponse",
        appUserServiceUpdateResponse: "AppUserServiceUpdateResponse",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var C1ApiAppV1AppUserServiceUpdateResponse$;
(function (C1ApiAppV1AppUserServiceUpdateResponse$) {
    /** @deprecated use `C1ApiAppV1AppUserServiceUpdateResponse$inboundSchema` instead. */
    C1ApiAppV1AppUserServiceUpdateResponse$.inboundSchema = C1ApiAppV1AppUserServiceUpdateResponse$inboundSchema;
    /** @deprecated use `C1ApiAppV1AppUserServiceUpdateResponse$outboundSchema` instead. */
    C1ApiAppV1AppUserServiceUpdateResponse$.outboundSchema = C1ApiAppV1AppUserServiceUpdateResponse$outboundSchema;
})(C1ApiAppV1AppUserServiceUpdateResponse$ || (C1ApiAppV1AppUserServiceUpdateResponse$ = {}));
export function c1ApiAppV1AppUserServiceUpdateResponseToJSON(c1ApiAppV1AppUserServiceUpdateResponse) {
    return JSON.stringify(C1ApiAppV1AppUserServiceUpdateResponse$outboundSchema.parse(c1ApiAppV1AppUserServiceUpdateResponse));
}
export function c1ApiAppV1AppUserServiceUpdateResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => C1ApiAppV1AppUserServiceUpdateResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'C1ApiAppV1AppUserServiceUpdateResponse' from JSON`);
}
