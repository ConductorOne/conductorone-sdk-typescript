/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import * as shared from "../shared/index.js";

export type C1ApiTaskV1TaskActionsServiceUpdateGrantDurationRequest = {
  taskId: string;
  taskActionsServiceUpdateGrantDurationRequest?:
    | shared.TaskActionsServiceUpdateGrantDurationRequest
    | undefined;
};

export type C1ApiTaskV1TaskActionsServiceUpdateGrantDurationResponse = {
  /**
   * HTTP response content type for this operation
   */
  contentType: string;
  /**
   * HTTP response status code for this operation
   */
  statusCode: number;
  /**
   * Raw HTTP response; suitable for custom response parsing
   */
  rawResponse: Response;
  /**
   * Successful response
   */
  taskServiceActionResponse?: shared.TaskServiceActionResponse | undefined;
};

/** @internal */
export const C1ApiTaskV1TaskActionsServiceUpdateGrantDurationRequest$inboundSchema:
  z.ZodType<
    C1ApiTaskV1TaskActionsServiceUpdateGrantDurationRequest,
    z.ZodTypeDef,
    unknown
  > = z.object({
    task_id: z.string(),
    TaskActionsServiceUpdateGrantDurationRequest: shared
      .TaskActionsServiceUpdateGrantDurationRequest$inboundSchema.optional(),
  }).transform((v) => {
    return remap$(v, {
      "task_id": "taskId",
      "TaskActionsServiceUpdateGrantDurationRequest":
        "taskActionsServiceUpdateGrantDurationRequest",
    });
  });

/** @internal */
export type C1ApiTaskV1TaskActionsServiceUpdateGrantDurationRequest$Outbound = {
  task_id: string;
  TaskActionsServiceUpdateGrantDurationRequest?:
    | shared.TaskActionsServiceUpdateGrantDurationRequest$Outbound
    | undefined;
};

/** @internal */
export const C1ApiTaskV1TaskActionsServiceUpdateGrantDurationRequest$outboundSchema:
  z.ZodType<
    C1ApiTaskV1TaskActionsServiceUpdateGrantDurationRequest$Outbound,
    z.ZodTypeDef,
    C1ApiTaskV1TaskActionsServiceUpdateGrantDurationRequest
  > = z.object({
    taskId: z.string(),
    taskActionsServiceUpdateGrantDurationRequest: shared
      .TaskActionsServiceUpdateGrantDurationRequest$outboundSchema.optional(),
  }).transform((v) => {
    return remap$(v, {
      taskId: "task_id",
      taskActionsServiceUpdateGrantDurationRequest:
        "TaskActionsServiceUpdateGrantDurationRequest",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace C1ApiTaskV1TaskActionsServiceUpdateGrantDurationRequest$ {
  /** @deprecated use `C1ApiTaskV1TaskActionsServiceUpdateGrantDurationRequest$inboundSchema` instead. */
  export const inboundSchema =
    C1ApiTaskV1TaskActionsServiceUpdateGrantDurationRequest$inboundSchema;
  /** @deprecated use `C1ApiTaskV1TaskActionsServiceUpdateGrantDurationRequest$outboundSchema` instead. */
  export const outboundSchema =
    C1ApiTaskV1TaskActionsServiceUpdateGrantDurationRequest$outboundSchema;
  /** @deprecated use `C1ApiTaskV1TaskActionsServiceUpdateGrantDurationRequest$Outbound` instead. */
  export type Outbound =
    C1ApiTaskV1TaskActionsServiceUpdateGrantDurationRequest$Outbound;
}

export function c1ApiTaskV1TaskActionsServiceUpdateGrantDurationRequestToJSON(
  c1ApiTaskV1TaskActionsServiceUpdateGrantDurationRequest:
    C1ApiTaskV1TaskActionsServiceUpdateGrantDurationRequest,
): string {
  return JSON.stringify(
    C1ApiTaskV1TaskActionsServiceUpdateGrantDurationRequest$outboundSchema
      .parse(c1ApiTaskV1TaskActionsServiceUpdateGrantDurationRequest),
  );
}

export function c1ApiTaskV1TaskActionsServiceUpdateGrantDurationRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  C1ApiTaskV1TaskActionsServiceUpdateGrantDurationRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      C1ApiTaskV1TaskActionsServiceUpdateGrantDurationRequest$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'C1ApiTaskV1TaskActionsServiceUpdateGrantDurationRequest' from JSON`,
  );
}

/** @internal */
export const C1ApiTaskV1TaskActionsServiceUpdateGrantDurationResponse$inboundSchema:
  z.ZodType<
    C1ApiTaskV1TaskActionsServiceUpdateGrantDurationResponse,
    z.ZodTypeDef,
    unknown
  > = z.object({
    ContentType: z.string(),
    StatusCode: z.number().int(),
    RawResponse: z.instanceof(Response),
    TaskServiceActionResponse: shared.TaskServiceActionResponse$inboundSchema
      .optional(),
  }).transform((v) => {
    return remap$(v, {
      "ContentType": "contentType",
      "StatusCode": "statusCode",
      "RawResponse": "rawResponse",
      "TaskServiceActionResponse": "taskServiceActionResponse",
    });
  });

/** @internal */
export type C1ApiTaskV1TaskActionsServiceUpdateGrantDurationResponse$Outbound =
  {
    ContentType: string;
    StatusCode: number;
    RawResponse: never;
    TaskServiceActionResponse?:
      | shared.TaskServiceActionResponse$Outbound
      | undefined;
  };

/** @internal */
export const C1ApiTaskV1TaskActionsServiceUpdateGrantDurationResponse$outboundSchema:
  z.ZodType<
    C1ApiTaskV1TaskActionsServiceUpdateGrantDurationResponse$Outbound,
    z.ZodTypeDef,
    C1ApiTaskV1TaskActionsServiceUpdateGrantDurationResponse
  > = z.object({
    contentType: z.string(),
    statusCode: z.number().int(),
    rawResponse: z.instanceof(Response).transform(() => {
      throw new Error("Response cannot be serialized");
    }),
    taskServiceActionResponse: shared.TaskServiceActionResponse$outboundSchema
      .optional(),
  }).transform((v) => {
    return remap$(v, {
      contentType: "ContentType",
      statusCode: "StatusCode",
      rawResponse: "RawResponse",
      taskServiceActionResponse: "TaskServiceActionResponse",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace C1ApiTaskV1TaskActionsServiceUpdateGrantDurationResponse$ {
  /** @deprecated use `C1ApiTaskV1TaskActionsServiceUpdateGrantDurationResponse$inboundSchema` instead. */
  export const inboundSchema =
    C1ApiTaskV1TaskActionsServiceUpdateGrantDurationResponse$inboundSchema;
  /** @deprecated use `C1ApiTaskV1TaskActionsServiceUpdateGrantDurationResponse$outboundSchema` instead. */
  export const outboundSchema =
    C1ApiTaskV1TaskActionsServiceUpdateGrantDurationResponse$outboundSchema;
  /** @deprecated use `C1ApiTaskV1TaskActionsServiceUpdateGrantDurationResponse$Outbound` instead. */
  export type Outbound =
    C1ApiTaskV1TaskActionsServiceUpdateGrantDurationResponse$Outbound;
}

export function c1ApiTaskV1TaskActionsServiceUpdateGrantDurationResponseToJSON(
  c1ApiTaskV1TaskActionsServiceUpdateGrantDurationResponse:
    C1ApiTaskV1TaskActionsServiceUpdateGrantDurationResponse,
): string {
  return JSON.stringify(
    C1ApiTaskV1TaskActionsServiceUpdateGrantDurationResponse$outboundSchema
      .parse(c1ApiTaskV1TaskActionsServiceUpdateGrantDurationResponse),
  );
}

export function c1ApiTaskV1TaskActionsServiceUpdateGrantDurationResponseFromJSON(
  jsonString: string,
): SafeParseResult<
  C1ApiTaskV1TaskActionsServiceUpdateGrantDurationResponse,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      C1ApiTaskV1TaskActionsServiceUpdateGrantDurationResponse$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'C1ApiTaskV1TaskActionsServiceUpdateGrantDurationResponse' from JSON`,
  );
}
