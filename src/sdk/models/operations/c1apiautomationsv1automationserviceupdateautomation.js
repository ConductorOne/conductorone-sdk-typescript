/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";
import { safeParse } from "../../../lib/schemas.js";
import * as shared from "../shared/index.js";
/** @internal */
export const C1ApiAutomationsV1AutomationServiceUpdateAutomationRequest$inboundSchema = z.object({
    id: z.nullable(z.string()),
    UpdateAutomationRequest: shared.UpdateAutomationRequest$inboundSchema
        .optional(),
}).transform((v) => {
    return remap$(v, {
        "UpdateAutomationRequest": "updateAutomationRequest",
    });
});
/** @internal */
export const C1ApiAutomationsV1AutomationServiceUpdateAutomationRequest$outboundSchema = z.object({
    id: z.nullable(z.string()),
    updateAutomationRequest: shared.UpdateAutomationRequest$outboundSchema
        .optional(),
}).transform((v) => {
    return remap$(v, {
        updateAutomationRequest: "UpdateAutomationRequest",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var C1ApiAutomationsV1AutomationServiceUpdateAutomationRequest$;
(function (C1ApiAutomationsV1AutomationServiceUpdateAutomationRequest$) {
    /** @deprecated use `C1ApiAutomationsV1AutomationServiceUpdateAutomationRequest$inboundSchema` instead. */
    C1ApiAutomationsV1AutomationServiceUpdateAutomationRequest$.inboundSchema = C1ApiAutomationsV1AutomationServiceUpdateAutomationRequest$inboundSchema;
    /** @deprecated use `C1ApiAutomationsV1AutomationServiceUpdateAutomationRequest$outboundSchema` instead. */
    C1ApiAutomationsV1AutomationServiceUpdateAutomationRequest$.outboundSchema = C1ApiAutomationsV1AutomationServiceUpdateAutomationRequest$outboundSchema;
})(C1ApiAutomationsV1AutomationServiceUpdateAutomationRequest$ || (C1ApiAutomationsV1AutomationServiceUpdateAutomationRequest$ = {}));
export function c1ApiAutomationsV1AutomationServiceUpdateAutomationRequestToJSON(c1ApiAutomationsV1AutomationServiceUpdateAutomationRequest) {
    return JSON.stringify(C1ApiAutomationsV1AutomationServiceUpdateAutomationRequest$outboundSchema
        .parse(c1ApiAutomationsV1AutomationServiceUpdateAutomationRequest));
}
export function c1ApiAutomationsV1AutomationServiceUpdateAutomationRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => C1ApiAutomationsV1AutomationServiceUpdateAutomationRequest$inboundSchema
        .parse(JSON.parse(x)), `Failed to parse 'C1ApiAutomationsV1AutomationServiceUpdateAutomationRequest' from JSON`);
}
/** @internal */
export const C1ApiAutomationsV1AutomationServiceUpdateAutomationResponse$inboundSchema = z.object({
    ContentType: z.string(),
    StatusCode: z.number().int(),
    RawResponse: z.instanceof(Response),
    UpdateAutomationResponse: shared.UpdateAutomationResponse$inboundSchema
        .optional(),
}).transform((v) => {
    return remap$(v, {
        "ContentType": "contentType",
        "StatusCode": "statusCode",
        "RawResponse": "rawResponse",
        "UpdateAutomationResponse": "updateAutomationResponse",
    });
});
/** @internal */
export const C1ApiAutomationsV1AutomationServiceUpdateAutomationResponse$outboundSchema = z.object({
    contentType: z.string(),
    statusCode: z.number().int(),
    rawResponse: z.instanceof(Response).transform(() => {
        throw new Error("Response cannot be serialized");
    }),
    updateAutomationResponse: shared.UpdateAutomationResponse$outboundSchema
        .optional(),
}).transform((v) => {
    return remap$(v, {
        contentType: "ContentType",
        statusCode: "StatusCode",
        rawResponse: "RawResponse",
        updateAutomationResponse: "UpdateAutomationResponse",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var C1ApiAutomationsV1AutomationServiceUpdateAutomationResponse$;
(function (C1ApiAutomationsV1AutomationServiceUpdateAutomationResponse$) {
    /** @deprecated use `C1ApiAutomationsV1AutomationServiceUpdateAutomationResponse$inboundSchema` instead. */
    C1ApiAutomationsV1AutomationServiceUpdateAutomationResponse$.inboundSchema = C1ApiAutomationsV1AutomationServiceUpdateAutomationResponse$inboundSchema;
    /** @deprecated use `C1ApiAutomationsV1AutomationServiceUpdateAutomationResponse$outboundSchema` instead. */
    C1ApiAutomationsV1AutomationServiceUpdateAutomationResponse$.outboundSchema = C1ApiAutomationsV1AutomationServiceUpdateAutomationResponse$outboundSchema;
})(C1ApiAutomationsV1AutomationServiceUpdateAutomationResponse$ || (C1ApiAutomationsV1AutomationServiceUpdateAutomationResponse$ = {}));
export function c1ApiAutomationsV1AutomationServiceUpdateAutomationResponseToJSON(c1ApiAutomationsV1AutomationServiceUpdateAutomationResponse) {
    return JSON.stringify(C1ApiAutomationsV1AutomationServiceUpdateAutomationResponse$outboundSchema
        .parse(c1ApiAutomationsV1AutomationServiceUpdateAutomationResponse));
}
export function c1ApiAutomationsV1AutomationServiceUpdateAutomationResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => C1ApiAutomationsV1AutomationServiceUpdateAutomationResponse$inboundSchema
        .parse(JSON.parse(x)), `Failed to parse 'C1ApiAutomationsV1AutomationServiceUpdateAutomationResponse' from JSON`);
}
