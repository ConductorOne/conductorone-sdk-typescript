/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import * as shared from "../shared/index.js";

export type C1ApiAppV1AppEntitlementUserBindingServiceListAppUsersForIdentityWithGrantRequest =
  {
    appId: string | null;
    appEntitlementId: string | null;
    identityUserId: string | null;
  };

export type C1ApiAppV1AppEntitlementUserBindingServiceListAppUsersForIdentityWithGrantResponse =
  {
    /**
     * HTTP response content type for this operation
     */
    contentType: string;
    /**
     * HTTP response status code for this operation
     */
    statusCode: number;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse: Response;
    /**
     * Successful response
     */
    listAppUsersForIdentityWithGrantResponse?:
      | shared.ListAppUsersForIdentityWithGrantResponse
      | undefined;
  };

/** @internal */
export const C1ApiAppV1AppEntitlementUserBindingServiceListAppUsersForIdentityWithGrantRequest$inboundSchema:
  z.ZodType<
    C1ApiAppV1AppEntitlementUserBindingServiceListAppUsersForIdentityWithGrantRequest,
    z.ZodTypeDef,
    unknown
  > = z.object({
    app_id: z.nullable(z.string()),
    app_entitlement_id: z.nullable(z.string()),
    identity_user_id: z.nullable(z.string()),
  }).transform((v) => {
    return remap$(v, {
      "app_id": "appId",
      "app_entitlement_id": "appEntitlementId",
      "identity_user_id": "identityUserId",
    });
  });

/** @internal */
export type C1ApiAppV1AppEntitlementUserBindingServiceListAppUsersForIdentityWithGrantRequest$Outbound =
  {
    app_id: string | null;
    app_entitlement_id: string | null;
    identity_user_id: string | null;
  };

/** @internal */
export const C1ApiAppV1AppEntitlementUserBindingServiceListAppUsersForIdentityWithGrantRequest$outboundSchema:
  z.ZodType<
    C1ApiAppV1AppEntitlementUserBindingServiceListAppUsersForIdentityWithGrantRequest$Outbound,
    z.ZodTypeDef,
    C1ApiAppV1AppEntitlementUserBindingServiceListAppUsersForIdentityWithGrantRequest
  > = z.object({
    appId: z.nullable(z.string()),
    appEntitlementId: z.nullable(z.string()),
    identityUserId: z.nullable(z.string()),
  }).transform((v) => {
    return remap$(v, {
      appId: "app_id",
      appEntitlementId: "app_entitlement_id",
      identityUserId: "identity_user_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace C1ApiAppV1AppEntitlementUserBindingServiceListAppUsersForIdentityWithGrantRequest$ {
  /** @deprecated use `C1ApiAppV1AppEntitlementUserBindingServiceListAppUsersForIdentityWithGrantRequest$inboundSchema` instead. */
  export const inboundSchema =
    C1ApiAppV1AppEntitlementUserBindingServiceListAppUsersForIdentityWithGrantRequest$inboundSchema;
  /** @deprecated use `C1ApiAppV1AppEntitlementUserBindingServiceListAppUsersForIdentityWithGrantRequest$outboundSchema` instead. */
  export const outboundSchema =
    C1ApiAppV1AppEntitlementUserBindingServiceListAppUsersForIdentityWithGrantRequest$outboundSchema;
  /** @deprecated use `C1ApiAppV1AppEntitlementUserBindingServiceListAppUsersForIdentityWithGrantRequest$Outbound` instead. */
  export type Outbound =
    C1ApiAppV1AppEntitlementUserBindingServiceListAppUsersForIdentityWithGrantRequest$Outbound;
}

export function c1ApiAppV1AppEntitlementUserBindingServiceListAppUsersForIdentityWithGrantRequestToJSON(
  c1ApiAppV1AppEntitlementUserBindingServiceListAppUsersForIdentityWithGrantRequest:
    C1ApiAppV1AppEntitlementUserBindingServiceListAppUsersForIdentityWithGrantRequest,
): string {
  return JSON.stringify(
    C1ApiAppV1AppEntitlementUserBindingServiceListAppUsersForIdentityWithGrantRequest$outboundSchema
      .parse(
        c1ApiAppV1AppEntitlementUserBindingServiceListAppUsersForIdentityWithGrantRequest,
      ),
  );
}

export function c1ApiAppV1AppEntitlementUserBindingServiceListAppUsersForIdentityWithGrantRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  C1ApiAppV1AppEntitlementUserBindingServiceListAppUsersForIdentityWithGrantRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      C1ApiAppV1AppEntitlementUserBindingServiceListAppUsersForIdentityWithGrantRequest$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'C1ApiAppV1AppEntitlementUserBindingServiceListAppUsersForIdentityWithGrantRequest' from JSON`,
  );
}

/** @internal */
export const C1ApiAppV1AppEntitlementUserBindingServiceListAppUsersForIdentityWithGrantResponse$inboundSchema:
  z.ZodType<
    C1ApiAppV1AppEntitlementUserBindingServiceListAppUsersForIdentityWithGrantResponse,
    z.ZodTypeDef,
    unknown
  > = z.object({
    ContentType: z.string(),
    StatusCode: z.number().int(),
    RawResponse: z.instanceof(Response),
    ListAppUsersForIdentityWithGrantResponse: shared
      .ListAppUsersForIdentityWithGrantResponse$inboundSchema.optional(),
  }).transform((v) => {
    return remap$(v, {
      "ContentType": "contentType",
      "StatusCode": "statusCode",
      "RawResponse": "rawResponse",
      "ListAppUsersForIdentityWithGrantResponse":
        "listAppUsersForIdentityWithGrantResponse",
    });
  });

/** @internal */
export type C1ApiAppV1AppEntitlementUserBindingServiceListAppUsersForIdentityWithGrantResponse$Outbound =
  {
    ContentType: string;
    StatusCode: number;
    RawResponse: never;
    ListAppUsersForIdentityWithGrantResponse?:
      | shared.ListAppUsersForIdentityWithGrantResponse$Outbound
      | undefined;
  };

/** @internal */
export const C1ApiAppV1AppEntitlementUserBindingServiceListAppUsersForIdentityWithGrantResponse$outboundSchema:
  z.ZodType<
    C1ApiAppV1AppEntitlementUserBindingServiceListAppUsersForIdentityWithGrantResponse$Outbound,
    z.ZodTypeDef,
    C1ApiAppV1AppEntitlementUserBindingServiceListAppUsersForIdentityWithGrantResponse
  > = z.object({
    contentType: z.string(),
    statusCode: z.number().int(),
    rawResponse: z.instanceof(Response).transform(() => {
      throw new Error("Response cannot be serialized");
    }),
    listAppUsersForIdentityWithGrantResponse: shared
      .ListAppUsersForIdentityWithGrantResponse$outboundSchema.optional(),
  }).transform((v) => {
    return remap$(v, {
      contentType: "ContentType",
      statusCode: "StatusCode",
      rawResponse: "RawResponse",
      listAppUsersForIdentityWithGrantResponse:
        "ListAppUsersForIdentityWithGrantResponse",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace C1ApiAppV1AppEntitlementUserBindingServiceListAppUsersForIdentityWithGrantResponse$ {
  /** @deprecated use `C1ApiAppV1AppEntitlementUserBindingServiceListAppUsersForIdentityWithGrantResponse$inboundSchema` instead. */
  export const inboundSchema =
    C1ApiAppV1AppEntitlementUserBindingServiceListAppUsersForIdentityWithGrantResponse$inboundSchema;
  /** @deprecated use `C1ApiAppV1AppEntitlementUserBindingServiceListAppUsersForIdentityWithGrantResponse$outboundSchema` instead. */
  export const outboundSchema =
    C1ApiAppV1AppEntitlementUserBindingServiceListAppUsersForIdentityWithGrantResponse$outboundSchema;
  /** @deprecated use `C1ApiAppV1AppEntitlementUserBindingServiceListAppUsersForIdentityWithGrantResponse$Outbound` instead. */
  export type Outbound =
    C1ApiAppV1AppEntitlementUserBindingServiceListAppUsersForIdentityWithGrantResponse$Outbound;
}

export function c1ApiAppV1AppEntitlementUserBindingServiceListAppUsersForIdentityWithGrantResponseToJSON(
  c1ApiAppV1AppEntitlementUserBindingServiceListAppUsersForIdentityWithGrantResponse:
    C1ApiAppV1AppEntitlementUserBindingServiceListAppUsersForIdentityWithGrantResponse,
): string {
  return JSON.stringify(
    C1ApiAppV1AppEntitlementUserBindingServiceListAppUsersForIdentityWithGrantResponse$outboundSchema
      .parse(
        c1ApiAppV1AppEntitlementUserBindingServiceListAppUsersForIdentityWithGrantResponse,
      ),
  );
}

export function c1ApiAppV1AppEntitlementUserBindingServiceListAppUsersForIdentityWithGrantResponseFromJSON(
  jsonString: string,
): SafeParseResult<
  C1ApiAppV1AppEntitlementUserBindingServiceListAppUsersForIdentityWithGrantResponse,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      C1ApiAppV1AppEntitlementUserBindingServiceListAppUsersForIdentityWithGrantResponse$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'C1ApiAppV1AppEntitlementUserBindingServiceListAppUsersForIdentityWithGrantResponse' from JSON`,
  );
}
