/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";
import { safeParse } from "../../../lib/schemas.js";
import * as shared from "../shared/index.js";
/** @internal */
export const C1ApiTaskV1TaskActionsServiceProcessNowRequest$inboundSchema = z.object({
    task_id: z.nullable(z.string()),
    TaskActionsServiceProcessNowRequest: shared
        .TaskActionsServiceProcessNowRequest$inboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        "task_id": "taskId",
        "TaskActionsServiceProcessNowRequest": "taskActionsServiceProcessNowRequest",
    });
});
/** @internal */
export const C1ApiTaskV1TaskActionsServiceProcessNowRequest$outboundSchema = z.object({
    taskId: z.nullable(z.string()),
    taskActionsServiceProcessNowRequest: shared
        .TaskActionsServiceProcessNowRequest$outboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        taskId: "task_id",
        taskActionsServiceProcessNowRequest: "TaskActionsServiceProcessNowRequest",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var C1ApiTaskV1TaskActionsServiceProcessNowRequest$;
(function (C1ApiTaskV1TaskActionsServiceProcessNowRequest$) {
    /** @deprecated use `C1ApiTaskV1TaskActionsServiceProcessNowRequest$inboundSchema` instead. */
    C1ApiTaskV1TaskActionsServiceProcessNowRequest$.inboundSchema = C1ApiTaskV1TaskActionsServiceProcessNowRequest$inboundSchema;
    /** @deprecated use `C1ApiTaskV1TaskActionsServiceProcessNowRequest$outboundSchema` instead. */
    C1ApiTaskV1TaskActionsServiceProcessNowRequest$.outboundSchema = C1ApiTaskV1TaskActionsServiceProcessNowRequest$outboundSchema;
})(C1ApiTaskV1TaskActionsServiceProcessNowRequest$ || (C1ApiTaskV1TaskActionsServiceProcessNowRequest$ = {}));
export function c1ApiTaskV1TaskActionsServiceProcessNowRequestToJSON(c1ApiTaskV1TaskActionsServiceProcessNowRequest) {
    return JSON.stringify(C1ApiTaskV1TaskActionsServiceProcessNowRequest$outboundSchema.parse(c1ApiTaskV1TaskActionsServiceProcessNowRequest));
}
export function c1ApiTaskV1TaskActionsServiceProcessNowRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => C1ApiTaskV1TaskActionsServiceProcessNowRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'C1ApiTaskV1TaskActionsServiceProcessNowRequest' from JSON`);
}
/** @internal */
export const C1ApiTaskV1TaskActionsServiceProcessNowResponse$inboundSchema = z.object({
    ContentType: z.string(),
    StatusCode: z.number().int(),
    RawResponse: z.instanceof(Response),
    TaskActionsServiceProcessNowResponse: shared
        .TaskActionsServiceProcessNowResponse$inboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        "ContentType": "contentType",
        "StatusCode": "statusCode",
        "RawResponse": "rawResponse",
        "TaskActionsServiceProcessNowResponse": "taskActionsServiceProcessNowResponse",
    });
});
/** @internal */
export const C1ApiTaskV1TaskActionsServiceProcessNowResponse$outboundSchema = z.object({
    contentType: z.string(),
    statusCode: z.number().int(),
    rawResponse: z.instanceof(Response).transform(() => {
        throw new Error("Response cannot be serialized");
    }),
    taskActionsServiceProcessNowResponse: shared
        .TaskActionsServiceProcessNowResponse$outboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        contentType: "ContentType",
        statusCode: "StatusCode",
        rawResponse: "RawResponse",
        taskActionsServiceProcessNowResponse: "TaskActionsServiceProcessNowResponse",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var C1ApiTaskV1TaskActionsServiceProcessNowResponse$;
(function (C1ApiTaskV1TaskActionsServiceProcessNowResponse$) {
    /** @deprecated use `C1ApiTaskV1TaskActionsServiceProcessNowResponse$inboundSchema` instead. */
    C1ApiTaskV1TaskActionsServiceProcessNowResponse$.inboundSchema = C1ApiTaskV1TaskActionsServiceProcessNowResponse$inboundSchema;
    /** @deprecated use `C1ApiTaskV1TaskActionsServiceProcessNowResponse$outboundSchema` instead. */
    C1ApiTaskV1TaskActionsServiceProcessNowResponse$.outboundSchema = C1ApiTaskV1TaskActionsServiceProcessNowResponse$outboundSchema;
})(C1ApiTaskV1TaskActionsServiceProcessNowResponse$ || (C1ApiTaskV1TaskActionsServiceProcessNowResponse$ = {}));
export function c1ApiTaskV1TaskActionsServiceProcessNowResponseToJSON(c1ApiTaskV1TaskActionsServiceProcessNowResponse) {
    return JSON.stringify(C1ApiTaskV1TaskActionsServiceProcessNowResponse$outboundSchema.parse(c1ApiTaskV1TaskActionsServiceProcessNowResponse));
}
export function c1ApiTaskV1TaskActionsServiceProcessNowResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => C1ApiTaskV1TaskActionsServiceProcessNowResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'C1ApiTaskV1TaskActionsServiceProcessNowResponse' from JSON`);
}
