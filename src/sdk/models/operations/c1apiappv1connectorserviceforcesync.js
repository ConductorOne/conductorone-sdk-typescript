/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";
import { safeParse } from "../../../lib/schemas.js";
import * as shared from "../shared/index.js";
/** @internal */
export const C1ApiAppV1ConnectorServiceForceSyncRequest$inboundSchema = z.object({
    app_id: z.nullable(z.string()),
    connector_id: z.nullable(z.string()),
    ForceSyncRequest: shared.ForceSyncRequest$inboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        "app_id": "appId",
        "connector_id": "connectorId",
        "ForceSyncRequest": "forceSyncRequest",
    });
});
/** @internal */
export const C1ApiAppV1ConnectorServiceForceSyncRequest$outboundSchema = z.object({
    appId: z.nullable(z.string()),
    connectorId: z.nullable(z.string()),
    forceSyncRequest: shared.ForceSyncRequest$outboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        appId: "app_id",
        connectorId: "connector_id",
        forceSyncRequest: "ForceSyncRequest",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var C1ApiAppV1ConnectorServiceForceSyncRequest$;
(function (C1ApiAppV1ConnectorServiceForceSyncRequest$) {
    /** @deprecated use `C1ApiAppV1ConnectorServiceForceSyncRequest$inboundSchema` instead. */
    C1ApiAppV1ConnectorServiceForceSyncRequest$.inboundSchema = C1ApiAppV1ConnectorServiceForceSyncRequest$inboundSchema;
    /** @deprecated use `C1ApiAppV1ConnectorServiceForceSyncRequest$outboundSchema` instead. */
    C1ApiAppV1ConnectorServiceForceSyncRequest$.outboundSchema = C1ApiAppV1ConnectorServiceForceSyncRequest$outboundSchema;
})(C1ApiAppV1ConnectorServiceForceSyncRequest$ || (C1ApiAppV1ConnectorServiceForceSyncRequest$ = {}));
export function c1ApiAppV1ConnectorServiceForceSyncRequestToJSON(c1ApiAppV1ConnectorServiceForceSyncRequest) {
    return JSON.stringify(C1ApiAppV1ConnectorServiceForceSyncRequest$outboundSchema.parse(c1ApiAppV1ConnectorServiceForceSyncRequest));
}
export function c1ApiAppV1ConnectorServiceForceSyncRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => C1ApiAppV1ConnectorServiceForceSyncRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'C1ApiAppV1ConnectorServiceForceSyncRequest' from JSON`);
}
/** @internal */
export const C1ApiAppV1ConnectorServiceForceSyncResponse$inboundSchema = z.object({
    ContentType: z.string(),
    StatusCode: z.number().int(),
    RawResponse: z.instanceof(Response),
    ForceSyncResponse: shared.ForceSyncResponse$inboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        "ContentType": "contentType",
        "StatusCode": "statusCode",
        "RawResponse": "rawResponse",
        "ForceSyncResponse": "forceSyncResponse",
    });
});
/** @internal */
export const C1ApiAppV1ConnectorServiceForceSyncResponse$outboundSchema = z.object({
    contentType: z.string(),
    statusCode: z.number().int(),
    rawResponse: z.instanceof(Response).transform(() => {
        throw new Error("Response cannot be serialized");
    }),
    forceSyncResponse: shared.ForceSyncResponse$outboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        contentType: "ContentType",
        statusCode: "StatusCode",
        rawResponse: "RawResponse",
        forceSyncResponse: "ForceSyncResponse",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var C1ApiAppV1ConnectorServiceForceSyncResponse$;
(function (C1ApiAppV1ConnectorServiceForceSyncResponse$) {
    /** @deprecated use `C1ApiAppV1ConnectorServiceForceSyncResponse$inboundSchema` instead. */
    C1ApiAppV1ConnectorServiceForceSyncResponse$.inboundSchema = C1ApiAppV1ConnectorServiceForceSyncResponse$inboundSchema;
    /** @deprecated use `C1ApiAppV1ConnectorServiceForceSyncResponse$outboundSchema` instead. */
    C1ApiAppV1ConnectorServiceForceSyncResponse$.outboundSchema = C1ApiAppV1ConnectorServiceForceSyncResponse$outboundSchema;
})(C1ApiAppV1ConnectorServiceForceSyncResponse$ || (C1ApiAppV1ConnectorServiceForceSyncResponse$ = {}));
export function c1ApiAppV1ConnectorServiceForceSyncResponseToJSON(c1ApiAppV1ConnectorServiceForceSyncResponse) {
    return JSON.stringify(C1ApiAppV1ConnectorServiceForceSyncResponse$outboundSchema.parse(c1ApiAppV1ConnectorServiceForceSyncResponse));
}
export function c1ApiAppV1ConnectorServiceForceSyncResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => C1ApiAppV1ConnectorServiceForceSyncResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'C1ApiAppV1ConnectorServiceForceSyncResponse' from JSON`);
}
