/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import * as shared from "../shared/index.js";

export type C1ApiAttributeV1AttributesDeleteComplianceFrameworkAttributeValueRequest =
  {
    id: string | null;
    deleteComplianceFrameworkAttributeValueRequest?:
      | shared.DeleteComplianceFrameworkAttributeValueRequest
      | undefined;
  };

export type C1ApiAttributeV1AttributesDeleteComplianceFrameworkAttributeValueResponse =
  {
    /**
     * HTTP response content type for this operation
     */
    contentType: string;
    /**
     * HTTP response status code for this operation
     */
    statusCode: number;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse: Response;
    /**
     * Successful response
     */
    deleteComplianceFrameworkAttributeValueResponse?:
      | shared.DeleteComplianceFrameworkAttributeValueResponse
      | undefined;
  };

/** @internal */
export const C1ApiAttributeV1AttributesDeleteComplianceFrameworkAttributeValueRequest$inboundSchema:
  z.ZodType<
    C1ApiAttributeV1AttributesDeleteComplianceFrameworkAttributeValueRequest,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.nullable(z.string()),
    DeleteComplianceFrameworkAttributeValueRequest: shared
      .DeleteComplianceFrameworkAttributeValueRequest$inboundSchema.optional(),
  }).transform((v) => {
    return remap$(v, {
      "DeleteComplianceFrameworkAttributeValueRequest":
        "deleteComplianceFrameworkAttributeValueRequest",
    });
  });

/** @internal */
export type C1ApiAttributeV1AttributesDeleteComplianceFrameworkAttributeValueRequest$Outbound =
  {
    id: string | null;
    DeleteComplianceFrameworkAttributeValueRequest?:
      | shared.DeleteComplianceFrameworkAttributeValueRequest$Outbound
      | undefined;
  };

/** @internal */
export const C1ApiAttributeV1AttributesDeleteComplianceFrameworkAttributeValueRequest$outboundSchema:
  z.ZodType<
    C1ApiAttributeV1AttributesDeleteComplianceFrameworkAttributeValueRequest$Outbound,
    z.ZodTypeDef,
    C1ApiAttributeV1AttributesDeleteComplianceFrameworkAttributeValueRequest
  > = z.object({
    id: z.nullable(z.string()),
    deleteComplianceFrameworkAttributeValueRequest: shared
      .DeleteComplianceFrameworkAttributeValueRequest$outboundSchema.optional(),
  }).transform((v) => {
    return remap$(v, {
      deleteComplianceFrameworkAttributeValueRequest:
        "DeleteComplianceFrameworkAttributeValueRequest",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace C1ApiAttributeV1AttributesDeleteComplianceFrameworkAttributeValueRequest$ {
  /** @deprecated use `C1ApiAttributeV1AttributesDeleteComplianceFrameworkAttributeValueRequest$inboundSchema` instead. */
  export const inboundSchema =
    C1ApiAttributeV1AttributesDeleteComplianceFrameworkAttributeValueRequest$inboundSchema;
  /** @deprecated use `C1ApiAttributeV1AttributesDeleteComplianceFrameworkAttributeValueRequest$outboundSchema` instead. */
  export const outboundSchema =
    C1ApiAttributeV1AttributesDeleteComplianceFrameworkAttributeValueRequest$outboundSchema;
  /** @deprecated use `C1ApiAttributeV1AttributesDeleteComplianceFrameworkAttributeValueRequest$Outbound` instead. */
  export type Outbound =
    C1ApiAttributeV1AttributesDeleteComplianceFrameworkAttributeValueRequest$Outbound;
}

export function c1ApiAttributeV1AttributesDeleteComplianceFrameworkAttributeValueRequestToJSON(
  c1ApiAttributeV1AttributesDeleteComplianceFrameworkAttributeValueRequest:
    C1ApiAttributeV1AttributesDeleteComplianceFrameworkAttributeValueRequest,
): string {
  return JSON.stringify(
    C1ApiAttributeV1AttributesDeleteComplianceFrameworkAttributeValueRequest$outboundSchema
      .parse(
        c1ApiAttributeV1AttributesDeleteComplianceFrameworkAttributeValueRequest,
      ),
  );
}

export function c1ApiAttributeV1AttributesDeleteComplianceFrameworkAttributeValueRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  C1ApiAttributeV1AttributesDeleteComplianceFrameworkAttributeValueRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      C1ApiAttributeV1AttributesDeleteComplianceFrameworkAttributeValueRequest$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'C1ApiAttributeV1AttributesDeleteComplianceFrameworkAttributeValueRequest' from JSON`,
  );
}

/** @internal */
export const C1ApiAttributeV1AttributesDeleteComplianceFrameworkAttributeValueResponse$inboundSchema:
  z.ZodType<
    C1ApiAttributeV1AttributesDeleteComplianceFrameworkAttributeValueResponse,
    z.ZodTypeDef,
    unknown
  > = z.object({
    ContentType: z.string(),
    StatusCode: z.number().int(),
    RawResponse: z.instanceof(Response),
    DeleteComplianceFrameworkAttributeValueResponse: shared
      .DeleteComplianceFrameworkAttributeValueResponse$inboundSchema.optional(),
  }).transform((v) => {
    return remap$(v, {
      "ContentType": "contentType",
      "StatusCode": "statusCode",
      "RawResponse": "rawResponse",
      "DeleteComplianceFrameworkAttributeValueResponse":
        "deleteComplianceFrameworkAttributeValueResponse",
    });
  });

/** @internal */
export type C1ApiAttributeV1AttributesDeleteComplianceFrameworkAttributeValueResponse$Outbound =
  {
    ContentType: string;
    StatusCode: number;
    RawResponse: never;
    DeleteComplianceFrameworkAttributeValueResponse?:
      | shared.DeleteComplianceFrameworkAttributeValueResponse$Outbound
      | undefined;
  };

/** @internal */
export const C1ApiAttributeV1AttributesDeleteComplianceFrameworkAttributeValueResponse$outboundSchema:
  z.ZodType<
    C1ApiAttributeV1AttributesDeleteComplianceFrameworkAttributeValueResponse$Outbound,
    z.ZodTypeDef,
    C1ApiAttributeV1AttributesDeleteComplianceFrameworkAttributeValueResponse
  > = z.object({
    contentType: z.string(),
    statusCode: z.number().int(),
    rawResponse: z.instanceof(Response).transform(() => {
      throw new Error("Response cannot be serialized");
    }),
    deleteComplianceFrameworkAttributeValueResponse: shared
      .DeleteComplianceFrameworkAttributeValueResponse$outboundSchema
      .optional(),
  }).transform((v) => {
    return remap$(v, {
      contentType: "ContentType",
      statusCode: "StatusCode",
      rawResponse: "RawResponse",
      deleteComplianceFrameworkAttributeValueResponse:
        "DeleteComplianceFrameworkAttributeValueResponse",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace C1ApiAttributeV1AttributesDeleteComplianceFrameworkAttributeValueResponse$ {
  /** @deprecated use `C1ApiAttributeV1AttributesDeleteComplianceFrameworkAttributeValueResponse$inboundSchema` instead. */
  export const inboundSchema =
    C1ApiAttributeV1AttributesDeleteComplianceFrameworkAttributeValueResponse$inboundSchema;
  /** @deprecated use `C1ApiAttributeV1AttributesDeleteComplianceFrameworkAttributeValueResponse$outboundSchema` instead. */
  export const outboundSchema =
    C1ApiAttributeV1AttributesDeleteComplianceFrameworkAttributeValueResponse$outboundSchema;
  /** @deprecated use `C1ApiAttributeV1AttributesDeleteComplianceFrameworkAttributeValueResponse$Outbound` instead. */
  export type Outbound =
    C1ApiAttributeV1AttributesDeleteComplianceFrameworkAttributeValueResponse$Outbound;
}

export function c1ApiAttributeV1AttributesDeleteComplianceFrameworkAttributeValueResponseToJSON(
  c1ApiAttributeV1AttributesDeleteComplianceFrameworkAttributeValueResponse:
    C1ApiAttributeV1AttributesDeleteComplianceFrameworkAttributeValueResponse,
): string {
  return JSON.stringify(
    C1ApiAttributeV1AttributesDeleteComplianceFrameworkAttributeValueResponse$outboundSchema
      .parse(
        c1ApiAttributeV1AttributesDeleteComplianceFrameworkAttributeValueResponse,
      ),
  );
}

export function c1ApiAttributeV1AttributesDeleteComplianceFrameworkAttributeValueResponseFromJSON(
  jsonString: string,
): SafeParseResult<
  C1ApiAttributeV1AttributesDeleteComplianceFrameworkAttributeValueResponse,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      C1ApiAttributeV1AttributesDeleteComplianceFrameworkAttributeValueResponse$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'C1ApiAttributeV1AttributesDeleteComplianceFrameworkAttributeValueResponse' from JSON`,
  );
}
