/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import { appUserList } from "../funcs/appUserList.js";
import { appUserListAppUserCredentials } from "../funcs/appUserListAppUserCredentials.js";
import { appUserListAppUsersForUser } from "../funcs/appUserListAppUsersForUser.js";
import { appUserSearch } from "../funcs/appUserSearch.js";
import { appUserUpdate } from "../funcs/appUserUpdate.js";
import { ClientSDK } from "../lib/sdks.js";
import { unwrapAsync } from "./types/fp.js";
export class AppUser extends ClientSDK {
    /**
     * List
     *
     * @remarks
     * Invokes the c1.api.app.v1.AppUserService.List method.
     */
    async list(request, options) {
        return unwrapAsync(appUserList(this, request, options));
    }
    /**
     * List App User Credentials
     *
     * @remarks
     * Invokes the c1.api.app.v1.AppUserService.ListAppUserCredentials method.
     */
    async listAppUserCredentials(request, options) {
        return unwrapAsync(appUserListAppUserCredentials(this, request, options));
    }
    /**
     * List App Users For User
     *
     * @remarks
     * Invokes the c1.api.app.v1.AppUserService.ListAppUsersForUser method.
     */
    async listAppUsersForUser(request, options) {
        return unwrapAsync(appUserListAppUsersForUser(this, request, options));
    }
    /**
     * Update
     *
     * @remarks
     * Update an app user by ID. Only the fields specified in the update mask are updated.
     *  Currently, only the appUserType, and identityUserId fields can be updated.
     */
    async update(request, options) {
        return unwrapAsync(appUserUpdate(this, request, options));
    }
    /**
     * Search
     *
     * @remarks
     * Search app users based on filters specified in the request body.
     */
    async search(request, options) {
        return unwrapAsync(appUserSearch(this, request, options));
    }
}
